GNU gdb (Ubuntu 7.11.1-0ubuntu1~16.5) 7.11.1
Copyright (C) 2016 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Source directories searched: /opt/intel/sgxsdk/lib64/gdb-sgx-plugin:$cdir:$cwd
Setting environment variable "LD_PRELOAD" to null value.
Reading symbols from ./app...done.
(gdb) r
Starting program: /home/weijliu/elf-respect/dynamic-loader-checker/app 
detect urts is loaded, initializing
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
add-symbol-file '/home/weijliu/elf-respect/dynamic-loader-checker/enclave.signed.so' 0x7fffe800c0d0 -readnow -s .interp 0x7fffe8000270  -s .note.gnu.build-id 0x7fffe800028c  -s .gnu.hash 0x7fffe80002b0  -s .dynsym 0x7fffe80002e0  -s .dynstr 0x7fffe8000388  -s .gnu.version 0x7fffe80003d6  -s .gnu.version_d 0x7fffe80003e8  -s .rela.dyn 0x7fffe8000420  -s .plt 0x7fffe800c0b0  -s .plt.got 0x7fffe800c0c0  -s .nipx 0x7fffe8050240  -s .rodata 0x7fffe8050a80  -s .niprod 0x7fffe8187000  -s .eh_frame_hdr 0x7fffe8187840  -s .eh_frame 0x7fffe8188a88  -s .fini_array 0x7fffe838ed98  -s .data.rel.ro 0x7fffe838edc0  -s .dynamic 0x7fffe8395e58  -s .got 0x7fffe8395fc8  -s .got.plt 0x7fffe8396000  -s .data 0x7fffe8396020  -s .nipd 0x7fffe83c18ac  -s .bss 0x7fffe83c18c0  -s .sgx.ssblob 0x7fffe87c3ca8  -s .sgx.calltg 0x7fffe8bc3ca8  -s .sgx.code 0x7fffe8fc3ca8 
app: initialize the enclave
app: call enclave main
entrylabel file size is 127
number of bytes read in entryLabel: 127

=== sec_loader: loading entrylabels ===
target_table at 0x7fffe8bc3ca8
receive entrylabel completed.
file size is 240156
number of bytes read is 240156
line 1168 start ecall_receive_binary
program at 0x7fffe8fc3ca8 (240156)
.sgx.ssblob = 0x7fffe87c3ca8
.sgx.calltg = 0x7fffe8bc3ca8
target string table at 0x7fffe8bc3ca8 (127)
.sgxcode = 0x7fffeafc3ca8
.sgxdata = 0x7fffecfeaca8
elf start = 0x7fffe8fc3ca8
elf end = 0x7fffec7c3ca8
HEAP BASE = 7fffec7c4000
line 1185 call validate_ehdr
line 1188 call update_reltab

=== sec_loader: loading ===
_stack: 7fffecfeacc0
dep.bdr
ocall.bdr
sgx_ocall.loader: 7fffe80121a2

=== sec_loader: relocating ===

=== sec_loader: relocating entrylabels ===
target string table at 0x7fffe8bc3ca8 (127)
target address table at 0x7fffe8bc40f0, total #:(14)

=== sec_loader: disassembling, checking and rewritting ===

=== sec_loader: debugging: validate if rewrites fine ===
disassembling symbol '__errno_location':
textAddr: 0x7fffeafc3cb0, textSize: 64
0x7fffeafc3cb0:	push		rax
0x7fffeafc3cb1:	cmp		qword ptr [rip + 0x2c282d7], 0
0x7fffeafc3cb9:	je		0x7fffeafc3cd1
0x7fffeafc3cbf:	call		0x7fffeafc3cf0
0x7fffeafc3cc4:	mov		rax, qword ptr [rax + 0x40]
0x7fffeafc3cc8:	mov		qword ptr [rsp], rax
0x7fffeafc3ccc:	jmp		0x7fffeafc3cdc
0x7fffeafc3cd1:	lea		rax, [rip + 0x2c27230]
0x7fffeafc3cd8:	mov		qword ptr [rsp], rax
0x7fffeafc3cdc:	mov		rax, qword ptr [rsp]
0x7fffeafc3ce0:	pop		rcx
0x7fffeafc3ce1:	ret		
0x7fffeafc3ce2:	nop		word ptr cs:[rax + rax]
0x7fffeafc3cec:	nop		dword ptr [rax]
disassembling symbol '.LBB0_2':
textAddr: 0x7fffeafc3cd1, textSize: 11
0x7fffeafc3cd1:	lea		rax, [rip + 0x2c27230]
0x7fffeafc3cd8:	mov		qword ptr [rsp], rax
disassembling symbol '.LBB0_3':
textAddr: 0x7fffeafc3cdc, textSize: 20
0x7fffeafc3cdc:	mov		rax, qword ptr [rsp]
0x7fffeafc3ce0:	pop		rcx
0x7fffeafc3ce1:	ret		
0x7fffeafc3ce2:	nop		word ptr cs:[rax + rax]
0x7fffeafc3cec:	nop		dword ptr [rax]
disassembling symbol '__pthread_self':
textAddr: 0x7fffeafc3cf0, textSize: 20
0x7fffeafc3cf0:	mov		rax, qword ptr fs:[0]
0x7fffeafc3cf9:	mov		qword ptr [rsp - 8], rax
0x7fffeafc3cfe:	mov		rax, qword ptr [rsp - 8]
0x7fffeafc3d03:	ret		
disassembling symbol '__fpclassifyl':
textAddr: 0x7fffeafc3d10, textSize: 179
0x7fffeafc3d10:	fld		xword ptr [rsp + 8]
0x7fffeafc3d14:	fstp		xword ptr [rsp - 0x18]
0x7fffeafc3d18:	fld		xword ptr [rsp - 0x18]
0x7fffeafc3d1c:	fstp		xword ptr [rsp - 0x28]
0x7fffeafc3d20:	movzx		eax, word ptr [rsp - 0x20]
0x7fffeafc3d25:	and		eax, 0x7fff
0x7fffeafc3d2a:	mov		dword ptr [rsp - 0x2c], eax
0x7fffeafc3d2e:	mov		rcx, qword ptr [rsp - 0x28]
0x7fffeafc3d33:	shr		rcx, 0x3f
0x7fffeafc3d37:	mov		dword ptr [rsp - 0x30], ecx
0x7fffeafc3d3b:	cmp		dword ptr [rsp - 0x2c], 0
0x7fffeafc3d40:	jne		0x7fffeafc3d70
0x7fffeafc3d46:	cmp		dword ptr [rsp - 0x30], 0
0x7fffeafc3d4b:	jne		0x7fffeafc3d70
0x7fffeafc3d51:	mov		rax, qword ptr [rsp - 0x28]
0x7fffeafc3d56:	cmp		rax, 0
0x7fffeafc3d5a:	mov		ecx, 3
0x7fffeafc3d5f:	mov		edx, 2
0x7fffeafc3d64:	cmovne		edx, ecx
0x7fffeafc3d67:	mov		dword ptr [rsp - 4], edx
0x7fffeafc3d6b:	jmp		0x7fffeafc3dbe
0x7fffeafc3d70:	cmp		dword ptr [rsp - 0x30], 0
0x7fffeafc3d75:	jne		0x7fffeafc3d88
0x7fffeafc3d7b:	mov		dword ptr [rsp - 4], 0
0x7fffeafc3d83:	jmp		0x7fffeafc3dbe
0x7fffeafc3d88:	cmp		dword ptr [rsp - 0x2c], 0x7fff
0x7fffeafc3d90:	jne		0x7fffeafc3db6
0x7fffeafc3d96:	xor		eax, eax
0x7fffeafc3d98:	mov		rcx, qword ptr [rsp - 0x28]
0x7fffeafc3d9d:	shl		rcx, 1
0x7fffeafc3da1:	cmp		rcx, 0
0x7fffeafc3da5:	mov		edx, 1
0x7fffeafc3daa:	cmovne		edx, eax
0x7fffeafc3dad:	mov		dword ptr [rsp - 4], edx
0x7fffeafc3db1:	jmp		0x7fffeafc3dbe
0x7fffeafc3db6:	mov		dword ptr [rsp - 4], 4
0x7fffeafc3dbe:	mov		eax, dword ptr [rsp - 4]
0x7fffeafc3dc2:	ret		
disassembling symbol '.LBB0_3':
textAddr: 0x7fffeafc3d70, textSize: 24
0x7fffeafc3d70:	cmp		dword ptr [rsp - 0x30], 0
0x7fffeafc3d75:	jne		0x7fffeafc3d88
0x7fffeafc3d7b:	mov		dword ptr [rsp - 4], 0
0x7fffeafc3d83:	jmp		0x7fffeafc3dbe
disassembling symbol '.LBB0_5':
textAddr: 0x7fffeafc3d88, textSize: 46
0x7fffeafc3d88:	cmp		dword ptr [rsp - 0x2c], 0x7fff
0x7fffeafc3d90:	jne		0x7fffeafc3db6
0x7fffeafc3d96:	xor		eax, eax
0x7fffeafc3d98:	mov		rcx, qword ptr [rsp - 0x28]
0x7fffeafc3d9d:	shl		rcx, 1
0x7fffeafc3da1:	cmp		rcx, 0
0x7fffeafc3da5:	mov		edx, 1
0x7fffeafc3daa:	cmovne		edx, eax
0x7fffeafc3dad:	mov		dword ptr [rsp - 4], edx
0x7fffeafc3db1:	jmp		0x7fffeafc3dbe
disassembling symbol '.LBB0_7':
textAddr: 0x7fffeafc3db6, textSize: 8
0x7fffeafc3db6:	mov		dword ptr [rsp - 4], 4
disassembling symbol '.LBB0_8':
textAddr: 0x7fffeafc3dbe, textSize: 18
0x7fffeafc3dbe:	mov		eax, dword ptr [rsp - 4]
0x7fffeafc3dc2:	ret		
0x7fffeafc3dc3:	add		byte ptr [rax], al
0x7fffeafc3dc5:	add		byte ptr [rax], al
0x7fffeafc3dc7:	add		byte ptr [rax], al
0x7fffeafc3dc9:	add		byte ptr [rax], al
0x7fffeafc3dcb:	add		byte ptr [rax], al
0x7fffeafc3dcd:	add		byte ptr [rax], al
disassembling symbol '__copy_tls':
textAddr: 0x7fffeafc3dd0, textSize: 240
0x7fffeafc3dd0:	sub		rsp, 0x28
0x7fffeafc3dd4:	mov		qword ptr [rsp + 0x18], rdi
0x7fffeafc3dd9:	cmp		qword ptr [rip + 0x2c281ef], 0
0x7fffeafc3de1:	jne		0x7fffeafc3df6
0x7fffeafc3de7:	mov		rax, qword ptr [rsp + 0x18]
0x7fffeafc3dec:	mov		qword ptr [rsp + 0x20], rax
0x7fffeafc3df1:	jmp		0x7fffeafc3eb1
0x7fffeafc3df6:	xor		eax, eax
0x7fffeafc3df8:	mov		ecx, eax
0x7fffeafc3dfa:	mov		rdx, qword ptr [rsp + 0x18]
0x7fffeafc3dff:	mov		qword ptr [rsp + 8], rdx
0x7fffeafc3e04:	mov		rdx, qword ptr [rsp + 8]
0x7fffeafc3e09:	mov		esi, 1
0x7fffeafc3e0e:	mov		qword ptr [rdx], rsi
0x7fffeafc3e11:	mov		rdx, qword ptr [rip + 0x2c281a8]
0x7fffeafc3e18:	sub		rdx, 0x128
0x7fffeafc3e1f:	add		rdx, qword ptr [rsp + 0x18]
0x7fffeafc3e24:	mov		qword ptr [rsp + 0x18], rdx
0x7fffeafc3e29:	mov		rdx, qword ptr [rsp + 0x18]
0x7fffeafc3e2e:	mov		rsi, qword ptr [rip + 0x2c281b3]
0x7fffeafc3e35:	sub		rsi, 1
0x7fffeafc3e3c:	and		rdx, rsi
0x7fffeafc3e3f:	mov		rsi, qword ptr [rsp + 0x18]
0x7fffeafc3e44:	mov		rdi, rcx
0x7fffeafc3e47:	sub		rdi, rdx
0x7fffeafc3e4a:	add		rsi, rdi
0x7fffeafc3e4d:	mov		qword ptr [rsp + 0x18], rsi
0x7fffeafc3e52:	mov		rdx, qword ptr [rsp + 0x18]
0x7fffeafc3e57:	mov		qword ptr [rsp + 0x10], rdx
0x7fffeafc3e5c:	mov		rdx, qword ptr [rip + 0x2c2817d]
0x7fffeafc3e63:	mov		rsi, qword ptr [rsp + 0x18]
0x7fffeafc3e68:	sub		rcx, rdx
0x7fffeafc3e6b:	add		rsi, rcx
0x7fffeafc3e6e:	mov		qword ptr [rsp + 0x18], rsi
0x7fffeafc3e73:	mov		rcx, qword ptr [rsp + 8]
0x7fffeafc3e78:	mov		rdx, qword ptr [rsp + 0x10]
0x7fffeafc3e7d:	mov		qword ptr [rdx + 8], rcx
0x7fffeafc3e81:	mov		rcx, qword ptr [rsp + 0x18]
0x7fffeafc3e86:	mov		rdx, qword ptr [rsp + 8]
0x7fffeafc3e8b:	mov		qword ptr [rdx + 8], rcx
0x7fffeafc3e8f:	mov		rdi, qword ptr [rsp + 0x18]
0x7fffeafc3e94:	mov		rsi, qword ptr [rip + 0x2c28135]
0x7fffeafc3e9b:	mov		rdx, qword ptr [rip + 0x2c28136]
0x7fffeafc3ea2:	call		0x7fffeafd2590
0x7fffeafc3ea7:	mov		rcx, qword ptr [rsp + 0x10]
0x7fffeafc3eac:	mov		qword ptr [rsp + 0x20], rcx
0x7fffeafc3eb1:	mov		rax, qword ptr [rsp + 0x20]
0x7fffeafc3eb6:	add		rsp, 0x28
0x7fffeafc3eba:	ret		
0x7fffeafc3ebb:	nop		dword ptr [rax + rax]
disassembling symbol '.LBB0_2':
textAddr: 0x7fffeafc3df6, textSize: 187
0x7fffeafc3df6:	xor		eax, eax
0x7fffeafc3df8:	mov		ecx, eax
0x7fffeafc3dfa:	mov		rdx, qword ptr [rsp + 0x18]
0x7fffeafc3dff:	mov		qword ptr [rsp + 8], rdx
0x7fffeafc3e04:	mov		rdx, qword ptr [rsp + 8]
0x7fffeafc3e09:	mov		esi, 1
0x7fffeafc3e0e:	mov		qword ptr [rdx], rsi
0x7fffeafc3e11:	mov		rdx, qword ptr [rip + 0x2c281a8]
0x7fffeafc3e18:	sub		rdx, 0x128
0x7fffeafc3e1f:	add		rdx, qword ptr [rsp + 0x18]
0x7fffeafc3e24:	mov		qword ptr [rsp + 0x18], rdx
0x7fffeafc3e29:	mov		rdx, qword ptr [rsp + 0x18]
0x7fffeafc3e2e:	mov		rsi, qword ptr [rip + 0x2c281b3]
0x7fffeafc3e35:	sub		rsi, 1
0x7fffeafc3e3c:	and		rdx, rsi
0x7fffeafc3e3f:	mov		rsi, qword ptr [rsp + 0x18]
0x7fffeafc3e44:	mov		rdi, rcx
0x7fffeafc3e47:	sub		rdi, rdx
0x7fffeafc3e4a:	add		rsi, rdi
0x7fffeafc3e4d:	mov		qword ptr [rsp + 0x18], rsi
0x7fffeafc3e52:	mov		rdx, qword ptr [rsp + 0x18]
0x7fffeafc3e57:	mov		qword ptr [rsp + 0x10], rdx
0x7fffeafc3e5c:	mov		rdx, qword ptr [rip + 0x2c2817d]
0x7fffeafc3e63:	mov		rsi, qword ptr [rsp + 0x18]
0x7fffeafc3e68:	sub		rcx, rdx
0x7fffeafc3e6b:	add		rsi, rcx
0x7fffeafc3e6e:	mov		qword ptr [rsp + 0x18], rsi
0x7fffeafc3e73:	mov		rcx, qword ptr [rsp + 8]
0x7fffeafc3e78:	mov		rdx, qword ptr [rsp + 0x10]
0x7fffeafc3e7d:	mov		qword ptr [rdx + 8], rcx
0x7fffeafc3e81:	mov		rcx, qword ptr [rsp + 0x18]
0x7fffeafc3e86:	mov		rdx, qword ptr [rsp + 8]
0x7fffeafc3e8b:	mov		qword ptr [rdx + 8], rcx
0x7fffeafc3e8f:	mov		rdi, qword ptr [rsp + 0x18]
0x7fffeafc3e94:	mov		rsi, qword ptr [rip + 0x2c28135]
0x7fffeafc3e9b:	mov		rdx, qword ptr [rip + 0x2c28136]
0x7fffeafc3ea2:	call		0x7fffeafd2590
0x7fffeafc3ea7:	mov		rcx, qword ptr [rsp + 0x10]
0x7fffeafc3eac:	mov		qword ptr [rsp + 0x20], rcx
disassembling symbol '.LBB0_3':
textAddr: 0x7fffeafc3eb1, textSize: 15
0x7fffeafc3eb1:	mov		rax, qword ptr [rsp + 0x20]
0x7fffeafc3eb6:	add		rsp, 0x28
0x7fffeafc3eba:	ret		
0x7fffeafc3ebb:	nop		dword ptr [rax + rax]
disassembling symbol '__tls_get_addr':
textAddr: 0x7fffeafc3ec0, textSize: 32
0x7fffeafc3ec0:	push		rax
0x7fffeafc3ec1:	mov		qword ptr [rsp], rdi
0x7fffeafc3ec5:	call		0x7fffeafc4120
0x7fffeafc3eca:	mov		rax, qword ptr [rax + 8]
0x7fffeafc3ece:	mov		rax, qword ptr [rax + 8]
0x7fffeafc3ed2:	mov		rcx, qword ptr [rsp]
0x7fffeafc3ed6:	add		rax, qword ptr [rcx + 8]
0x7fffeafc3eda:	pop		rcx
0x7fffeafc3edb:	ret		
0x7fffeafc3edc:	nop		dword ptr [rax]
disassembling symbol '__install_initial_tls':
textAddr: 0x7fffeafc3ee0, textSize: 80
0x7fffeafc3ee0:	sub		rsp, 0x18
0x7fffeafc3ee4:	mov		qword ptr [rsp + 0x10], rdi
0x7fffeafc3ee9:	mov		rax, qword ptr [rsp + 0x10]
0x7fffeafc3eee:	mov		rcx, qword ptr [rsp + 0x10]
0x7fffeafc3ef3:	mov		qword ptr [rcx], rax
0x7fffeafc3ef6:	mov		rdi, qword ptr [rsp + 0x10]
0x7fffeafc3efb:	call		0x7fffeafc42a0
0x7fffeafc3f00:	cmp		eax, 0
0x7fffeafc3f03:	je		0x7fffeafc3f17
0x7fffeafc3f09:	xor		eax, eax
0x7fffeafc3f0b:	mov		ecx, eax
0x7fffeafc3f0d:	mov		qword ptr [rsp + 8], rcx
0x7fffeafc3f12:	jmp		0x7fffeafc3f21
0x7fffeafc3f17:	mov		rax, qword ptr [rsp + 0x10]
0x7fffeafc3f1c:	mov		qword ptr [rsp + 8], rax
0x7fffeafc3f21:	mov		rax, qword ptr [rsp + 8]
0x7fffeafc3f26:	add		rsp, 0x18
0x7fffeafc3f2a:	ret		
0x7fffeafc3f2b:	nop		dword ptr [rax + rax]
disassembling symbol '.LBB2_2':
textAddr: 0x7fffeafc3f17, textSize: 10
0x7fffeafc3f17:	mov		rax, qword ptr [rsp + 0x10]
0x7fffeafc3f1c:	mov		qword ptr [rsp + 8], rax
disassembling symbol '.LBB2_3':
textAddr: 0x7fffeafc3f21, textSize: 15
0x7fffeafc3f21:	mov		rax, qword ptr [rsp + 8]
0x7fffeafc3f26:	add		rsp, 0x18
0x7fffeafc3f2a:	ret		
0x7fffeafc3f2b:	nop		dword ptr [rax + rax]
disassembling symbol '__init_tls':
textAddr: 0x7fffeafc3f30, textSize: 496
0x7fffeafc3f30:	sub		rsp, 0x48
0x7fffeafc3f34:	mov		qword ptr [rsp + 0x40], rdi
0x7fffeafc3f39:	mov		qword ptr [rsp + 0x18], 0
0x7fffeafc3f42:	mov		qword ptr [rsp + 0x10], 0
0x7fffeafc3f4b:	mov		qword ptr [rip + 0x2c2806a], 0x128
0x7fffeafc3f56:	mov		rax, qword ptr [rsp + 0x40]
0x7fffeafc3f5b:	mov		rax, qword ptr [rax + 0x18]
0x7fffeafc3f5f:	mov		qword ptr [rsp + 0x38], rax
0x7fffeafc3f64:	mov		rax, qword ptr [rsp + 0x40]
0x7fffeafc3f69:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafc3f6d:	mov		qword ptr [rsp + 0x28], rax
0x7fffeafc3f72:	cmp		qword ptr [rsp + 0x28], 0
0x7fffeafc3f78:	je		0x7fffeafc3ff2
0x7fffeafc3f7e:	mov		rax, qword ptr [rsp + 0x38]
0x7fffeafc3f83:	mov		qword ptr [rsp + 0x20], rax
0x7fffeafc3f88:	mov		rax, qword ptr [rsp + 0x20]
0x7fffeafc3f8d:	cmp		dword ptr [rax], 6
0x7fffeafc3f90:	jne		0x7fffeafc3fad
0x7fffeafc3f96:	mov		rax, qword ptr [rsp + 0x40]
0x7fffeafc3f9b:	mov		rax, qword ptr [rax + 0x18]
0x7fffeafc3f9f:	mov		rcx, qword ptr [rsp + 0x20]
0x7fffeafc3fa4:	sub		rax, qword ptr [rcx + 0x10]
0x7fffeafc3fa8:	mov		qword ptr [rsp + 0x10], rax
0x7fffeafc3fad:	mov		rax, qword ptr [rsp + 0x20]
0x7fffeafc3fb2:	cmp		dword ptr [rax], 7
0x7fffeafc3fb5:	jne		0x7fffeafc3fc5
0x7fffeafc3fbb:	mov		rax, qword ptr [rsp + 0x20]
0x7fffeafc3fc0:	mov		qword ptr [rsp + 0x18], rax
0x7fffeafc3fc5:	jmp		0x7fffeafc3fca
0x7fffeafc3fca:	mov		rax, qword ptr [rsp + 0x28]
0x7fffeafc3fcf:	add		rax, -1
0x7fffeafc3fd5:	mov		qword ptr [rsp + 0x28], rax
0x7fffeafc3fda:	mov		rax, qword ptr [rsp + 0x40]
0x7fffeafc3fdf:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafc3fe3:	add		rax, qword ptr [rsp + 0x38]
0x7fffeafc3fe8:	mov		qword ptr [rsp + 0x38], rax
0x7fffeafc3fed:	jmp		0x7fffeafc3f72
0x7fffeafc3ff2:	cmp		qword ptr [rsp + 0x18], 0
0x7fffeafc3ff8:	jne		0x7fffeafc4003
0x7fffeafc3ffe:	jmp		0x7fffeafc410d
0x7fffeafc4003:	xor		eax, eax
0x7fffeafc4005:	mov		ecx, eax
0x7fffeafc4007:	mov		rdx, qword ptr [rsp + 0x10]
0x7fffeafc400c:	mov		rsi, qword ptr [rsp + 0x18]
0x7fffeafc4011:	add		rdx, qword ptr [rsi + 0x10]
0x7fffeafc4015:	mov		qword ptr [rip + 0x2c27fb4], rdx
0x7fffeafc401c:	mov		rdx, qword ptr [rsp + 0x18]
0x7fffeafc4021:	mov		rdx, qword ptr [rdx + 0x20]
0x7fffeafc4025:	mov		qword ptr [rip + 0x2c27fac], rdx
0x7fffeafc402c:	mov		rdx, qword ptr [rsp + 0x18]
0x7fffeafc4031:	mov		rdx, qword ptr [rdx + 0x28]
0x7fffeafc4035:	mov		qword ptr [rip + 0x2c27fa4], rdx
0x7fffeafc403c:	mov		rdx, qword ptr [rsp + 0x18]
0x7fffeafc4041:	mov		rdx, qword ptr [rdx + 0x30]
0x7fffeafc4045:	mov		qword ptr [rip + 0x2c27f9c], rdx
0x7fffeafc404c:	sub		rcx, qword ptr [rip + 0x2c27f8d]
0x7fffeafc4053:	mov		rdx, qword ptr [rip + 0x2c27f76]
0x7fffeafc405a:	sub		rcx, rdx
0x7fffeafc405d:	mov		rdx, qword ptr [rip + 0x2c27f84]
0x7fffeafc4064:	sub		rdx, 1
0x7fffeafc406b:	and		rcx, rdx
0x7fffeafc406e:	add		rcx, qword ptr [rip + 0x2c27f6b]
0x7fffeafc4075:	mov		qword ptr [rip + 0x2c27f64], rcx
0x7fffeafc407c:	cmp		qword ptr [rip + 0x2c27f64], 0x20
0x7fffeafc4084:	jae		0x7fffeafc4095
0x7fffeafc408a:	mov		qword ptr [rip + 0x2c27f53], 0x20
0x7fffeafc4095:	xor		eax, eax
0x7fffeafc4097:	mov		ecx, eax
0x7fffeafc4099:	mov		rdx, qword ptr [rip + 0x2c27f40]
0x7fffeafc40a0:	add		rdx, 0x10
0x7fffeafc40a7:	add		rdx, qword ptr [rip + 0x2c27f3a]
0x7fffeafc40ae:	add		rdx, 0x128
0x7fffeafc40b5:	mov		qword ptr [rip + 0x2c27f04], rdx
0x7fffeafc40bc:	mov		rsi, qword ptr [rip + 0x2c27efd]
0x7fffeafc40c3:	mov		rdi, rcx
0x7fffeafc40c6:	mov		edx, 3
0x7fffeafc40cb:	mov		eax, 0x22
0x7fffeafc40d0:	mov		qword ptr [rsp + 8], rcx
0x7fffeafc40d5:	mov		ecx, eax
0x7fffeafc40d7:	mov		r8d, 0xffffffff
0x7fffeafc40dd:	mov		r9, qword ptr [rsp + 8]
0x7fffeafc40e2:	call		0x7fffeafd2bb0
0x7fffeafc40e7:	mov		qword ptr [rsp + 0x30], rax
0x7fffeafc40ec:	mov		rdi, qword ptr [rsp + 0x30]
0x7fffeafc40f1:	call		0x7fffeafc3dd0
0x7fffeafc40f6:	mov		rdi, rax
0x7fffeafc40f9:	call		0x7fffeafc3ee0
0x7fffeafc40fe:	cmp		rax, 0
0x7fffeafc4102:	jne		0x7fffeafc410d
0x7fffeafc4108:	call		0x7fffeafc4140
0x7fffeafc410d:	add		rsp, 0x48
0x7fffeafc4111:	ret		
0x7fffeafc4112:	nop		word ptr cs:[rax + rax]
0x7fffeafc411c:	nop		dword ptr [rax]
disassembling symbol '.LBB3_1':
textAddr: 0x7fffeafc3f72, textSize: 59
0x7fffeafc3f72:	cmp		qword ptr [rsp + 0x28], 0
0x7fffeafc3f78:	je		0x7fffeafc3ff2
0x7fffeafc3f7e:	mov		rax, qword ptr [rsp + 0x38]
0x7fffeafc3f83:	mov		qword ptr [rsp + 0x20], rax
0x7fffeafc3f88:	mov		rax, qword ptr [rsp + 0x20]
0x7fffeafc3f8d:	cmp		dword ptr [rax], 6
0x7fffeafc3f90:	jne		0x7fffeafc3fad
0x7fffeafc3f96:	mov		rax, qword ptr [rsp + 0x40]
0x7fffeafc3f9b:	mov		rax, qword ptr [rax + 0x18]
0x7fffeafc3f9f:	mov		rcx, qword ptr [rsp + 0x20]
0x7fffeafc3fa4:	sub		rax, qword ptr [rcx + 0x10]
0x7fffeafc3fa8:	mov		qword ptr [rsp + 0x10], rax
disassembling symbol '.LBB3_4':
textAddr: 0x7fffeafc3fad, textSize: 24
0x7fffeafc3fad:	mov		rax, qword ptr [rsp + 0x20]
0x7fffeafc3fb2:	cmp		dword ptr [rax], 7
0x7fffeafc3fb5:	jne		0x7fffeafc3fc5
0x7fffeafc3fbb:	mov		rax, qword ptr [rsp + 0x20]
0x7fffeafc3fc0:	mov		qword ptr [rsp + 0x18], rax
disassembling symbol '.LBB3_6':
textAddr: 0x7fffeafc3fc5, textSize: 5
0x7fffeafc3fc5:	jmp		0x7fffeafc3fca
disassembling symbol '.LBB3_7':
textAddr: 0x7fffeafc3fca, textSize: 40
0x7fffeafc3fca:	mov		rax, qword ptr [rsp + 0x28]
0x7fffeafc3fcf:	add		rax, -1
0x7fffeafc3fd5:	mov		qword ptr [rsp + 0x28], rax
0x7fffeafc3fda:	mov		rax, qword ptr [rsp + 0x40]
0x7fffeafc3fdf:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafc3fe3:	add		rax, qword ptr [rsp + 0x38]
0x7fffeafc3fe8:	mov		qword ptr [rsp + 0x38], rax
0x7fffeafc3fed:	jmp		0x7fffeafc3f72
disassembling symbol '.LBB3_8':
textAddr: 0x7fffeafc3ff2, textSize: 17
0x7fffeafc3ff2:	cmp		qword ptr [rsp + 0x18], 0
0x7fffeafc3ff8:	jne		0x7fffeafc4003
0x7fffeafc3ffe:	jmp		0x7fffeafc410d
disassembling symbol '.LBB3_10':
textAddr: 0x7fffeafc4003, textSize: 146
0x7fffeafc4003:	xor		eax, eax
0x7fffeafc4005:	mov		ecx, eax
0x7fffeafc4007:	mov		rdx, qword ptr [rsp + 0x10]
0x7fffeafc400c:	mov		rsi, qword ptr [rsp + 0x18]
0x7fffeafc4011:	add		rdx, qword ptr [rsi + 0x10]
0x7fffeafc4015:	mov		qword ptr [rip + 0x2c27fb4], rdx
0x7fffeafc401c:	mov		rdx, qword ptr [rsp + 0x18]
0x7fffeafc4021:	mov		rdx, qword ptr [rdx + 0x20]
0x7fffeafc4025:	mov		qword ptr [rip + 0x2c27fac], rdx
0x7fffeafc402c:	mov		rdx, qword ptr [rsp + 0x18]
0x7fffeafc4031:	mov		rdx, qword ptr [rdx + 0x28]
0x7fffeafc4035:	mov		qword ptr [rip + 0x2c27fa4], rdx
0x7fffeafc403c:	mov		rdx, qword ptr [rsp + 0x18]
0x7fffeafc4041:	mov		rdx, qword ptr [rdx + 0x30]
0x7fffeafc4045:	mov		qword ptr [rip + 0x2c27f9c], rdx
0x7fffeafc404c:	sub		rcx, qword ptr [rip + 0x2c27f8d]
0x7fffeafc4053:	mov		rdx, qword ptr [rip + 0x2c27f76]
0x7fffeafc405a:	sub		rcx, rdx
0x7fffeafc405d:	mov		rdx, qword ptr [rip + 0x2c27f84]
0x7fffeafc4064:	sub		rdx, 1
0x7fffeafc406b:	and		rcx, rdx
0x7fffeafc406e:	add		rcx, qword ptr [rip + 0x2c27f6b]
0x7fffeafc4075:	mov		qword ptr [rip + 0x2c27f64], rcx
0x7fffeafc407c:	cmp		qword ptr [rip + 0x2c27f64], 0x20
0x7fffeafc4084:	jae		0x7fffeafc4095
0x7fffeafc408a:	mov		qword ptr [rip + 0x2c27f53], 0x20
disassembling symbol '.LBB3_12':
textAddr: 0x7fffeafc4095, textSize: 120
0x7fffeafc4095:	xor		eax, eax
0x7fffeafc4097:	mov		ecx, eax
0x7fffeafc4099:	mov		rdx, qword ptr [rip + 0x2c27f40]
0x7fffeafc40a0:	add		rdx, 0x10
0x7fffeafc40a7:	add		rdx, qword ptr [rip + 0x2c27f3a]
0x7fffeafc40ae:	add		rdx, 0x128
0x7fffeafc40b5:	mov		qword ptr [rip + 0x2c27f04], rdx
0x7fffeafc40bc:	mov		rsi, qword ptr [rip + 0x2c27efd]
0x7fffeafc40c3:	mov		rdi, rcx
0x7fffeafc40c6:	mov		edx, 3
0x7fffeafc40cb:	mov		eax, 0x22
0x7fffeafc40d0:	mov		qword ptr [rsp + 8], rcx
0x7fffeafc40d5:	mov		ecx, eax
0x7fffeafc40d7:	mov		r8d, 0xffffffff
0x7fffeafc40dd:	mov		r9, qword ptr [rsp + 8]
0x7fffeafc40e2:	call		0x7fffeafd2bb0
0x7fffeafc40e7:	mov		qword ptr [rsp + 0x30], rax
0x7fffeafc40ec:	mov		rdi, qword ptr [rsp + 0x30]
0x7fffeafc40f1:	call		0x7fffeafc3dd0
0x7fffeafc40f6:	mov		rdi, rax
0x7fffeafc40f9:	call		0x7fffeafc3ee0
0x7fffeafc40fe:	cmp		rax, 0
0x7fffeafc4102:	jne		0x7fffeafc410d
0x7fffeafc4108:	call		0x7fffeafc4140
disassembling symbol '.LBB3_14':
textAddr: 0x7fffeafc410d, textSize: 19
0x7fffeafc410d:	add		rsp, 0x48
0x7fffeafc4111:	ret		
0x7fffeafc4112:	nop		word ptr cs:[rax + rax]
0x7fffeafc411c:	nop		dword ptr [rax]
disassembling symbol '__pthread_self':
textAddr: 0x7fffeafc4120, textSize: 32
0x7fffeafc4120:	mov		rax, qword ptr fs:[0]
0x7fffeafc4129:	mov		qword ptr [rsp - 8], rax
0x7fffeafc412e:	mov		rax, qword ptr [rsp - 8]
0x7fffeafc4133:	ret		
0x7fffeafc4134:	nop		word ptr cs:[rax + rax]
0x7fffeafc413e:	nop		
disassembling symbol 'a_crash':
textAddr: 0x7fffeafc4140, textSize: 2
0x7fffeafc4140:	hlt		
0x7fffeafc4141:	ret		
disassembling symbol '__lock':
textAddr: 0x7fffeafc4150, textSize: 96
0x7fffeafc4150:	push		rax
0x7fffeafc4151:	mov		qword ptr [rsp], rdi
0x7fffeafc4155:	mov		eax, dword ptr [rip + 0x2c27e4d]
0x7fffeafc415b:	cmp		eax, 0
0x7fffeafc415e:	je		0x7fffeafc41a7
0x7fffeafc4164:	jmp		0x7fffeafc4169
0x7fffeafc4169:	mov		rdi, qword ptr [rsp]
0x7fffeafc416d:	mov		esi, 1
0x7fffeafc4172:	call		0x7fffeafc41b0
0x7fffeafc4177:	cmp		eax, 0
0x7fffeafc417a:	je		0x7fffeafc41a2
0x7fffeafc4180:	mov		rdi, qword ptr [rsp]
0x7fffeafc4184:	mov		rax, qword ptr [rsp]
0x7fffeafc4188:	add		rax, 4
0x7fffeafc418e:	mov		rsi, rax
0x7fffeafc4191:	mov		ecx, 1
0x7fffeafc4196:	mov		edx, ecx
0x7fffeafc4198:	call		0x7fffeafc4a80
0x7fffeafc419d:	jmp		0x7fffeafc4169
0x7fffeafc41a2:	jmp		0x7fffeafc41a7
0x7fffeafc41a7:	pop		rax
0x7fffeafc41a8:	ret		
0x7fffeafc41a9:	nop		dword ptr [rax]
disassembling symbol '.LBB0_2':
textAddr: 0x7fffeafc4169, textSize: 57
0x7fffeafc4169:	mov		rdi, qword ptr [rsp]
0x7fffeafc416d:	mov		esi, 1
0x7fffeafc4172:	call		0x7fffeafc41b0
0x7fffeafc4177:	cmp		eax, 0
0x7fffeafc417a:	je		0x7fffeafc41a2
0x7fffeafc4180:	mov		rdi, qword ptr [rsp]
0x7fffeafc4184:	mov		rax, qword ptr [rsp]
0x7fffeafc4188:	add		rax, 4
0x7fffeafc418e:	mov		rsi, rax
0x7fffeafc4191:	mov		ecx, 1
0x7fffeafc4196:	mov		edx, ecx
0x7fffeafc4198:	call		0x7fffeafc4a80
0x7fffeafc419d:	jmp		0x7fffeafc4169
disassembling symbol '.LBB0_4':
textAddr: 0x7fffeafc41a2, textSize: 5
0x7fffeafc41a2:	jmp		0x7fffeafc41a7
disassembling symbol '.LBB0_5':
textAddr: 0x7fffeafc41a7, textSize: 9
0x7fffeafc41a7:	pop		rax
0x7fffeafc41a8:	ret		
0x7fffeafc41a9:	nop		dword ptr [rax]
disassembling symbol 'a_swap':
textAddr: 0x7fffeafc41b0, textSize: 32
0x7fffeafc41b0:	mov		qword ptr [rsp - 8], rdi
0x7fffeafc41b5:	mov		dword ptr [rsp - 0xc], esi
0x7fffeafc41b9:	mov		rax, qword ptr [rsp - 8]
0x7fffeafc41be:	mov		ecx, dword ptr [rsp - 0xc]
0x7fffeafc41c2:	xchg		dword ptr [rax], ecx
0x7fffeafc41c4:	mov		dword ptr [rsp - 0xc], ecx
0x7fffeafc41c8:	mov		eax, dword ptr [rsp - 0xc]
0x7fffeafc41cc:	ret		
0x7fffeafc41cd:	nop		dword ptr [rax]
disassembling symbol '__unlock':
textAddr: 0x7fffeafc41d0, textSize: 80
0x7fffeafc41d0:	push		rax
0x7fffeafc41d1:	mov		qword ptr [rsp], rdi
0x7fffeafc41d5:	mov		rax, qword ptr [rsp]
0x7fffeafc41d9:	mov		ecx, dword ptr [rax]
0x7fffeafc41db:	cmp		ecx, 0
0x7fffeafc41de:	je		0x7fffeafc421d
0x7fffeafc41e4:	xor		esi, esi
0x7fffeafc41e6:	mov		rdi, qword ptr [rsp]
0x7fffeafc41ea:	call		0x7fffeafc4220
0x7fffeafc41ef:	mov		rax, qword ptr [rsp]
0x7fffeafc41f3:	mov		ecx, dword ptr [rax + 4]
0x7fffeafc41f6:	cmp		ecx, 0
0x7fffeafc41f9:	je		0x7fffeafc4218
0x7fffeafc41ff:	mov		rsi, qword ptr [rsp]
0x7fffeafc4203:	mov		edi, 0xca
0x7fffeafc4208:	mov		eax, 1
0x7fffeafc420d:	mov		rdx, rax
0x7fffeafc4210:	mov		rcx, rax
0x7fffeafc4213:	call		0x7fffeafc4240
0x7fffeafc4218:	jmp		0x7fffeafc421d
0x7fffeafc421d:	pop		rax
0x7fffeafc421e:	ret		
0x7fffeafc421f:	nop		
disassembling symbol '.LBB2_3':
textAddr: 0x7fffeafc4218, textSize: 5
0x7fffeafc4218:	jmp		0x7fffeafc421d
disassembling symbol '.LBB2_4':
textAddr: 0x7fffeafc421d, textSize: 3
0x7fffeafc421d:	pop		rax
0x7fffeafc421e:	ret		
0x7fffeafc421f:	nop		
disassembling symbol 'a_store':
textAddr: 0x7fffeafc4220, textSize: 32
0x7fffeafc4220:	mov		qword ptr [rsp - 8], rdi
0x7fffeafc4225:	mov		dword ptr [rsp - 0xc], esi
0x7fffeafc4229:	mov		rax, qword ptr [rsp - 8]
0x7fffeafc422e:	mov		ecx, dword ptr [rsp - 0xc]
0x7fffeafc4232:	mov		dword ptr [rax], ecx
0x7fffeafc4234:	ret		
0x7fffeafc4235:	nop		word ptr cs:[rax + rax]
0x7fffeafc423f:	nop		
disassembling symbol '__syscall3':
textAddr: 0x7fffeafc4240, textSize: 53
0x7fffeafc4240:	mov		qword ptr [rsp - 8], rdi
0x7fffeafc4245:	mov		qword ptr [rsp - 0x10], rsi
0x7fffeafc424a:	mov		qword ptr [rsp - 0x18], rdx
0x7fffeafc424f:	mov		qword ptr [rsp - 0x20], rcx
0x7fffeafc4254:	mov		rax, qword ptr [rsp - 8]
0x7fffeafc4259:	mov		rdi, qword ptr [rsp - 0x10]
0x7fffeafc425e:	mov		rsi, qword ptr [rsp - 0x18]
0x7fffeafc4263:	mov		rdx, qword ptr [rsp - 0x20]
0x7fffeafc4268:	syscall		
0x7fffeafc426a:	mov		qword ptr [rsp - 0x28], rax
0x7fffeafc426f:	mov		rax, qword ptr [rsp - 0x28]
0x7fffeafc4274:	ret		
disassembling symbol '__lockfile':
textAddr: 0x7fffeafc4280, textSize: 16
0x7fffeafc4280:	xor		eax, eax
0x7fffeafc4282:	mov		qword ptr [rsp - 8], rdi
0x7fffeafc4287:	ret		
0x7fffeafc4288:	nop		dword ptr [rax + rax]
disassembling symbol '__unlockfile':
textAddr: 0x7fffeafc4290, textSize: 6
0x7fffeafc4290:	mov		qword ptr [rsp - 8], rdi
0x7fffeafc4295:	ret		
disassembling symbol '__set_thread_area':
textAddr: 0x7fffeafc42a0, textSize: 16
0x7fffeafc42a0:	mov		rsi, rdi
0x7fffeafc42a3:	mov		edi, 0x1002
0x7fffeafc42a8:	mov		eax, 0x9e
0x7fffeafc42ad:	syscall		
0x7fffeafc42af:	ret		
disassembling symbol '__signbitl':
textAddr: 0x7fffeafc42b0, textSize: 25
0x7fffeafc42b0:	fld		xword ptr [rsp + 8]
0x7fffeafc42b4:	fstp		xword ptr [rsp - 0x18]
0x7fffeafc42b8:	fld		xword ptr [rsp - 0x18]
0x7fffeafc42bc:	fstp		xword ptr [rsp - 0x28]
0x7fffeafc42c0:	movzx		eax, word ptr [rsp - 0x20]
0x7fffeafc42c5:	sar		eax, 0xf
0x7fffeafc42c8:	ret		
disassembling symbol '__stdio_close':
textAddr: 0x7fffeafc42d0, textSize: 48
0x7fffeafc42d0:	push		rax
0x7fffeafc42d1:	mov		qword ptr [rsp], rdi
0x7fffeafc42d5:	mov		rax, qword ptr [rsp]
0x7fffeafc42d9:	movsxd		rsi, dword ptr [rax + 0x78]
0x7fffeafc42dd:	mov		edi, 3
0x7fffeafc42e2:	call		0x7fffeafc4300
0x7fffeafc42e7:	mov		rdi, rax
0x7fffeafc42ea:	call		0x7fffeafd46c0
0x7fffeafc42ef:	pop		rcx
0x7fffeafc42f0:	ret		
0x7fffeafc42f1:	nop		word ptr cs:[rax + rax]
0x7fffeafc42fb:	nop		dword ptr [rax + rax]
disassembling symbol '__syscall1':
textAddr: 0x7fffeafc4300, textSize: 33
0x7fffeafc4300:	mov		qword ptr [rsp - 8], rdi
0x7fffeafc4305:	mov		qword ptr [rsp - 0x10], rsi
0x7fffeafc430a:	mov		rax, qword ptr [rsp - 8]
0x7fffeafc430f:	mov		rdi, qword ptr [rsp - 0x10]
0x7fffeafc4314:	syscall		
0x7fffeafc4316:	mov		qword ptr [rsp - 0x18], rax
0x7fffeafc431b:	mov		rax, qword ptr [rsp - 0x18]
0x7fffeafc4320:	ret		
disassembling symbol '__stdio_exit_needed':
textAddr: 0x7fffeafc4330, textSize: 112
0x7fffeafc4330:	push		rax
0x7fffeafc4331:	lea		rax, [rip + 0x2c27c58]
0x7fffeafc4338:	add		rax, 0x28
0x7fffeafc433e:	mov		rdi, rax
0x7fffeafc4341:	call		0x7fffeafc4150
0x7fffeafc4346:	mov		rax, qword ptr [rip + 0x2c27c63]
0x7fffeafc434d:	mov		qword ptr [rsp], rax
0x7fffeafc4351:	cmp		qword ptr [rsp], 0
0x7fffeafc4356:	je		0x7fffeafc4376
0x7fffeafc435c:	mov		rdi, qword ptr [rsp]
0x7fffeafc4360:	call		0x7fffeafc43a0
0x7fffeafc4365:	mov		rax, qword ptr [rsp]
0x7fffeafc4369:	mov		rax, qword ptr [rax + 0x70]
0x7fffeafc436d:	mov		qword ptr [rsp], rax
0x7fffeafc4371:	jmp		0x7fffeafc4351
0x7fffeafc4376:	mov		rax, qword ptr [rip - 0x1fe64b5]
0x7fffeafc437d:	mov		rdi, qword ptr [rax]
0x7fffeafc4380:	call		0x7fffeafc43a0
0x7fffeafc4385:	mov		rax, qword ptr [rip - 0x1fe64ac]
0x7fffeafc438c:	mov		rdi, qword ptr [rax]
0x7fffeafc438f:	call		0x7fffeafc43a0
0x7fffeafc4394:	pop		rax
0x7fffeafc4395:	ret		
0x7fffeafc4396:	nop		word ptr cs:[rax + rax]
disassembling symbol '.LBB0_1':
textAddr: 0x7fffeafc4351, textSize: 37
0x7fffeafc4351:	cmp		qword ptr [rsp], 0
0x7fffeafc4356:	je		0x7fffeafc4376
0x7fffeafc435c:	mov		rdi, qword ptr [rsp]
0x7fffeafc4360:	call		0x7fffeafc43a0
0x7fffeafc4365:	mov		rax, qword ptr [rsp]
0x7fffeafc4369:	mov		rax, qword ptr [rax + 0x70]
0x7fffeafc436d:	mov		qword ptr [rsp], rax
0x7fffeafc4371:	jmp		0x7fffeafc4351
disassembling symbol '.LBB0_4':
textAddr: 0x7fffeafc4376, textSize: 42
0x7fffeafc4376:	mov		rax, qword ptr [rip - 0x1fe64b5]
0x7fffeafc437d:	mov		rdi, qword ptr [rax]
0x7fffeafc4380:	call		0x7fffeafc43a0
0x7fffeafc4385:	mov		rax, qword ptr [rip - 0x1fe64ac]
0x7fffeafc438c:	mov		rdi, qword ptr [rax]
0x7fffeafc438f:	call		0x7fffeafc43a0
0x7fffeafc4394:	pop		rax
0x7fffeafc4395:	ret		
0x7fffeafc4396:	nop		word ptr cs:[rax + rax]
disassembling symbol 'close_file':
textAddr: 0x7fffeafc43a0, textSize: 198
0x7fffeafc43a0:	sub		rsp, 0x18
0x7fffeafc43a4:	mov		qword ptr [rsp + 0x10], rdi
0x7fffeafc43a9:	cmp		qword ptr [rsp + 0x10], 0
0x7fffeafc43af:	jne		0x7fffeafc43ba
0x7fffeafc43b5:	jmp		0x7fffeafc4461
0x7fffeafc43ba:	mov		rax, qword ptr [rsp + 0x10]
0x7fffeafc43bf:	cmp		dword ptr [rax + 0x8c], 0
0x7fffeafc43c6:	jl		0x7fffeafc43db
0x7fffeafc43cc:	mov		rdi, qword ptr [rsp + 0x10]
0x7fffeafc43d1:	call		0x7fffeafc4280
0x7fffeafc43d6:	jmp		0x7fffeafc43e0
0x7fffeafc43db:	jmp		0x7fffeafc43e0
0x7fffeafc43e0:	mov		rax, qword ptr [rsp + 0x10]
0x7fffeafc43e5:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafc43e9:	mov		rcx, qword ptr [rsp + 0x10]
0x7fffeafc43ee:	cmp		rax, qword ptr [rcx + 0x38]
0x7fffeafc43f2:	jbe		0x7fffeafc441c
0x7fffeafc43f8:	xor		eax, eax
0x7fffeafc43fa:	mov		ecx, eax
0x7fffeafc43fc:	mov		rdx, qword ptr [rsp + 0x10]
0x7fffeafc4401:	mov		rdx, qword ptr [rdx + 0x48]
0x7fffeafc4405:	mov		rdi, qword ptr [rsp + 0x10]
0x7fffeafc440a:	mov		rsi, rcx
0x7fffeafc440d:	mov		qword ptr [rsp + 8], rdx
0x7fffeafc4412:	mov		rdx, rcx
0x7fffeafc4415:	mov		rcx, qword ptr [rsp + 8]
0x7fffeafc441a:	call		rcx
0x7fffeafc441c:	mov		rax, qword ptr [rsp + 0x10]
0x7fffeafc4421:	mov		rax, qword ptr [rax + 8]
0x7fffeafc4425:	mov		rcx, qword ptr [rsp + 0x10]
0x7fffeafc442a:	cmp		rax, qword ptr [rcx + 0x10]
0x7fffeafc442e:	jae		0x7fffeafc4461
0x7fffeafc4434:	mov		rax, qword ptr [rsp + 0x10]
0x7fffeafc4439:	mov		rax, qword ptr [rax + 0x50]
0x7fffeafc443d:	mov		rdi, qword ptr [rsp + 0x10]
0x7fffeafc4442:	mov		rcx, qword ptr [rsp + 0x10]
0x7fffeafc4447:	mov		rcx, qword ptr [rcx + 8]
0x7fffeafc444b:	mov		rdx, qword ptr [rsp + 0x10]
0x7fffeafc4450:	mov		rdx, qword ptr [rdx + 0x10]
0x7fffeafc4454:	sub		rcx, rdx
0x7fffeafc4457:	mov		rsi, rcx
0x7fffeafc445a:	mov		edx, 1
0x7fffeafc445f:	call		rax
0x7fffeafc4461:	add		rsp, 0x18
0x7fffeafc4465:	ret		
disassembling symbol '.LBB1_2':
textAddr: 0x7fffeafc43ba, textSize: 33
0x7fffeafc43ba:	mov		rax, qword ptr [rsp + 0x10]
0x7fffeafc43bf:	cmp		dword ptr [rax + 0x8c], 0
0x7fffeafc43c6:	jl		0x7fffeafc43db
0x7fffeafc43cc:	mov		rdi, qword ptr [rsp + 0x10]
0x7fffeafc43d1:	call		0x7fffeafc4280
0x7fffeafc43d6:	jmp		0x7fffeafc43e0
disassembling symbol '.LBB1_4':
textAddr: 0x7fffeafc43db, textSize: 5
0x7fffeafc43db:	jmp		0x7fffeafc43e0
disassembling symbol '.LBB1_5':
textAddr: 0x7fffeafc43e0, textSize: 60
0x7fffeafc43e0:	mov		rax, qword ptr [rsp + 0x10]
0x7fffeafc43e5:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafc43e9:	mov		rcx, qword ptr [rsp + 0x10]
0x7fffeafc43ee:	cmp		rax, qword ptr [rcx + 0x38]
0x7fffeafc43f2:	jbe		0x7fffeafc441c
0x7fffeafc43f8:	xor		eax, eax
0x7fffeafc43fa:	mov		ecx, eax
0x7fffeafc43fc:	mov		rdx, qword ptr [rsp + 0x10]
0x7fffeafc4401:	mov		rdx, qword ptr [rdx + 0x48]
0x7fffeafc4405:	mov		rdi, qword ptr [rsp + 0x10]
0x7fffeafc440a:	mov		rsi, rcx
0x7fffeafc440d:	mov		qword ptr [rsp + 8], rdx
0x7fffeafc4412:	mov		rdx, rcx
0x7fffeafc4415:	mov		rcx, qword ptr [rsp + 8]
0x7fffeafc441a:	call		rcx
disassembling symbol '.LBB1_7':
textAddr: 0x7fffeafc441c, textSize: 69
0x7fffeafc441c:	mov		rax, qword ptr [rsp + 0x10]
0x7fffeafc4421:	mov		rax, qword ptr [rax + 8]
0x7fffeafc4425:	mov		rcx, qword ptr [rsp + 0x10]
0x7fffeafc442a:	cmp		rax, qword ptr [rcx + 0x10]
0x7fffeafc442e:	jae		0x7fffeafc4461
0x7fffeafc4434:	mov		rax, qword ptr [rsp + 0x10]
0x7fffeafc4439:	mov		rax, qword ptr [rax + 0x50]
0x7fffeafc443d:	mov		rdi, qword ptr [rsp + 0x10]
0x7fffeafc4442:	mov		rcx, qword ptr [rsp + 0x10]
0x7fffeafc4447:	mov		rcx, qword ptr [rcx + 8]
0x7fffeafc444b:	mov		rdx, qword ptr [rsp + 0x10]
0x7fffeafc4450:	mov		rdx, qword ptr [rdx + 0x10]
0x7fffeafc4454:	sub		rcx, rdx
0x7fffeafc4457:	mov		rsi, rcx
0x7fffeafc445a:	mov		edx, 1
0x7fffeafc445f:	call		rax
disassembling symbol '.LBB1_9':
textAddr: 0x7fffeafc4461, textSize: 15
0x7fffeafc4461:	add		rsp, 0x18
0x7fffeafc4465:	ret		
0x7fffeafc4466:	add		byte ptr [rax], al
0x7fffeafc4468:	add		byte ptr [rax], al
0x7fffeafc446a:	add		byte ptr [rax], al
0x7fffeafc446c:	add		byte ptr [rax], al
0x7fffeafc446e:	add		byte ptr [rax], al
disassembling symbol '__stdio_seek':
textAddr: 0x7fffeafc4470, textSize: 80
0x7fffeafc4470:	sub		rsp, 0x28
0x7fffeafc4474:	mov		qword ptr [rsp + 0x20], rdi
0x7fffeafc4479:	mov		qword ptr [rsp + 0x18], rsi
0x7fffeafc447e:	mov		dword ptr [rsp + 0x14], edx
0x7fffeafc4482:	mov		rax, qword ptr [rsp + 0x20]
0x7fffeafc4487:	movsxd		rsi, dword ptr [rax + 0x78]
0x7fffeafc448b:	mov		rdx, qword ptr [rsp + 0x18]
0x7fffeafc4490:	movsxd		rcx, dword ptr [rsp + 0x14]
0x7fffeafc4495:	mov		edi, 8
0x7fffeafc449a:	call		0x7fffeafc44c0
0x7fffeafc449f:	mov		rdi, rax
0x7fffeafc44a2:	call		0x7fffeafd46c0
0x7fffeafc44a7:	mov		qword ptr [rsp + 8], rax
0x7fffeafc44ac:	mov		rax, qword ptr [rsp + 8]
0x7fffeafc44b1:	add		rsp, 0x28
0x7fffeafc44b5:	ret		
0x7fffeafc44b6:	nop		word ptr cs:[rax + rax]
disassembling symbol '__syscall3':
textAddr: 0x7fffeafc44c0, textSize: 53
0x7fffeafc44c0:	mov		qword ptr [rsp - 8], rdi
0x7fffeafc44c5:	mov		qword ptr [rsp - 0x10], rsi
0x7fffeafc44ca:	mov		qword ptr [rsp - 0x18], rdx
0x7fffeafc44cf:	mov		qword ptr [rsp - 0x20], rcx
0x7fffeafc44d4:	mov		rax, qword ptr [rsp - 8]
0x7fffeafc44d9:	mov		rdi, qword ptr [rsp - 0x10]
0x7fffeafc44de:	mov		rsi, qword ptr [rsp - 0x18]
0x7fffeafc44e3:	mov		rdx, qword ptr [rsp - 0x20]
0x7fffeafc44e8:	syscall		
0x7fffeafc44ea:	mov		qword ptr [rsp - 0x28], rax
0x7fffeafc44ef:	mov		rax, qword ptr [rsp - 0x28]
0x7fffeafc44f4:	ret		
disassembling symbol '__stdio_write':
textAddr: 0x7fffeafc4500, textSize: 912
0x7fffeafc4500:	sub		rsp, 0xa8
0x7fffeafc4507:	lea		rax, [rsp + 0x60]
0x7fffeafc450c:	mov		qword ptr [rsp + 0x98], rdi
0x7fffeafc4514:	mov		qword ptr [rsp + 0x90], rsi
0x7fffeafc451c:	mov		qword ptr [rsp + 0x88], rdx
0x7fffeafc4524:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafc452c:	mov		rcx, qword ptr [rcx + 0x38]
0x7fffeafc4530:	mov		qword ptr [rsp + 0x60], rcx
0x7fffeafc4535:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafc453d:	mov		rcx, qword ptr [rcx + 0x28]
0x7fffeafc4541:	mov		rdx, qword ptr [rsp + 0x98]
0x7fffeafc4549:	mov		rdx, qword ptr [rdx + 0x38]
0x7fffeafc454d:	sub		rcx, rdx
0x7fffeafc4550:	mov		qword ptr [rsp + 0x68], rcx
0x7fffeafc4555:	mov		rcx, qword ptr [rsp + 0x90]
0x7fffeafc455d:	mov		qword ptr [rsp + 0x70], rcx
0x7fffeafc4562:	mov		rcx, qword ptr [rsp + 0x88]
0x7fffeafc456a:	mov		qword ptr [rsp + 0x78], rcx
0x7fffeafc456f:	mov		qword ptr [rsp + 0x58], rax
0x7fffeafc4574:	mov		rax, qword ptr [rsp + 0x58]
0x7fffeafc4579:	mov		rax, qword ptr [rax + 8]
0x7fffeafc457d:	mov		rcx, qword ptr [rsp + 0x58]
0x7fffeafc4582:	add		rax, qword ptr [rcx + 0x18]
0x7fffeafc4586:	mov		qword ptr [rsp + 0x50], rax
0x7fffeafc458b:	mov		dword ptr [rsp + 0x4c], 2
0x7fffeafc4593:	cmp		qword ptr [rip + 0x2c279f5], 0
0x7fffeafc459b:	je		0x7fffeafc4656
0x7fffeafc45a1:	jmp		0x7fffeafc45a6
0x7fffeafc45a6:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafc45ae:	lea		rdi, [rsp + 0x28]
0x7fffeafc45b3:	lea		rsi, [rip + 0x2d6]
0x7fffeafc45ba:	mov		rdx, rax
0x7fffeafc45bd:	call		0x7fffeafc51d0
0x7fffeafc45c2:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafc45ca:	cmp		dword ptr [rax + 0x78], 1
0x7fffeafc45ce:	jne		0x7fffeafc45ec
0x7fffeafc45d4:	mov		rdi, qword ptr [rsp + 0x58]
0x7fffeafc45d9:	mov		esi, dword ptr [rsp + 0x4c]
0x7fffeafc45dd:	call		0x7fffeafc48d0
0x7fffeafc45e2:	mov		qword ptr [rsp + 0x40], rax
0x7fffeafc45e7:	jmp		0x7fffeafc4645
0x7fffeafc45ec:	xor		eax, eax
0x7fffeafc45ee:	mov		ecx, eax
0x7fffeafc45f0:	mov		rdx, qword ptr [rsp + 0x98]
0x7fffeafc45f8:	movsxd		rsi, dword ptr [rdx + 0x78]
0x7fffeafc45fc:	mov		rdx, qword ptr [rsp + 0x58]
0x7fffeafc4601:	movsxd		rdi, dword ptr [rsp + 0x4c]
0x7fffeafc4606:	mov		r8d, 0x14
0x7fffeafc460c:	mov		qword ptr [rsp + 0x20], rdi
0x7fffeafc4611:	mov		rdi, r8
0x7fffeafc4614:	mov		r8, qword ptr [rsp + 0x20]
0x7fffeafc4619:	mov		qword ptr [rsp + 0x18], rcx
0x7fffeafc461e:	mov		rcx, r8
0x7fffeafc4621:	mov		r8, qword ptr [rsp + 0x18]
0x7fffeafc4626:	mov		r9, qword ptr [rsp + 0x18]
0x7fffeafc462b:	mov		qword ptr [rsp], 0
0x7fffeafc4633:	call		0x7fffeafc4d40
0x7fffeafc4638:	mov		rdi, rax
0x7fffeafc463b:	call		0x7fffeafd46c0
0x7fffeafc4640:	mov		qword ptr [rsp + 0x40], rax
0x7fffeafc4645:	xor		esi, esi
0x7fffeafc4647:	lea		rdi, [rsp + 0x28]
0x7fffeafc464c:	call		0x7fffeafc5210
0x7fffeafc4651:	jmp		0x7fffeafc46b2
0x7fffeafc4656:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafc465e:	cmp		dword ptr [rax + 0x78], 1
0x7fffeafc4662:	jne		0x7fffeafc4680
0x7fffeafc4668:	mov		rdi, qword ptr [rsp + 0x58]
0x7fffeafc466d:	mov		esi, dword ptr [rsp + 0x4c]
0x7fffeafc4671:	call		0x7fffeafc48d0
0x7fffeafc4676:	mov		qword ptr [rsp + 0x40], rax
0x7fffeafc467b:	jmp		0x7fffeafc46ad
0x7fffeafc4680:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafc4688:	movsxd		rsi, dword ptr [rax + 0x78]
0x7fffeafc468c:	mov		rdx, qword ptr [rsp + 0x58]
0x7fffeafc4691:	movsxd		rcx, dword ptr [rsp + 0x4c]
0x7fffeafc4696:	mov		edi, 0x14
0x7fffeafc469b:	call		0x7fffeafc4950
0x7fffeafc46a0:	mov		rdi, rax
0x7fffeafc46a3:	call		0x7fffeafd46c0
0x7fffeafc46a8:	mov		qword ptr [rsp + 0x40], rax
0x7fffeafc46ad:	jmp		0x7fffeafc46b2
0x7fffeafc46b2:	mov		rax, qword ptr [rsp + 0x40]
0x7fffeafc46b7:	cmp		rax, qword ptr [rsp + 0x50]
0x7fffeafc46bc:	jne		0x7fffeafc471f
0x7fffeafc46c2:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafc46ca:	mov		rax, qword ptr [rax + 0x58]
0x7fffeafc46ce:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafc46d6:	add		rax, qword ptr [rcx + 0x60]
0x7fffeafc46da:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafc46e2:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafc46e6:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafc46ee:	mov		rax, qword ptr [rax + 0x58]
0x7fffeafc46f2:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafc46fa:	mov		qword ptr [rcx + 0x38], rax
0x7fffeafc46fe:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafc4706:	mov		qword ptr [rcx + 0x28], rax
0x7fffeafc470a:	mov		rax, qword ptr [rsp + 0x88]
0x7fffeafc4712:	mov		qword ptr [rsp + 0xa0], rax
0x7fffeafc471a:	jmp		0x7fffeafc487f
0x7fffeafc471f:	cmp		qword ptr [rsp + 0x40], 0
0x7fffeafc4725:	jge		0x7fffeafc47ab
0x7fffeafc472b:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafc4733:	mov		qword ptr [rax + 0x20], 0
0x7fffeafc473b:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafc4743:	mov		qword ptr [rax + 0x38], 0
0x7fffeafc474b:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafc4753:	mov		qword ptr [rax + 0x28], 0
0x7fffeafc475b:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafc4763:	mov		ecx, dword ptr [rax]
0x7fffeafc4765:	or		ecx, 0x20
0x7fffeafc4768:	mov		dword ptr [rax], ecx
0x7fffeafc476a:	cmp		dword ptr [rsp + 0x4c], 2
0x7fffeafc476f:	jne		0x7fffeafc4783
0x7fffeafc4775:	xor		eax, eax
0x7fffeafc4777:	mov		ecx, eax
0x7fffeafc4779:	mov		qword ptr [rsp + 0x10], rcx
0x7fffeafc477e:	jmp		0x7fffeafc4799
0x7fffeafc4783:	mov		rax, qword ptr [rsp + 0x88]
0x7fffeafc478b:	mov		rcx, qword ptr [rsp + 0x58]
0x7fffeafc4790:	sub		rax, qword ptr [rcx + 8]
0x7fffeafc4794:	mov		qword ptr [rsp + 0x10], rax
0x7fffeafc4799:	mov		rax, qword ptr [rsp + 0x10]
0x7fffeafc479e:	mov		qword ptr [rsp + 0xa0], rax
0x7fffeafc47a6:	jmp		0x7fffeafc487f
0x7fffeafc47ab:	mov		rax, qword ptr [rsp + 0x40]
0x7fffeafc47b0:	mov		rcx, qword ptr [rsp + 0x50]
0x7fffeafc47b5:	sub		rcx, rax
0x7fffeafc47b8:	mov		qword ptr [rsp + 0x50], rcx
0x7fffeafc47bd:	mov		rax, qword ptr [rsp + 0x40]
0x7fffeafc47c2:	mov		rcx, qword ptr [rsp + 0x58]
0x7fffeafc47c7:	cmp		rax, qword ptr [rcx + 8]
0x7fffeafc47cb:	jbe		0x7fffeafc482b
0x7fffeafc47d1:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafc47d9:	mov		rax, qword ptr [rax + 0x58]
0x7fffeafc47dd:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafc47e5:	mov		qword ptr [rcx + 0x38], rax
0x7fffeafc47e9:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafc47f1:	mov		qword ptr [rcx + 0x28], rax
0x7fffeafc47f5:	mov		rax, qword ptr [rsp + 0x58]
0x7fffeafc47fa:	mov		rax, qword ptr [rax + 8]
0x7fffeafc47fe:	mov		rcx, qword ptr [rsp + 0x40]
0x7fffeafc4803:	sub		rcx, rax
0x7fffeafc4806:	mov		qword ptr [rsp + 0x40], rcx
0x7fffeafc480b:	mov		rax, qword ptr [rsp + 0x58]
0x7fffeafc4810:	add		rax, 0x10
0x7fffeafc4816:	mov		qword ptr [rsp + 0x58], rax
0x7fffeafc481b:	mov		edx, dword ptr [rsp + 0x4c]
0x7fffeafc481f:	add		edx, -1
0x7fffeafc4822:	mov		dword ptr [rsp + 0x4c], edx
0x7fffeafc4826:	jmp		0x7fffeafc4850
0x7fffeafc482b:	cmp		dword ptr [rsp + 0x4c], 2
0x7fffeafc4830:	jne		0x7fffeafc484b
0x7fffeafc4836:	mov		rax, qword ptr [rsp + 0x40]
0x7fffeafc483b:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafc4843:	add		rax, qword ptr [rcx + 0x38]
0x7fffeafc4847:	mov		qword ptr [rcx + 0x38], rax
0x7fffeafc484b:	jmp		0x7fffeafc4850
0x7fffeafc4850:	mov		rax, qword ptr [rsp + 0x58]
0x7fffeafc4855:	mov		rax, qword ptr [rax]
0x7fffeafc4858:	add		rax, qword ptr [rsp + 0x40]
0x7fffeafc485d:	mov		rcx, qword ptr [rsp + 0x58]
0x7fffeafc4862:	mov		qword ptr [rcx], rax
0x7fffeafc4865:	mov		rax, qword ptr [rsp + 0x40]
0x7fffeafc486a:	mov		rcx, qword ptr [rsp + 0x58]
0x7fffeafc486f:	mov		rdx, qword ptr [rcx + 8]
0x7fffeafc4873:	sub		rdx, rax
0x7fffeafc4876:	mov		qword ptr [rcx + 8], rdx
0x7fffeafc487a:	jmp		0x7fffeafc4593
0x7fffeafc487f:	mov		rax, qword ptr [rsp + 0xa0]
0x7fffeafc4887:	add		rsp, 0xa8
0x7fffeafc488e:	ret		
0x7fffeafc488f:	nop		
disassembling symbol '.LBB0_1':
textAddr: 0x7fffeafc4593, textSize: 19
0x7fffeafc4593:	cmp		qword ptr [rip + 0x2c279f5], 0
0x7fffeafc459b:	je		0x7fffeafc4656
0x7fffeafc45a1:	jmp		0x7fffeafc45a6
disassembling symbol '.LBB0_3':
textAddr: 0x7fffeafc45a6, textSize: 70
0x7fffeafc45a6:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafc45ae:	lea		rdi, [rsp + 0x28]
0x7fffeafc45b3:	lea		rsi, [rip + 0x2d6]
0x7fffeafc45ba:	mov		rdx, rax
0x7fffeafc45bd:	call		0x7fffeafc51d0
0x7fffeafc45c2:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafc45ca:	cmp		dword ptr [rax + 0x78], 1
0x7fffeafc45ce:	jne		0x7fffeafc45ec
0x7fffeafc45d4:	mov		rdi, qword ptr [rsp + 0x58]
0x7fffeafc45d9:	mov		esi, dword ptr [rsp + 0x4c]
0x7fffeafc45dd:	call		0x7fffeafc48d0
0x7fffeafc45e2:	mov		qword ptr [rsp + 0x40], rax
0x7fffeafc45e7:	jmp		0x7fffeafc4645
disassembling symbol '.LBB0_5':
textAddr: 0x7fffeafc45ec, textSize: 89
0x7fffeafc45ec:	xor		eax, eax
0x7fffeafc45ee:	mov		ecx, eax
0x7fffeafc45f0:	mov		rdx, qword ptr [rsp + 0x98]
0x7fffeafc45f8:	movsxd		rsi, dword ptr [rdx + 0x78]
0x7fffeafc45fc:	mov		rdx, qword ptr [rsp + 0x58]
0x7fffeafc4601:	movsxd		rdi, dword ptr [rsp + 0x4c]
0x7fffeafc4606:	mov		r8d, 0x14
0x7fffeafc460c:	mov		qword ptr [rsp + 0x20], rdi
0x7fffeafc4611:	mov		rdi, r8
0x7fffeafc4614:	mov		r8, qword ptr [rsp + 0x20]
0x7fffeafc4619:	mov		qword ptr [rsp + 0x18], rcx
0x7fffeafc461e:	mov		rcx, r8
0x7fffeafc4621:	mov		r8, qword ptr [rsp + 0x18]
0x7fffeafc4626:	mov		r9, qword ptr [rsp + 0x18]
0x7fffeafc462b:	mov		qword ptr [rsp], 0
0x7fffeafc4633:	call		0x7fffeafc4d40
0x7fffeafc4638:	mov		rdi, rax
0x7fffeafc463b:	call		0x7fffeafd46c0
0x7fffeafc4640:	mov		qword ptr [rsp + 0x40], rax
disassembling symbol '.LBB0_6':
textAddr: 0x7fffeafc4645, textSize: 17
0x7fffeafc4645:	xor		esi, esi
0x7fffeafc4647:	lea		rdi, [rsp + 0x28]
0x7fffeafc464c:	call		0x7fffeafc5210
0x7fffeafc4651:	jmp		0x7fffeafc46b2
disassembling symbol '.LBB0_8':
textAddr: 0x7fffeafc4656, textSize: 42
0x7fffeafc4656:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafc465e:	cmp		dword ptr [rax + 0x78], 1
0x7fffeafc4662:	jne		0x7fffeafc4680
0x7fffeafc4668:	mov		rdi, qword ptr [rsp + 0x58]
0x7fffeafc466d:	mov		esi, dword ptr [rsp + 0x4c]
0x7fffeafc4671:	call		0x7fffeafc48d0
0x7fffeafc4676:	mov		qword ptr [rsp + 0x40], rax
0x7fffeafc467b:	jmp		0x7fffeafc46ad
disassembling symbol '.LBB0_10':
textAddr: 0x7fffeafc4680, textSize: 45
0x7fffeafc4680:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafc4688:	movsxd		rsi, dword ptr [rax + 0x78]
0x7fffeafc468c:	mov		rdx, qword ptr [rsp + 0x58]
0x7fffeafc4691:	movsxd		rcx, dword ptr [rsp + 0x4c]
0x7fffeafc4696:	mov		edi, 0x14
0x7fffeafc469b:	call		0x7fffeafc4950
0x7fffeafc46a0:	mov		rdi, rax
0x7fffeafc46a3:	call		0x7fffeafd46c0
0x7fffeafc46a8:	mov		qword ptr [rsp + 0x40], rax
disassembling symbol '.LBB0_11':
textAddr: 0x7fffeafc46ad, textSize: 5
0x7fffeafc46ad:	jmp		0x7fffeafc46b2
disassembling symbol '.LBB0_12':
textAddr: 0x7fffeafc46b2, textSize: 109
0x7fffeafc46b2:	mov		rax, qword ptr [rsp + 0x40]
0x7fffeafc46b7:	cmp		rax, qword ptr [rsp + 0x50]
0x7fffeafc46bc:	jne		0x7fffeafc471f
0x7fffeafc46c2:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafc46ca:	mov		rax, qword ptr [rax + 0x58]
0x7fffeafc46ce:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafc46d6:	add		rax, qword ptr [rcx + 0x60]
0x7fffeafc46da:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafc46e2:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafc46e6:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafc46ee:	mov		rax, qword ptr [rax + 0x58]
0x7fffeafc46f2:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafc46fa:	mov		qword ptr [rcx + 0x38], rax
0x7fffeafc46fe:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafc4706:	mov		qword ptr [rcx + 0x28], rax
0x7fffeafc470a:	mov		rax, qword ptr [rsp + 0x88]
0x7fffeafc4712:	mov		qword ptr [rsp + 0xa0], rax
0x7fffeafc471a:	jmp		0x7fffeafc487f
disassembling symbol '.LBB0_14':
textAddr: 0x7fffeafc471f, textSize: 100
0x7fffeafc471f:	cmp		qword ptr [rsp + 0x40], 0
0x7fffeafc4725:	jge		0x7fffeafc47ab
0x7fffeafc472b:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafc4733:	mov		qword ptr [rax + 0x20], 0
0x7fffeafc473b:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafc4743:	mov		qword ptr [rax + 0x38], 0
0x7fffeafc474b:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafc4753:	mov		qword ptr [rax + 0x28], 0
0x7fffeafc475b:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafc4763:	mov		ecx, dword ptr [rax]
0x7fffeafc4765:	or		ecx, 0x20
0x7fffeafc4768:	mov		dword ptr [rax], ecx
0x7fffeafc476a:	cmp		dword ptr [rsp + 0x4c], 2
0x7fffeafc476f:	jne		0x7fffeafc4783
0x7fffeafc4775:	xor		eax, eax
0x7fffeafc4777:	mov		ecx, eax
0x7fffeafc4779:	mov		qword ptr [rsp + 0x10], rcx
0x7fffeafc477e:	jmp		0x7fffeafc4799
disassembling symbol '.LBB0_17':
textAddr: 0x7fffeafc4783, textSize: 22
0x7fffeafc4783:	mov		rax, qword ptr [rsp + 0x88]
0x7fffeafc478b:	mov		rcx, qword ptr [rsp + 0x58]
0x7fffeafc4790:	sub		rax, qword ptr [rcx + 8]
0x7fffeafc4794:	mov		qword ptr [rsp + 0x10], rax
disassembling symbol '.LBB0_18':
textAddr: 0x7fffeafc4799, textSize: 18
0x7fffeafc4799:	mov		rax, qword ptr [rsp + 0x10]
0x7fffeafc479e:	mov		qword ptr [rsp + 0xa0], rax
0x7fffeafc47a6:	jmp		0x7fffeafc487f
disassembling symbol '.LBB0_19':
textAddr: 0x7fffeafc47ab, textSize: 128
0x7fffeafc47ab:	mov		rax, qword ptr [rsp + 0x40]
0x7fffeafc47b0:	mov		rcx, qword ptr [rsp + 0x50]
0x7fffeafc47b5:	sub		rcx, rax
0x7fffeafc47b8:	mov		qword ptr [rsp + 0x50], rcx
0x7fffeafc47bd:	mov		rax, qword ptr [rsp + 0x40]
0x7fffeafc47c2:	mov		rcx, qword ptr [rsp + 0x58]
0x7fffeafc47c7:	cmp		rax, qword ptr [rcx + 8]
0x7fffeafc47cb:	jbe		0x7fffeafc482b
0x7fffeafc47d1:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafc47d9:	mov		rax, qword ptr [rax + 0x58]
0x7fffeafc47dd:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafc47e5:	mov		qword ptr [rcx + 0x38], rax
0x7fffeafc47e9:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafc47f1:	mov		qword ptr [rcx + 0x28], rax
0x7fffeafc47f5:	mov		rax, qword ptr [rsp + 0x58]
0x7fffeafc47fa:	mov		rax, qword ptr [rax + 8]
0x7fffeafc47fe:	mov		rcx, qword ptr [rsp + 0x40]
0x7fffeafc4803:	sub		rcx, rax
0x7fffeafc4806:	mov		qword ptr [rsp + 0x40], rcx
0x7fffeafc480b:	mov		rax, qword ptr [rsp + 0x58]
0x7fffeafc4810:	add		rax, 0x10
0x7fffeafc4816:	mov		qword ptr [rsp + 0x58], rax
0x7fffeafc481b:	mov		edx, dword ptr [rsp + 0x4c]
0x7fffeafc481f:	add		edx, -1
0x7fffeafc4822:	mov		dword ptr [rsp + 0x4c], edx
0x7fffeafc4826:	jmp		0x7fffeafc4850
disassembling symbol '.LBB0_21':
textAddr: 0x7fffeafc482b, textSize: 32
0x7fffeafc482b:	cmp		dword ptr [rsp + 0x4c], 2
0x7fffeafc4830:	jne		0x7fffeafc484b
0x7fffeafc4836:	mov		rax, qword ptr [rsp + 0x40]
0x7fffeafc483b:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafc4843:	add		rax, qword ptr [rcx + 0x38]
0x7fffeafc4847:	mov		qword ptr [rcx + 0x38], rax
disassembling symbol '.LBB0_23':
textAddr: 0x7fffeafc484b, textSize: 5
0x7fffeafc484b:	jmp		0x7fffeafc4850
disassembling symbol '.LBB0_24':
textAddr: 0x7fffeafc4850, textSize: 47
0x7fffeafc4850:	mov		rax, qword ptr [rsp + 0x58]
0x7fffeafc4855:	mov		rax, qword ptr [rax]
0x7fffeafc4858:	add		rax, qword ptr [rsp + 0x40]
0x7fffeafc485d:	mov		rcx, qword ptr [rsp + 0x58]
0x7fffeafc4862:	mov		qword ptr [rcx], rax
0x7fffeafc4865:	mov		rax, qword ptr [rsp + 0x40]
0x7fffeafc486a:	mov		rcx, qword ptr [rsp + 0x58]
0x7fffeafc486f:	mov		rdx, qword ptr [rcx + 8]
0x7fffeafc4873:	sub		rdx, rax
0x7fffeafc4876:	mov		qword ptr [rcx + 8], rdx
0x7fffeafc487a:	jmp		0x7fffeafc4593
disassembling symbol '.LBB0_25':
textAddr: 0x7fffeafc487f, textSize: 17
0x7fffeafc487f:	mov		rax, qword ptr [rsp + 0xa0]
0x7fffeafc4887:	add		rsp, 0xa8
0x7fffeafc488e:	ret		
0x7fffeafc488f:	nop		
disassembling symbol 'cleanup':
textAddr: 0x7fffeafc4890, textSize: 64
0x7fffeafc4890:	sub		rsp, 0x18
0x7fffeafc4894:	mov		qword ptr [rsp + 0x10], rdi
0x7fffeafc4899:	mov		rax, qword ptr [rsp + 0x10]
0x7fffeafc489e:	mov		qword ptr [rsp + 8], rax
0x7fffeafc48a3:	mov		rax, qword ptr [rsp + 8]
0x7fffeafc48a8:	cmp		qword ptr [rax + 0x80], 0
0x7fffeafc48b0:	jne		0x7fffeafc48c0
0x7fffeafc48b6:	mov		rdi, qword ptr [rsp + 8]
0x7fffeafc48bb:	call		0x7fffeafc4290
0x7fffeafc48c0:	add		rsp, 0x18
0x7fffeafc48c4:	ret		
0x7fffeafc48c5:	nop		word ptr cs:[rax + rax]
0x7fffeafc48cf:	nop		
disassembling symbol '.LBB1_2':
textAddr: 0x7fffeafc48c0, textSize: 16
0x7fffeafc48c0:	add		rsp, 0x18
0x7fffeafc48c4:	ret		
0x7fffeafc48c5:	nop		word ptr cs:[rax + rax]
0x7fffeafc48cf:	nop		
disassembling symbol '__writev':
textAddr: 0x7fffeafc48d0, textSize: 128
0x7fffeafc48d0:	sub		rsp, 0x28
0x7fffeafc48d4:	mov		qword ptr [rsp + 0x20], rdi
0x7fffeafc48d9:	mov		dword ptr [rsp + 0x1c], esi
0x7fffeafc48dd:	mov		qword ptr [rsp + 0x10], 0
0x7fffeafc48e6:	mov		dword ptr [rsp + 0xc], 0
0x7fffeafc48ee:	mov		eax, dword ptr [rsp + 0xc]
0x7fffeafc48f2:	cmp		eax, dword ptr [rsp + 0x1c]
0x7fffeafc48f6:	jge		0x7fffeafc4946
0x7fffeafc48fc:	xor		edi, edi
0x7fffeafc48fe:	mov		rax, qword ptr [rsp + 0x20]
0x7fffeafc4903:	movsxd		rcx, dword ptr [rsp + 0xc]
0x7fffeafc4908:	shl		rcx, 4
0x7fffeafc490c:	add		rax, rcx
0x7fffeafc490f:	mov		rsi, qword ptr [rax]
0x7fffeafc4912:	mov		rax, qword ptr [rsp + 0x20]
0x7fffeafc4917:	movsxd		rcx, dword ptr [rsp + 0xc]
0x7fffeafc491c:	shl		rcx, 4
0x7fffeafc4920:	add		rax, rcx
0x7fffeafc4923:	mov		rdx, qword ptr [rax + 8]
0x7fffeafc4927:	call		0x7fffeafd9000
0x7fffeafc492c:	add		rax, qword ptr [rsp + 0x10]
0x7fffeafc4931:	mov		qword ptr [rsp + 0x10], rax
0x7fffeafc4936:	mov		eax, dword ptr [rsp + 0xc]
0x7fffeafc493a:	add		eax, 1
0x7fffeafc493d:	mov		dword ptr [rsp + 0xc], eax
0x7fffeafc4941:	jmp		0x7fffeafc48ee
0x7fffeafc4946:	mov		rax, qword ptr [rsp + 0x10]
0x7fffeafc494b:	add		rsp, 0x28
0x7fffeafc494f:	ret		
disassembling symbol '.LBB2_1':
textAddr: 0x7fffeafc48ee, textSize: 88
0x7fffeafc48ee:	mov		eax, dword ptr [rsp + 0xc]
0x7fffeafc48f2:	cmp		eax, dword ptr [rsp + 0x1c]
0x7fffeafc48f6:	jge		0x7fffeafc4946
0x7fffeafc48fc:	xor		edi, edi
0x7fffeafc48fe:	mov		rax, qword ptr [rsp + 0x20]
0x7fffeafc4903:	movsxd		rcx, dword ptr [rsp + 0xc]
0x7fffeafc4908:	shl		rcx, 4
0x7fffeafc490c:	add		rax, rcx
0x7fffeafc490f:	mov		rsi, qword ptr [rax]
0x7fffeafc4912:	mov		rax, qword ptr [rsp + 0x20]
0x7fffeafc4917:	movsxd		rcx, dword ptr [rsp + 0xc]
0x7fffeafc491c:	shl		rcx, 4
0x7fffeafc4920:	add		rax, rcx
0x7fffeafc4923:	mov		rdx, qword ptr [rax + 8]
0x7fffeafc4927:	call		0x7fffeafd9000
0x7fffeafc492c:	add		rax, qword ptr [rsp + 0x10]
0x7fffeafc4931:	mov		qword ptr [rsp + 0x10], rax
0x7fffeafc4936:	mov		eax, dword ptr [rsp + 0xc]
0x7fffeafc493a:	add		eax, 1
0x7fffeafc493d:	mov		dword ptr [rsp + 0xc], eax
0x7fffeafc4941:	jmp		0x7fffeafc48ee
disassembling symbol '.LBB2_4':
textAddr: 0x7fffeafc4946, textSize: 10
0x7fffeafc4946:	mov		rax, qword ptr [rsp + 0x10]
0x7fffeafc494b:	add		rsp, 0x28
0x7fffeafc494f:	ret		
disassembling symbol '__syscall3':
textAddr: 0x7fffeafc4950, textSize: 53
0x7fffeafc4950:	mov		qword ptr [rsp - 8], rdi
0x7fffeafc4955:	mov		qword ptr [rsp - 0x10], rsi
0x7fffeafc495a:	mov		qword ptr [rsp - 0x18], rdx
0x7fffeafc495f:	mov		qword ptr [rsp - 0x20], rcx
0x7fffeafc4964:	mov		rax, qword ptr [rsp - 8]
0x7fffeafc4969:	mov		rdi, qword ptr [rsp - 0x10]
0x7fffeafc496e:	mov		rsi, qword ptr [rsp - 0x18]
0x7fffeafc4973:	mov		rdx, qword ptr [rsp - 0x20]
0x7fffeafc4978:	syscall		
0x7fffeafc497a:	mov		qword ptr [rsp - 0x28], rax
0x7fffeafc497f:	mov		rax, qword ptr [rsp - 0x28]
0x7fffeafc4984:	ret		
disassembling symbol '__towrite':
textAddr: 0x7fffeafc4990, textSize: 192
0x7fffeafc4990:	mov		qword ptr [rsp - 0x10], rdi
0x7fffeafc4995:	mov		rax, qword ptr [rsp - 0x10]
0x7fffeafc499a:	movsx		ecx, byte ptr [rax + 0x8a]
0x7fffeafc49a1:	sub		ecx, 1
0x7fffeafc49a4:	mov		rax, qword ptr [rsp - 0x10]
0x7fffeafc49a9:	movsx		edx, byte ptr [rax + 0x8a]
0x7fffeafc49b0:	or		edx, ecx
0x7fffeafc49b2:	mov		byte ptr [rax + 0x8a], dl
0x7fffeafc49b8:	mov		rax, qword ptr [rsp - 0x10]
0x7fffeafc49bd:	mov		ecx, dword ptr [rax]
0x7fffeafc49bf:	and		ecx, 8
0x7fffeafc49c2:	cmp		ecx, 0
0x7fffeafc49c5:	je		0x7fffeafc49e4
0x7fffeafc49cb:	mov		rax, qword ptr [rsp - 0x10]
0x7fffeafc49d0:	mov		ecx, dword ptr [rax]
0x7fffeafc49d2:	or		ecx, 0x20
0x7fffeafc49d5:	mov		dword ptr [rax], ecx
0x7fffeafc49d7:	mov		dword ptr [rsp - 4], 0xffffffff
0x7fffeafc49df:	jmp		0x7fffeafc4a3c
0x7fffeafc49e4:	mov		rax, qword ptr [rsp - 0x10]
0x7fffeafc49e9:	mov		qword ptr [rax + 0x10], 0
0x7fffeafc49f1:	mov		rax, qword ptr [rsp - 0x10]
0x7fffeafc49f6:	mov		qword ptr [rax + 8], 0
0x7fffeafc49fe:	mov		rax, qword ptr [rsp - 0x10]
0x7fffeafc4a03:	mov		rax, qword ptr [rax + 0x58]
0x7fffeafc4a07:	mov		rcx, qword ptr [rsp - 0x10]
0x7fffeafc4a0c:	mov		qword ptr [rcx + 0x38], rax
0x7fffeafc4a10:	mov		rcx, qword ptr [rsp - 0x10]
0x7fffeafc4a15:	mov		qword ptr [rcx + 0x28], rax
0x7fffeafc4a19:	mov		rax, qword ptr [rsp - 0x10]
0x7fffeafc4a1e:	mov		rax, qword ptr [rax + 0x58]
0x7fffeafc4a22:	mov		rcx, qword ptr [rsp - 0x10]
0x7fffeafc4a27:	add		rax, qword ptr [rcx + 0x60]
0x7fffeafc4a2b:	mov		rcx, qword ptr [rsp - 0x10]
0x7fffeafc4a30:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafc4a34:	mov		dword ptr [rsp - 4], 0
0x7fffeafc4a3c:	mov		eax, dword ptr [rsp - 4]
0x7fffeafc4a40:	ret		
0x7fffeafc4a41:	nop		word ptr cs:[rax + rax]
0x7fffeafc4a4b:	nop		dword ptr [rax + rax]
disassembling symbol '.LBB0_2':
textAddr: 0x7fffeafc49e4, textSize: 88
0x7fffeafc49e4:	mov		rax, qword ptr [rsp - 0x10]
0x7fffeafc49e9:	mov		qword ptr [rax + 0x10], 0
0x7fffeafc49f1:	mov		rax, qword ptr [rsp - 0x10]
0x7fffeafc49f6:	mov		qword ptr [rax + 8], 0
0x7fffeafc49fe:	mov		rax, qword ptr [rsp - 0x10]
0x7fffeafc4a03:	mov		rax, qword ptr [rax + 0x58]
0x7fffeafc4a07:	mov		rcx, qword ptr [rsp - 0x10]
0x7fffeafc4a0c:	mov		qword ptr [rcx + 0x38], rax
0x7fffeafc4a10:	mov		rcx, qword ptr [rsp - 0x10]
0x7fffeafc4a15:	mov		qword ptr [rcx + 0x28], rax
0x7fffeafc4a19:	mov		rax, qword ptr [rsp - 0x10]
0x7fffeafc4a1e:	mov		rax, qword ptr [rax + 0x58]
0x7fffeafc4a22:	mov		rcx, qword ptr [rsp - 0x10]
0x7fffeafc4a27:	add		rax, qword ptr [rcx + 0x60]
0x7fffeafc4a2b:	mov		rcx, qword ptr [rsp - 0x10]
0x7fffeafc4a30:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafc4a34:	mov		dword ptr [rsp - 4], 0
disassembling symbol '.LBB0_3':
textAddr: 0x7fffeafc4a3c, textSize: 20
0x7fffeafc4a3c:	mov		eax, dword ptr [rsp - 4]
0x7fffeafc4a40:	ret		
0x7fffeafc4a41:	nop		word ptr cs:[rax + rax]
0x7fffeafc4a4b:	nop		dword ptr [rax + rax]
disassembling symbol '__towrite_needs_stdio_exit':
textAddr: 0x7fffeafc4a50, textSize: 8
0x7fffeafc4a50:	push		rax
0x7fffeafc4a51:	call		0x7fffeafc4330
0x7fffeafc4a56:	pop		rax
0x7fffeafc4a57:	ret		
disassembling symbol '__unmapself':
textAddr: 0x7fffeafc4a60, textSize: 17
0x7fffeafc4a60:	mov		eax, 0xb
0x7fffeafc4a65:	syscall		
0x7fffeafc4a67:	xor		rdi, rdi
0x7fffeafc4a6a:	mov		eax, 0x3c
0x7fffeafc4a6f:	syscall		
disassembling symbol '__wait':
textAddr: 0x7fffeafc4a80, textSize: 240
0x7fffeafc4a80:	sub		rsp, 0x28
0x7fffeafc4a84:	mov		qword ptr [rsp + 0x20], rdi
0x7fffeafc4a89:	mov		qword ptr [rsp + 0x18], rsi
0x7fffeafc4a8e:	mov		dword ptr [rsp + 0x14], edx
0x7fffeafc4a92:	mov		dword ptr [rsp + 0x10], ecx
0x7fffeafc4a96:	mov		dword ptr [rsp + 0xc], 0x2710
0x7fffeafc4a9e:	cmp		dword ptr [rsp + 0x10], 0
0x7fffeafc4aa3:	je		0x7fffeafc4ab1
0x7fffeafc4aa9:	mov		dword ptr [rsp + 0x10], 0x80
0x7fffeafc4ab1:	mov		dword ptr [rsp + 0x10], 0
0x7fffeafc4ab9:	mov		eax, dword ptr [rsp + 0xc]
0x7fffeafc4abd:	mov		ecx, eax
0x7fffeafc4abf:	add		ecx, -1
0x7fffeafc4ac2:	mov		dword ptr [rsp + 0xc], ecx
0x7fffeafc4ac6:	cmp		eax, 0
0x7fffeafc4ac9:	je		0x7fffeafc4af4
0x7fffeafc4acf:	mov		rax, qword ptr [rsp + 0x20]
0x7fffeafc4ad4:	mov		ecx, dword ptr [rax]
0x7fffeafc4ad6:	cmp		ecx, dword ptr [rsp + 0x14]
0x7fffeafc4ada:	jne		0x7fffeafc4aea
0x7fffeafc4ae0:	call		0x7fffeafc4c00
0x7fffeafc4ae5:	jmp		0x7fffeafc4aef
0x7fffeafc4aea:	jmp		0x7fffeafc4b5e
0x7fffeafc4aef:	jmp		0x7fffeafc4ab9
0x7fffeafc4af4:	cmp		qword ptr [rsp + 0x18], 0
0x7fffeafc4afa:	je		0x7fffeafc4b0a
0x7fffeafc4b00:	mov		rdi, qword ptr [rsp + 0x18]
0x7fffeafc4b05:	call		0x7fffeafc4b70
0x7fffeafc4b0a:	jmp		0x7fffeafc4b0f
0x7fffeafc4b0f:	mov		rax, qword ptr [rsp + 0x20]
0x7fffeafc4b14:	mov		ecx, dword ptr [rax]
0x7fffeafc4b16:	cmp		ecx, dword ptr [rsp + 0x14]
0x7fffeafc4b1a:	jne		0x7fffeafc4b48
0x7fffeafc4b20:	xor		eax, eax
0x7fffeafc4b22:	mov		r8d, eax
0x7fffeafc4b25:	mov		rsi, qword ptr [rsp + 0x20]
0x7fffeafc4b2a:	mov		eax, dword ptr [rsp + 0x10]
0x7fffeafc4b2e:	or		eax, 0
0x7fffeafc4b31:	movsxd		rdx, eax
0x7fffeafc4b34:	movsxd		rcx, dword ptr [rsp + 0x14]
0x7fffeafc4b39:	mov		edi, 0xca
0x7fffeafc4b3e:	call		0x7fffeafc4b90
0x7fffeafc4b43:	jmp		0x7fffeafc4b0f
0x7fffeafc4b48:	cmp		qword ptr [rsp + 0x18], 0
0x7fffeafc4b4e:	je		0x7fffeafc4b5e
0x7fffeafc4b54:	mov		rdi, qword ptr [rsp + 0x18]
0x7fffeafc4b59:	call		0x7fffeafc4be0
0x7fffeafc4b5e:	add		rsp, 0x28
0x7fffeafc4b62:	ret		
0x7fffeafc4b63:	nop		word ptr cs:[rax + rax]
0x7fffeafc4b6d:	nop		dword ptr [rax]
disassembling symbol '.LBB0_2':
textAddr: 0x7fffeafc4ab1, textSize: 8
0x7fffeafc4ab1:	mov		dword ptr [rsp + 0x10], 0
disassembling symbol '.LBB0_3':
textAddr: 0x7fffeafc4ab9, textSize: 49
0x7fffeafc4ab9:	mov		eax, dword ptr [rsp + 0xc]
0x7fffeafc4abd:	mov		ecx, eax
0x7fffeafc4abf:	add		ecx, -1
0x7fffeafc4ac2:	mov		dword ptr [rsp + 0xc], ecx
0x7fffeafc4ac6:	cmp		eax, 0
0x7fffeafc4ac9:	je		0x7fffeafc4af4
0x7fffeafc4acf:	mov		rax, qword ptr [rsp + 0x20]
0x7fffeafc4ad4:	mov		ecx, dword ptr [rax]
0x7fffeafc4ad6:	cmp		ecx, dword ptr [rsp + 0x14]
0x7fffeafc4ada:	jne		0x7fffeafc4aea
0x7fffeafc4ae0:	call		0x7fffeafc4c00
0x7fffeafc4ae5:	jmp		0x7fffeafc4aef
disassembling symbol '.LBB0_6':
textAddr: 0x7fffeafc4aea, textSize: 5
0x7fffeafc4aea:	jmp		0x7fffeafc4b5e
disassembling symbol '.LBB0_7':
textAddr: 0x7fffeafc4aef, textSize: 5
0x7fffeafc4aef:	jmp		0x7fffeafc4ab9
disassembling symbol '.LBB0_8':
textAddr: 0x7fffeafc4af4, textSize: 22
0x7fffeafc4af4:	cmp		qword ptr [rsp + 0x18], 0
0x7fffeafc4afa:	je		0x7fffeafc4b0a
0x7fffeafc4b00:	mov		rdi, qword ptr [rsp + 0x18]
0x7fffeafc4b05:	call		0x7fffeafc4b70
disassembling symbol '.LBB0_10':
textAddr: 0x7fffeafc4b0a, textSize: 5
0x7fffeafc4b0a:	jmp		0x7fffeafc4b0f
disassembling symbol '.LBB0_11':
textAddr: 0x7fffeafc4b0f, textSize: 57
0x7fffeafc4b0f:	mov		rax, qword ptr [rsp + 0x20]
0x7fffeafc4b14:	mov		ecx, dword ptr [rax]
0x7fffeafc4b16:	cmp		ecx, dword ptr [rsp + 0x14]
0x7fffeafc4b1a:	jne		0x7fffeafc4b48
0x7fffeafc4b20:	xor		eax, eax
0x7fffeafc4b22:	mov		r8d, eax
0x7fffeafc4b25:	mov		rsi, qword ptr [rsp + 0x20]
0x7fffeafc4b2a:	mov		eax, dword ptr [rsp + 0x10]
0x7fffeafc4b2e:	or		eax, 0
0x7fffeafc4b31:	movsxd		rdx, eax
0x7fffeafc4b34:	movsxd		rcx, dword ptr [rsp + 0x14]
0x7fffeafc4b39:	mov		edi, 0xca
0x7fffeafc4b3e:	call		0x7fffeafc4b90
0x7fffeafc4b43:	jmp		0x7fffeafc4b0f
disassembling symbol '.LBB0_13':
textAddr: 0x7fffeafc4b48, textSize: 22
0x7fffeafc4b48:	cmp		qword ptr [rsp + 0x18], 0
0x7fffeafc4b4e:	je		0x7fffeafc4b5e
0x7fffeafc4b54:	mov		rdi, qword ptr [rsp + 0x18]
0x7fffeafc4b59:	call		0x7fffeafc4be0
disassembling symbol '.LBB0_15':
textAddr: 0x7fffeafc4b5e, textSize: 18
0x7fffeafc4b5e:	add		rsp, 0x28
0x7fffeafc4b62:	ret		
0x7fffeafc4b63:	nop		word ptr cs:[rax + rax]
0x7fffeafc4b6d:	nop		dword ptr [rax]
disassembling symbol 'a_inc':
textAddr: 0x7fffeafc4b70, textSize: 32
0x7fffeafc4b70:	mov		qword ptr [rsp - 8], rdi
0x7fffeafc4b75:	mov		rax, qword ptr [rsp - 8]
0x7fffeafc4b7a:	mov		rcx, qword ptr [rsp - 8]
0x7fffeafc4b7f:	lock inc		dword ptr [rax]
0x7fffeafc4b82:	ret		
0x7fffeafc4b83:	nop		word ptr cs:[rax + rax]
0x7fffeafc4b8d:	nop		dword ptr [rax]
disassembling symbol '__syscall4':
textAddr: 0x7fffeafc4b90, textSize: 80
0x7fffeafc4b90:	mov		qword ptr [rsp - 8], rdi
0x7fffeafc4b95:	mov		qword ptr [rsp - 0x10], rsi
0x7fffeafc4b9a:	mov		qword ptr [rsp - 0x18], rdx
0x7fffeafc4b9f:	mov		qword ptr [rsp - 0x20], rcx
0x7fffeafc4ba4:	mov		qword ptr [rsp - 0x28], r8
0x7fffeafc4ba9:	mov		rax, qword ptr [rsp - 0x28]
0x7fffeafc4bae:	mov		qword ptr [rsp - 0x38], rax
0x7fffeafc4bb3:	mov		rax, qword ptr [rsp - 8]
0x7fffeafc4bb8:	mov		rdi, qword ptr [rsp - 0x10]
0x7fffeafc4bbd:	mov		rsi, qword ptr [rsp - 0x18]
0x7fffeafc4bc2:	mov		rdx, qword ptr [rsp - 0x20]
0x7fffeafc4bc7:	mov		r10, qword ptr [rsp - 0x38]
0x7fffeafc4bcc:	syscall		
0x7fffeafc4bce:	mov		qword ptr [rsp - 0x30], rax
0x7fffeafc4bd3:	mov		rax, qword ptr [rsp - 0x30]
0x7fffeafc4bd8:	ret		
0x7fffeafc4bd9:	nop		dword ptr [rax]
disassembling symbol 'a_dec':
textAddr: 0x7fffeafc4be0, textSize: 32
0x7fffeafc4be0:	mov		qword ptr [rsp - 8], rdi
0x7fffeafc4be5:	mov		rax, qword ptr [rsp - 8]
0x7fffeafc4bea:	mov		rcx, qword ptr [rsp - 8]
0x7fffeafc4bef:	lock dec		dword ptr [rax]
0x7fffeafc4bf2:	ret		
0x7fffeafc4bf3:	nop		word ptr cs:[rax + rax]
0x7fffeafc4bfd:	nop		dword ptr [rax]
disassembling symbol 'a_spin':
textAddr: 0x7fffeafc4c00, textSize: 3
0x7fffeafc4c00:	pause		
0x7fffeafc4c02:	ret		
disassembling symbol 'abort':
textAddr: 0x7fffeafc4c10, textSize: 30
0x7fffeafc4c10:	push		rax
0x7fffeafc4c11:	mov		edi, 6
0x7fffeafc4c16:	call		0x7fffeafd4000
0x7fffeafc4c1b:	mov		edi, 9
0x7fffeafc4c20:	mov		dword ptr [rsp + 4], eax
0x7fffeafc4c24:	call		0x7fffeafd4000
0x7fffeafc4c29:	jmp		0x7fffeafc4c29
disassembling symbol '.LBB0_1':
textAddr: 0x7fffeafc4c29, textSize: 7
0x7fffeafc4c29:	jmp		0x7fffeafc4c29
0x7fffeafc4c2e:	add		byte ptr [rax], al
disassembling symbol '__block_all_sigs':
textAddr: 0x7fffeafc4c30, textSize: 48
0x7fffeafc4c30:	push		rax
0x7fffeafc4c31:	xor		eax, eax
0x7fffeafc4c33:	mov		esi, eax
0x7fffeafc4c35:	mov		qword ptr [rsp], rdi
0x7fffeafc4c39:	mov		rcx, qword ptr [rsp]
0x7fffeafc4c3d:	mov		edi, 0xe
0x7fffeafc4c42:	lea		rdx, [rip + 0x2c264a7]
0x7fffeafc4c49:	mov		r8d, 8
0x7fffeafc4c4f:	call		0x7fffeafc4c60
0x7fffeafc4c54:	pop		rax
0x7fffeafc4c55:	ret		
0x7fffeafc4c56:	nop		word ptr cs:[rax + rax]
disassembling symbol '__syscall4':
textAddr: 0x7fffeafc4c60, textSize: 80
0x7fffeafc4c60:	mov		qword ptr [rsp - 8], rdi
0x7fffeafc4c65:	mov		qword ptr [rsp - 0x10], rsi
0x7fffeafc4c6a:	mov		qword ptr [rsp - 0x18], rdx
0x7fffeafc4c6f:	mov		qword ptr [rsp - 0x20], rcx
0x7fffeafc4c74:	mov		qword ptr [rsp - 0x28], r8
0x7fffeafc4c79:	mov		rax, qword ptr [rsp - 0x28]
0x7fffeafc4c7e:	mov		qword ptr [rsp - 0x38], rax
0x7fffeafc4c83:	mov		rax, qword ptr [rsp - 8]
0x7fffeafc4c88:	mov		rdi, qword ptr [rsp - 0x10]
0x7fffeafc4c8d:	mov		rsi, qword ptr [rsp - 0x18]
0x7fffeafc4c92:	mov		rdx, qword ptr [rsp - 0x20]
0x7fffeafc4c97:	mov		r10, qword ptr [rsp - 0x38]
0x7fffeafc4c9c:	syscall		
0x7fffeafc4c9e:	mov		qword ptr [rsp - 0x30], rax
0x7fffeafc4ca3:	mov		rax, qword ptr [rsp - 0x30]
0x7fffeafc4ca8:	ret		
0x7fffeafc4ca9:	nop		dword ptr [rax]
disassembling symbol '__block_app_sigs':
textAddr: 0x7fffeafc4cb0, textSize: 48
0x7fffeafc4cb0:	push		rax
0x7fffeafc4cb1:	xor		eax, eax
0x7fffeafc4cb3:	mov		esi, eax
0x7fffeafc4cb5:	mov		qword ptr [rsp], rdi
0x7fffeafc4cb9:	mov		rcx, qword ptr [rsp]
0x7fffeafc4cbd:	mov		edi, 0xe
0x7fffeafc4cc2:	lea		rdx, [rip + 0x2c26437]
0x7fffeafc4cc9:	mov		r8d, 8
0x7fffeafc4ccf:	call		0x7fffeafc4c60
0x7fffeafc4cd4:	pop		rax
0x7fffeafc4cd5:	ret		
0x7fffeafc4cd6:	nop		word ptr cs:[rax + rax]
disassembling symbol '__restore_sigs':
textAddr: 0x7fffeafc4ce0, textSize: 36
0x7fffeafc4ce0:	push		rax
0x7fffeafc4ce1:	xor		eax, eax
0x7fffeafc4ce3:	mov		ecx, eax
0x7fffeafc4ce5:	mov		qword ptr [rsp], rdi
0x7fffeafc4ce9:	mov		rdx, qword ptr [rsp]
0x7fffeafc4ced:	mov		edi, 0xe
0x7fffeafc4cf2:	mov		esi, 2
0x7fffeafc4cf7:	mov		r8d, 8
0x7fffeafc4cfd:	call		0x7fffeafc4c60
0x7fffeafc4d02:	pop		rax
0x7fffeafc4d03:	ret		
disassembling symbol '__cancel':
textAddr: 0x7fffeafc4d10, textSize: 48
0x7fffeafc4d10:	push		rax
0x7fffeafc4d11:	call		0x7fffeafc4fa0
0x7fffeafc4d16:	mov		qword ptr [rsp], rax
0x7fffeafc4d1a:	mov		rax, qword ptr [rsp]
0x7fffeafc4d1e:	mov		dword ptr [rax + 0x4c], 1
0x7fffeafc4d25:	mov		rax, qword ptr [rsp]
0x7fffeafc4d29:	mov		dword ptr [rax + 0x50], 0
0x7fffeafc4d30:	mov		rdi, -1
0x7fffeafc4d37:	call		0x7fffeafd2ef0
0x7fffeafc4d3c:	nop		dword ptr [rax]
disassembling symbol '__syscall_cp':
textAddr: 0x7fffeafc4d40, textSize: 304
0x7fffeafc4d40:	sub		rsp, 0x68
0x7fffeafc4d44:	mov		rax, qword ptr [rsp + 0x70]
0x7fffeafc4d49:	mov		qword ptr [rsp + 0x58], rdi
0x7fffeafc4d4e:	mov		qword ptr [rsp + 0x50], rsi
0x7fffeafc4d53:	mov		qword ptr [rsp + 0x48], rdx
0x7fffeafc4d58:	mov		qword ptr [rsp + 0x40], rcx
0x7fffeafc4d5d:	mov		qword ptr [rsp + 0x38], r8
0x7fffeafc4d62:	mov		qword ptr [rsp + 0x30], r9
0x7fffeafc4d67:	cmp		qword ptr [rip + 0x2c27221], 0
0x7fffeafc4d6f:	je		0x7fffeafc4d8b
0x7fffeafc4d75:	call		0x7fffeafc4fa0
0x7fffeafc4d7a:	mov		qword ptr [rsp + 0x28], rax
0x7fffeafc4d7f:	mov		ecx, dword ptr [rax + 0x4c]
0x7fffeafc4d82:	cmp		ecx, 0
0x7fffeafc4d85:	je		0x7fffeafc4dc1
0x7fffeafc4d8b:	mov		rdi, qword ptr [rsp + 0x58]
0x7fffeafc4d90:	mov		rsi, qword ptr [rsp + 0x50]
0x7fffeafc4d95:	mov		rdx, qword ptr [rsp + 0x48]
0x7fffeafc4d9a:	mov		rcx, qword ptr [rsp + 0x40]
0x7fffeafc4d9f:	mov		r8, qword ptr [rsp + 0x38]
0x7fffeafc4da4:	mov		r9, qword ptr [rsp + 0x30]
0x7fffeafc4da9:	mov		rax, qword ptr [rsp + 0x70]
0x7fffeafc4dae:	mov		qword ptr [rsp], rax
0x7fffeafc4db2:	call		0x7fffeafc4e70
0x7fffeafc4db7:	mov		qword ptr [rsp + 0x60], rax
0x7fffeafc4dbc:	jmp		0x7fffeafc4e58
0x7fffeafc4dc1:	mov		rax, qword ptr [rsp + 0x28]
0x7fffeafc4dc6:	add		rax, 0x48
0x7fffeafc4dcc:	mov		rsi, qword ptr [rsp + 0x58]
0x7fffeafc4dd1:	mov		rdx, qword ptr [rsp + 0x50]
0x7fffeafc4dd6:	mov		rcx, qword ptr [rsp + 0x48]
0x7fffeafc4ddb:	mov		r8, qword ptr [rsp + 0x40]
0x7fffeafc4de0:	mov		r9, qword ptr [rsp + 0x38]
0x7fffeafc4de5:	mov		rdi, qword ptr [rsp + 0x30]
0x7fffeafc4dea:	mov		r10, qword ptr [rsp + 0x70]
0x7fffeafc4def:	mov		qword ptr [rsp + 0x18], rdi
0x7fffeafc4df4:	mov		rdi, rax
0x7fffeafc4df7:	mov		rax, qword ptr [rsp + 0x18]
0x7fffeafc4dfc:	mov		qword ptr [rsp], rax
0x7fffeafc4e00:	mov		qword ptr [rsp + 8], r10
0x7fffeafc4e05:	call		0x7fffeafd4680
0x7fffeafc4e0a:	mov		qword ptr [rsp + 0x20], rax
0x7fffeafc4e0f:	cmp		qword ptr [rsp + 0x20], -4
0x7fffeafc4e15:	jne		0x7fffeafc4e4e
0x7fffeafc4e1b:	cmp		qword ptr [rsp + 0x58], 3
0x7fffeafc4e21:	je		0x7fffeafc4e4e
0x7fffeafc4e27:	mov		rax, qword ptr [rsp + 0x28]
0x7fffeafc4e2c:	mov		ecx, dword ptr [rax + 0x48]
0x7fffeafc4e2f:	cmp		ecx, 0
0x7fffeafc4e32:	je		0x7fffeafc4e4e
0x7fffeafc4e38:	mov		rax, qword ptr [rsp + 0x28]
0x7fffeafc4e3d:	mov		ecx, dword ptr [rax + 0x4c]
0x7fffeafc4e40:	cmp		ecx, 0
0x7fffeafc4e43:	jne		0x7fffeafc4e4e
0x7fffeafc4e49:	call		0x7fffeafc4d10
0x7fffeafc4e4e:	mov		rax, qword ptr [rsp + 0x20]
0x7fffeafc4e53:	mov		qword ptr [rsp + 0x60], rax
0x7fffeafc4e58:	mov		rax, qword ptr [rsp + 0x60]
0x7fffeafc4e5d:	add		rsp, 0x68
0x7fffeafc4e61:	ret		
0x7fffeafc4e62:	nop		word ptr cs:[rax + rax]
0x7fffeafc4e6c:	nop		dword ptr [rax]
disassembling symbol '.LBB1_2':
textAddr: 0x7fffeafc4d8b, textSize: 54
0x7fffeafc4d8b:	mov		rdi, qword ptr [rsp + 0x58]
0x7fffeafc4d90:	mov		rsi, qword ptr [rsp + 0x50]
0x7fffeafc4d95:	mov		rdx, qword ptr [rsp + 0x48]
0x7fffeafc4d9a:	mov		rcx, qword ptr [rsp + 0x40]
0x7fffeafc4d9f:	mov		r8, qword ptr [rsp + 0x38]
0x7fffeafc4da4:	mov		r9, qword ptr [rsp + 0x30]
0x7fffeafc4da9:	mov		rax, qword ptr [rsp + 0x70]
0x7fffeafc4dae:	mov		qword ptr [rsp], rax
0x7fffeafc4db2:	call		0x7fffeafc4e70
0x7fffeafc4db7:	mov		qword ptr [rsp + 0x60], rax
0x7fffeafc4dbc:	jmp		0x7fffeafc4e58
disassembling symbol '.LBB1_3':
textAddr: 0x7fffeafc4dc1, textSize: 141
0x7fffeafc4dc1:	mov		rax, qword ptr [rsp + 0x28]
0x7fffeafc4dc6:	add		rax, 0x48
0x7fffeafc4dcc:	mov		rsi, qword ptr [rsp + 0x58]
0x7fffeafc4dd1:	mov		rdx, qword ptr [rsp + 0x50]
0x7fffeafc4dd6:	mov		rcx, qword ptr [rsp + 0x48]
0x7fffeafc4ddb:	mov		r8, qword ptr [rsp + 0x40]
0x7fffeafc4de0:	mov		r9, qword ptr [rsp + 0x38]
0x7fffeafc4de5:	mov		rdi, qword ptr [rsp + 0x30]
0x7fffeafc4dea:	mov		r10, qword ptr [rsp + 0x70]
0x7fffeafc4def:	mov		qword ptr [rsp + 0x18], rdi
0x7fffeafc4df4:	mov		rdi, rax
0x7fffeafc4df7:	mov		rax, qword ptr [rsp + 0x18]
0x7fffeafc4dfc:	mov		qword ptr [rsp], rax
0x7fffeafc4e00:	mov		qword ptr [rsp + 8], r10
0x7fffeafc4e05:	call		0x7fffeafd4680
0x7fffeafc4e0a:	mov		qword ptr [rsp + 0x20], rax
0x7fffeafc4e0f:	cmp		qword ptr [rsp + 0x20], -4
0x7fffeafc4e15:	jne		0x7fffeafc4e4e
0x7fffeafc4e1b:	cmp		qword ptr [rsp + 0x58], 3
0x7fffeafc4e21:	je		0x7fffeafc4e4e
0x7fffeafc4e27:	mov		rax, qword ptr [rsp + 0x28]
0x7fffeafc4e2c:	mov		ecx, dword ptr [rax + 0x48]
0x7fffeafc4e2f:	cmp		ecx, 0
0x7fffeafc4e32:	je		0x7fffeafc4e4e
0x7fffeafc4e38:	mov		rax, qword ptr [rsp + 0x28]
0x7fffeafc4e3d:	mov		ecx, dword ptr [rax + 0x4c]
0x7fffeafc4e40:	cmp		ecx, 0
0x7fffeafc4e43:	jne		0x7fffeafc4e4e
0x7fffeafc4e49:	call		0x7fffeafc4d10
disassembling symbol '.LBB1_8':
textAddr: 0x7fffeafc4e4e, textSize: 10
0x7fffeafc4e4e:	mov		rax, qword ptr [rsp + 0x20]
0x7fffeafc4e53:	mov		qword ptr [rsp + 0x60], rax
disassembling symbol '.LBB1_9':
textAddr: 0x7fffeafc4e58, textSize: 24
0x7fffeafc4e58:	mov		rax, qword ptr [rsp + 0x60]
0x7fffeafc4e5d:	add		rsp, 0x68
0x7fffeafc4e61:	ret		
0x7fffeafc4e62:	nop		word ptr cs:[rax + rax]
0x7fffeafc4e6c:	nop		dword ptr [rax]
disassembling symbol '__syscall6':
textAddr: 0x7fffeafc4e70, textSize: 128
0x7fffeafc4e70:	mov		rax, qword ptr [rsp + 8]
0x7fffeafc4e75:	mov		qword ptr [rsp - 8], rdi
0x7fffeafc4e7a:	mov		qword ptr [rsp - 0x10], rsi
0x7fffeafc4e7f:	mov		qword ptr [rsp - 0x18], rdx
0x7fffeafc4e84:	mov		qword ptr [rsp - 0x20], rcx
0x7fffeafc4e89:	mov		qword ptr [rsp - 0x28], r8
0x7fffeafc4e8e:	mov		qword ptr [rsp - 0x30], r9
0x7fffeafc4e93:	mov		rcx, qword ptr [rsp - 0x28]
0x7fffeafc4e98:	mov		qword ptr [rsp - 0x40], rcx
0x7fffeafc4e9d:	mov		rcx, qword ptr [rsp - 0x30]
0x7fffeafc4ea2:	mov		qword ptr [rsp - 0x48], rcx
0x7fffeafc4ea7:	mov		rcx, qword ptr [rsp + 8]
0x7fffeafc4eac:	mov		qword ptr [rsp - 0x50], rcx
0x7fffeafc4eb1:	mov		rcx, qword ptr [rsp - 8]
0x7fffeafc4eb6:	mov		rdi, qword ptr [rsp - 0x10]
0x7fffeafc4ebb:	mov		rsi, qword ptr [rsp - 0x18]
0x7fffeafc4ec0:	mov		rdx, qword ptr [rsp - 0x20]
0x7fffeafc4ec5:	mov		r10, qword ptr [rsp - 0x40]
0x7fffeafc4eca:	mov		r8, qword ptr [rsp - 0x48]
0x7fffeafc4ecf:	mov		r9, qword ptr [rsp - 0x50]
0x7fffeafc4ed4:	mov		qword ptr [rsp - 0x58], rax
0x7fffeafc4ed9:	mov		rax, rcx
0x7fffeafc4edc:	syscall		
0x7fffeafc4ede:	mov		qword ptr [rsp - 0x38], rax
0x7fffeafc4ee3:	mov		rax, qword ptr [rsp - 0x38]
0x7fffeafc4ee8:	ret		
0x7fffeafc4ee9:	nop		dword ptr [rax]
disassembling symbol '__testcancel':
textAddr: 0x7fffeafc4ef0, textSize: 64
0x7fffeafc4ef0:	push		rax
0x7fffeafc4ef1:	call		0x7fffeafd3ca0
0x7fffeafc4ef6:	mov		qword ptr [rsp], rax
0x7fffeafc4efa:	mov		rax, qword ptr [rsp]
0x7fffeafc4efe:	mov		ecx, dword ptr [rax + 0x48]
0x7fffeafc4f01:	cmp		ecx, 0
0x7fffeafc4f04:	je		0x7fffeafc4f1f
0x7fffeafc4f0a:	mov		rax, qword ptr [rsp]
0x7fffeafc4f0e:	mov		ecx, dword ptr [rax + 0x4c]
0x7fffeafc4f11:	cmp		ecx, 0
0x7fffeafc4f14:	jne		0x7fffeafc4f1f
0x7fffeafc4f1a:	call		0x7fffeafc4d10
0x7fffeafc4f1f:	pop		rax
0x7fffeafc4f20:	ret		
0x7fffeafc4f21:	nop		word ptr cs:[rax + rax]
0x7fffeafc4f2b:	nop		dword ptr [rax + rax]
disassembling symbol '.LBB3_3':
textAddr: 0x7fffeafc4f1f, textSize: 17
0x7fffeafc4f1f:	pop		rax
0x7fffeafc4f20:	ret		
0x7fffeafc4f21:	nop		word ptr cs:[rax + rax]
0x7fffeafc4f2b:	nop		dword ptr [rax + rax]
disassembling symbol 'pthread_cancel':
textAddr: 0x7fffeafc4f30, textSize: 80
0x7fffeafc4f30:	push		rax
0x7fffeafc4f31:	mov		qword ptr [rsp], rdi
0x7fffeafc4f35:	cmp		dword ptr [rip + 0x2c25fd0], 0
0x7fffeafc4f3c:	jne		0x7fffeafc4f51
0x7fffeafc4f42:	call		0x7fffeafc4fc0
0x7fffeafc4f47:	mov		dword ptr [rip + 0x2c25fbb], 1
0x7fffeafc4f51:	mov		rax, qword ptr [rsp]
0x7fffeafc4f55:	add		rax, 0x48
0x7fffeafc4f5b:	mov		rdi, rax
0x7fffeafc4f5e:	mov		esi, 1
0x7fffeafc4f63:	call		0x7fffeafc4f80
0x7fffeafc4f68:	mov		rdi, qword ptr [rsp]
0x7fffeafc4f6c:	mov		esi, 0x21
0x7fffeafc4f71:	call		0x7fffeafd3bc0
0x7fffeafc4f76:	pop		rcx
0x7fffeafc4f77:	ret		
0x7fffeafc4f78:	nop		dword ptr [rax + rax]
disassembling symbol '.LBB4_2':
textAddr: 0x7fffeafc4f51, textSize: 47
0x7fffeafc4f51:	mov		rax, qword ptr [rsp]
0x7fffeafc4f55:	add		rax, 0x48
0x7fffeafc4f5b:	mov		rdi, rax
0x7fffeafc4f5e:	mov		esi, 1
0x7fffeafc4f63:	call		0x7fffeafc4f80
0x7fffeafc4f68:	mov		rdi, qword ptr [rsp]
0x7fffeafc4f6c:	mov		esi, 0x21
0x7fffeafc4f71:	call		0x7fffeafd3bc0
0x7fffeafc4f76:	pop		rcx
0x7fffeafc4f77:	ret		
0x7fffeafc4f78:	nop		dword ptr [rax + rax]
disassembling symbol 'a_store':
textAddr: 0x7fffeafc4f80, textSize: 32
0x7fffeafc4f80:	mov		qword ptr [rsp - 8], rdi
0x7fffeafc4f85:	mov		dword ptr [rsp - 0xc], esi
0x7fffeafc4f89:	mov		rax, qword ptr [rsp - 8]
0x7fffeafc4f8e:	mov		ecx, dword ptr [rsp - 0xc]
0x7fffeafc4f92:	mov		dword ptr [rax], ecx
0x7fffeafc4f94:	ret		
0x7fffeafc4f95:	nop		word ptr cs:[rax + rax]
0x7fffeafc4f9f:	nop		
disassembling symbol '__pthread_self':
textAddr: 0x7fffeafc4fa0, textSize: 32
0x7fffeafc4fa0:	mov		rax, qword ptr fs:[0]
0x7fffeafc4fa9:	mov		qword ptr [rsp - 8], rax
0x7fffeafc4fae:	mov		rax, qword ptr [rsp - 8]
0x7fffeafc4fb3:	ret		
0x7fffeafc4fb4:	nop		word ptr cs:[rax + rax]
0x7fffeafc4fbe:	nop		
disassembling symbol 'init_cancellation':
textAddr: 0x7fffeafc4fc0, textSize: 96
0x7fffeafc4fc0:	sub		rsp, 0xa8
0x7fffeafc4fc7:	lea		rax, [rip + 0x2c2607a]
0x7fffeafc4fce:	lea		rcx, [rsp + 0x10]
0x7fffeafc4fd3:	mov		rdx, rcx
0x7fffeafc4fd6:	mov		rdi, rdx
0x7fffeafc4fd9:	mov		rsi, rax
0x7fffeafc4fdc:	mov		edx, 0x98
0x7fffeafc4fe1:	mov		qword ptr [rsp + 8], rcx
0x7fffeafc4fe6:	call		0x7fffeafd2590
0x7fffeafc4feb:	mov		rax, qword ptr [rsp + 8]
0x7fffeafc4ff0:	add		rax, 8
0x7fffeafc4ff6:	mov		rdi, rax
0x7fffeafc4ff9:	call		0x7fffeafd4520
0x7fffeafc4ffe:	xor		r8d, r8d
0x7fffeafc5001:	mov		edx, r8d
0x7fffeafc5004:	mov		edi, 0x21
0x7fffeafc5009:	lea		rsi, [rsp + 0x10]
0x7fffeafc500e:	mov		dword ptr [rsp + 4], eax
0x7fffeafc5012:	call		0x7fffeafd4240
0x7fffeafc5017:	add		rsp, 0xa8
0x7fffeafc501e:	ret		
0x7fffeafc501f:	nop		
disassembling symbol 'cancel_handler':
textAddr: 0x7fffeafc5020, textSize: 272
0x7fffeafc5020:	sub		rsp, 0x38
0x7fffeafc5024:	mov		dword ptr [rsp + 0x34], edi
0x7fffeafc5028:	mov		qword ptr [rsp + 0x28], rsi
0x7fffeafc502d:	mov		qword ptr [rsp + 0x20], rdx
0x7fffeafc5032:	call		0x7fffeafc4fa0
0x7fffeafc5037:	mov		qword ptr [rsp + 0x18], rax
0x7fffeafc503c:	mov		rax, qword ptr [rsp + 0x20]
0x7fffeafc5041:	mov		qword ptr [rsp + 0x10], rax
0x7fffeafc5046:	mov		rax, qword ptr [rsp + 0x10]
0x7fffeafc504b:	mov		rax, qword ptr [rax + 0xa8]
0x7fffeafc5052:	mov		qword ptr [rsp + 8], rax
0x7fffeafc5057:	mov		rax, qword ptr [rsp + 0x18]
0x7fffeafc505c:	mov		ecx, dword ptr [rax + 0x48]
0x7fffeafc505f:	cmp		ecx, 0
0x7fffeafc5062:	je		0x7fffeafc5079
0x7fffeafc5068:	mov		rax, qword ptr [rsp + 0x18]
0x7fffeafc506d:	mov		ecx, dword ptr [rax + 0x4c]
0x7fffeafc5070:	cmp		ecx, 0
0x7fffeafc5073:	je		0x7fffeafc507e
0x7fffeafc5079:	jmp		0x7fffeafc511e
0x7fffeafc507e:	mov		rax, qword ptr [rsp + 0x10]
0x7fffeafc5083:	add		rax, 0x128
0x7fffeafc5089:	mov		rdi, rax
0x7fffeafc508c:	mov		esi, 0x21
0x7fffeafc5091:	call		0x7fffeafc5130
0x7fffeafc5096:	mov		rax, qword ptr [rsp + 0x18]
0x7fffeafc509b:	mov		ecx, dword ptr [rax + 0x50]
0x7fffeafc509e:	cmp		ecx, 0
0x7fffeafc50a1:	jne		0x7fffeafc50cb
0x7fffeafc50a7:	mov		rax, qword ptr [rip - 0x1fde636]
0x7fffeafc50ae:	cmp		qword ptr [rsp + 8], rax
0x7fffeafc50b3:	jb		0x7fffeafc50fd
0x7fffeafc50b9:	mov		rax, qword ptr [rip - 0x1fde618]
0x7fffeafc50c0:	cmp		qword ptr [rsp + 8], rax
0x7fffeafc50c5:	jae		0x7fffeafc50fd
0x7fffeafc50cb:	xor		eax, eax
0x7fffeafc50cd:	mov		edx, eax
0x7fffeafc50cf:	mov		rcx, qword ptr [rsp + 0x18]
0x7fffeafc50d4:	mov		dword ptr [rcx + 0x4c], 1
0x7fffeafc50db:	mov		rcx, qword ptr [rsp + 0x10]
0x7fffeafc50e0:	add		rcx, 0x128
0x7fffeafc50e7:	mov		edi, 2
0x7fffeafc50ec:	mov		rsi, rcx
0x7fffeafc50ef:	call		0x7fffeafd3f00
0x7fffeafc50f4:	mov		dword ptr [rsp + 4], eax
0x7fffeafc50f8:	call		0x7fffeafc4d10
0x7fffeafc50fd:	mov		rax, qword ptr [rsp + 0x18]
0x7fffeafc5102:	movsxd		rsi, dword ptr [rax + 0x34]
0x7fffeafc5106:	mov		rax, qword ptr [rsp + 0x18]
0x7fffeafc510b:	movsxd		rdx, dword ptr [rax + 0x30]
0x7fffeafc510f:	mov		edi, 0xea
0x7fffeafc5114:	mov		ecx, 0x21
0x7fffeafc5119:	call		0x7fffeafc5180
0x7fffeafc511e:	add		rsp, 0x38
0x7fffeafc5122:	ret		
0x7fffeafc5123:	nop		word ptr cs:[rax + rax]
0x7fffeafc512d:	nop		dword ptr [rax]
disassembling symbol '.LBB8_2':
textAddr: 0x7fffeafc5079, textSize: 5
0x7fffeafc5079:	jmp		0x7fffeafc511e
disassembling symbol '.LBB8_3':
textAddr: 0x7fffeafc507e, textSize: 77
0x7fffeafc507e:	mov		rax, qword ptr [rsp + 0x10]
0x7fffeafc5083:	add		rax, 0x128
0x7fffeafc5089:	mov		rdi, rax
0x7fffeafc508c:	mov		esi, 0x21
0x7fffeafc5091:	call		0x7fffeafc5130
0x7fffeafc5096:	mov		rax, qword ptr [rsp + 0x18]
0x7fffeafc509b:	mov		ecx, dword ptr [rax + 0x50]
0x7fffeafc509e:	cmp		ecx, 0
0x7fffeafc50a1:	jne		0x7fffeafc50cb
0x7fffeafc50a7:	mov		rax, qword ptr [rip - 0x1fde636]
0x7fffeafc50ae:	cmp		qword ptr [rsp + 8], rax
0x7fffeafc50b3:	jb		0x7fffeafc50fd
0x7fffeafc50b9:	mov		rax, qword ptr [rip - 0x1fde618]
0x7fffeafc50c0:	cmp		qword ptr [rsp + 8], rax
0x7fffeafc50c5:	jae		0x7fffeafc50fd
disassembling symbol '.LBB8_6':
textAddr: 0x7fffeafc50cb, textSize: 50
0x7fffeafc50cb:	xor		eax, eax
0x7fffeafc50cd:	mov		edx, eax
0x7fffeafc50cf:	mov		rcx, qword ptr [rsp + 0x18]
0x7fffeafc50d4:	mov		dword ptr [rcx + 0x4c], 1
0x7fffeafc50db:	mov		rcx, qword ptr [rsp + 0x10]
0x7fffeafc50e0:	add		rcx, 0x128
0x7fffeafc50e7:	mov		edi, 2
0x7fffeafc50ec:	mov		rsi, rcx
0x7fffeafc50ef:	call		0x7fffeafd3f00
0x7fffeafc50f4:	mov		dword ptr [rsp + 4], eax
0x7fffeafc50f8:	call		0x7fffeafc4d10
disassembling symbol '.LBB8_7':
textAddr: 0x7fffeafc50fd, textSize: 33
0x7fffeafc50fd:	mov		rax, qword ptr [rsp + 0x18]
0x7fffeafc5102:	movsxd		rsi, dword ptr [rax + 0x34]
0x7fffeafc5106:	mov		rax, qword ptr [rsp + 0x18]
0x7fffeafc510b:	movsxd		rdx, dword ptr [rax + 0x30]
0x7fffeafc510f:	mov		edi, 0xea
0x7fffeafc5114:	mov		ecx, 0x21
0x7fffeafc5119:	call		0x7fffeafc5180
disassembling symbol '.LBB8_8':
textAddr: 0x7fffeafc511e, textSize: 18
0x7fffeafc511e:	add		rsp, 0x38
0x7fffeafc5122:	ret		
0x7fffeafc5123:	nop		word ptr cs:[rax + rax]
0x7fffeafc512d:	nop		dword ptr [rax]
disassembling symbol '_sigaddset':
textAddr: 0x7fffeafc5130, textSize: 80
0x7fffeafc5130:	mov		qword ptr [rsp - 8], rdi
0x7fffeafc5135:	mov		dword ptr [rsp - 0xc], esi
0x7fffeafc5139:	mov		eax, dword ptr [rsp - 0xc]
0x7fffeafc513d:	sub		eax, 1
0x7fffeafc5140:	mov		dword ptr [rsp - 0x10], eax
0x7fffeafc5144:	mov		eax, dword ptr [rsp - 0x10]
0x7fffeafc5148:	mov		ecx, eax
0x7fffeafc514a:	and		rcx, 0x3f
0x7fffeafc5151:	mov		edx, 1
0x7fffeafc5156:	shl		rdx, cl
0x7fffeafc5159:	mov		rdi, qword ptr [rsp - 8]
0x7fffeafc515e:	mov		eax, dword ptr [rsp - 0x10]
0x7fffeafc5162:	shr		eax, 3
0x7fffeafc5165:	mov		eax, eax
0x7fffeafc5167:	mov		r8d, eax
0x7fffeafc516a:	shr		r8, 3
0x7fffeafc516e:	or		rdx, qword ptr [rdi + r8*8]
0x7fffeafc5172:	mov		qword ptr [rdi + r8*8], rdx
0x7fffeafc5176:	ret		
0x7fffeafc5177:	nop		word ptr [rax + rax]
disassembling symbol '__syscall3':
textAddr: 0x7fffeafc5180, textSize: 53
0x7fffeafc5180:	mov		qword ptr [rsp - 8], rdi
0x7fffeafc5185:	mov		qword ptr [rsp - 0x10], rsi
0x7fffeafc518a:	mov		qword ptr [rsp - 0x18], rdx
0x7fffeafc518f:	mov		qword ptr [rsp - 0x20], rcx
0x7fffeafc5194:	mov		rax, qword ptr [rsp - 8]
0x7fffeafc5199:	mov		rdi, qword ptr [rsp - 0x10]
0x7fffeafc519e:	mov		rsi, qword ptr [rsp - 0x18]
0x7fffeafc51a3:	mov		rdx, qword ptr [rsp - 0x20]
0x7fffeafc51a8:	syscall		
0x7fffeafc51aa:	mov		qword ptr [rsp - 0x28], rax
0x7fffeafc51af:	mov		rax, qword ptr [rsp - 0x28]
0x7fffeafc51b4:	ret		
disassembling symbol '__do_cleanup_push':
textAddr: 0x7fffeafc51c0, textSize: 16
0x7fffeafc51c0:	mov		qword ptr [rsp - 8], rdi
0x7fffeafc51c5:	ret		
0x7fffeafc51c6:	nop		word ptr cs:[rax + rax]
disassembling symbol '_pthread_cleanup_push':
textAddr: 0x7fffeafc51d0, textSize: 64
0x7fffeafc51d0:	sub		rsp, 0x18
0x7fffeafc51d4:	mov		qword ptr [rsp + 0x10], rdi
0x7fffeafc51d9:	mov		qword ptr [rsp + 8], rsi
0x7fffeafc51de:	mov		qword ptr [rsp], rdx
0x7fffeafc51e2:	mov		rax, qword ptr [rsp + 8]
0x7fffeafc51e7:	mov		rcx, qword ptr [rsp + 0x10]
0x7fffeafc51ec:	mov		qword ptr [rcx], rax
0x7fffeafc51ef:	mov		rax, qword ptr [rsp]
0x7fffeafc51f3:	mov		rcx, qword ptr [rsp + 0x10]
0x7fffeafc51f8:	mov		qword ptr [rcx + 8], rax
0x7fffeafc51fc:	mov		rdi, qword ptr [rsp + 0x10]
0x7fffeafc5201:	call		0x7fffeafc51c0
0x7fffeafc5206:	add		rsp, 0x18
0x7fffeafc520a:	ret		
0x7fffeafc520b:	nop		dword ptr [rax + rax]
disassembling symbol '_pthread_cleanup_pop':
textAddr: 0x7fffeafc5210, textSize: 58
0x7fffeafc5210:	sub		rsp, 0x18
0x7fffeafc5214:	mov		qword ptr [rsp + 0x10], rdi
0x7fffeafc5219:	mov		dword ptr [rsp + 0xc], esi
0x7fffeafc521d:	mov		rdi, qword ptr [rsp + 0x10]
0x7fffeafc5222:	call		0x7fffeafc51c0
0x7fffeafc5227:	cmp		dword ptr [rsp + 0xc], 0
0x7fffeafc522c:	je		0x7fffeafc5245
0x7fffeafc5232:	mov		rax, qword ptr [rsp + 0x10]
0x7fffeafc5237:	mov		rax, qword ptr [rax]
0x7fffeafc523a:	mov		rcx, qword ptr [rsp + 0x10]
0x7fffeafc523f:	mov		rdi, qword ptr [rcx + 8]
0x7fffeafc5243:	call		rax
0x7fffeafc5245:	add		rsp, 0x18
0x7fffeafc5249:	ret		
disassembling symbol '.LBB2_2':
textAddr: 0x7fffeafc5245, textSize: 7
0x7fffeafc5245:	add		rsp, 0x18
0x7fffeafc5249:	ret		
0x7fffeafc524a:	add		byte ptr [rax], al
disassembling symbol '__clone':
textAddr: 0x7fffeafc5250, textSize: 71
0x7fffeafc5250:	xor		eax, eax
0x7fffeafc5252:	mov		al, 0x38
0x7fffeafc5254:	mov		r11, rdi
0x7fffeafc5257:	mov		rdi, rdx
0x7fffeafc525a:	mov		rdx, r8
0x7fffeafc525d:	mov		r8, r9
0x7fffeafc5260:	mov		r10, qword ptr [rsp + 8]
0x7fffeafc5265:	mov		r9, r11
0x7fffeafc5268:	and		rsi, 0xfffffffffffffff0
0x7fffeafc526c:	sub		rsi, 8
0x7fffeafc5270:	mov		qword ptr [rsi], rcx
0x7fffeafc5273:	syscall		
0x7fffeafc5275:	test		eax, eax
0x7fffeafc5277:	jne		0x7fffeafc5296
0x7fffeafc527d:	jmp		0x7fffeafc5282
0x7fffeafc5282:	xor		ebp, ebp
0x7fffeafc5284:	pop		rdi
0x7fffeafc5285:	call		r9
0x7fffeafc5288:	mov		edi, eax
0x7fffeafc528a:	xor		eax, eax
0x7fffeafc528c:	mov		al, 0x3c
0x7fffeafc528e:	syscall		
0x7fffeafc5290:	hlt		
0x7fffeafc5291:	jmp		0x7fffeafc5296
0x7fffeafc5296:	ret		
disassembling symbol 'BB0':
textAddr: 0x7fffeafc5282, textSize: 20
0x7fffeafc5282:	xor		ebp, ebp
0x7fffeafc5284:	pop		rdi
0x7fffeafc5285:	call		r9
0x7fffeafc5288:	mov		edi, eax
0x7fffeafc528a:	xor		eax, eax
0x7fffeafc528c:	mov		al, 0x3c
0x7fffeafc528e:	syscall		
0x7fffeafc5290:	hlt		
0x7fffeafc5291:	jmp		0x7fffeafc5296
disassembling symbol '.Ltmp0':
textAddr: 0x7fffeafc5296, textSize: 14
0x7fffeafc5296:	ret		
0x7fffeafc5297:	add		byte ptr [rax], al
0x7fffeafc5299:	add		byte ptr [rax], al
0x7fffeafc529b:	add		byte ptr [rax], al
0x7fffeafc529d:	add		byte ptr [rax], al
0x7fffeafc529f:	add		byte ptr [rcx - 0x45], cl
0x7fffeafc52a2:	test		al, 0x3c
disassembling symbol 'CFICheck':
textAddr: 0x7fffeafc52a0, textSize: 784
0x7fffeafc52a0:	movabs		r11, 0x7fffe87c3ca8
0x7fffeafc52aa:	add		qword ptr [r11], 8
0x7fffeafc52ae:	mov		r10, qword ptr [r11]
0x7fffeafc52b1:	add		r11, r10
0x7fffeafc52b4:	mov		r10, qword ptr [rsp]
0x7fffeafc52b8:	mov		qword ptr [r11], r10
0x7fffeafc52bb:	push		rbp
0x7fffeafc52bc:	mov		rbp, rsp
0x7fffeafc52bf:	sub		rsp, 0x30
0x7fffeafc52c3:	push		rbx
0x7fffeafc52c4:	push		rax
0x7fffeafc52c5:	lea		rax, [rbp - 8]
0x7fffeafc52c9:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc52d3:	cmp		rax, rbx
0x7fffeafc52d6:	ja		0x7fffeafc5594
0x7fffeafc52dc:	movabs		rbx, 1
0x7fffeafc52e6:	cmp		rax, rbx
0x7fffeafc52e9:	jb		0x7fffeafc5594
0x7fffeafc52ef:	pop		rax
0x7fffeafc52f0:	pop		rbx
0x7fffeafc52f1:	mov		qword ptr [rbp - 8], rdi
0x7fffeafc52f5:	movabs		rax, 0x7fffe8bc40f0
0x7fffeafc52ff:	push		rbx
0x7fffeafc5300:	push		rax
0x7fffeafc5301:	lea		rax, [rbp - 0x10]
0x7fffeafc5305:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc530f:	cmp		rax, rbx
0x7fffeafc5312:	ja		0x7fffeafc5594
0x7fffeafc5318:	movabs		rbx, 1
0x7fffeafc5322:	cmp		rax, rbx
0x7fffeafc5325:	jb		0x7fffeafc5594
0x7fffeafc532b:	pop		rax
0x7fffeafc532c:	pop		rbx
0x7fffeafc532d:	mov		qword ptr [rbp - 0x10], rax
0x7fffeafc5331:	push		rbx
0x7fffeafc5332:	push		rax
0x7fffeafc5333:	lea		rax, [rbp - 0x14]
0x7fffeafc5337:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc5341:	cmp		rax, rbx
0x7fffeafc5344:	ja		0x7fffeafc5594
0x7fffeafc534a:	movabs		rbx, 1
0x7fffeafc5354:	cmp		rax, rbx
0x7fffeafc5357:	jb		0x7fffeafc5594
0x7fffeafc535d:	pop		rax
0x7fffeafc535e:	pop		rbx
0x7fffeafc535f:	mov		dword ptr [rbp - 0x14], 0xe
0x7fffeafc5366:	push		rbx
0x7fffeafc5367:	push		rax
0x7fffeafc5368:	lea		rax, [rbp - 0x18]
0x7fffeafc536c:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc5376:	cmp		rax, rbx
0x7fffeafc5379:	ja		0x7fffeafc5594
0x7fffeafc537f:	movabs		rbx, 1
0x7fffeafc5389:	cmp		rax, rbx
0x7fffeafc538c:	jb		0x7fffeafc5594
0x7fffeafc5392:	pop		rax
0x7fffeafc5393:	pop		rbx
0x7fffeafc5394:	mov		dword ptr [rbp - 0x18], 0
0x7fffeafc539b:	mov		ecx, dword ptr [rbp - 0x14]
0x7fffeafc539e:	push		rbx
0x7fffeafc539f:	push		rax
0x7fffeafc53a0:	lea		rax, [rbp - 0x1c]
0x7fffeafc53a4:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc53ae:	cmp		rax, rbx
0x7fffeafc53b1:	ja		0x7fffeafc5594
0x7fffeafc53b7:	movabs		rbx, 1
0x7fffeafc53c1:	cmp		rax, rbx
0x7fffeafc53c4:	jb		0x7fffeafc5594
0x7fffeafc53ca:	pop		rax
0x7fffeafc53cb:	pop		rbx
0x7fffeafc53cc:	mov		dword ptr [rbp - 0x1c], ecx
0x7fffeafc53cf:	push		rbx
0x7fffeafc53d0:	push		rax
0x7fffeafc53d1:	lea		rax, [rbp - 0x20]
0x7fffeafc53d5:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc53df:	cmp		rax, rbx
0x7fffeafc53e2:	ja		0x7fffeafc5594
0x7fffeafc53e8:	movabs		rbx, 1
0x7fffeafc53f2:	cmp		rax, rbx
0x7fffeafc53f5:	jb		0x7fffeafc5594
0x7fffeafc53fb:	pop		rax
0x7fffeafc53fc:	pop		rbx
0x7fffeafc53fd:	mov		dword ptr [rbp - 0x20], 0
0x7fffeafc5404:	cmp		qword ptr [rbp - 8], 0
0x7fffeafc5409:	jne		0x7fffeafc5414
0x7fffeafc540f:	jmp		0x7fffeafc556d
0x7fffeafc5414:	jmp		0x7fffeafc5419
0x7fffeafc5419:	mov		eax, dword ptr [rbp - 0x18]
0x7fffeafc541c:	cmp		eax, dword ptr [rbp - 0x1c]
0x7fffeafc541f:	jg		0x7fffeafc5563
0x7fffeafc5425:	mov		eax, dword ptr [rbp - 0x18]
0x7fffeafc5428:	mov		ecx, dword ptr [rbp - 0x1c]
0x7fffeafc542b:	sub		ecx, dword ptr [rbp - 0x18]
0x7fffeafc542e:	push		rbx
0x7fffeafc542f:	push		rax
0x7fffeafc5430:	lea		rax, [rbp - 0x24]
0x7fffeafc5434:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc543e:	cmp		rax, rbx
0x7fffeafc5441:	ja		0x7fffeafc5594
0x7fffeafc5447:	movabs		rbx, 1
0x7fffeafc5451:	cmp		rax, rbx
0x7fffeafc5454:	jb		0x7fffeafc5594
0x7fffeafc545a:	pop		rax
0x7fffeafc545b:	pop		rbx
0x7fffeafc545c:	mov		dword ptr [rbp - 0x24], eax
0x7fffeafc545f:	mov		eax, ecx
0x7fffeafc5461:	cdq		
0x7fffeafc5462:	mov		ecx, 2
0x7fffeafc5467:	idiv		ecx
0x7fffeafc5469:	mov		ecx, dword ptr [rbp - 0x24]
0x7fffeafc546c:	add		ecx, eax
0x7fffeafc546e:	push		rbx
0x7fffeafc546f:	push		rax
0x7fffeafc5470:	lea		rax, [rbp - 0x20]
0x7fffeafc5474:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc547e:	cmp		rax, rbx
0x7fffeafc5481:	ja		0x7fffeafc5594
0x7fffeafc5487:	movabs		rbx, 1
0x7fffeafc5491:	cmp		rax, rbx
0x7fffeafc5494:	jb		0x7fffeafc5594
0x7fffeafc549a:	pop		rax
0x7fffeafc549b:	pop		rbx
0x7fffeafc549c:	mov		dword ptr [rbp - 0x20], ecx
0x7fffeafc549f:	mov		eax, dword ptr [rbp - 0x20]
0x7fffeafc54a2:	cmp		eax, dword ptr [rbp - 0x1c]
0x7fffeafc54a5:	jle		0x7fffeafc54b0
0x7fffeafc54ab:	jmp		0x7fffeafc5563
0x7fffeafc54b0:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafc54b4:	movsxd		rcx, dword ptr [rbp - 0x20]
0x7fffeafc54b8:	mov		rax, qword ptr [rax + rcx*8]
0x7fffeafc54bc:	cmp		rax, qword ptr [rbp - 8]
0x7fffeafc54c0:	jbe		0x7fffeafc5502
0x7fffeafc54c6:	mov		eax, dword ptr [rbp - 0x20]
0x7fffeafc54c9:	sub		eax, 1
0x7fffeafc54cc:	push		rbx
0x7fffeafc54cd:	push		rax
0x7fffeafc54ce:	lea		rax, [rbp - 0x1c]
0x7fffeafc54d2:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc54dc:	cmp		rax, rbx
0x7fffeafc54df:	ja		0x7fffeafc5594
0x7fffeafc54e5:	movabs		rbx, 1
0x7fffeafc54ef:	cmp		rax, rbx
0x7fffeafc54f2:	jb		0x7fffeafc5594
0x7fffeafc54f8:	pop		rax
0x7fffeafc54f9:	pop		rbx
0x7fffeafc54fa:	mov		dword ptr [rbp - 0x1c], eax
0x7fffeafc54fd:	jmp		0x7fffeafc555e
0x7fffeafc5502:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafc5506:	movsxd		rcx, dword ptr [rbp - 0x20]
0x7fffeafc550a:	mov		rax, qword ptr [rax + rcx*8]
0x7fffeafc550e:	cmp		rax, qword ptr [rbp - 8]
0x7fffeafc5512:	jae		0x7fffeafc5554
0x7fffeafc5518:	mov		eax, dword ptr [rbp - 0x20]
0x7fffeafc551b:	add		eax, 1
0x7fffeafc551e:	push		rbx
0x7fffeafc551f:	push		rax
0x7fffeafc5520:	lea		rax, [rbp - 0x18]
0x7fffeafc5524:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc552e:	cmp		rax, rbx
0x7fffeafc5531:	ja		0x7fffeafc5594
0x7fffeafc5537:	movabs		rbx, 1
0x7fffeafc5541:	cmp		rax, rbx
0x7fffeafc5544:	jb		0x7fffeafc5594
0x7fffeafc554a:	pop		rax
0x7fffeafc554b:	pop		rbx
0x7fffeafc554c:	mov		dword ptr [rbp - 0x18], eax
0x7fffeafc554f:	jmp		0x7fffeafc5559
0x7fffeafc5554:	jmp		0x7fffeafc556d
0x7fffeafc5559:	jmp		0x7fffeafc555e
0x7fffeafc555e:	jmp		0x7fffeafc5419
0x7fffeafc5563:	mov		edi, 0xffffffff
0x7fffeafc5568:	call		0x7fffeafd41d0
0x7fffeafc556d:	add		rsp, 0x30
0x7fffeafc5571:	pop		rbp
0x7fffeafc5572:	movabs		r11, 0x7fffe87c3ca8
0x7fffeafc557c:	mov		r10, qword ptr [r11]
0x7fffeafc557f:	add		r10, r11
0x7fffeafc5582:	sub		qword ptr [r11], 8
0x7fffeafc5586:	mov		r11, qword ptr [r10]
0x7fffeafc5589:	cmp		qword ptr [rsp], r11
0x7fffeafc558d:	jne		0x7fffeafc55a0
0x7fffeafc5593:	ret		
0x7fffeafc5594:	pop		rax
0x7fffeafc5595:	pop		rbx
0x7fffeafc5596:	mov		edi, 0xffffffff
0x7fffeafc559b:	call		0x7fffeafd41d0
0x7fffeafc55a0:	mov		edi, 0xffffffff
0x7fffeafc55a5:	call		0x7fffeafd41d0
0x7fffeafc55aa:	nop		word ptr [rax + rax]
disassembling symbol '.LBB0_2':
textAddr: 0x7fffeafc5414, textSize: 5
0x7fffeafc5414:	jmp		0x7fffeafc5419
disassembling symbol '.LBB0_3':
textAddr: 0x7fffeafc5419, textSize: 151
0x7fffeafc5419:	mov		eax, dword ptr [rbp - 0x18]
0x7fffeafc541c:	cmp		eax, dword ptr [rbp - 0x1c]
0x7fffeafc541f:	jg		0x7fffeafc5563
0x7fffeafc5425:	mov		eax, dword ptr [rbp - 0x18]
0x7fffeafc5428:	mov		ecx, dword ptr [rbp - 0x1c]
0x7fffeafc542b:	sub		ecx, dword ptr [rbp - 0x18]
0x7fffeafc542e:	push		rbx
0x7fffeafc542f:	push		rax
0x7fffeafc5430:	lea		rax, [rbp - 0x24]
0x7fffeafc5434:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc543e:	cmp		rax, rbx
0x7fffeafc5441:	ja		0x7fffeafc5594
0x7fffeafc5447:	movabs		rbx, 1
0x7fffeafc5451:	cmp		rax, rbx
0x7fffeafc5454:	jb		0x7fffeafc5594
0x7fffeafc545a:	pop		rax
0x7fffeafc545b:	pop		rbx
0x7fffeafc545c:	mov		dword ptr [rbp - 0x24], eax
0x7fffeafc545f:	mov		eax, ecx
0x7fffeafc5461:	cdq		
0x7fffeafc5462:	mov		ecx, 2
0x7fffeafc5467:	idiv		ecx
0x7fffeafc5469:	mov		ecx, dword ptr [rbp - 0x24]
0x7fffeafc546c:	add		ecx, eax
0x7fffeafc546e:	push		rbx
0x7fffeafc546f:	push		rax
0x7fffeafc5470:	lea		rax, [rbp - 0x20]
0x7fffeafc5474:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc547e:	cmp		rax, rbx
0x7fffeafc5481:	ja		0x7fffeafc5594
0x7fffeafc5487:	movabs		rbx, 1
0x7fffeafc5491:	cmp		rax, rbx
0x7fffeafc5494:	jb		0x7fffeafc5594
0x7fffeafc549a:	pop		rax
0x7fffeafc549b:	pop		rbx
0x7fffeafc549c:	mov		dword ptr [rbp - 0x20], ecx
0x7fffeafc549f:	mov		eax, dword ptr [rbp - 0x20]
0x7fffeafc54a2:	cmp		eax, dword ptr [rbp - 0x1c]
0x7fffeafc54a5:	jle		0x7fffeafc54b0
0x7fffeafc54ab:	jmp		0x7fffeafc5563
disassembling symbol '.LBB0_6':
textAddr: 0x7fffeafc54b0, textSize: 82
0x7fffeafc54b0:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafc54b4:	movsxd		rcx, dword ptr [rbp - 0x20]
0x7fffeafc54b8:	mov		rax, qword ptr [rax + rcx*8]
0x7fffeafc54bc:	cmp		rax, qword ptr [rbp - 8]
0x7fffeafc54c0:	jbe		0x7fffeafc5502
0x7fffeafc54c6:	mov		eax, dword ptr [rbp - 0x20]
0x7fffeafc54c9:	sub		eax, 1
0x7fffeafc54cc:	push		rbx
0x7fffeafc54cd:	push		rax
0x7fffeafc54ce:	lea		rax, [rbp - 0x1c]
0x7fffeafc54d2:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc54dc:	cmp		rax, rbx
0x7fffeafc54df:	ja		0x7fffeafc5594
0x7fffeafc54e5:	movabs		rbx, 1
0x7fffeafc54ef:	cmp		rax, rbx
0x7fffeafc54f2:	jb		0x7fffeafc5594
0x7fffeafc54f8:	pop		rax
0x7fffeafc54f9:	pop		rbx
0x7fffeafc54fa:	mov		dword ptr [rbp - 0x1c], eax
0x7fffeafc54fd:	jmp		0x7fffeafc555e
disassembling symbol '.LBB0_8':
textAddr: 0x7fffeafc5502, textSize: 82
0x7fffeafc5502:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafc5506:	movsxd		rcx, dword ptr [rbp - 0x20]
0x7fffeafc550a:	mov		rax, qword ptr [rax + rcx*8]
0x7fffeafc550e:	cmp		rax, qword ptr [rbp - 8]
0x7fffeafc5512:	jae		0x7fffeafc5554
0x7fffeafc5518:	mov		eax, dword ptr [rbp - 0x20]
0x7fffeafc551b:	add		eax, 1
0x7fffeafc551e:	push		rbx
0x7fffeafc551f:	push		rax
0x7fffeafc5520:	lea		rax, [rbp - 0x18]
0x7fffeafc5524:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc552e:	cmp		rax, rbx
0x7fffeafc5531:	ja		0x7fffeafc5594
0x7fffeafc5537:	movabs		rbx, 1
0x7fffeafc5541:	cmp		rax, rbx
0x7fffeafc5544:	jb		0x7fffeafc5594
0x7fffeafc554a:	pop		rax
0x7fffeafc554b:	pop		rbx
0x7fffeafc554c:	mov		dword ptr [rbp - 0x18], eax
0x7fffeafc554f:	jmp		0x7fffeafc5559
disassembling symbol '.LBB0_10':
textAddr: 0x7fffeafc5554, textSize: 5
0x7fffeafc5554:	jmp		0x7fffeafc556d
disassembling symbol '.LBB0_11':
textAddr: 0x7fffeafc5559, textSize: 5
0x7fffeafc5559:	jmp		0x7fffeafc555e
disassembling symbol '.LBB0_12':
textAddr: 0x7fffeafc555e, textSize: 5
0x7fffeafc555e:	jmp		0x7fffeafc5419
disassembling symbol '.LBB0_13':
textAddr: 0x7fffeafc5563, textSize: 10
0x7fffeafc5563:	mov		edi, 0xffffffff
0x7fffeafc5568:	call		0x7fffeafd41d0
disassembling symbol '.LBB0_14':
textAddr: 0x7fffeafc556d, textSize: 39
0x7fffeafc556d:	add		rsp, 0x30
0x7fffeafc5571:	pop		rbp
0x7fffeafc5572:	movabs		r11, 0x7fffe87c3ca8
0x7fffeafc557c:	mov		r10, qword ptr [r11]
0x7fffeafc557f:	add		r10, r11
0x7fffeafc5582:	sub		qword ptr [r11], 8
0x7fffeafc5586:	mov		r11, qword ptr [r10]
0x7fffeafc5589:	cmp		qword ptr [rsp], r11
0x7fffeafc558d:	jne		0x7fffeafc55a0
0x7fffeafc5593:	ret		
disassembling symbol '.LBB0_15':
textAddr: 0x7fffeafc5594, textSize: 12
0x7fffeafc5594:	pop		rax
0x7fffeafc5595:	pop		rbx
0x7fffeafc5596:	mov		edi, 0xffffffff
0x7fffeafc559b:	call		0x7fffeafd41d0
disassembling symbol '.LBB0_16':
textAddr: 0x7fffeafc55a0, textSize: 16
0x7fffeafc55a0:	mov		edi, 0xffffffff
0x7fffeafc55a5:	call		0x7fffeafd41d0
0x7fffeafc55aa:	nop		word ptr [rax + rax]
disassembling symbol 'max':
textAddr: 0x7fffeafc55b0, textSize: 704
0x7fffeafc55b0:	movabs		r11, 0x7fffe87c3ca8
0x7fffeafc55ba:	add		qword ptr [r11], 8
0x7fffeafc55be:	mov		r10, qword ptr [r11]
0x7fffeafc55c1:	add		r11, r10
0x7fffeafc55c4:	mov		r10, qword ptr [rsp]
0x7fffeafc55c8:	mov		qword ptr [r11], r10
0x7fffeafc55cb:	push		rbp
0x7fffeafc55cc:	mov		rbp, rsp
0x7fffeafc55cf:	push		rbx
0x7fffeafc55d0:	push		rax
0x7fffeafc55d1:	lea		rax, [rbp - 4]
0x7fffeafc55d5:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc55df:	cmp		rax, rbx
0x7fffeafc55e2:	ja		0x7fffeafc585a
0x7fffeafc55e8:	movabs		rbx, 1
0x7fffeafc55f2:	cmp		rax, rbx
0x7fffeafc55f5:	jb		0x7fffeafc585a
0x7fffeafc55fb:	pop		rax
0x7fffeafc55fc:	pop		rbx
0x7fffeafc55fd:	mov		dword ptr [rbp - 4], edi
0x7fffeafc5600:	push		rbx
0x7fffeafc5601:	push		rax
0x7fffeafc5602:	lea		rax, [rbp - 8]
0x7fffeafc5606:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc5610:	cmp		rax, rbx
0x7fffeafc5613:	ja		0x7fffeafc585a
0x7fffeafc5619:	movabs		rbx, 1
0x7fffeafc5623:	cmp		rax, rbx
0x7fffeafc5626:	jb		0x7fffeafc585a
0x7fffeafc562c:	pop		rax
0x7fffeafc562d:	pop		rbx
0x7fffeafc562e:	mov		dword ptr [rbp - 8], esi
0x7fffeafc5631:	push		rbx
0x7fffeafc5632:	push		rax
0x7fffeafc5633:	lea		rax, [rbp - 0xc]
0x7fffeafc5637:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc5641:	cmp		rax, rbx
0x7fffeafc5644:	ja		0x7fffeafc585a
0x7fffeafc564a:	movabs		rbx, 1
0x7fffeafc5654:	cmp		rax, rbx
0x7fffeafc5657:	jb		0x7fffeafc585a
0x7fffeafc565d:	pop		rax
0x7fffeafc565e:	pop		rbx
0x7fffeafc565f:	mov		dword ptr [rbp - 0xc], edx
0x7fffeafc5662:	push		rbx
0x7fffeafc5663:	push		rax
0x7fffeafc5664:	lea		rax, [rbp - 0x18]
0x7fffeafc5668:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc5672:	cmp		rax, rbx
0x7fffeafc5675:	ja		0x7fffeafc585a
0x7fffeafc567b:	movabs		rbx, 1
0x7fffeafc5685:	cmp		rax, rbx
0x7fffeafc5688:	jb		0x7fffeafc585a
0x7fffeafc568e:	pop		rax
0x7fffeafc568f:	pop		rbx
0x7fffeafc5690:	mov		qword ptr [rbp - 0x18], rcx
0x7fffeafc5694:	push		rbx
0x7fffeafc5695:	push		rax
0x7fffeafc5696:	lea		rax, [rbp - 0x1c]
0x7fffeafc569a:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc56a4:	cmp		rax, rbx
0x7fffeafc56a7:	ja		0x7fffeafc585a
0x7fffeafc56ad:	movabs		rbx, 1
0x7fffeafc56b7:	cmp		rax, rbx
0x7fffeafc56ba:	jb		0x7fffeafc585a
0x7fffeafc56c0:	pop		rax
0x7fffeafc56c1:	pop		rbx
0x7fffeafc56c2:	mov		dword ptr [rbp - 0x1c], 0
0x7fffeafc56c9:	mov		eax, dword ptr [rbp - 4]
0x7fffeafc56cc:	cmp		eax, dword ptr [rbp - 8]
0x7fffeafc56cf:	jl		0x7fffeafc574e
0x7fffeafc56d5:	mov		eax, dword ptr [rbp - 4]
0x7fffeafc56d8:	cmp		eax, dword ptr [rbp - 0xc]
0x7fffeafc56db:	jl		0x7fffeafc574e
0x7fffeafc56e1:	mov		eax, dword ptr [rbp - 4]
0x7fffeafc56e4:	push		rbx
0x7fffeafc56e5:	push		rax
0x7fffeafc56e6:	lea		rax, [rbp - 0x1c]
0x7fffeafc56ea:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc56f4:	cmp		rax, rbx
0x7fffeafc56f7:	ja		0x7fffeafc585a
0x7fffeafc56fd:	movabs		rbx, 1
0x7fffeafc5707:	cmp		rax, rbx
0x7fffeafc570a:	jb		0x7fffeafc585a
0x7fffeafc5710:	pop		rax
0x7fffeafc5711:	pop		rbx
0x7fffeafc5712:	mov		dword ptr [rbp - 0x1c], eax
0x7fffeafc5715:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafc5719:	push		rbx
0x7fffeafc571a:	push		rax
0x7fffeafc571b:	lea		rax, [rcx]
0x7fffeafc571e:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc5728:	cmp		rax, rbx
0x7fffeafc572b:	ja		0x7fffeafc585a
0x7fffeafc5731:	movabs		rbx, 1
0x7fffeafc573b:	cmp		rax, rbx
0x7fffeafc573e:	jb		0x7fffeafc585a
0x7fffeafc5744:	pop		rax
0x7fffeafc5745:	pop		rbx
0x7fffeafc5746:	mov		byte ptr [rcx], 0x7c
0x7fffeafc5749:	jmp		0x7fffeafc5834
0x7fffeafc574e:	mov		eax, dword ptr [rbp - 8]
0x7fffeafc5751:	cmp		eax, dword ptr [rbp - 0xc]
0x7fffeafc5754:	jle		0x7fffeafc57c7
0x7fffeafc575a:	mov		eax, dword ptr [rbp - 8]
0x7fffeafc575d:	push		rbx
0x7fffeafc575e:	push		rax
0x7fffeafc575f:	lea		rax, [rbp - 0x1c]
0x7fffeafc5763:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc576d:	cmp		rax, rbx
0x7fffeafc5770:	ja		0x7fffeafc585a
0x7fffeafc5776:	movabs		rbx, 1
0x7fffeafc5780:	cmp		rax, rbx
0x7fffeafc5783:	jb		0x7fffeafc585a
0x7fffeafc5789:	pop		rax
0x7fffeafc578a:	pop		rbx
0x7fffeafc578b:	mov		dword ptr [rbp - 0x1c], eax
0x7fffeafc578e:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafc5792:	push		rbx
0x7fffeafc5793:	push		rax
0x7fffeafc5794:	lea		rax, [rcx]
0x7fffeafc5797:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc57a1:	cmp		rax, rbx
0x7fffeafc57a4:	ja		0x7fffeafc585a
0x7fffeafc57aa:	movabs		rbx, 1
0x7fffeafc57b4:	cmp		rax, rbx
0x7fffeafc57b7:	jb		0x7fffeafc585a
0x7fffeafc57bd:	pop		rax
0x7fffeafc57be:	pop		rbx
0x7fffeafc57bf:	mov		byte ptr [rcx], 0x5c
0x7fffeafc57c2:	jmp		0x7fffeafc582f
0x7fffeafc57c7:	mov		eax, dword ptr [rbp - 0xc]
0x7fffeafc57ca:	push		rbx
0x7fffeafc57cb:	push		rax
0x7fffeafc57cc:	lea		rax, [rbp - 0x1c]
0x7fffeafc57d0:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc57da:	cmp		rax, rbx
0x7fffeafc57dd:	ja		0x7fffeafc585a
0x7fffeafc57e3:	movabs		rbx, 1
0x7fffeafc57ed:	cmp		rax, rbx
0x7fffeafc57f0:	jb		0x7fffeafc585a
0x7fffeafc57f6:	pop		rax
0x7fffeafc57f7:	pop		rbx
0x7fffeafc57f8:	mov		dword ptr [rbp - 0x1c], eax
0x7fffeafc57fb:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafc57ff:	push		rbx
0x7fffeafc5800:	push		rax
0x7fffeafc5801:	lea		rax, [rcx]
0x7fffeafc5804:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc580e:	cmp		rax, rbx
0x7fffeafc5811:	ja		0x7fffeafc585a
0x7fffeafc5817:	movabs		rbx, 1
0x7fffeafc5821:	cmp		rax, rbx
0x7fffeafc5824:	jb		0x7fffeafc585a
0x7fffeafc582a:	pop		rax
0x7fffeafc582b:	pop		rbx
0x7fffeafc582c:	mov		byte ptr [rcx], 0x2d
0x7fffeafc582f:	jmp		0x7fffeafc5834
0x7fffeafc5834:	mov		eax, dword ptr [rbp - 0x1c]
0x7fffeafc5837:	pop		rbp
0x7fffeafc5838:	movabs		r11, 0x7fffe87c3ca8
0x7fffeafc5842:	mov		r10, qword ptr [r11]
0x7fffeafc5845:	add		r10, r11
0x7fffeafc5848:	sub		qword ptr [r11], 8
0x7fffeafc584c:	mov		r11, qword ptr [r10]
0x7fffeafc584f:	cmp		qword ptr [rsp], r11
0x7fffeafc5853:	jne		0x7fffeafc5866
0x7fffeafc5859:	ret		
0x7fffeafc585a:	pop		rax
0x7fffeafc585b:	pop		rbx
0x7fffeafc585c:	mov		edi, 0xffffffff
0x7fffeafc5861:	call		0x7fffeafd41d0
0x7fffeafc5866:	mov		edi, 0xffffffff
0x7fffeafc586b:	call		0x7fffeafd41d0
disassembling symbol '.LBB1_3':
textAddr: 0x7fffeafc574e, textSize: 121
0x7fffeafc574e:	mov		eax, dword ptr [rbp - 8]
0x7fffeafc5751:	cmp		eax, dword ptr [rbp - 0xc]
0x7fffeafc5754:	jle		0x7fffeafc57c7
0x7fffeafc575a:	mov		eax, dword ptr [rbp - 8]
0x7fffeafc575d:	push		rbx
0x7fffeafc575e:	push		rax
0x7fffeafc575f:	lea		rax, [rbp - 0x1c]
0x7fffeafc5763:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc576d:	cmp		rax, rbx
0x7fffeafc5770:	ja		0x7fffeafc585a
0x7fffeafc5776:	movabs		rbx, 1
0x7fffeafc5780:	cmp		rax, rbx
0x7fffeafc5783:	jb		0x7fffeafc585a
0x7fffeafc5789:	pop		rax
0x7fffeafc578a:	pop		rbx
0x7fffeafc578b:	mov		dword ptr [rbp - 0x1c], eax
0x7fffeafc578e:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafc5792:	push		rbx
0x7fffeafc5793:	push		rax
0x7fffeafc5794:	lea		rax, [rcx]
0x7fffeafc5797:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc57a1:	cmp		rax, rbx
0x7fffeafc57a4:	ja		0x7fffeafc585a
0x7fffeafc57aa:	movabs		rbx, 1
0x7fffeafc57b4:	cmp		rax, rbx
0x7fffeafc57b7:	jb		0x7fffeafc585a
0x7fffeafc57bd:	pop		rax
0x7fffeafc57be:	pop		rbx
0x7fffeafc57bf:	mov		byte ptr [rcx], 0x5c
0x7fffeafc57c2:	jmp		0x7fffeafc582f
disassembling symbol '.LBB1_5':
textAddr: 0x7fffeafc57c7, textSize: 104
0x7fffeafc57c7:	mov		eax, dword ptr [rbp - 0xc]
0x7fffeafc57ca:	push		rbx
0x7fffeafc57cb:	push		rax
0x7fffeafc57cc:	lea		rax, [rbp - 0x1c]
0x7fffeafc57d0:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc57da:	cmp		rax, rbx
0x7fffeafc57dd:	ja		0x7fffeafc585a
0x7fffeafc57e3:	movabs		rbx, 1
0x7fffeafc57ed:	cmp		rax, rbx
0x7fffeafc57f0:	jb		0x7fffeafc585a
0x7fffeafc57f6:	pop		rax
0x7fffeafc57f7:	pop		rbx
0x7fffeafc57f8:	mov		dword ptr [rbp - 0x1c], eax
0x7fffeafc57fb:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafc57ff:	push		rbx
0x7fffeafc5800:	push		rax
0x7fffeafc5801:	lea		rax, [rcx]
0x7fffeafc5804:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc580e:	cmp		rax, rbx
0x7fffeafc5811:	ja		0x7fffeafc585a
0x7fffeafc5817:	movabs		rbx, 1
0x7fffeafc5821:	cmp		rax, rbx
0x7fffeafc5824:	jb		0x7fffeafc585a
0x7fffeafc582a:	pop		rax
0x7fffeafc582b:	pop		rbx
0x7fffeafc582c:	mov		byte ptr [rcx], 0x2d
disassembling symbol '.LBB1_6':
textAddr: 0x7fffeafc582f, textSize: 5
0x7fffeafc582f:	jmp		0x7fffeafc5834
disassembling symbol '.LBB1_7':
textAddr: 0x7fffeafc5834, textSize: 38
0x7fffeafc5834:	mov		eax, dword ptr [rbp - 0x1c]
0x7fffeafc5837:	pop		rbp
0x7fffeafc5838:	movabs		r11, 0x7fffe87c3ca8
0x7fffeafc5842:	mov		r10, qword ptr [r11]
0x7fffeafc5845:	add		r10, r11
0x7fffeafc5848:	sub		qword ptr [r11], 8
0x7fffeafc584c:	mov		r11, qword ptr [r10]
0x7fffeafc584f:	cmp		qword ptr [rsp], r11
0x7fffeafc5853:	jne		0x7fffeafc5866
0x7fffeafc5859:	ret		
disassembling symbol '.LBB1_8':
textAddr: 0x7fffeafc585a, textSize: 12
0x7fffeafc585a:	pop		rax
0x7fffeafc585b:	pop		rbx
0x7fffeafc585c:	mov		edi, 0xffffffff
0x7fffeafc5861:	call		0x7fffeafd41d0
disassembling symbol '.LBB1_9':
textAddr: 0x7fffeafc5866, textSize: 10
0x7fffeafc5866:	mov		edi, 0xffffffff
0x7fffeafc586b:	call		0x7fffeafd41d0
disassembling symbol 'dpm_init':
textAddr: 0x7fffeafc5870, textSize: 1136
0x7fffeafc5870:	movabs		r11, 0x7fffe87c3ca8
0x7fffeafc587a:	add		qword ptr [r11], 8
0x7fffeafc587e:	mov		r10, qword ptr [r11]
0x7fffeafc5881:	add		r11, r10
0x7fffeafc5884:	mov		r10, qword ptr [rsp]
0x7fffeafc5888:	mov		qword ptr [r11], r10
0x7fffeafc588b:	push		rbp
0x7fffeafc588c:	mov		rbp, rsp
0x7fffeafc588f:	sub		rsp, 0x30
0x7fffeafc5893:	push		rbx
0x7fffeafc5894:	push		rax
0x7fffeafc5895:	lea		rax, [rbp - 8]
0x7fffeafc5899:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc58a3:	cmp		rax, rbx
0x7fffeafc58a6:	ja		0x7fffeafc5cca
0x7fffeafc58ac:	movabs		rbx, 1
0x7fffeafc58b6:	cmp		rax, rbx
0x7fffeafc58b9:	jb		0x7fffeafc5cca
0x7fffeafc58bf:	pop		rax
0x7fffeafc58c0:	pop		rbx
0x7fffeafc58c1:	mov		qword ptr [rbp - 8], rdi
0x7fffeafc58c5:	push		rbx
0x7fffeafc58c6:	push		rax
0x7fffeafc58c7:	lea		rax, [rbp - 0x10]
0x7fffeafc58cb:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc58d5:	cmp		rax, rbx
0x7fffeafc58d8:	ja		0x7fffeafc5cca
0x7fffeafc58de:	movabs		rbx, 1
0x7fffeafc58e8:	cmp		rax, rbx
0x7fffeafc58eb:	jb		0x7fffeafc5cca
0x7fffeafc58f1:	pop		rax
0x7fffeafc58f2:	pop		rbx
0x7fffeafc58f3:	mov		qword ptr [rbp - 0x10], rsi
0x7fffeafc58f7:	push		rbx
0x7fffeafc58f8:	push		rax
0x7fffeafc58f9:	lea		rax, [rbp - 0x14]
0x7fffeafc58fd:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc5907:	cmp		rax, rbx
0x7fffeafc590a:	ja		0x7fffeafc5cca
0x7fffeafc5910:	movabs		rbx, 1
0x7fffeafc591a:	cmp		rax, rbx
0x7fffeafc591d:	jb		0x7fffeafc5cca
0x7fffeafc5923:	pop		rax
0x7fffeafc5924:	pop		rbx
0x7fffeafc5925:	mov		dword ptr [rbp - 0x14], edx
0x7fffeafc5928:	push		rbx
0x7fffeafc5929:	push		rax
0x7fffeafc592a:	lea		rax, [rbp - 0x18]
0x7fffeafc592e:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc5938:	cmp		rax, rbx
0x7fffeafc593b:	ja		0x7fffeafc5cca
0x7fffeafc5941:	movabs		rbx, 1
0x7fffeafc594b:	cmp		rax, rbx
0x7fffeafc594e:	jb		0x7fffeafc5cca
0x7fffeafc5954:	pop		rax
0x7fffeafc5955:	pop		rbx
0x7fffeafc5956:	mov		dword ptr [rbp - 0x18], ecx
0x7fffeafc5959:	push		rbx
0x7fffeafc595a:	push		rax
0x7fffeafc595b:	lea		rax, [rbp - 0x1c]
0x7fffeafc595f:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc5969:	cmp		rax, rbx
0x7fffeafc596c:	ja		0x7fffeafc5cca
0x7fffeafc5972:	movabs		rbx, 1
0x7fffeafc597c:	cmp		rax, rbx
0x7fffeafc597f:	jb		0x7fffeafc5cca
0x7fffeafc5985:	pop		rax
0x7fffeafc5986:	pop		rbx
0x7fffeafc5987:	mov		dword ptr [rbp - 0x1c], r8d
0x7fffeafc598b:	push		rbx
0x7fffeafc598c:	push		rax
0x7fffeafc598d:	lea		rax, [rbp - 0x20]
0x7fffeafc5991:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc599b:	cmp		rax, rbx
0x7fffeafc599e:	ja		0x7fffeafc5cca
0x7fffeafc59a4:	movabs		rbx, 1
0x7fffeafc59ae:	cmp		rax, rbx
0x7fffeafc59b1:	jb		0x7fffeafc5cca
0x7fffeafc59b7:	pop		rax
0x7fffeafc59b8:	pop		rbx
0x7fffeafc59b9:	mov		dword ptr [rbp - 0x20], 0
0x7fffeafc59c0:	mov		rax, qword ptr [rbp - 8]
0x7fffeafc59c4:	mov		rax, qword ptr [rax]
0x7fffeafc59c7:	push		rbx
0x7fffeafc59c8:	push		rax
0x7fffeafc59c9:	lea		rax, [rax]
0x7fffeafc59cc:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc59d6:	cmp		rax, rbx
0x7fffeafc59d9:	ja		0x7fffeafc5cca
0x7fffeafc59df:	movabs		rbx, 1
0x7fffeafc59e9:	cmp		rax, rbx
0x7fffeafc59ec:	jb		0x7fffeafc5cca
0x7fffeafc59f2:	pop		rax
0x7fffeafc59f3:	pop		rbx
0x7fffeafc59f4:	mov		dword ptr [rax], 0
0x7fffeafc59fa:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafc59fe:	mov		rax, qword ptr [rax]
0x7fffeafc5a01:	push		rbx
0x7fffeafc5a02:	push		rax
0x7fffeafc5a03:	lea		rax, [rax]
0x7fffeafc5a06:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc5a10:	cmp		rax, rbx
0x7fffeafc5a13:	ja		0x7fffeafc5cca
0x7fffeafc5a19:	movabs		rbx, 1
0x7fffeafc5a23:	cmp		rax, rbx
0x7fffeafc5a26:	jb		0x7fffeafc5cca
0x7fffeafc5a2c:	pop		rax
0x7fffeafc5a2d:	pop		rbx
0x7fffeafc5a2e:	mov		byte ptr [rax], 0x6e
0x7fffeafc5a31:	lea		rdi, [rip + 0x2c2645c]
0x7fffeafc5a38:	call		0x7fffeafd3ff0
0x7fffeafc5a3d:	push		rbx
0x7fffeafc5a3e:	push		rax
0x7fffeafc5a3f:	lea		rax, [rbp - 0x24]
0x7fffeafc5a43:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc5a4d:	cmp		rax, rbx
0x7fffeafc5a50:	ja		0x7fffeafc5cca
0x7fffeafc5a56:	movabs		rbx, 1
0x7fffeafc5a60:	cmp		rax, rbx
0x7fffeafc5a63:	jb		0x7fffeafc5cca
0x7fffeafc5a69:	pop		rax
0x7fffeafc5a6a:	pop		rbx
0x7fffeafc5a6b:	mov		dword ptr [rbp - 0x24], 0
0x7fffeafc5a72:	push		rbx
0x7fffeafc5a73:	push		rax
0x7fffeafc5a74:	lea		rax, [rbp - 0x28]
0x7fffeafc5a78:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc5a82:	cmp		rax, rbx
0x7fffeafc5a85:	ja		0x7fffeafc5cca
0x7fffeafc5a8b:	movabs		rbx, 1
0x7fffeafc5a95:	cmp		rax, rbx
0x7fffeafc5a98:	jb		0x7fffeafc5cca
0x7fffeafc5a9e:	pop		rax
0x7fffeafc5a9f:	pop		rbx
0x7fffeafc5aa0:	mov		dword ptr [rbp - 0x28], 0
0x7fffeafc5aa7:	push		rbx
0x7fffeafc5aa8:	push		rax
0x7fffeafc5aa9:	lea		rax, [rbp - 0x28]
0x7fffeafc5aad:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc5ab7:	cmp		rax, rbx
0x7fffeafc5aba:	ja		0x7fffeafc5cca
0x7fffeafc5ac0:	movabs		rbx, 1
0x7fffeafc5aca:	cmp		rax, rbx
0x7fffeafc5acd:	jb		0x7fffeafc5cca
0x7fffeafc5ad3:	pop		rax
0x7fffeafc5ad4:	pop		rbx
0x7fffeafc5ad5:	mov		dword ptr [rbp - 0x28], 1
0x7fffeafc5adc:	mov		eax, dword ptr [rbp - 0x28]
0x7fffeafc5adf:	cmp		eax, dword ptr [rbp - 0x14]
0x7fffeafc5ae2:	jg		0x7fffeafc5ba6
0x7fffeafc5ae8:	xor		eax, eax
0x7fffeafc5aea:	sub		eax, dword ptr [rbp - 0x28]
0x7fffeafc5aed:	imul		eax, dword ptr [rbp - 0x1c]
0x7fffeafc5af1:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafc5af5:	mov		rcx, qword ptr [rcx]
0x7fffeafc5af8:	movsxd		rdx, dword ptr [rbp - 0x28]
0x7fffeafc5afc:	push		rbx
0x7fffeafc5afd:	push		rax
0x7fffeafc5afe:	lea		rax, [rcx + rdx*4]
0x7fffeafc5b02:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc5b0c:	cmp		rax, rbx
0x7fffeafc5b0f:	ja		0x7fffeafc5cca
0x7fffeafc5b15:	movabs		rbx, 1
0x7fffeafc5b1f:	cmp		rax, rbx
0x7fffeafc5b22:	jb		0x7fffeafc5cca
0x7fffeafc5b28:	pop		rax
0x7fffeafc5b29:	pop		rbx
0x7fffeafc5b2a:	mov		dword ptr [rcx + rdx*4], eax
0x7fffeafc5b2d:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafc5b31:	mov		rcx, qword ptr [rcx]
0x7fffeafc5b34:	movsxd		rdx, dword ptr [rbp - 0x28]
0x7fffeafc5b38:	push		rbx
0x7fffeafc5b39:	push		rax
0x7fffeafc5b3a:	lea		rax, [rcx + rdx]
0x7fffeafc5b3e:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc5b48:	cmp		rax, rbx
0x7fffeafc5b4b:	ja		0x7fffeafc5cca
0x7fffeafc5b51:	movabs		rbx, 1
0x7fffeafc5b5b:	cmp		rax, rbx
0x7fffeafc5b5e:	jb		0x7fffeafc5cca
0x7fffeafc5b64:	pop		rax
0x7fffeafc5b65:	pop		rbx
0x7fffeafc5b66:	mov		byte ptr [rcx + rdx], 0x2d
0x7fffeafc5b6a:	mov		eax, dword ptr [rbp - 0x28]
0x7fffeafc5b6d:	add		eax, 1
0x7fffeafc5b70:	push		rbx
0x7fffeafc5b71:	push		rax
0x7fffeafc5b72:	lea		rax, [rbp - 0x28]
0x7fffeafc5b76:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc5b80:	cmp		rax, rbx
0x7fffeafc5b83:	ja		0x7fffeafc5cca
0x7fffeafc5b89:	movabs		rbx, 1
0x7fffeafc5b93:	cmp		rax, rbx
0x7fffeafc5b96:	jb		0x7fffeafc5cca
0x7fffeafc5b9c:	pop		rax
0x7fffeafc5b9d:	pop		rbx
0x7fffeafc5b9e:	mov		dword ptr [rbp - 0x28], eax
0x7fffeafc5ba1:	jmp		0x7fffeafc5adc
0x7fffeafc5ba6:	push		rbx
0x7fffeafc5ba7:	push		rax
0x7fffeafc5ba8:	lea		rax, [rbp - 0x24]
0x7fffeafc5bac:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc5bb6:	cmp		rax, rbx
0x7fffeafc5bb9:	ja		0x7fffeafc5cca
0x7fffeafc5bbf:	movabs		rbx, 1
0x7fffeafc5bc9:	cmp		rax, rbx
0x7fffeafc5bcc:	jb		0x7fffeafc5cca
0x7fffeafc5bd2:	pop		rax
0x7fffeafc5bd3:	pop		rbx
0x7fffeafc5bd4:	mov		dword ptr [rbp - 0x24], 1
0x7fffeafc5bdb:	mov		eax, dword ptr [rbp - 0x24]
0x7fffeafc5bde:	cmp		eax, dword ptr [rbp - 0x18]
0x7fffeafc5be1:	jg		0x7fffeafc5ca3
0x7fffeafc5be7:	xor		eax, eax
0x7fffeafc5be9:	sub		eax, dword ptr [rbp - 0x24]
0x7fffeafc5bec:	imul		eax, dword ptr [rbp - 0x1c]
0x7fffeafc5bf0:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafc5bf4:	movsxd		rdx, dword ptr [rbp - 0x24]
0x7fffeafc5bf8:	mov		rcx, qword ptr [rcx + rdx*8]
0x7fffeafc5bfc:	push		rbx
0x7fffeafc5bfd:	push		rax
0x7fffeafc5bfe:	lea		rax, [rcx]
0x7fffeafc5c01:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc5c0b:	cmp		rax, rbx
0x7fffeafc5c0e:	ja		0x7fffeafc5cca
0x7fffeafc5c14:	movabs		rbx, 1
0x7fffeafc5c1e:	cmp		rax, rbx
0x7fffeafc5c21:	jb		0x7fffeafc5cca
0x7fffeafc5c27:	pop		rax
0x7fffeafc5c28:	pop		rbx
0x7fffeafc5c29:	mov		dword ptr [rcx], eax
0x7fffeafc5c2b:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafc5c2f:	movsxd		rdx, dword ptr [rbp - 0x24]
0x7fffeafc5c33:	mov		rcx, qword ptr [rcx + rdx*8]
0x7fffeafc5c37:	push		rbx
0x7fffeafc5c38:	push		rax
0x7fffeafc5c39:	lea		rax, [rcx]
0x7fffeafc5c3c:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc5c46:	cmp		rax, rbx
0x7fffeafc5c49:	ja		0x7fffeafc5cca
0x7fffeafc5c4f:	movabs		rbx, 1
0x7fffeafc5c59:	cmp		rax, rbx
0x7fffeafc5c5c:	jb		0x7fffeafc5cca
0x7fffeafc5c62:	pop		rax
0x7fffeafc5c63:	pop		rbx
0x7fffeafc5c64:	mov		byte ptr [rcx], 0x7c
0x7fffeafc5c67:	mov		eax, dword ptr [rbp - 0x24]
0x7fffeafc5c6a:	add		eax, 1
0x7fffeafc5c6d:	push		rbx
0x7fffeafc5c6e:	push		rax
0x7fffeafc5c6f:	lea		rax, [rbp - 0x24]
0x7fffeafc5c73:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc5c7d:	cmp		rax, rbx
0x7fffeafc5c80:	ja		0x7fffeafc5cca
0x7fffeafc5c86:	movabs		rbx, 1
0x7fffeafc5c90:	cmp		rax, rbx
0x7fffeafc5c93:	jb		0x7fffeafc5cca
0x7fffeafc5c99:	pop		rax
0x7fffeafc5c9a:	pop		rbx
0x7fffeafc5c9b:	mov		dword ptr [rbp - 0x24], eax
0x7fffeafc5c9e:	jmp		0x7fffeafc5bdb
0x7fffeafc5ca3:	add		rsp, 0x30
0x7fffeafc5ca7:	pop		rbp
0x7fffeafc5ca8:	movabs		r11, 0x7fffe87c3ca8
0x7fffeafc5cb2:	mov		r10, qword ptr [r11]
0x7fffeafc5cb5:	add		r10, r11
0x7fffeafc5cb8:	sub		qword ptr [r11], 8
0x7fffeafc5cbc:	mov		r11, qword ptr [r10]
0x7fffeafc5cbf:	cmp		qword ptr [rsp], r11
0x7fffeafc5cc3:	jne		0x7fffeafc5cd6
0x7fffeafc5cc9:	ret		
0x7fffeafc5cca:	pop		rax
0x7fffeafc5ccb:	pop		rbx
0x7fffeafc5ccc:	mov		edi, 0xffffffff
0x7fffeafc5cd1:	call		0x7fffeafd41d0
0x7fffeafc5cd6:	mov		edi, 0xffffffff
0x7fffeafc5cdb:	call		0x7fffeafd41d0
disassembling symbol '.LBB2_1':
textAddr: 0x7fffeafc5adc, textSize: 202
0x7fffeafc5adc:	mov		eax, dword ptr [rbp - 0x28]
0x7fffeafc5adf:	cmp		eax, dword ptr [rbp - 0x14]
0x7fffeafc5ae2:	jg		0x7fffeafc5ba6
0x7fffeafc5ae8:	xor		eax, eax
0x7fffeafc5aea:	sub		eax, dword ptr [rbp - 0x28]
0x7fffeafc5aed:	imul		eax, dword ptr [rbp - 0x1c]
0x7fffeafc5af1:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafc5af5:	mov		rcx, qword ptr [rcx]
0x7fffeafc5af8:	movsxd		rdx, dword ptr [rbp - 0x28]
0x7fffeafc5afc:	push		rbx
0x7fffeafc5afd:	push		rax
0x7fffeafc5afe:	lea		rax, [rcx + rdx*4]
0x7fffeafc5b02:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc5b0c:	cmp		rax, rbx
0x7fffeafc5b0f:	ja		0x7fffeafc5cca
0x7fffeafc5b15:	movabs		rbx, 1
0x7fffeafc5b1f:	cmp		rax, rbx
0x7fffeafc5b22:	jb		0x7fffeafc5cca
0x7fffeafc5b28:	pop		rax
0x7fffeafc5b29:	pop		rbx
0x7fffeafc5b2a:	mov		dword ptr [rcx + rdx*4], eax
0x7fffeafc5b2d:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafc5b31:	mov		rcx, qword ptr [rcx]
0x7fffeafc5b34:	movsxd		rdx, dword ptr [rbp - 0x28]
0x7fffeafc5b38:	push		rbx
0x7fffeafc5b39:	push		rax
0x7fffeafc5b3a:	lea		rax, [rcx + rdx]
0x7fffeafc5b3e:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc5b48:	cmp		rax, rbx
0x7fffeafc5b4b:	ja		0x7fffeafc5cca
0x7fffeafc5b51:	movabs		rbx, 1
0x7fffeafc5b5b:	cmp		rax, rbx
0x7fffeafc5b5e:	jb		0x7fffeafc5cca
0x7fffeafc5b64:	pop		rax
0x7fffeafc5b65:	pop		rbx
0x7fffeafc5b66:	mov		byte ptr [rcx + rdx], 0x2d
0x7fffeafc5b6a:	mov		eax, dword ptr [rbp - 0x28]
0x7fffeafc5b6d:	add		eax, 1
0x7fffeafc5b70:	push		rbx
0x7fffeafc5b71:	push		rax
0x7fffeafc5b72:	lea		rax, [rbp - 0x28]
0x7fffeafc5b76:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc5b80:	cmp		rax, rbx
0x7fffeafc5b83:	ja		0x7fffeafc5cca
0x7fffeafc5b89:	movabs		rbx, 1
0x7fffeafc5b93:	cmp		rax, rbx
0x7fffeafc5b96:	jb		0x7fffeafc5cca
0x7fffeafc5b9c:	pop		rax
0x7fffeafc5b9d:	pop		rbx
0x7fffeafc5b9e:	mov		dword ptr [rbp - 0x28], eax
0x7fffeafc5ba1:	jmp		0x7fffeafc5adc
disassembling symbol '.LBB2_4':
textAddr: 0x7fffeafc5ba6, textSize: 53
0x7fffeafc5ba6:	push		rbx
0x7fffeafc5ba7:	push		rax
0x7fffeafc5ba8:	lea		rax, [rbp - 0x24]
0x7fffeafc5bac:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc5bb6:	cmp		rax, rbx
0x7fffeafc5bb9:	ja		0x7fffeafc5cca
0x7fffeafc5bbf:	movabs		rbx, 1
0x7fffeafc5bc9:	cmp		rax, rbx
0x7fffeafc5bcc:	jb		0x7fffeafc5cca
0x7fffeafc5bd2:	pop		rax
0x7fffeafc5bd3:	pop		rbx
0x7fffeafc5bd4:	mov		dword ptr [rbp - 0x24], 1
disassembling symbol '.LBB2_5':
textAddr: 0x7fffeafc5bdb, textSize: 200
0x7fffeafc5bdb:	mov		eax, dword ptr [rbp - 0x24]
0x7fffeafc5bde:	cmp		eax, dword ptr [rbp - 0x18]
0x7fffeafc5be1:	jg		0x7fffeafc5ca3
0x7fffeafc5be7:	xor		eax, eax
0x7fffeafc5be9:	sub		eax, dword ptr [rbp - 0x24]
0x7fffeafc5bec:	imul		eax, dword ptr [rbp - 0x1c]
0x7fffeafc5bf0:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafc5bf4:	movsxd		rdx, dword ptr [rbp - 0x24]
0x7fffeafc5bf8:	mov		rcx, qword ptr [rcx + rdx*8]
0x7fffeafc5bfc:	push		rbx
0x7fffeafc5bfd:	push		rax
0x7fffeafc5bfe:	lea		rax, [rcx]
0x7fffeafc5c01:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc5c0b:	cmp		rax, rbx
0x7fffeafc5c0e:	ja		0x7fffeafc5cca
0x7fffeafc5c14:	movabs		rbx, 1
0x7fffeafc5c1e:	cmp		rax, rbx
0x7fffeafc5c21:	jb		0x7fffeafc5cca
0x7fffeafc5c27:	pop		rax
0x7fffeafc5c28:	pop		rbx
0x7fffeafc5c29:	mov		dword ptr [rcx], eax
0x7fffeafc5c2b:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafc5c2f:	movsxd		rdx, dword ptr [rbp - 0x24]
0x7fffeafc5c33:	mov		rcx, qword ptr [rcx + rdx*8]
0x7fffeafc5c37:	push		rbx
0x7fffeafc5c38:	push		rax
0x7fffeafc5c39:	lea		rax, [rcx]
0x7fffeafc5c3c:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc5c46:	cmp		rax, rbx
0x7fffeafc5c49:	ja		0x7fffeafc5cca
0x7fffeafc5c4f:	movabs		rbx, 1
0x7fffeafc5c59:	cmp		rax, rbx
0x7fffeafc5c5c:	jb		0x7fffeafc5cca
0x7fffeafc5c62:	pop		rax
0x7fffeafc5c63:	pop		rbx
0x7fffeafc5c64:	mov		byte ptr [rcx], 0x7c
0x7fffeafc5c67:	mov		eax, dword ptr [rbp - 0x24]
0x7fffeafc5c6a:	add		eax, 1
0x7fffeafc5c6d:	push		rbx
0x7fffeafc5c6e:	push		rax
0x7fffeafc5c6f:	lea		rax, [rbp - 0x24]
0x7fffeafc5c73:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc5c7d:	cmp		rax, rbx
0x7fffeafc5c80:	ja		0x7fffeafc5cca
0x7fffeafc5c86:	movabs		rbx, 1
0x7fffeafc5c90:	cmp		rax, rbx
0x7fffeafc5c93:	jb		0x7fffeafc5cca
0x7fffeafc5c99:	pop		rax
0x7fffeafc5c9a:	pop		rbx
0x7fffeafc5c9b:	mov		dword ptr [rbp - 0x24], eax
0x7fffeafc5c9e:	jmp		0x7fffeafc5bdb
disassembling symbol '.LBB2_8':
textAddr: 0x7fffeafc5ca3, textSize: 39
0x7fffeafc5ca3:	add		rsp, 0x30
0x7fffeafc5ca7:	pop		rbp
0x7fffeafc5ca8:	movabs		r11, 0x7fffe87c3ca8
0x7fffeafc5cb2:	mov		r10, qword ptr [r11]
0x7fffeafc5cb5:	add		r10, r11
0x7fffeafc5cb8:	sub		qword ptr [r11], 8
0x7fffeafc5cbc:	mov		r11, qword ptr [r10]
0x7fffeafc5cbf:	cmp		qword ptr [rsp], r11
0x7fffeafc5cc3:	jne		0x7fffeafc5cd6
0x7fffeafc5cc9:	ret		
disassembling symbol '.LBB2_9':
textAddr: 0x7fffeafc5cca, textSize: 12
0x7fffeafc5cca:	pop		rax
0x7fffeafc5ccb:	pop		rbx
0x7fffeafc5ccc:	mov		edi, 0xffffffff
0x7fffeafc5cd1:	call		0x7fffeafd41d0
disassembling symbol '.LBB2_10':
textAddr: 0x7fffeafc5cd6, textSize: 10
0x7fffeafc5cd6:	mov		edi, 0xffffffff
0x7fffeafc5cdb:	call		0x7fffeafd41d0
disassembling symbol 'my_strlen':
textAddr: 0x7fffeafc5ce0, textSize: 288
0x7fffeafc5ce0:	movabs		r11, 0x7fffe87c3ca8
0x7fffeafc5cea:	add		qword ptr [r11], 8
0x7fffeafc5cee:	mov		r10, qword ptr [r11]
0x7fffeafc5cf1:	add		r11, r10
0x7fffeafc5cf4:	mov		r10, qword ptr [rsp]
0x7fffeafc5cf8:	mov		qword ptr [r11], r10
0x7fffeafc5cfb:	push		rbp
0x7fffeafc5cfc:	mov		rbp, rsp
0x7fffeafc5cff:	push		rbx
0x7fffeafc5d00:	push		rax
0x7fffeafc5d01:	lea		rax, [rbp - 8]
0x7fffeafc5d05:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc5d0f:	cmp		rax, rbx
0x7fffeafc5d12:	ja		0x7fffeafc5de6
0x7fffeafc5d18:	movabs		rbx, 1
0x7fffeafc5d22:	cmp		rax, rbx
0x7fffeafc5d25:	jb		0x7fffeafc5de6
0x7fffeafc5d2b:	pop		rax
0x7fffeafc5d2c:	pop		rbx
0x7fffeafc5d2d:	mov		qword ptr [rbp - 8], rdi
0x7fffeafc5d31:	mov		rax, qword ptr [rbp - 8]
0x7fffeafc5d35:	push		rbx
0x7fffeafc5d36:	push		rax
0x7fffeafc5d37:	lea		rax, [rbp - 0x10]
0x7fffeafc5d3b:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc5d45:	cmp		rax, rbx
0x7fffeafc5d48:	ja		0x7fffeafc5de6
0x7fffeafc5d4e:	movabs		rbx, 1
0x7fffeafc5d58:	cmp		rax, rbx
0x7fffeafc5d5b:	jb		0x7fffeafc5de6
0x7fffeafc5d61:	pop		rax
0x7fffeafc5d62:	pop		rbx
0x7fffeafc5d63:	mov		qword ptr [rbp - 0x10], rax
0x7fffeafc5d67:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafc5d6b:	cmp		byte ptr [rax], 0
0x7fffeafc5d6e:	je		0x7fffeafc5db8
0x7fffeafc5d74:	jmp		0x7fffeafc5d79
0x7fffeafc5d79:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafc5d7d:	add		rax, 1
0x7fffeafc5d81:	push		rbx
0x7fffeafc5d82:	push		rax
0x7fffeafc5d83:	lea		rax, [rbp - 0x10]
0x7fffeafc5d87:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc5d91:	cmp		rax, rbx
0x7fffeafc5d94:	ja		0x7fffeafc5de6
0x7fffeafc5d9a:	movabs		rbx, 1
0x7fffeafc5da4:	cmp		rax, rbx
0x7fffeafc5da7:	jb		0x7fffeafc5de6
0x7fffeafc5dad:	pop		rax
0x7fffeafc5dae:	pop		rbx
0x7fffeafc5daf:	mov		qword ptr [rbp - 0x10], rax
0x7fffeafc5db3:	jmp		0x7fffeafc5d67
0x7fffeafc5db8:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafc5dbc:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafc5dc0:	sub		rax, rcx
0x7fffeafc5dc3:	pop		rbp
0x7fffeafc5dc4:	movabs		r11, 0x7fffe87c3ca8
0x7fffeafc5dce:	mov		r10, qword ptr [r11]
0x7fffeafc5dd1:	add		r10, r11
0x7fffeafc5dd4:	sub		qword ptr [r11], 8
0x7fffeafc5dd8:	mov		r11, qword ptr [r10]
0x7fffeafc5ddb:	cmp		qword ptr [rsp], r11
0x7fffeafc5ddf:	jne		0x7fffeafc5df2
0x7fffeafc5de5:	ret		
0x7fffeafc5de6:	pop		rax
0x7fffeafc5de7:	pop		rbx
0x7fffeafc5de8:	mov		edi, 0xffffffff
0x7fffeafc5ded:	call		0x7fffeafd41d0
0x7fffeafc5df2:	mov		edi, 0xffffffff
0x7fffeafc5df7:	call		0x7fffeafd41d0
0x7fffeafc5dfc:	nop		dword ptr [rax]
disassembling symbol '.LBB3_1':
textAddr: 0x7fffeafc5d67, textSize: 18
0x7fffeafc5d67:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafc5d6b:	cmp		byte ptr [rax], 0
0x7fffeafc5d6e:	je		0x7fffeafc5db8
0x7fffeafc5d74:	jmp		0x7fffeafc5d79
disassembling symbol '.LBB3_3':
textAddr: 0x7fffeafc5d79, textSize: 63
0x7fffeafc5d79:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafc5d7d:	add		rax, 1
0x7fffeafc5d81:	push		rbx
0x7fffeafc5d82:	push		rax
0x7fffeafc5d83:	lea		rax, [rbp - 0x10]
0x7fffeafc5d87:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc5d91:	cmp		rax, rbx
0x7fffeafc5d94:	ja		0x7fffeafc5de6
0x7fffeafc5d9a:	movabs		rbx, 1
0x7fffeafc5da4:	cmp		rax, rbx
0x7fffeafc5da7:	jb		0x7fffeafc5de6
0x7fffeafc5dad:	pop		rax
0x7fffeafc5dae:	pop		rbx
0x7fffeafc5daf:	mov		qword ptr [rbp - 0x10], rax
0x7fffeafc5db3:	jmp		0x7fffeafc5d67
disassembling symbol '.LBB3_4':
textAddr: 0x7fffeafc5db8, textSize: 46
0x7fffeafc5db8:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafc5dbc:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafc5dc0:	sub		rax, rcx
0x7fffeafc5dc3:	pop		rbp
0x7fffeafc5dc4:	movabs		r11, 0x7fffe87c3ca8
0x7fffeafc5dce:	mov		r10, qword ptr [r11]
0x7fffeafc5dd1:	add		r10, r11
0x7fffeafc5dd4:	sub		qword ptr [r11], 8
0x7fffeafc5dd8:	mov		r11, qword ptr [r10]
0x7fffeafc5ddb:	cmp		qword ptr [rsp], r11
0x7fffeafc5ddf:	jne		0x7fffeafc5df2
0x7fffeafc5de5:	ret		
disassembling symbol '.LBB3_5':
textAddr: 0x7fffeafc5de6, textSize: 12
0x7fffeafc5de6:	pop		rax
0x7fffeafc5de7:	pop		rbx
0x7fffeafc5de8:	mov		edi, 0xffffffff
0x7fffeafc5ded:	call		0x7fffeafd41d0
disassembling symbol '.LBB3_6':
textAddr: 0x7fffeafc5df2, textSize: 14
0x7fffeafc5df2:	mov		edi, 0xffffffff
0x7fffeafc5df7:	call		0x7fffeafd41d0
0x7fffeafc5dfc:	nop		dword ptr [rax]
disassembling symbol 'print_matrix':
textAddr: 0x7fffeafc5e00, textSize: 768
0x7fffeafc5e00:	movabs		r11, 0x7fffe87c3ca8
0x7fffeafc5e0a:	add		qword ptr [r11], 8
0x7fffeafc5e0e:	mov		r10, qword ptr [r11]
0x7fffeafc5e11:	add		r11, r10
0x7fffeafc5e14:	mov		r10, qword ptr [rsp]
0x7fffeafc5e18:	mov		qword ptr [r11], r10
0x7fffeafc5e1b:	push		rbp
0x7fffeafc5e1c:	mov		rbp, rsp
0x7fffeafc5e1f:	sub		rsp, 0x30
0x7fffeafc5e23:	push		rbx
0x7fffeafc5e24:	push		rax
0x7fffeafc5e25:	lea		rax, [rbp - 8]
0x7fffeafc5e29:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc5e33:	cmp		rax, rbx
0x7fffeafc5e36:	ja		0x7fffeafc60e9
0x7fffeafc5e3c:	movabs		rbx, 1
0x7fffeafc5e46:	cmp		rax, rbx
0x7fffeafc5e49:	jb		0x7fffeafc60e9
0x7fffeafc5e4f:	pop		rax
0x7fffeafc5e50:	pop		rbx
0x7fffeafc5e51:	mov		qword ptr [rbp - 8], rdi
0x7fffeafc5e55:	push		rbx
0x7fffeafc5e56:	push		rax
0x7fffeafc5e57:	lea		rax, [rbp - 0x10]
0x7fffeafc5e5b:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc5e65:	cmp		rax, rbx
0x7fffeafc5e68:	ja		0x7fffeafc60e9
0x7fffeafc5e6e:	movabs		rbx, 1
0x7fffeafc5e78:	cmp		rax, rbx
0x7fffeafc5e7b:	jb		0x7fffeafc60e9
0x7fffeafc5e81:	pop		rax
0x7fffeafc5e82:	pop		rbx
0x7fffeafc5e83:	mov		qword ptr [rbp - 0x10], rsi
0x7fffeafc5e87:	push		rbx
0x7fffeafc5e88:	push		rax
0x7fffeafc5e89:	lea		rax, [rbp - 0x18]
0x7fffeafc5e8d:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc5e97:	cmp		rax, rbx
0x7fffeafc5e9a:	ja		0x7fffeafc60e9
0x7fffeafc5ea0:	movabs		rbx, 1
0x7fffeafc5eaa:	cmp		rax, rbx
0x7fffeafc5ead:	jb		0x7fffeafc60e9
0x7fffeafc5eb3:	pop		rax
0x7fffeafc5eb4:	pop		rbx
0x7fffeafc5eb5:	mov		qword ptr [rbp - 0x18], rdx
0x7fffeafc5eb9:	mov		rdi, qword ptr [rbp - 0x10]
0x7fffeafc5ebd:	call		0x7fffeafc5ce0
0x7fffeafc5ec2:	push		rbx
0x7fffeafc5ec3:	push		rax
0x7fffeafc5ec4:	lea		rax, [rbp - 0x1c]
0x7fffeafc5ec8:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc5ed2:	cmp		rax, rbx
0x7fffeafc5ed5:	ja		0x7fffeafc60e9
0x7fffeafc5edb:	movabs		rbx, 1
0x7fffeafc5ee5:	cmp		rax, rbx
0x7fffeafc5ee8:	jb		0x7fffeafc60e9
0x7fffeafc5eee:	pop		rax
0x7fffeafc5eef:	pop		rbx
0x7fffeafc5ef0:	mov		dword ptr [rbp - 0x1c], eax
0x7fffeafc5ef3:	mov		rdi, qword ptr [rbp - 0x18]
0x7fffeafc5ef7:	call		0x7fffeafc5ce0
0x7fffeafc5efc:	push		rbx
0x7fffeafc5efd:	push		rax
0x7fffeafc5efe:	lea		rax, [rbp - 0x20]
0x7fffeafc5f02:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc5f0c:	cmp		rax, rbx
0x7fffeafc5f0f:	ja		0x7fffeafc60e9
0x7fffeafc5f15:	movabs		rbx, 1
0x7fffeafc5f1f:	cmp		rax, rbx
0x7fffeafc5f22:	jb		0x7fffeafc60e9
0x7fffeafc5f28:	pop		rax
0x7fffeafc5f29:	pop		rbx
0x7fffeafc5f2a:	mov		dword ptr [rbp - 0x20], eax
0x7fffeafc5f2d:	push		rbx
0x7fffeafc5f2e:	push		rax
0x7fffeafc5f2f:	lea		rax, [rbp - 0x24]
0x7fffeafc5f33:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc5f3d:	cmp		rax, rbx
0x7fffeafc5f40:	ja		0x7fffeafc60e9
0x7fffeafc5f46:	movabs		rbx, 1
0x7fffeafc5f50:	cmp		rax, rbx
0x7fffeafc5f53:	jb		0x7fffeafc60e9
0x7fffeafc5f59:	pop		rax
0x7fffeafc5f5a:	pop		rbx
0x7fffeafc5f5b:	mov		dword ptr [rbp - 0x24], 0
0x7fffeafc5f62:	mov		eax, dword ptr [rbp - 0x24]
0x7fffeafc5f65:	cmp		eax, dword ptr [rbp - 0x1c]
0x7fffeafc5f68:	jge		0x7fffeafc5faf
0x7fffeafc5f6e:	jmp		0x7fffeafc5f73
0x7fffeafc5f73:	mov		eax, dword ptr [rbp - 0x24]
0x7fffeafc5f76:	add		eax, 1
0x7fffeafc5f79:	push		rbx
0x7fffeafc5f7a:	push		rax
0x7fffeafc5f7b:	lea		rax, [rbp - 0x24]
0x7fffeafc5f7f:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc5f89:	cmp		rax, rbx
0x7fffeafc5f8c:	ja		0x7fffeafc60e9
0x7fffeafc5f92:	movabs		rbx, 1
0x7fffeafc5f9c:	cmp		rax, rbx
0x7fffeafc5f9f:	jb		0x7fffeafc60e9
0x7fffeafc5fa5:	pop		rax
0x7fffeafc5fa6:	pop		rbx
0x7fffeafc5fa7:	mov		dword ptr [rbp - 0x24], eax
0x7fffeafc5faa:	jmp		0x7fffeafc5f62
0x7fffeafc5faf:	push		rbx
0x7fffeafc5fb0:	push		rax
0x7fffeafc5fb1:	lea		rax, [rbp - 0x28]
0x7fffeafc5fb5:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc5fbf:	cmp		rax, rbx
0x7fffeafc5fc2:	ja		0x7fffeafc60e9
0x7fffeafc5fc8:	movabs		rbx, 1
0x7fffeafc5fd2:	cmp		rax, rbx
0x7fffeafc5fd5:	jb		0x7fffeafc60e9
0x7fffeafc5fdb:	pop		rax
0x7fffeafc5fdc:	pop		rbx
0x7fffeafc5fdd:	mov		dword ptr [rbp - 0x28], 0
0x7fffeafc5fe4:	mov		eax, dword ptr [rbp - 0x28]
0x7fffeafc5fe7:	cmp		eax, dword ptr [rbp - 0x20]
0x7fffeafc5fea:	jg		0x7fffeafc60c2
0x7fffeafc5ff0:	cmp		dword ptr [rbp - 0x28], 0
0x7fffeafc5ff4:	jle		0x7fffeafc5fff
0x7fffeafc5ffa:	jmp		0x7fffeafc5fff
0x7fffeafc5fff:	push		rbx
0x7fffeafc6000:	push		rax
0x7fffeafc6001:	lea		rax, [rbp - 0x2c]
0x7fffeafc6005:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc600f:	cmp		rax, rbx
0x7fffeafc6012:	ja		0x7fffeafc60e9
0x7fffeafc6018:	movabs		rbx, 1
0x7fffeafc6022:	cmp		rax, rbx
0x7fffeafc6025:	jb		0x7fffeafc60e9
0x7fffeafc602b:	pop		rax
0x7fffeafc602c:	pop		rbx
0x7fffeafc602d:	mov		dword ptr [rbp - 0x2c], 0
0x7fffeafc6034:	mov		eax, dword ptr [rbp - 0x2c]
0x7fffeafc6037:	cmp		eax, dword ptr [rbp - 0x1c]
0x7fffeafc603a:	jg		0x7fffeafc6081
0x7fffeafc6040:	jmp		0x7fffeafc6045
0x7fffeafc6045:	mov		eax, dword ptr [rbp - 0x2c]
0x7fffeafc6048:	add		eax, 1
0x7fffeafc604b:	push		rbx
0x7fffeafc604c:	push		rax
0x7fffeafc604d:	lea		rax, [rbp - 0x2c]
0x7fffeafc6051:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc605b:	cmp		rax, rbx
0x7fffeafc605e:	ja		0x7fffeafc60e9
0x7fffeafc6064:	movabs		rbx, 1
0x7fffeafc606e:	cmp		rax, rbx
0x7fffeafc6071:	jb		0x7fffeafc60e9
0x7fffeafc6077:	pop		rax
0x7fffeafc6078:	pop		rbx
0x7fffeafc6079:	mov		dword ptr [rbp - 0x2c], eax
0x7fffeafc607c:	jmp		0x7fffeafc6034
0x7fffeafc6081:	jmp		0x7fffeafc6086
0x7fffeafc6086:	mov		eax, dword ptr [rbp - 0x28]
0x7fffeafc6089:	add		eax, 1
0x7fffeafc608c:	push		rbx
0x7fffeafc608d:	push		rax
0x7fffeafc608e:	lea		rax, [rbp - 0x28]
0x7fffeafc6092:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc609c:	cmp		rax, rbx
0x7fffeafc609f:	ja		0x7fffeafc60e9
0x7fffeafc60a5:	movabs		rbx, 1
0x7fffeafc60af:	cmp		rax, rbx
0x7fffeafc60b2:	jb		0x7fffeafc60e9
0x7fffeafc60b8:	pop		rax
0x7fffeafc60b9:	pop		rbx
0x7fffeafc60ba:	mov		dword ptr [rbp - 0x28], eax
0x7fffeafc60bd:	jmp		0x7fffeafc5fe4
0x7fffeafc60c2:	add		rsp, 0x30
0x7fffeafc60c6:	pop		rbp
0x7fffeafc60c7:	movabs		r11, 0x7fffe87c3ca8
0x7fffeafc60d1:	mov		r10, qword ptr [r11]
0x7fffeafc60d4:	add		r10, r11
0x7fffeafc60d7:	sub		qword ptr [r11], 8
0x7fffeafc60db:	mov		r11, qword ptr [r10]
0x7fffeafc60de:	cmp		qword ptr [rsp], r11
0x7fffeafc60e2:	jne		0x7fffeafc60f5
0x7fffeafc60e8:	ret		
0x7fffeafc60e9:	pop		rax
0x7fffeafc60ea:	pop		rbx
0x7fffeafc60eb:	mov		edi, 0xffffffff
0x7fffeafc60f0:	call		0x7fffeafd41d0
0x7fffeafc60f5:	mov		edi, 0xffffffff
0x7fffeafc60fa:	call		0x7fffeafd41d0
0x7fffeafc60ff:	nop		
disassembling symbol '.LBB4_1':
textAddr: 0x7fffeafc5f62, textSize: 17
0x7fffeafc5f62:	mov		eax, dword ptr [rbp - 0x24]
0x7fffeafc5f65:	cmp		eax, dword ptr [rbp - 0x1c]
0x7fffeafc5f68:	jge		0x7fffeafc5faf
0x7fffeafc5f6e:	jmp		0x7fffeafc5f73
disassembling symbol '.LBB4_3':
textAddr: 0x7fffeafc5f73, textSize: 60
0x7fffeafc5f73:	mov		eax, dword ptr [rbp - 0x24]
0x7fffeafc5f76:	add		eax, 1
0x7fffeafc5f79:	push		rbx
0x7fffeafc5f7a:	push		rax
0x7fffeafc5f7b:	lea		rax, [rbp - 0x24]
0x7fffeafc5f7f:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc5f89:	cmp		rax, rbx
0x7fffeafc5f8c:	ja		0x7fffeafc60e9
0x7fffeafc5f92:	movabs		rbx, 1
0x7fffeafc5f9c:	cmp		rax, rbx
0x7fffeafc5f9f:	jb		0x7fffeafc60e9
0x7fffeafc5fa5:	pop		rax
0x7fffeafc5fa6:	pop		rbx
0x7fffeafc5fa7:	mov		dword ptr [rbp - 0x24], eax
0x7fffeafc5faa:	jmp		0x7fffeafc5f62
disassembling symbol '.LBB4_4':
textAddr: 0x7fffeafc5faf, textSize: 53
0x7fffeafc5faf:	push		rbx
0x7fffeafc5fb0:	push		rax
0x7fffeafc5fb1:	lea		rax, [rbp - 0x28]
0x7fffeafc5fb5:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc5fbf:	cmp		rax, rbx
0x7fffeafc5fc2:	ja		0x7fffeafc60e9
0x7fffeafc5fc8:	movabs		rbx, 1
0x7fffeafc5fd2:	cmp		rax, rbx
0x7fffeafc5fd5:	jb		0x7fffeafc60e9
0x7fffeafc5fdb:	pop		rax
0x7fffeafc5fdc:	pop		rbx
0x7fffeafc5fdd:	mov		dword ptr [rbp - 0x28], 0
disassembling symbol '.LBB4_5':
textAddr: 0x7fffeafc5fe4, textSize: 27
0x7fffeafc5fe4:	mov		eax, dword ptr [rbp - 0x28]
0x7fffeafc5fe7:	cmp		eax, dword ptr [rbp - 0x20]
0x7fffeafc5fea:	jg		0x7fffeafc60c2
0x7fffeafc5ff0:	cmp		dword ptr [rbp - 0x28], 0
0x7fffeafc5ff4:	jle		0x7fffeafc5fff
0x7fffeafc5ffa:	jmp		0x7fffeafc5fff
disassembling symbol '.LBB4_8':
textAddr: 0x7fffeafc5fff, textSize: 53
0x7fffeafc5fff:	push		rbx
0x7fffeafc6000:	push		rax
0x7fffeafc6001:	lea		rax, [rbp - 0x2c]
0x7fffeafc6005:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc600f:	cmp		rax, rbx
0x7fffeafc6012:	ja		0x7fffeafc60e9
0x7fffeafc6018:	movabs		rbx, 1
0x7fffeafc6022:	cmp		rax, rbx
0x7fffeafc6025:	jb		0x7fffeafc60e9
0x7fffeafc602b:	pop		rax
0x7fffeafc602c:	pop		rbx
0x7fffeafc602d:	mov		dword ptr [rbp - 0x2c], 0
disassembling symbol '.LBB4_9':
textAddr: 0x7fffeafc6034, textSize: 17
0x7fffeafc6034:	mov		eax, dword ptr [rbp - 0x2c]
0x7fffeafc6037:	cmp		eax, dword ptr [rbp - 0x1c]
0x7fffeafc603a:	jg		0x7fffeafc6081
0x7fffeafc6040:	jmp		0x7fffeafc6045
disassembling symbol '.LBB4_11':
textAddr: 0x7fffeafc6045, textSize: 60
0x7fffeafc6045:	mov		eax, dword ptr [rbp - 0x2c]
0x7fffeafc6048:	add		eax, 1
0x7fffeafc604b:	push		rbx
0x7fffeafc604c:	push		rax
0x7fffeafc604d:	lea		rax, [rbp - 0x2c]
0x7fffeafc6051:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc605b:	cmp		rax, rbx
0x7fffeafc605e:	ja		0x7fffeafc60e9
0x7fffeafc6064:	movabs		rbx, 1
0x7fffeafc606e:	cmp		rax, rbx
0x7fffeafc6071:	jb		0x7fffeafc60e9
0x7fffeafc6077:	pop		rax
0x7fffeafc6078:	pop		rbx
0x7fffeafc6079:	mov		dword ptr [rbp - 0x2c], eax
0x7fffeafc607c:	jmp		0x7fffeafc6034
disassembling symbol '.LBB4_12':
textAddr: 0x7fffeafc6081, textSize: 5
0x7fffeafc6081:	jmp		0x7fffeafc6086
disassembling symbol '.LBB4_13':
textAddr: 0x7fffeafc6086, textSize: 60
0x7fffeafc6086:	mov		eax, dword ptr [rbp - 0x28]
0x7fffeafc6089:	add		eax, 1
0x7fffeafc608c:	push		rbx
0x7fffeafc608d:	push		rax
0x7fffeafc608e:	lea		rax, [rbp - 0x28]
0x7fffeafc6092:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc609c:	cmp		rax, rbx
0x7fffeafc609f:	ja		0x7fffeafc60e9
0x7fffeafc60a5:	movabs		rbx, 1
0x7fffeafc60af:	cmp		rax, rbx
0x7fffeafc60b2:	jb		0x7fffeafc60e9
0x7fffeafc60b8:	pop		rax
0x7fffeafc60b9:	pop		rbx
0x7fffeafc60ba:	mov		dword ptr [rbp - 0x28], eax
0x7fffeafc60bd:	jmp		0x7fffeafc5fe4
disassembling symbol '.LBB4_14':
textAddr: 0x7fffeafc60c2, textSize: 39
0x7fffeafc60c2:	add		rsp, 0x30
0x7fffeafc60c6:	pop		rbp
0x7fffeafc60c7:	movabs		r11, 0x7fffe87c3ca8
0x7fffeafc60d1:	mov		r10, qword ptr [r11]
0x7fffeafc60d4:	add		r10, r11
0x7fffeafc60d7:	sub		qword ptr [r11], 8
0x7fffeafc60db:	mov		r11, qword ptr [r10]
0x7fffeafc60de:	cmp		qword ptr [rsp], r11
0x7fffeafc60e2:	jne		0x7fffeafc60f5
0x7fffeafc60e8:	ret		
disassembling symbol '.LBB4_15':
textAddr: 0x7fffeafc60e9, textSize: 12
0x7fffeafc60e9:	pop		rax
0x7fffeafc60ea:	pop		rbx
0x7fffeafc60eb:	mov		edi, 0xffffffff
0x7fffeafc60f0:	call		0x7fffeafd41d0
disassembling symbol '.LBB4_16':
textAddr: 0x7fffeafc60f5, textSize: 11
0x7fffeafc60f5:	mov		edi, 0xffffffff
0x7fffeafc60fa:	call		0x7fffeafd41d0
0x7fffeafc60ff:	nop		
disassembling symbol 'print_traceback':
textAddr: 0x7fffeafc6100, textSize: 768
0x7fffeafc6100:	movabs		r11, 0x7fffe87c3ca8
0x7fffeafc610a:	add		qword ptr [r11], 8
0x7fffeafc610e:	mov		r10, qword ptr [r11]
0x7fffeafc6111:	add		r11, r10
0x7fffeafc6114:	mov		r10, qword ptr [rsp]
0x7fffeafc6118:	mov		qword ptr [r11], r10
0x7fffeafc611b:	push		rbp
0x7fffeafc611c:	mov		rbp, rsp
0x7fffeafc611f:	sub		rsp, 0x30
0x7fffeafc6123:	push		rbx
0x7fffeafc6124:	push		rax
0x7fffeafc6125:	lea		rax, [rbp - 8]
0x7fffeafc6129:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc6133:	cmp		rax, rbx
0x7fffeafc6136:	ja		0x7fffeafc63e9
0x7fffeafc613c:	movabs		rbx, 1
0x7fffeafc6146:	cmp		rax, rbx
0x7fffeafc6149:	jb		0x7fffeafc63e9
0x7fffeafc614f:	pop		rax
0x7fffeafc6150:	pop		rbx
0x7fffeafc6151:	mov		qword ptr [rbp - 8], rdi
0x7fffeafc6155:	push		rbx
0x7fffeafc6156:	push		rax
0x7fffeafc6157:	lea		rax, [rbp - 0x10]
0x7fffeafc615b:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc6165:	cmp		rax, rbx
0x7fffeafc6168:	ja		0x7fffeafc63e9
0x7fffeafc616e:	movabs		rbx, 1
0x7fffeafc6178:	cmp		rax, rbx
0x7fffeafc617b:	jb		0x7fffeafc63e9
0x7fffeafc6181:	pop		rax
0x7fffeafc6182:	pop		rbx
0x7fffeafc6183:	mov		qword ptr [rbp - 0x10], rsi
0x7fffeafc6187:	push		rbx
0x7fffeafc6188:	push		rax
0x7fffeafc6189:	lea		rax, [rbp - 0x18]
0x7fffeafc618d:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc6197:	cmp		rax, rbx
0x7fffeafc619a:	ja		0x7fffeafc63e9
0x7fffeafc61a0:	movabs		rbx, 1
0x7fffeafc61aa:	cmp		rax, rbx
0x7fffeafc61ad:	jb		0x7fffeafc63e9
0x7fffeafc61b3:	pop		rax
0x7fffeafc61b4:	pop		rbx
0x7fffeafc61b5:	mov		qword ptr [rbp - 0x18], rdx
0x7fffeafc61b9:	mov		rdi, qword ptr [rbp - 0x10]
0x7fffeafc61bd:	call		0x7fffeafc5ce0
0x7fffeafc61c2:	push		rbx
0x7fffeafc61c3:	push		rax
0x7fffeafc61c4:	lea		rax, [rbp - 0x1c]
0x7fffeafc61c8:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc61d2:	cmp		rax, rbx
0x7fffeafc61d5:	ja		0x7fffeafc63e9
0x7fffeafc61db:	movabs		rbx, 1
0x7fffeafc61e5:	cmp		rax, rbx
0x7fffeafc61e8:	jb		0x7fffeafc63e9
0x7fffeafc61ee:	pop		rax
0x7fffeafc61ef:	pop		rbx
0x7fffeafc61f0:	mov		dword ptr [rbp - 0x1c], eax
0x7fffeafc61f3:	mov		rdi, qword ptr [rbp - 0x18]
0x7fffeafc61f7:	call		0x7fffeafc5ce0
0x7fffeafc61fc:	push		rbx
0x7fffeafc61fd:	push		rax
0x7fffeafc61fe:	lea		rax, [rbp - 0x20]
0x7fffeafc6202:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc620c:	cmp		rax, rbx
0x7fffeafc620f:	ja		0x7fffeafc63e9
0x7fffeafc6215:	movabs		rbx, 1
0x7fffeafc621f:	cmp		rax, rbx
0x7fffeafc6222:	jb		0x7fffeafc63e9
0x7fffeafc6228:	pop		rax
0x7fffeafc6229:	pop		rbx
0x7fffeafc622a:	mov		dword ptr [rbp - 0x20], eax
0x7fffeafc622d:	push		rbx
0x7fffeafc622e:	push		rax
0x7fffeafc622f:	lea		rax, [rbp - 0x24]
0x7fffeafc6233:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc623d:	cmp		rax, rbx
0x7fffeafc6240:	ja		0x7fffeafc63e9
0x7fffeafc6246:	movabs		rbx, 1
0x7fffeafc6250:	cmp		rax, rbx
0x7fffeafc6253:	jb		0x7fffeafc63e9
0x7fffeafc6259:	pop		rax
0x7fffeafc625a:	pop		rbx
0x7fffeafc625b:	mov		dword ptr [rbp - 0x24], 0
0x7fffeafc6262:	mov		eax, dword ptr [rbp - 0x24]
0x7fffeafc6265:	cmp		eax, dword ptr [rbp - 0x1c]
0x7fffeafc6268:	jge		0x7fffeafc62af
0x7fffeafc626e:	jmp		0x7fffeafc6273
0x7fffeafc6273:	mov		eax, dword ptr [rbp - 0x24]
0x7fffeafc6276:	add		eax, 1
0x7fffeafc6279:	push		rbx
0x7fffeafc627a:	push		rax
0x7fffeafc627b:	lea		rax, [rbp - 0x24]
0x7fffeafc627f:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc6289:	cmp		rax, rbx
0x7fffeafc628c:	ja		0x7fffeafc63e9
0x7fffeafc6292:	movabs		rbx, 1
0x7fffeafc629c:	cmp		rax, rbx
0x7fffeafc629f:	jb		0x7fffeafc63e9
0x7fffeafc62a5:	pop		rax
0x7fffeafc62a6:	pop		rbx
0x7fffeafc62a7:	mov		dword ptr [rbp - 0x24], eax
0x7fffeafc62aa:	jmp		0x7fffeafc6262
0x7fffeafc62af:	push		rbx
0x7fffeafc62b0:	push		rax
0x7fffeafc62b1:	lea		rax, [rbp - 0x28]
0x7fffeafc62b5:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc62bf:	cmp		rax, rbx
0x7fffeafc62c2:	ja		0x7fffeafc63e9
0x7fffeafc62c8:	movabs		rbx, 1
0x7fffeafc62d2:	cmp		rax, rbx
0x7fffeafc62d5:	jb		0x7fffeafc63e9
0x7fffeafc62db:	pop		rax
0x7fffeafc62dc:	pop		rbx
0x7fffeafc62dd:	mov		dword ptr [rbp - 0x28], 0
0x7fffeafc62e4:	mov		eax, dword ptr [rbp - 0x28]
0x7fffeafc62e7:	cmp		eax, dword ptr [rbp - 0x20]
0x7fffeafc62ea:	jg		0x7fffeafc63c2
0x7fffeafc62f0:	cmp		dword ptr [rbp - 0x28], 0
0x7fffeafc62f4:	jle		0x7fffeafc62ff
0x7fffeafc62fa:	jmp		0x7fffeafc62ff
0x7fffeafc62ff:	push		rbx
0x7fffeafc6300:	push		rax
0x7fffeafc6301:	lea		rax, [rbp - 0x2c]
0x7fffeafc6305:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc630f:	cmp		rax, rbx
0x7fffeafc6312:	ja		0x7fffeafc63e9
0x7fffeafc6318:	movabs		rbx, 1
0x7fffeafc6322:	cmp		rax, rbx
0x7fffeafc6325:	jb		0x7fffeafc63e9
0x7fffeafc632b:	pop		rax
0x7fffeafc632c:	pop		rbx
0x7fffeafc632d:	mov		dword ptr [rbp - 0x2c], 0
0x7fffeafc6334:	mov		eax, dword ptr [rbp - 0x2c]
0x7fffeafc6337:	cmp		eax, dword ptr [rbp - 0x1c]
0x7fffeafc633a:	jg		0x7fffeafc6381
0x7fffeafc6340:	jmp		0x7fffeafc6345
0x7fffeafc6345:	mov		eax, dword ptr [rbp - 0x2c]
0x7fffeafc6348:	add		eax, 1
0x7fffeafc634b:	push		rbx
0x7fffeafc634c:	push		rax
0x7fffeafc634d:	lea		rax, [rbp - 0x2c]
0x7fffeafc6351:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc635b:	cmp		rax, rbx
0x7fffeafc635e:	ja		0x7fffeafc63e9
0x7fffeafc6364:	movabs		rbx, 1
0x7fffeafc636e:	cmp		rax, rbx
0x7fffeafc6371:	jb		0x7fffeafc63e9
0x7fffeafc6377:	pop		rax
0x7fffeafc6378:	pop		rbx
0x7fffeafc6379:	mov		dword ptr [rbp - 0x2c], eax
0x7fffeafc637c:	jmp		0x7fffeafc6334
0x7fffeafc6381:	jmp		0x7fffeafc6386
0x7fffeafc6386:	mov		eax, dword ptr [rbp - 0x28]
0x7fffeafc6389:	add		eax, 1
0x7fffeafc638c:	push		rbx
0x7fffeafc638d:	push		rax
0x7fffeafc638e:	lea		rax, [rbp - 0x28]
0x7fffeafc6392:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc639c:	cmp		rax, rbx
0x7fffeafc639f:	ja		0x7fffeafc63e9
0x7fffeafc63a5:	movabs		rbx, 1
0x7fffeafc63af:	cmp		rax, rbx
0x7fffeafc63b2:	jb		0x7fffeafc63e9
0x7fffeafc63b8:	pop		rax
0x7fffeafc63b9:	pop		rbx
0x7fffeafc63ba:	mov		dword ptr [rbp - 0x28], eax
0x7fffeafc63bd:	jmp		0x7fffeafc62e4
0x7fffeafc63c2:	add		rsp, 0x30
0x7fffeafc63c6:	pop		rbp
0x7fffeafc63c7:	movabs		r11, 0x7fffe87c3ca8
0x7fffeafc63d1:	mov		r10, qword ptr [r11]
0x7fffeafc63d4:	add		r10, r11
0x7fffeafc63d7:	sub		qword ptr [r11], 8
0x7fffeafc63db:	mov		r11, qword ptr [r10]
0x7fffeafc63de:	cmp		qword ptr [rsp], r11
0x7fffeafc63e2:	jne		0x7fffeafc63f5
0x7fffeafc63e8:	ret		
0x7fffeafc63e9:	pop		rax
0x7fffeafc63ea:	pop		rbx
0x7fffeafc63eb:	mov		edi, 0xffffffff
0x7fffeafc63f0:	call		0x7fffeafd41d0
0x7fffeafc63f5:	mov		edi, 0xffffffff
0x7fffeafc63fa:	call		0x7fffeafd41d0
0x7fffeafc63ff:	nop		
disassembling symbol '.LBB5_1':
textAddr: 0x7fffeafc6262, textSize: 17
0x7fffeafc6262:	mov		eax, dword ptr [rbp - 0x24]
0x7fffeafc6265:	cmp		eax, dword ptr [rbp - 0x1c]
0x7fffeafc6268:	jge		0x7fffeafc62af
0x7fffeafc626e:	jmp		0x7fffeafc6273
disassembling symbol '.LBB5_3':
textAddr: 0x7fffeafc6273, textSize: 60
0x7fffeafc6273:	mov		eax, dword ptr [rbp - 0x24]
0x7fffeafc6276:	add		eax, 1
0x7fffeafc6279:	push		rbx
0x7fffeafc627a:	push		rax
0x7fffeafc627b:	lea		rax, [rbp - 0x24]
0x7fffeafc627f:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc6289:	cmp		rax, rbx
0x7fffeafc628c:	ja		0x7fffeafc63e9
0x7fffeafc6292:	movabs		rbx, 1
0x7fffeafc629c:	cmp		rax, rbx
0x7fffeafc629f:	jb		0x7fffeafc63e9
0x7fffeafc62a5:	pop		rax
0x7fffeafc62a6:	pop		rbx
0x7fffeafc62a7:	mov		dword ptr [rbp - 0x24], eax
0x7fffeafc62aa:	jmp		0x7fffeafc6262
disassembling symbol '.LBB5_4':
textAddr: 0x7fffeafc62af, textSize: 53
0x7fffeafc62af:	push		rbx
0x7fffeafc62b0:	push		rax
0x7fffeafc62b1:	lea		rax, [rbp - 0x28]
0x7fffeafc62b5:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc62bf:	cmp		rax, rbx
0x7fffeafc62c2:	ja		0x7fffeafc63e9
0x7fffeafc62c8:	movabs		rbx, 1
0x7fffeafc62d2:	cmp		rax, rbx
0x7fffeafc62d5:	jb		0x7fffeafc63e9
0x7fffeafc62db:	pop		rax
0x7fffeafc62dc:	pop		rbx
0x7fffeafc62dd:	mov		dword ptr [rbp - 0x28], 0
disassembling symbol '.LBB5_5':
textAddr: 0x7fffeafc62e4, textSize: 27
0x7fffeafc62e4:	mov		eax, dword ptr [rbp - 0x28]
0x7fffeafc62e7:	cmp		eax, dword ptr [rbp - 0x20]
0x7fffeafc62ea:	jg		0x7fffeafc63c2
0x7fffeafc62f0:	cmp		dword ptr [rbp - 0x28], 0
0x7fffeafc62f4:	jle		0x7fffeafc62ff
0x7fffeafc62fa:	jmp		0x7fffeafc62ff
disassembling symbol '.LBB5_8':
textAddr: 0x7fffeafc62ff, textSize: 53
0x7fffeafc62ff:	push		rbx
0x7fffeafc6300:	push		rax
0x7fffeafc6301:	lea		rax, [rbp - 0x2c]
0x7fffeafc6305:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc630f:	cmp		rax, rbx
0x7fffeafc6312:	ja		0x7fffeafc63e9
0x7fffeafc6318:	movabs		rbx, 1
0x7fffeafc6322:	cmp		rax, rbx
0x7fffeafc6325:	jb		0x7fffeafc63e9
0x7fffeafc632b:	pop		rax
0x7fffeafc632c:	pop		rbx
0x7fffeafc632d:	mov		dword ptr [rbp - 0x2c], 0
disassembling symbol '.LBB5_9':
textAddr: 0x7fffeafc6334, textSize: 17
0x7fffeafc6334:	mov		eax, dword ptr [rbp - 0x2c]
0x7fffeafc6337:	cmp		eax, dword ptr [rbp - 0x1c]
0x7fffeafc633a:	jg		0x7fffeafc6381
0x7fffeafc6340:	jmp		0x7fffeafc6345
disassembling symbol '.LBB5_11':
textAddr: 0x7fffeafc6345, textSize: 60
0x7fffeafc6345:	mov		eax, dword ptr [rbp - 0x2c]
0x7fffeafc6348:	add		eax, 1
0x7fffeafc634b:	push		rbx
0x7fffeafc634c:	push		rax
0x7fffeafc634d:	lea		rax, [rbp - 0x2c]
0x7fffeafc6351:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc635b:	cmp		rax, rbx
0x7fffeafc635e:	ja		0x7fffeafc63e9
0x7fffeafc6364:	movabs		rbx, 1
0x7fffeafc636e:	cmp		rax, rbx
0x7fffeafc6371:	jb		0x7fffeafc63e9
0x7fffeafc6377:	pop		rax
0x7fffeafc6378:	pop		rbx
0x7fffeafc6379:	mov		dword ptr [rbp - 0x2c], eax
0x7fffeafc637c:	jmp		0x7fffeafc6334
disassembling symbol '.LBB5_12':
textAddr: 0x7fffeafc6381, textSize: 5
0x7fffeafc6381:	jmp		0x7fffeafc6386
disassembling symbol '.LBB5_13':
textAddr: 0x7fffeafc6386, textSize: 60
0x7fffeafc6386:	mov		eax, dword ptr [rbp - 0x28]
0x7fffeafc6389:	add		eax, 1
0x7fffeafc638c:	push		rbx
0x7fffeafc638d:	push		rax
0x7fffeafc638e:	lea		rax, [rbp - 0x28]
0x7fffeafc6392:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc639c:	cmp		rax, rbx
0x7fffeafc639f:	ja		0x7fffeafc63e9
0x7fffeafc63a5:	movabs		rbx, 1
0x7fffeafc63af:	cmp		rax, rbx
0x7fffeafc63b2:	jb		0x7fffeafc63e9
0x7fffeafc63b8:	pop		rax
0x7fffeafc63b9:	pop		rbx
0x7fffeafc63ba:	mov		dword ptr [rbp - 0x28], eax
0x7fffeafc63bd:	jmp		0x7fffeafc62e4
disassembling symbol '.LBB5_14':
textAddr: 0x7fffeafc63c2, textSize: 39
0x7fffeafc63c2:	add		rsp, 0x30
0x7fffeafc63c6:	pop		rbp
0x7fffeafc63c7:	movabs		r11, 0x7fffe87c3ca8
0x7fffeafc63d1:	mov		r10, qword ptr [r11]
0x7fffeafc63d4:	add		r10, r11
0x7fffeafc63d7:	sub		qword ptr [r11], 8
0x7fffeafc63db:	mov		r11, qword ptr [r10]
0x7fffeafc63de:	cmp		qword ptr [rsp], r11
0x7fffeafc63e2:	jne		0x7fffeafc63f5
0x7fffeafc63e8:	ret		
disassembling symbol '.LBB5_15':
textAddr: 0x7fffeafc63e9, textSize: 12
0x7fffeafc63e9:	pop		rax
0x7fffeafc63ea:	pop		rbx
0x7fffeafc63eb:	mov		edi, 0xffffffff
0x7fffeafc63f0:	call		0x7fffeafd41d0
disassembling symbol '.LBB5_16':
textAddr: 0x7fffeafc63f5, textSize: 11
0x7fffeafc63f5:	mov		edi, 0xffffffff
0x7fffeafc63fa:	call		0x7fffeafd41d0
0x7fffeafc63ff:	nop		
disassembling symbol 'my_strrev':
textAddr: 0x7fffeafc6400, textSize: 800
0x7fffeafc6400:	movabs		r11, 0x7fffe87c3ca8
0x7fffeafc640a:	add		qword ptr [r11], 8
0x7fffeafc640e:	mov		r10, qword ptr [r11]
0x7fffeafc6411:	add		r11, r10
0x7fffeafc6414:	mov		r10, qword ptr [rsp]
0x7fffeafc6418:	mov		qword ptr [r11], r10
0x7fffeafc641b:	push		rbp
0x7fffeafc641c:	mov		rbp, rsp
0x7fffeafc641f:	sub		rsp, 0x30
0x7fffeafc6423:	push		rbx
0x7fffeafc6424:	push		rax
0x7fffeafc6425:	lea		rax, [rbp - 0x10]
0x7fffeafc6429:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc6433:	cmp		rax, rbx
0x7fffeafc6436:	ja		0x7fffeafc6701
0x7fffeafc643c:	movabs		rbx, 1
0x7fffeafc6446:	cmp		rax, rbx
0x7fffeafc6449:	jb		0x7fffeafc6701
0x7fffeafc644f:	pop		rax
0x7fffeafc6450:	pop		rbx
0x7fffeafc6451:	mov		qword ptr [rbp - 0x10], rdi
0x7fffeafc6455:	cmp		qword ptr [rbp - 0x10], 0
0x7fffeafc645a:	je		0x7fffeafc646d
0x7fffeafc6460:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafc6464:	cmp		byte ptr [rax], 0
0x7fffeafc6467:	jne		0x7fffeafc64a8
0x7fffeafc646d:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafc6471:	push		rbx
0x7fffeafc6472:	push		rax
0x7fffeafc6473:	lea		rax, [rbp - 8]
0x7fffeafc6477:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc6481:	cmp		rax, rbx
0x7fffeafc6484:	ja		0x7fffeafc6701
0x7fffeafc648a:	movabs		rbx, 1
0x7fffeafc6494:	cmp		rax, rbx
0x7fffeafc6497:	jb		0x7fffeafc6701
0x7fffeafc649d:	pop		rax
0x7fffeafc649e:	pop		rbx
0x7fffeafc649f:	mov		qword ptr [rbp - 8], rax
0x7fffeafc64a3:	jmp		0x7fffeafc66d6
0x7fffeafc64a8:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafc64ac:	push		rbx
0x7fffeafc64ad:	push		rax
0x7fffeafc64ae:	lea		rax, [rbp - 0x18]
0x7fffeafc64b2:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc64bc:	cmp		rax, rbx
0x7fffeafc64bf:	ja		0x7fffeafc6701
0x7fffeafc64c5:	movabs		rbx, 1
0x7fffeafc64cf:	cmp		rax, rbx
0x7fffeafc64d2:	jb		0x7fffeafc6701
0x7fffeafc64d8:	pop		rax
0x7fffeafc64d9:	pop		rbx
0x7fffeafc64da:	mov		qword ptr [rbp - 0x18], rax
0x7fffeafc64de:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafc64e2:	mov		rdi, qword ptr [rbp - 0x10]
0x7fffeafc64e6:	push		rbx
0x7fffeafc64e7:	push		rax
0x7fffeafc64e8:	lea		rax, [rbp - 0x28]
0x7fffeafc64ec:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc64f6:	cmp		rax, rbx
0x7fffeafc64f9:	ja		0x7fffeafc6701
0x7fffeafc64ff:	movabs		rbx, 1
0x7fffeafc6509:	cmp		rax, rbx
0x7fffeafc650c:	jb		0x7fffeafc6701
0x7fffeafc6512:	pop		rax
0x7fffeafc6513:	pop		rbx
0x7fffeafc6514:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafc6518:	call		0x7fffeafc5ce0
0x7fffeafc651d:	mov		rcx, qword ptr [rbp - 0x28]
0x7fffeafc6521:	add		rcx, rax
0x7fffeafc6524:	add		rcx, -1
0x7fffeafc6528:	push		rbx
0x7fffeafc6529:	push		rax
0x7fffeafc652a:	lea		rax, [rbp - 0x20]
0x7fffeafc652e:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc6538:	cmp		rax, rbx
0x7fffeafc653b:	ja		0x7fffeafc6701
0x7fffeafc6541:	movabs		rbx, 1
0x7fffeafc654b:	cmp		rax, rbx
0x7fffeafc654e:	jb		0x7fffeafc6701
0x7fffeafc6554:	pop		rax
0x7fffeafc6555:	pop		rbx
0x7fffeafc6556:	mov		qword ptr [rbp - 0x20], rcx
0x7fffeafc655a:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc655e:	cmp		rax, qword ptr [rbp - 0x18]
0x7fffeafc6562:	jbe		0x7fffeafc66a0
0x7fffeafc6568:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc656c:	movsx		ecx, byte ptr [rax]
0x7fffeafc656f:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc6573:	movsx		edx, byte ptr [rax]
0x7fffeafc6576:	xor		edx, ecx
0x7fffeafc6578:	push		rbx
0x7fffeafc6579:	push		rax
0x7fffeafc657a:	lea		rax, [rax]
0x7fffeafc657d:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc6587:	cmp		rax, rbx
0x7fffeafc658a:	ja		0x7fffeafc6701
0x7fffeafc6590:	movabs		rbx, 1
0x7fffeafc659a:	cmp		rax, rbx
0x7fffeafc659d:	jb		0x7fffeafc6701
0x7fffeafc65a3:	pop		rax
0x7fffeafc65a4:	pop		rbx
0x7fffeafc65a5:	mov		byte ptr [rax], dl
0x7fffeafc65a7:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc65ab:	movsx		ecx, byte ptr [rax]
0x7fffeafc65ae:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc65b2:	movsx		esi, byte ptr [rax]
0x7fffeafc65b5:	xor		esi, ecx
0x7fffeafc65b7:	push		rbx
0x7fffeafc65b8:	push		rax
0x7fffeafc65b9:	lea		rax, [rax]
0x7fffeafc65bc:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc65c6:	cmp		rax, rbx
0x7fffeafc65c9:	ja		0x7fffeafc6701
0x7fffeafc65cf:	movabs		rbx, 1
0x7fffeafc65d9:	cmp		rax, rbx
0x7fffeafc65dc:	jb		0x7fffeafc6701
0x7fffeafc65e2:	pop		rax
0x7fffeafc65e3:	pop		rbx
0x7fffeafc65e4:	mov		byte ptr [rax], sil
0x7fffeafc65e7:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc65eb:	movsx		ecx, byte ptr [rax]
0x7fffeafc65ee:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc65f2:	movsx		edi, byte ptr [rax]
0x7fffeafc65f5:	xor		edi, ecx
0x7fffeafc65f7:	push		rbx
0x7fffeafc65f8:	push		rax
0x7fffeafc65f9:	lea		rax, [rax]
0x7fffeafc65fc:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc6606:	cmp		rax, rbx
0x7fffeafc6609:	ja		0x7fffeafc6701
0x7fffeafc660f:	movabs		rbx, 1
0x7fffeafc6619:	cmp		rax, rbx
0x7fffeafc661c:	jb		0x7fffeafc6701
0x7fffeafc6622:	pop		rax
0x7fffeafc6623:	pop		rbx
0x7fffeafc6624:	mov		byte ptr [rax], dil
0x7fffeafc6627:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc662b:	add		rax, 1
0x7fffeafc662f:	push		rbx
0x7fffeafc6630:	push		rax
0x7fffeafc6631:	lea		rax, [rbp - 0x18]
0x7fffeafc6635:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc663f:	cmp		rax, rbx
0x7fffeafc6642:	ja		0x7fffeafc6701
0x7fffeafc6648:	movabs		rbx, 1
0x7fffeafc6652:	cmp		rax, rbx
0x7fffeafc6655:	jb		0x7fffeafc6701
0x7fffeafc665b:	pop		rax
0x7fffeafc665c:	pop		rbx
0x7fffeafc665d:	mov		qword ptr [rbp - 0x18], rax
0x7fffeafc6661:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc6665:	add		rax, -1
0x7fffeafc6669:	push		rbx
0x7fffeafc666a:	push		rax
0x7fffeafc666b:	lea		rax, [rbp - 0x20]
0x7fffeafc666f:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc6679:	cmp		rax, rbx
0x7fffeafc667c:	ja		0x7fffeafc6701
0x7fffeafc6682:	movabs		rbx, 1
0x7fffeafc668c:	cmp		rax, rbx
0x7fffeafc668f:	jb		0x7fffeafc6701
0x7fffeafc6695:	pop		rax
0x7fffeafc6696:	pop		rbx
0x7fffeafc6697:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafc669b:	jmp		0x7fffeafc655a
0x7fffeafc66a0:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafc66a4:	push		rbx
0x7fffeafc66a5:	push		rax
0x7fffeafc66a6:	lea		rax, [rbp - 8]
0x7fffeafc66aa:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc66b4:	cmp		rax, rbx
0x7fffeafc66b7:	ja		0x7fffeafc6701
0x7fffeafc66bd:	movabs		rbx, 1
0x7fffeafc66c7:	cmp		rax, rbx
0x7fffeafc66ca:	jb		0x7fffeafc6701
0x7fffeafc66d0:	pop		rax
0x7fffeafc66d1:	pop		rbx
0x7fffeafc66d2:	mov		qword ptr [rbp - 8], rax
0x7fffeafc66d6:	mov		rax, qword ptr [rbp - 8]
0x7fffeafc66da:	add		rsp, 0x30
0x7fffeafc66de:	pop		rbp
0x7fffeafc66df:	movabs		r11, 0x7fffe87c3ca8
0x7fffeafc66e9:	mov		r10, qword ptr [r11]
0x7fffeafc66ec:	add		r10, r11
0x7fffeafc66ef:	sub		qword ptr [r11], 8
0x7fffeafc66f3:	mov		r11, qword ptr [r10]
0x7fffeafc66f6:	cmp		qword ptr [rsp], r11
0x7fffeafc66fa:	jne		0x7fffeafc670d
0x7fffeafc6700:	ret		
0x7fffeafc6701:	pop		rax
0x7fffeafc6702:	pop		rbx
0x7fffeafc6703:	mov		edi, 0xffffffff
0x7fffeafc6708:	call		0x7fffeafd41d0
0x7fffeafc670d:	mov		edi, 0xffffffff
0x7fffeafc6712:	call		0x7fffeafd41d0
0x7fffeafc6717:	nop		word ptr [rax + rax]
disassembling symbol '.LBB6_2':
textAddr: 0x7fffeafc646d, textSize: 59
0x7fffeafc646d:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafc6471:	push		rbx
0x7fffeafc6472:	push		rax
0x7fffeafc6473:	lea		rax, [rbp - 8]
0x7fffeafc6477:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc6481:	cmp		rax, rbx
0x7fffeafc6484:	ja		0x7fffeafc6701
0x7fffeafc648a:	movabs		rbx, 1
0x7fffeafc6494:	cmp		rax, rbx
0x7fffeafc6497:	jb		0x7fffeafc6701
0x7fffeafc649d:	pop		rax
0x7fffeafc649e:	pop		rbx
0x7fffeafc649f:	mov		qword ptr [rbp - 8], rax
0x7fffeafc64a3:	jmp		0x7fffeafc66d6
disassembling symbol '.LBB6_3':
textAddr: 0x7fffeafc64a8, textSize: 178
0x7fffeafc64a8:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafc64ac:	push		rbx
0x7fffeafc64ad:	push		rax
0x7fffeafc64ae:	lea		rax, [rbp - 0x18]
0x7fffeafc64b2:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc64bc:	cmp		rax, rbx
0x7fffeafc64bf:	ja		0x7fffeafc6701
0x7fffeafc64c5:	movabs		rbx, 1
0x7fffeafc64cf:	cmp		rax, rbx
0x7fffeafc64d2:	jb		0x7fffeafc6701
0x7fffeafc64d8:	pop		rax
0x7fffeafc64d9:	pop		rbx
0x7fffeafc64da:	mov		qword ptr [rbp - 0x18], rax
0x7fffeafc64de:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafc64e2:	mov		rdi, qword ptr [rbp - 0x10]
0x7fffeafc64e6:	push		rbx
0x7fffeafc64e7:	push		rax
0x7fffeafc64e8:	lea		rax, [rbp - 0x28]
0x7fffeafc64ec:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc64f6:	cmp		rax, rbx
0x7fffeafc64f9:	ja		0x7fffeafc6701
0x7fffeafc64ff:	movabs		rbx, 1
0x7fffeafc6509:	cmp		rax, rbx
0x7fffeafc650c:	jb		0x7fffeafc6701
0x7fffeafc6512:	pop		rax
0x7fffeafc6513:	pop		rbx
0x7fffeafc6514:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafc6518:	call		0x7fffeafc5ce0
0x7fffeafc651d:	mov		rcx, qword ptr [rbp - 0x28]
0x7fffeafc6521:	add		rcx, rax
0x7fffeafc6524:	add		rcx, -1
0x7fffeafc6528:	push		rbx
0x7fffeafc6529:	push		rax
0x7fffeafc652a:	lea		rax, [rbp - 0x20]
0x7fffeafc652e:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc6538:	cmp		rax, rbx
0x7fffeafc653b:	ja		0x7fffeafc6701
0x7fffeafc6541:	movabs		rbx, 1
0x7fffeafc654b:	cmp		rax, rbx
0x7fffeafc654e:	jb		0x7fffeafc6701
0x7fffeafc6554:	pop		rax
0x7fffeafc6555:	pop		rbx
0x7fffeafc6556:	mov		qword ptr [rbp - 0x20], rcx
disassembling symbol '.LBB6_4':
textAddr: 0x7fffeafc655a, textSize: 326
0x7fffeafc655a:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc655e:	cmp		rax, qword ptr [rbp - 0x18]
0x7fffeafc6562:	jbe		0x7fffeafc66a0
0x7fffeafc6568:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc656c:	movsx		ecx, byte ptr [rax]
0x7fffeafc656f:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc6573:	movsx		edx, byte ptr [rax]
0x7fffeafc6576:	xor		edx, ecx
0x7fffeafc6578:	push		rbx
0x7fffeafc6579:	push		rax
0x7fffeafc657a:	lea		rax, [rax]
0x7fffeafc657d:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc6587:	cmp		rax, rbx
0x7fffeafc658a:	ja		0x7fffeafc6701
0x7fffeafc6590:	movabs		rbx, 1
0x7fffeafc659a:	cmp		rax, rbx
0x7fffeafc659d:	jb		0x7fffeafc6701
0x7fffeafc65a3:	pop		rax
0x7fffeafc65a4:	pop		rbx
0x7fffeafc65a5:	mov		byte ptr [rax], dl
0x7fffeafc65a7:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc65ab:	movsx		ecx, byte ptr [rax]
0x7fffeafc65ae:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc65b2:	movsx		esi, byte ptr [rax]
0x7fffeafc65b5:	xor		esi, ecx
0x7fffeafc65b7:	push		rbx
0x7fffeafc65b8:	push		rax
0x7fffeafc65b9:	lea		rax, [rax]
0x7fffeafc65bc:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc65c6:	cmp		rax, rbx
0x7fffeafc65c9:	ja		0x7fffeafc6701
0x7fffeafc65cf:	movabs		rbx, 1
0x7fffeafc65d9:	cmp		rax, rbx
0x7fffeafc65dc:	jb		0x7fffeafc6701
0x7fffeafc65e2:	pop		rax
0x7fffeafc65e3:	pop		rbx
0x7fffeafc65e4:	mov		byte ptr [rax], sil
0x7fffeafc65e7:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc65eb:	movsx		ecx, byte ptr [rax]
0x7fffeafc65ee:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc65f2:	movsx		edi, byte ptr [rax]
0x7fffeafc65f5:	xor		edi, ecx
0x7fffeafc65f7:	push		rbx
0x7fffeafc65f8:	push		rax
0x7fffeafc65f9:	lea		rax, [rax]
0x7fffeafc65fc:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc6606:	cmp		rax, rbx
0x7fffeafc6609:	ja		0x7fffeafc6701
0x7fffeafc660f:	movabs		rbx, 1
0x7fffeafc6619:	cmp		rax, rbx
0x7fffeafc661c:	jb		0x7fffeafc6701
0x7fffeafc6622:	pop		rax
0x7fffeafc6623:	pop		rbx
0x7fffeafc6624:	mov		byte ptr [rax], dil
0x7fffeafc6627:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc662b:	add		rax, 1
0x7fffeafc662f:	push		rbx
0x7fffeafc6630:	push		rax
0x7fffeafc6631:	lea		rax, [rbp - 0x18]
0x7fffeafc6635:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc663f:	cmp		rax, rbx
0x7fffeafc6642:	ja		0x7fffeafc6701
0x7fffeafc6648:	movabs		rbx, 1
0x7fffeafc6652:	cmp		rax, rbx
0x7fffeafc6655:	jb		0x7fffeafc6701
0x7fffeafc665b:	pop		rax
0x7fffeafc665c:	pop		rbx
0x7fffeafc665d:	mov		qword ptr [rbp - 0x18], rax
0x7fffeafc6661:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc6665:	add		rax, -1
0x7fffeafc6669:	push		rbx
0x7fffeafc666a:	push		rax
0x7fffeafc666b:	lea		rax, [rbp - 0x20]
0x7fffeafc666f:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc6679:	cmp		rax, rbx
0x7fffeafc667c:	ja		0x7fffeafc6701
0x7fffeafc6682:	movabs		rbx, 1
0x7fffeafc668c:	cmp		rax, rbx
0x7fffeafc668f:	jb		0x7fffeafc6701
0x7fffeafc6695:	pop		rax
0x7fffeafc6696:	pop		rbx
0x7fffeafc6697:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafc669b:	jmp		0x7fffeafc655a
disassembling symbol '.LBB6_7':
textAddr: 0x7fffeafc66a0, textSize: 54
0x7fffeafc66a0:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafc66a4:	push		rbx
0x7fffeafc66a5:	push		rax
0x7fffeafc66a6:	lea		rax, [rbp - 8]
0x7fffeafc66aa:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc66b4:	cmp		rax, rbx
0x7fffeafc66b7:	ja		0x7fffeafc6701
0x7fffeafc66bd:	movabs		rbx, 1
0x7fffeafc66c7:	cmp		rax, rbx
0x7fffeafc66ca:	jb		0x7fffeafc6701
0x7fffeafc66d0:	pop		rax
0x7fffeafc66d1:	pop		rbx
0x7fffeafc66d2:	mov		qword ptr [rbp - 8], rax
disassembling symbol '.LBB6_8':
textAddr: 0x7fffeafc66d6, textSize: 43
0x7fffeafc66d6:	mov		rax, qword ptr [rbp - 8]
0x7fffeafc66da:	add		rsp, 0x30
0x7fffeafc66de:	pop		rbp
0x7fffeafc66df:	movabs		r11, 0x7fffe87c3ca8
0x7fffeafc66e9:	mov		r10, qword ptr [r11]
0x7fffeafc66ec:	add		r10, r11
0x7fffeafc66ef:	sub		qword ptr [r11], 8
0x7fffeafc66f3:	mov		r11, qword ptr [r10]
0x7fffeafc66f6:	cmp		qword ptr [rsp], r11
0x7fffeafc66fa:	jne		0x7fffeafc670d
0x7fffeafc6700:	ret		
disassembling symbol '.LBB6_9':
textAddr: 0x7fffeafc6701, textSize: 12
0x7fffeafc6701:	pop		rax
0x7fffeafc6702:	pop		rbx
0x7fffeafc6703:	mov		edi, 0xffffffff
0x7fffeafc6708:	call		0x7fffeafd41d0
disassembling symbol '.LBB6_10':
textAddr: 0x7fffeafc670d, textSize: 19
0x7fffeafc670d:	mov		edi, 0xffffffff
0x7fffeafc6712:	call		0x7fffeafd41d0
0x7fffeafc6717:	nop		word ptr [rax + rax]
disassembling symbol 'strncat':
textAddr: 0x7fffeafc6720, textSize: 768
0x7fffeafc6720:	movabs		r11, 0x7fffe87c3ca8
0x7fffeafc672a:	add		qword ptr [r11], 8
0x7fffeafc672e:	mov		r10, qword ptr [r11]
0x7fffeafc6731:	add		r11, r10
0x7fffeafc6734:	mov		r10, qword ptr [rsp]
0x7fffeafc6738:	mov		qword ptr [r11], r10
0x7fffeafc673b:	push		rbp
0x7fffeafc673c:	mov		rbp, rsp
0x7fffeafc673f:	push		rbx
0x7fffeafc6740:	push		rax
0x7fffeafc6741:	lea		rax, [rbp - 8]
0x7fffeafc6745:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc674f:	cmp		rax, rbx
0x7fffeafc6752:	ja		0x7fffeafc69fc
0x7fffeafc6758:	movabs		rbx, 1
0x7fffeafc6762:	cmp		rax, rbx
0x7fffeafc6765:	jb		0x7fffeafc69fc
0x7fffeafc676b:	pop		rax
0x7fffeafc676c:	pop		rbx
0x7fffeafc676d:	mov		qword ptr [rbp - 8], rdi
0x7fffeafc6771:	push		rbx
0x7fffeafc6772:	push		rax
0x7fffeafc6773:	lea		rax, [rbp - 0x10]
0x7fffeafc6777:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc6781:	cmp		rax, rbx
0x7fffeafc6784:	ja		0x7fffeafc69fc
0x7fffeafc678a:	movabs		rbx, 1
0x7fffeafc6794:	cmp		rax, rbx
0x7fffeafc6797:	jb		0x7fffeafc69fc
0x7fffeafc679d:	pop		rax
0x7fffeafc679e:	pop		rbx
0x7fffeafc679f:	mov		qword ptr [rbp - 0x10], rsi
0x7fffeafc67a3:	push		rbx
0x7fffeafc67a4:	push		rax
0x7fffeafc67a5:	lea		rax, [rbp - 0x18]
0x7fffeafc67a9:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc67b3:	cmp		rax, rbx
0x7fffeafc67b6:	ja		0x7fffeafc69fc
0x7fffeafc67bc:	movabs		rbx, 1
0x7fffeafc67c6:	cmp		rax, rbx
0x7fffeafc67c9:	jb		0x7fffeafc69fc
0x7fffeafc67cf:	pop		rax
0x7fffeafc67d0:	pop		rbx
0x7fffeafc67d1:	mov		qword ptr [rbp - 0x18], rdx
0x7fffeafc67d5:	cmp		qword ptr [rbp - 0x18], 0
0x7fffeafc67da:	je		0x7fffeafc69d5
0x7fffeafc67e0:	mov		rax, qword ptr [rbp - 8]
0x7fffeafc67e4:	push		rbx
0x7fffeafc67e5:	push		rax
0x7fffeafc67e6:	lea		rax, [rbp - 0x20]
0x7fffeafc67ea:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc67f4:	cmp		rax, rbx
0x7fffeafc67f7:	ja		0x7fffeafc69fc
0x7fffeafc67fd:	movabs		rbx, 1
0x7fffeafc6807:	cmp		rax, rbx
0x7fffeafc680a:	jb		0x7fffeafc69fc
0x7fffeafc6810:	pop		rax
0x7fffeafc6811:	pop		rbx
0x7fffeafc6812:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafc6816:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafc681a:	push		rbx
0x7fffeafc681b:	push		rax
0x7fffeafc681c:	lea		rax, [rbp - 0x28]
0x7fffeafc6820:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc682a:	cmp		rax, rbx
0x7fffeafc682d:	ja		0x7fffeafc69fc
0x7fffeafc6833:	movabs		rbx, 1
0x7fffeafc683d:	cmp		rax, rbx
0x7fffeafc6840:	jb		0x7fffeafc69fc
0x7fffeafc6846:	pop		rax
0x7fffeafc6847:	pop		rbx
0x7fffeafc6848:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafc684c:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc6850:	movsx		ecx, byte ptr [rax]
0x7fffeafc6853:	cmp		ecx, 0
0x7fffeafc6856:	je		0x7fffeafc689b
0x7fffeafc685c:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc6860:	add		rax, 1
0x7fffeafc6864:	push		rbx
0x7fffeafc6865:	push		rax
0x7fffeafc6866:	lea		rax, [rbp - 0x20]
0x7fffeafc686a:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc6874:	cmp		rax, rbx
0x7fffeafc6877:	ja		0x7fffeafc69fc
0x7fffeafc687d:	movabs		rbx, 1
0x7fffeafc6887:	cmp		rax, rbx
0x7fffeafc688a:	jb		0x7fffeafc69fc
0x7fffeafc6890:	pop		rax
0x7fffeafc6891:	pop		rbx
0x7fffeafc6892:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafc6896:	jmp		0x7fffeafc684c
0x7fffeafc689b:	jmp		0x7fffeafc68a0
0x7fffeafc68a0:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafc68a4:	mov		rcx, rax
0x7fffeafc68a7:	add		rcx, 1
0x7fffeafc68ab:	push		rbx
0x7fffeafc68ac:	push		rax
0x7fffeafc68ad:	lea		rax, [rbp - 0x28]
0x7fffeafc68b1:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc68bb:	cmp		rax, rbx
0x7fffeafc68be:	ja		0x7fffeafc69fc
0x7fffeafc68c4:	movabs		rbx, 1
0x7fffeafc68ce:	cmp		rax, rbx
0x7fffeafc68d1:	jb		0x7fffeafc69fc
0x7fffeafc68d7:	pop		rax
0x7fffeafc68d8:	pop		rbx
0x7fffeafc68d9:	mov		qword ptr [rbp - 0x28], rcx
0x7fffeafc68dd:	mov		dl, byte ptr [rax]
0x7fffeafc68df:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc68e3:	push		rbx
0x7fffeafc68e4:	push		rax
0x7fffeafc68e5:	lea		rax, [rax]
0x7fffeafc68e8:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc68f2:	cmp		rax, rbx
0x7fffeafc68f5:	ja		0x7fffeafc69fc
0x7fffeafc68fb:	movabs		rbx, 1
0x7fffeafc6905:	cmp		rax, rbx
0x7fffeafc6908:	jb		0x7fffeafc69fc
0x7fffeafc690e:	pop		rax
0x7fffeafc690f:	pop		rbx
0x7fffeafc6910:	mov		byte ptr [rax], dl
0x7fffeafc6912:	movsx		esi, dl
0x7fffeafc6915:	cmp		esi, 0
0x7fffeafc6918:	jne		0x7fffeafc6923
0x7fffeafc691e:	jmp		0x7fffeafc69a1
0x7fffeafc6923:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc6927:	add		rax, 1
0x7fffeafc692b:	push		rbx
0x7fffeafc692c:	push		rax
0x7fffeafc692d:	lea		rax, [rbp - 0x20]
0x7fffeafc6931:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc693b:	cmp		rax, rbx
0x7fffeafc693e:	ja		0x7fffeafc69fc
0x7fffeafc6944:	movabs		rbx, 1
0x7fffeafc694e:	cmp		rax, rbx
0x7fffeafc6951:	jb		0x7fffeafc69fc
0x7fffeafc6957:	pop		rax
0x7fffeafc6958:	pop		rbx
0x7fffeafc6959:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafc695d:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc6961:	add		rax, -1
0x7fffeafc6965:	push		rbx
0x7fffeafc6966:	push		rax
0x7fffeafc6967:	lea		rax, [rbp - 0x18]
0x7fffeafc696b:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc6975:	cmp		rax, rbx
0x7fffeafc6978:	ja		0x7fffeafc69fc
0x7fffeafc697e:	movabs		rbx, 1
0x7fffeafc6988:	cmp		rax, rbx
0x7fffeafc698b:	jb		0x7fffeafc69fc
0x7fffeafc6991:	pop		rax
0x7fffeafc6992:	pop		rbx
0x7fffeafc6993:	mov		qword ptr [rbp - 0x18], rax
0x7fffeafc6997:	cmp		rax, 0
0x7fffeafc699b:	jne		0x7fffeafc68a0
0x7fffeafc69a1:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc69a5:	push		rbx
0x7fffeafc69a6:	push		rax
0x7fffeafc69a7:	lea		rax, [rax]
0x7fffeafc69aa:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc69b4:	cmp		rax, rbx
0x7fffeafc69b7:	ja		0x7fffeafc69fc
0x7fffeafc69bd:	movabs		rbx, 1
0x7fffeafc69c7:	cmp		rax, rbx
0x7fffeafc69ca:	jb		0x7fffeafc69fc
0x7fffeafc69d0:	pop		rax
0x7fffeafc69d1:	pop		rbx
0x7fffeafc69d2:	mov		byte ptr [rax], 0
0x7fffeafc69d5:	mov		rax, qword ptr [rbp - 8]
0x7fffeafc69d9:	pop		rbp
0x7fffeafc69da:	movabs		r11, 0x7fffe87c3ca8
0x7fffeafc69e4:	mov		r10, qword ptr [r11]
0x7fffeafc69e7:	add		r10, r11
0x7fffeafc69ea:	sub		qword ptr [r11], 8
0x7fffeafc69ee:	mov		r11, qword ptr [r10]
0x7fffeafc69f1:	cmp		qword ptr [rsp], r11
0x7fffeafc69f5:	jne		0x7fffeafc6a08
0x7fffeafc69fb:	ret		
0x7fffeafc69fc:	pop		rax
0x7fffeafc69fd:	pop		rbx
0x7fffeafc69fe:	mov		edi, 0xffffffff
0x7fffeafc6a03:	call		0x7fffeafd41d0
0x7fffeafc6a08:	mov		edi, 0xffffffff
0x7fffeafc6a0d:	call		0x7fffeafd41d0
0x7fffeafc6a12:	nop		word ptr cs:[rax + rax]
0x7fffeafc6a1c:	nop		dword ptr [rax]
disassembling symbol '.LBB7_2':
textAddr: 0x7fffeafc684c, textSize: 79
0x7fffeafc684c:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc6850:	movsx		ecx, byte ptr [rax]
0x7fffeafc6853:	cmp		ecx, 0
0x7fffeafc6856:	je		0x7fffeafc689b
0x7fffeafc685c:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc6860:	add		rax, 1
0x7fffeafc6864:	push		rbx
0x7fffeafc6865:	push		rax
0x7fffeafc6866:	lea		rax, [rbp - 0x20]
0x7fffeafc686a:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc6874:	cmp		rax, rbx
0x7fffeafc6877:	ja		0x7fffeafc69fc
0x7fffeafc687d:	movabs		rbx, 1
0x7fffeafc6887:	cmp		rax, rbx
0x7fffeafc688a:	jb		0x7fffeafc69fc
0x7fffeafc6890:	pop		rax
0x7fffeafc6891:	pop		rbx
0x7fffeafc6892:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafc6896:	jmp		0x7fffeafc684c
disassembling symbol '.LBB7_4':
textAddr: 0x7fffeafc689b, textSize: 5
0x7fffeafc689b:	jmp		0x7fffeafc68a0
disassembling symbol '.LBB7_5':
textAddr: 0x7fffeafc68a0, textSize: 131
0x7fffeafc68a0:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafc68a4:	mov		rcx, rax
0x7fffeafc68a7:	add		rcx, 1
0x7fffeafc68ab:	push		rbx
0x7fffeafc68ac:	push		rax
0x7fffeafc68ad:	lea		rax, [rbp - 0x28]
0x7fffeafc68b1:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc68bb:	cmp		rax, rbx
0x7fffeafc68be:	ja		0x7fffeafc69fc
0x7fffeafc68c4:	movabs		rbx, 1
0x7fffeafc68ce:	cmp		rax, rbx
0x7fffeafc68d1:	jb		0x7fffeafc69fc
0x7fffeafc68d7:	pop		rax
0x7fffeafc68d8:	pop		rbx
0x7fffeafc68d9:	mov		qword ptr [rbp - 0x28], rcx
0x7fffeafc68dd:	mov		dl, byte ptr [rax]
0x7fffeafc68df:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc68e3:	push		rbx
0x7fffeafc68e4:	push		rax
0x7fffeafc68e5:	lea		rax, [rax]
0x7fffeafc68e8:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc68f2:	cmp		rax, rbx
0x7fffeafc68f5:	ja		0x7fffeafc69fc
0x7fffeafc68fb:	movabs		rbx, 1
0x7fffeafc6905:	cmp		rax, rbx
0x7fffeafc6908:	jb		0x7fffeafc69fc
0x7fffeafc690e:	pop		rax
0x7fffeafc690f:	pop		rbx
0x7fffeafc6910:	mov		byte ptr [rax], dl
0x7fffeafc6912:	movsx		esi, dl
0x7fffeafc6915:	cmp		esi, 0
0x7fffeafc6918:	jne		0x7fffeafc6923
0x7fffeafc691e:	jmp		0x7fffeafc69a1
disassembling symbol '.LBB7_7':
textAddr: 0x7fffeafc6923, textSize: 126
0x7fffeafc6923:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc6927:	add		rax, 1
0x7fffeafc692b:	push		rbx
0x7fffeafc692c:	push		rax
0x7fffeafc692d:	lea		rax, [rbp - 0x20]
0x7fffeafc6931:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc693b:	cmp		rax, rbx
0x7fffeafc693e:	ja		0x7fffeafc69fc
0x7fffeafc6944:	movabs		rbx, 1
0x7fffeafc694e:	cmp		rax, rbx
0x7fffeafc6951:	jb		0x7fffeafc69fc
0x7fffeafc6957:	pop		rax
0x7fffeafc6958:	pop		rbx
0x7fffeafc6959:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafc695d:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc6961:	add		rax, -1
0x7fffeafc6965:	push		rbx
0x7fffeafc6966:	push		rax
0x7fffeafc6967:	lea		rax, [rbp - 0x18]
0x7fffeafc696b:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc6975:	cmp		rax, rbx
0x7fffeafc6978:	ja		0x7fffeafc69fc
0x7fffeafc697e:	movabs		rbx, 1
0x7fffeafc6988:	cmp		rax, rbx
0x7fffeafc698b:	jb		0x7fffeafc69fc
0x7fffeafc6991:	pop		rax
0x7fffeafc6992:	pop		rbx
0x7fffeafc6993:	mov		qword ptr [rbp - 0x18], rax
0x7fffeafc6997:	cmp		rax, 0
0x7fffeafc699b:	jne		0x7fffeafc68a0
disassembling symbol '.LBB7_9':
textAddr: 0x7fffeafc69a1, textSize: 52
0x7fffeafc69a1:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc69a5:	push		rbx
0x7fffeafc69a6:	push		rax
0x7fffeafc69a7:	lea		rax, [rax]
0x7fffeafc69aa:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc69b4:	cmp		rax, rbx
0x7fffeafc69b7:	ja		0x7fffeafc69fc
0x7fffeafc69bd:	movabs		rbx, 1
0x7fffeafc69c7:	cmp		rax, rbx
0x7fffeafc69ca:	jb		0x7fffeafc69fc
0x7fffeafc69d0:	pop		rax
0x7fffeafc69d1:	pop		rbx
0x7fffeafc69d2:	mov		byte ptr [rax], 0
disassembling symbol '.LBB7_10':
textAddr: 0x7fffeafc69d5, textSize: 39
0x7fffeafc69d5:	mov		rax, qword ptr [rbp - 8]
0x7fffeafc69d9:	pop		rbp
0x7fffeafc69da:	movabs		r11, 0x7fffe87c3ca8
0x7fffeafc69e4:	mov		r10, qword ptr [r11]
0x7fffeafc69e7:	add		r10, r11
0x7fffeafc69ea:	sub		qword ptr [r11], 8
0x7fffeafc69ee:	mov		r11, qword ptr [r10]
0x7fffeafc69f1:	cmp		qword ptr [rsp], r11
0x7fffeafc69f5:	jne		0x7fffeafc6a08
0x7fffeafc69fb:	ret		
disassembling symbol '.LBB7_11':
textAddr: 0x7fffeafc69fc, textSize: 12
0x7fffeafc69fc:	pop		rax
0x7fffeafc69fd:	pop		rbx
0x7fffeafc69fe:	mov		edi, 0xffffffff
0x7fffeafc6a03:	call		0x7fffeafd41d0
disassembling symbol '.LBB7_12':
textAddr: 0x7fffeafc6a08, textSize: 24
0x7fffeafc6a08:	mov		edi, 0xffffffff
0x7fffeafc6a0d:	call		0x7fffeafd41d0
0x7fffeafc6a12:	nop		word ptr cs:[rax + rax]
0x7fffeafc6a1c:	nop		dword ptr [rax]
disassembling symbol 'nw_align':
textAddr: 0x7fffeafc6a20, textSize: 4096
0x7fffeafc6a20:	movabs		r11, 0x7fffe87c3ca8
0x7fffeafc6a2a:	add		qword ptr [r11], 8
0x7fffeafc6a2e:	mov		r10, qword ptr [r11]
0x7fffeafc6a31:	add		r11, r10
0x7fffeafc6a34:	mov		r10, qword ptr [rsp]
0x7fffeafc6a38:	mov		qword ptr [r11], r10
0x7fffeafc6a3b:	push		rbp
0x7fffeafc6a3c:	mov		rbp, rsp
0x7fffeafc6a3f:	sub		rsp, 0x100
0x7fffeafc6a46:	mov		eax, dword ptr [rbp + 0x10]
0x7fffeafc6a49:	lea		r10, [rip + 0x2c24760]
0x7fffeafc6a50:	push		rbx
0x7fffeafc6a51:	push		rax
0x7fffeafc6a52:	lea		rax, [rbp - 8]
0x7fffeafc6a56:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc6a60:	cmp		rax, rbx
0x7fffeafc6a63:	ja		0x7fffeafc79fb
0x7fffeafc6a69:	movabs		rbx, 1
0x7fffeafc6a73:	cmp		rax, rbx
0x7fffeafc6a76:	jb		0x7fffeafc79fb
0x7fffeafc6a7c:	pop		rax
0x7fffeafc6a7d:	pop		rbx
0x7fffeafc6a7e:	mov		qword ptr [rbp - 8], rdi
0x7fffeafc6a82:	push		rbx
0x7fffeafc6a83:	push		rax
0x7fffeafc6a84:	lea		rax, [rbp - 0x10]
0x7fffeafc6a88:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc6a92:	cmp		rax, rbx
0x7fffeafc6a95:	ja		0x7fffeafc79fb
0x7fffeafc6a9b:	movabs		rbx, 1
0x7fffeafc6aa5:	cmp		rax, rbx
0x7fffeafc6aa8:	jb		0x7fffeafc79fb
0x7fffeafc6aae:	pop		rax
0x7fffeafc6aaf:	pop		rbx
0x7fffeafc6ab0:	mov		qword ptr [rbp - 0x10], rsi
0x7fffeafc6ab4:	push		rbx
0x7fffeafc6ab5:	push		rax
0x7fffeafc6ab6:	lea		rax, [rbp - 0x18]
0x7fffeafc6aba:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc6ac4:	cmp		rax, rbx
0x7fffeafc6ac7:	ja		0x7fffeafc79fb
0x7fffeafc6acd:	movabs		rbx, 1
0x7fffeafc6ad7:	cmp		rax, rbx
0x7fffeafc6ada:	jb		0x7fffeafc79fb
0x7fffeafc6ae0:	pop		rax
0x7fffeafc6ae1:	pop		rbx
0x7fffeafc6ae2:	mov		qword ptr [rbp - 0x18], rdx
0x7fffeafc6ae6:	push		rbx
0x7fffeafc6ae7:	push		rax
0x7fffeafc6ae8:	lea		rax, [rbp - 0x20]
0x7fffeafc6aec:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc6af6:	cmp		rax, rbx
0x7fffeafc6af9:	ja		0x7fffeafc79fb
0x7fffeafc6aff:	movabs		rbx, 1
0x7fffeafc6b09:	cmp		rax, rbx
0x7fffeafc6b0c:	jb		0x7fffeafc79fb
0x7fffeafc6b12:	pop		rax
0x7fffeafc6b13:	pop		rbx
0x7fffeafc6b14:	mov		qword ptr [rbp - 0x20], rcx
0x7fffeafc6b18:	push		rbx
0x7fffeafc6b19:	push		rax
0x7fffeafc6b1a:	lea		rax, [rbp - 0x28]
0x7fffeafc6b1e:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc6b28:	cmp		rax, rbx
0x7fffeafc6b2b:	ja		0x7fffeafc79fb
0x7fffeafc6b31:	movabs		rbx, 1
0x7fffeafc6b3b:	cmp		rax, rbx
0x7fffeafc6b3e:	jb		0x7fffeafc79fb
0x7fffeafc6b44:	pop		rax
0x7fffeafc6b45:	pop		rbx
0x7fffeafc6b46:	mov		qword ptr [rbp - 0x28], r8
0x7fffeafc6b4a:	push		rbx
0x7fffeafc6b4b:	push		rax
0x7fffeafc6b4c:	lea		rax, [rbp - 0x30]
0x7fffeafc6b50:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc6b5a:	cmp		rax, rbx
0x7fffeafc6b5d:	ja		0x7fffeafc79fb
0x7fffeafc6b63:	movabs		rbx, 1
0x7fffeafc6b6d:	cmp		rax, rbx
0x7fffeafc6b70:	jb		0x7fffeafc79fb
0x7fffeafc6b76:	pop		rax
0x7fffeafc6b77:	pop		rbx
0x7fffeafc6b78:	mov		qword ptr [rbp - 0x30], r9
0x7fffeafc6b7c:	push		rbx
0x7fffeafc6b7d:	push		rax
0x7fffeafc6b7e:	lea		rax, [rbp - 0x34]
0x7fffeafc6b82:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc6b8c:	cmp		rax, rbx
0x7fffeafc6b8f:	ja		0x7fffeafc79fb
0x7fffeafc6b95:	movabs		rbx, 1
0x7fffeafc6b9f:	cmp		rax, rbx
0x7fffeafc6ba2:	jb		0x7fffeafc79fb
0x7fffeafc6ba8:	pop		rax
0x7fffeafc6ba9:	pop		rbx
0x7fffeafc6baa:	mov		dword ptr [rbp - 0x34], 0
0x7fffeafc6bb1:	push		rbx
0x7fffeafc6bb2:	push		rax
0x7fffeafc6bb3:	lea		rax, [rbp - 0x38]
0x7fffeafc6bb7:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc6bc1:	cmp		rax, rbx
0x7fffeafc6bc4:	ja		0x7fffeafc79fb
0x7fffeafc6bca:	movabs		rbx, 1
0x7fffeafc6bd4:	cmp		rax, rbx
0x7fffeafc6bd7:	jb		0x7fffeafc79fb
0x7fffeafc6bdd:	pop		rax
0x7fffeafc6bde:	pop		rbx
0x7fffeafc6bdf:	mov		dword ptr [rbp - 0x38], 0
0x7fffeafc6be6:	push		rbx
0x7fffeafc6be7:	push		rax
0x7fffeafc6be8:	lea		rax, [rbp - 0x3c]
0x7fffeafc6bec:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc6bf6:	cmp		rax, rbx
0x7fffeafc6bf9:	ja		0x7fffeafc79fb
0x7fffeafc6bff:	movabs		rbx, 1
0x7fffeafc6c09:	cmp		rax, rbx
0x7fffeafc6c0c:	jb		0x7fffeafc79fb
0x7fffeafc6c12:	pop		rax
0x7fffeafc6c13:	pop		rbx
0x7fffeafc6c14:	mov		dword ptr [rbp - 0x3c], 0
0x7fffeafc6c1b:	push		rbx
0x7fffeafc6c1c:	push		rax
0x7fffeafc6c1d:	lea		rax, [rbp - 0x50]
0x7fffeafc6c21:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc6c2b:	cmp		rax, rbx
0x7fffeafc6c2e:	ja		0x7fffeafc79fb
0x7fffeafc6c34:	movabs		rbx, 1
0x7fffeafc6c3e:	cmp		rax, rbx
0x7fffeafc6c41:	jb		0x7fffeafc79fb
0x7fffeafc6c47:	pop		rax
0x7fffeafc6c48:	pop		rbx
0x7fffeafc6c49:	mov		dword ptr [rbp - 0x50], 0
0x7fffeafc6c50:	push		rbx
0x7fffeafc6c51:	push		rax
0x7fffeafc6c52:	lea		rax, [rbp - 0x54]
0x7fffeafc6c56:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc6c60:	cmp		rax, rbx
0x7fffeafc6c63:	ja		0x7fffeafc79fb
0x7fffeafc6c69:	movabs		rbx, 1
0x7fffeafc6c73:	cmp		rax, rbx
0x7fffeafc6c76:	jb		0x7fffeafc79fb
0x7fffeafc6c7c:	pop		rax
0x7fffeafc6c7d:	pop		rbx
0x7fffeafc6c7e:	mov		dword ptr [rbp - 0x54], 0
0x7fffeafc6c85:	push		rbx
0x7fffeafc6c86:	push		rax
0x7fffeafc6c87:	lea		rax, [rbp - 0x58]
0x7fffeafc6c8b:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc6c95:	cmp		rax, rbx
0x7fffeafc6c98:	ja		0x7fffeafc79fb
0x7fffeafc6c9e:	movabs		rbx, 1
0x7fffeafc6ca8:	cmp		rax, rbx
0x7fffeafc6cab:	jb		0x7fffeafc79fb
0x7fffeafc6cb1:	pop		rax
0x7fffeafc6cb2:	pop		rbx
0x7fffeafc6cb3:	mov		dword ptr [rbp - 0x58], 2
0x7fffeafc6cba:	push		rbx
0x7fffeafc6cbb:	push		rax
0x7fffeafc6cbc:	lea		rax, [rbp - 0x5c]
0x7fffeafc6cc0:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc6cca:	cmp		rax, rbx
0x7fffeafc6ccd:	ja		0x7fffeafc79fb
0x7fffeafc6cd3:	movabs		rbx, 1
0x7fffeafc6cdd:	cmp		rax, rbx
0x7fffeafc6ce0:	jb		0x7fffeafc79fb
0x7fffeafc6ce6:	pop		rax
0x7fffeafc6ce7:	pop		rbx
0x7fffeafc6ce8:	mov		dword ptr [rbp - 0x5c], 0xffffffff
0x7fffeafc6cef:	lea		rcx, [rbp - 0xa0]
0x7fffeafc6cf6:	mov		rdi, rcx
0x7fffeafc6cf9:	mov		rsi, r10
0x7fffeafc6cfc:	mov		edx, 0x40
0x7fffeafc6d01:	push		rbx
0x7fffeafc6d02:	push		rax
0x7fffeafc6d03:	lea		rax, [rbp - 0xc4]
0x7fffeafc6d0a:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc6d14:	cmp		rax, rbx
0x7fffeafc6d17:	ja		0x7fffeafc79fb
0x7fffeafc6d1d:	movabs		rbx, 1
0x7fffeafc6d27:	cmp		rax, rbx
0x7fffeafc6d2a:	jb		0x7fffeafc79fb
0x7fffeafc6d30:	pop		rax
0x7fffeafc6d31:	pop		rbx
0x7fffeafc6d32:	mov		dword ptr [rbp - 0xc4], eax
0x7fffeafc6d38:	call		0x7fffeafd2590
0x7fffeafc6d3d:	mov		rdi, qword ptr [rbp - 0x18]
0x7fffeafc6d41:	call		0x7fffeafc5ce0
0x7fffeafc6d46:	push		rbx
0x7fffeafc6d47:	push		rax
0x7fffeafc6d48:	lea		rax, [rbp - 0xa4]
0x7fffeafc6d4f:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc6d59:	cmp		rax, rbx
0x7fffeafc6d5c:	ja		0x7fffeafc79fb
0x7fffeafc6d62:	movabs		rbx, 1
0x7fffeafc6d6c:	cmp		rax, rbx
0x7fffeafc6d6f:	jb		0x7fffeafc79fb
0x7fffeafc6d75:	pop		rax
0x7fffeafc6d76:	pop		rbx
0x7fffeafc6d77:	mov		dword ptr [rbp - 0xa4], eax
0x7fffeafc6d7d:	mov		rdi, qword ptr [rbp - 0x20]
0x7fffeafc6d81:	call		0x7fffeafc5ce0
0x7fffeafc6d86:	push		rbx
0x7fffeafc6d87:	push		rax
0x7fffeafc6d88:	lea		rax, [rbp - 0xa8]
0x7fffeafc6d8f:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc6d99:	cmp		rax, rbx
0x7fffeafc6d9c:	ja		0x7fffeafc79fb
0x7fffeafc6da2:	movabs		rbx, 1
0x7fffeafc6dac:	cmp		rax, rbx
0x7fffeafc6daf:	jb		0x7fffeafc79fb
0x7fffeafc6db5:	pop		rax
0x7fffeafc6db6:	pop		rbx
0x7fffeafc6db7:	mov		dword ptr [rbp - 0xa8], eax
0x7fffeafc6dbd:	lea		rdi, [rip + 0x2c250d6]
0x7fffeafc6dc4:	call		0x7fffeafd3ff0
0x7fffeafc6dc9:	push		rbx
0x7fffeafc6dca:	push		rax
0x7fffeafc6dcb:	lea		rax, [rbp - 0x50]
0x7fffeafc6dcf:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc6dd9:	cmp		rax, rbx
0x7fffeafc6ddc:	ja		0x7fffeafc79fb
0x7fffeafc6de2:	movabs		rbx, 1
0x7fffeafc6dec:	cmp		rax, rbx
0x7fffeafc6def:	jb		0x7fffeafc79fb
0x7fffeafc6df5:	pop		rax
0x7fffeafc6df6:	pop		rbx
0x7fffeafc6df7:	mov		dword ptr [rbp - 0x50], 1
0x7fffeafc6dfe:	mov		eax, dword ptr [rbp - 0x50]
0x7fffeafc6e01:	cmp		eax, dword ptr [rbp - 0xa8]
0x7fffeafc6e07:	jg		0x7fffeafc7375
0x7fffeafc6e0d:	push		rbx
0x7fffeafc6e0e:	push		rax
0x7fffeafc6e0f:	lea		rax, [rbp - 0x54]
0x7fffeafc6e13:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc6e1d:	cmp		rax, rbx
0x7fffeafc6e20:	ja		0x7fffeafc79fb
0x7fffeafc6e26:	movabs		rbx, 1
0x7fffeafc6e30:	cmp		rax, rbx
0x7fffeafc6e33:	jb		0x7fffeafc79fb
0x7fffeafc6e39:	pop		rax
0x7fffeafc6e3a:	pop		rbx
0x7fffeafc6e3b:	mov		dword ptr [rbp - 0x54], 1
0x7fffeafc6e42:	mov		eax, dword ptr [rbp - 0x54]
0x7fffeafc6e45:	cmp		eax, dword ptr [rbp - 0xa4]
0x7fffeafc6e4b:	jg		0x7fffeafc7334
0x7fffeafc6e51:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc6e55:	mov		ecx, dword ptr [rbp - 0x54]
0x7fffeafc6e58:	add		ecx, -1
0x7fffeafc6e5b:	movsxd		rdx, ecx
0x7fffeafc6e5e:	mov		sil, byte ptr [rax + rdx]
0x7fffeafc6e62:	push		rbx
0x7fffeafc6e63:	push		rax
0x7fffeafc6e64:	lea		rax, [rbp - 0x4a]
0x7fffeafc6e68:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc6e72:	cmp		rax, rbx
0x7fffeafc6e75:	ja		0x7fffeafc79fb
0x7fffeafc6e7b:	movabs		rbx, 1
0x7fffeafc6e85:	cmp		rax, rbx
0x7fffeafc6e88:	jb		0x7fffeafc79fb
0x7fffeafc6e8e:	pop		rax
0x7fffeafc6e8f:	pop		rbx
0x7fffeafc6e90:	mov		byte ptr [rbp - 0x4a], sil
0x7fffeafc6e94:	movsx		ecx, byte ptr [rbp - 0x4a]
0x7fffeafc6e98:	add		ecx, -0x41
0x7fffeafc6e9b:	mov		eax, ecx
0x7fffeafc6e9d:	sub		ecx, 0x13
0x7fffeafc6ea0:	push		rbx
0x7fffeafc6ea1:	push		rax
0x7fffeafc6ea2:	lea		rax, [rbp - 0xd0]
0x7fffeafc6ea9:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc6eb3:	cmp		rax, rbx
0x7fffeafc6eb6:	ja		0x7fffeafc79fb
0x7fffeafc6ebc:	movabs		rbx, 1
0x7fffeafc6ec6:	cmp		rax, rbx
0x7fffeafc6ec9:	jb		0x7fffeafc79fb
0x7fffeafc6ecf:	pop		rax
0x7fffeafc6ed0:	pop		rbx
0x7fffeafc6ed1:	mov		qword ptr [rbp - 0xd0], rax
0x7fffeafc6ed8:	ja		0x7fffeafc6fd8
0x7fffeafc6ede:	lea		rax, [rip + 0x2c2422b]
0x7fffeafc6ee5:	mov		rcx, qword ptr [rbp - 0xd0]
0x7fffeafc6eec:	movsxd		rdx, dword ptr [rax + rcx*4]
0x7fffeafc6ef0:	add		rdx, rax
0x7fffeafc6ef3:	jmp		rdx
0x7fffeafc6ef5:	push		rbx
0x7fffeafc6ef6:	push		rax
0x7fffeafc6ef7:	lea		rax, [rbp - 0x38]
0x7fffeafc6efb:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc6f05:	cmp		rax, rbx
0x7fffeafc6f08:	ja		0x7fffeafc79fb
0x7fffeafc6f0e:	movabs		rbx, 1
0x7fffeafc6f18:	cmp		rax, rbx
0x7fffeafc6f1b:	jb		0x7fffeafc79fb
0x7fffeafc6f21:	pop		rax
0x7fffeafc6f22:	pop		rbx
0x7fffeafc6f23:	mov		dword ptr [rbp - 0x38], 0
0x7fffeafc6f2a:	jmp		0x7fffeafc6fd8
0x7fffeafc6f2f:	push		rbx
0x7fffeafc6f30:	push		rax
0x7fffeafc6f31:	lea		rax, [rbp - 0x38]
0x7fffeafc6f35:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc6f3f:	cmp		rax, rbx
0x7fffeafc6f42:	ja		0x7fffeafc79fb
0x7fffeafc6f48:	movabs		rbx, 1
0x7fffeafc6f52:	cmp		rax, rbx
0x7fffeafc6f55:	jb		0x7fffeafc79fb
0x7fffeafc6f5b:	pop		rax
0x7fffeafc6f5c:	pop		rbx
0x7fffeafc6f5d:	mov		dword ptr [rbp - 0x38], 1
0x7fffeafc6f64:	jmp		0x7fffeafc6fd8
0x7fffeafc6f69:	push		rbx
0x7fffeafc6f6a:	push		rax
0x7fffeafc6f6b:	lea		rax, [rbp - 0x38]
0x7fffeafc6f6f:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc6f79:	cmp		rax, rbx
0x7fffeafc6f7c:	ja		0x7fffeafc79fb
0x7fffeafc6f82:	movabs		rbx, 1
0x7fffeafc6f8c:	cmp		rax, rbx
0x7fffeafc6f8f:	jb		0x7fffeafc79fb
0x7fffeafc6f95:	pop		rax
0x7fffeafc6f96:	pop		rbx
0x7fffeafc6f97:	mov		dword ptr [rbp - 0x38], 2
0x7fffeafc6f9e:	jmp		0x7fffeafc6fd8
0x7fffeafc6fa3:	push		rbx
0x7fffeafc6fa4:	push		rax
0x7fffeafc6fa5:	lea		rax, [rbp - 0x38]
0x7fffeafc6fa9:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc6fb3:	cmp		rax, rbx
0x7fffeafc6fb6:	ja		0x7fffeafc79fb
0x7fffeafc6fbc:	movabs		rbx, 1
0x7fffeafc6fc6:	cmp		rax, rbx
0x7fffeafc6fc9:	jb		0x7fffeafc79fb
0x7fffeafc6fcf:	pop		rax
0x7fffeafc6fd0:	pop		rbx
0x7fffeafc6fd1:	mov		dword ptr [rbp - 0x38], 3
0x7fffeafc6fd8:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc6fdc:	mov		ecx, dword ptr [rbp - 0x50]
0x7fffeafc6fdf:	add		ecx, -1
0x7fffeafc6fe2:	movsxd		rdx, ecx
0x7fffeafc6fe5:	mov		sil, byte ptr [rax + rdx]
0x7fffeafc6fe9:	push		rbx
0x7fffeafc6fea:	push		rax
0x7fffeafc6feb:	lea		rax, [rbp - 0x4a]
0x7fffeafc6fef:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc6ff9:	cmp		rax, rbx
0x7fffeafc6ffc:	ja		0x7fffeafc79fb
0x7fffeafc7002:	movabs		rbx, 1
0x7fffeafc700c:	cmp		rax, rbx
0x7fffeafc700f:	jb		0x7fffeafc79fb
0x7fffeafc7015:	pop		rax
0x7fffeafc7016:	pop		rbx
0x7fffeafc7017:	mov		byte ptr [rbp - 0x4a], sil
0x7fffeafc701b:	movsx		ecx, byte ptr [rbp - 0x4a]
0x7fffeafc701f:	add		ecx, -0x41
0x7fffeafc7022:	mov		eax, ecx
0x7fffeafc7024:	sub		ecx, 0x13
0x7fffeafc7027:	push		rbx
0x7fffeafc7028:	push		rax
0x7fffeafc7029:	lea		rax, [rbp - 0xd8]
0x7fffeafc7030:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc703a:	cmp		rax, rbx
0x7fffeafc703d:	ja		0x7fffeafc79fb
0x7fffeafc7043:	movabs		rbx, 1
0x7fffeafc704d:	cmp		rax, rbx
0x7fffeafc7050:	jb		0x7fffeafc79fb
0x7fffeafc7056:	pop		rax
0x7fffeafc7057:	pop		rbx
0x7fffeafc7058:	mov		qword ptr [rbp - 0xd8], rax
0x7fffeafc705f:	ja		0x7fffeafc715f
0x7fffeafc7065:	lea		rax, [rip + 0x2c240f4]
0x7fffeafc706c:	mov		rcx, qword ptr [rbp - 0xd8]
0x7fffeafc7073:	movsxd		rdx, dword ptr [rax + rcx*4]
0x7fffeafc7077:	add		rdx, rax
0x7fffeafc707a:	jmp		rdx
0x7fffeafc707c:	push		rbx
0x7fffeafc707d:	push		rax
0x7fffeafc707e:	lea		rax, [rbp - 0x3c]
0x7fffeafc7082:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc708c:	cmp		rax, rbx
0x7fffeafc708f:	ja		0x7fffeafc79fb
0x7fffeafc7095:	movabs		rbx, 1
0x7fffeafc709f:	cmp		rax, rbx
0x7fffeafc70a2:	jb		0x7fffeafc79fb
0x7fffeafc70a8:	pop		rax
0x7fffeafc70a9:	pop		rbx
0x7fffeafc70aa:	mov		dword ptr [rbp - 0x3c], 0
0x7fffeafc70b1:	jmp		0x7fffeafc715f
0x7fffeafc70b6:	push		rbx
0x7fffeafc70b7:	push		rax
0x7fffeafc70b8:	lea		rax, [rbp - 0x3c]
0x7fffeafc70bc:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc70c6:	cmp		rax, rbx
0x7fffeafc70c9:	ja		0x7fffeafc79fb
0x7fffeafc70cf:	movabs		rbx, 1
0x7fffeafc70d9:	cmp		rax, rbx
0x7fffeafc70dc:	jb		0x7fffeafc79fb
0x7fffeafc70e2:	pop		rax
0x7fffeafc70e3:	pop		rbx
0x7fffeafc70e4:	mov		dword ptr [rbp - 0x3c], 1
0x7fffeafc70eb:	jmp		0x7fffeafc715f
0x7fffeafc70f0:	push		rbx
0x7fffeafc70f1:	push		rax
0x7fffeafc70f2:	lea		rax, [rbp - 0x3c]
0x7fffeafc70f6:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7100:	cmp		rax, rbx
0x7fffeafc7103:	ja		0x7fffeafc79fb
0x7fffeafc7109:	movabs		rbx, 1
0x7fffeafc7113:	cmp		rax, rbx
0x7fffeafc7116:	jb		0x7fffeafc79fb
0x7fffeafc711c:	pop		rax
0x7fffeafc711d:	pop		rbx
0x7fffeafc711e:	mov		dword ptr [rbp - 0x3c], 2
0x7fffeafc7125:	jmp		0x7fffeafc715f
0x7fffeafc712a:	push		rbx
0x7fffeafc712b:	push		rax
0x7fffeafc712c:	lea		rax, [rbp - 0x3c]
0x7fffeafc7130:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc713a:	cmp		rax, rbx
0x7fffeafc713d:	ja		0x7fffeafc79fb
0x7fffeafc7143:	movabs		rbx, 1
0x7fffeafc714d:	cmp		rax, rbx
0x7fffeafc7150:	jb		0x7fffeafc79fb
0x7fffeafc7156:	pop		rax
0x7fffeafc7157:	pop		rbx
0x7fffeafc7158:	mov		dword ptr [rbp - 0x3c], 3
0x7fffeafc715f:	mov		rax, qword ptr [rbp - 8]
0x7fffeafc7163:	mov		ecx, dword ptr [rbp - 0x50]
0x7fffeafc7166:	sub		ecx, 1
0x7fffeafc7169:	movsxd		rdx, ecx
0x7fffeafc716c:	mov		rax, qword ptr [rax + rdx*8]
0x7fffeafc7170:	movsxd		rdx, dword ptr [rbp - 0x54]
0x7fffeafc7174:	mov		ecx, dword ptr [rax + rdx*4]
0x7fffeafc7177:	sub		ecx, dword ptr [rbp + 0x10]
0x7fffeafc717a:	push		rbx
0x7fffeafc717b:	push		rax
0x7fffeafc717c:	lea		rax, [rbp - 0x40]
0x7fffeafc7180:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc718a:	cmp		rax, rbx
0x7fffeafc718d:	ja		0x7fffeafc79fb
0x7fffeafc7193:	movabs		rbx, 1
0x7fffeafc719d:	cmp		rax, rbx
0x7fffeafc71a0:	jb		0x7fffeafc79fb
0x7fffeafc71a6:	pop		rax
0x7fffeafc71a7:	pop		rbx
0x7fffeafc71a8:	mov		dword ptr [rbp - 0x40], ecx
0x7fffeafc71ab:	mov		rax, qword ptr [rbp - 8]
0x7fffeafc71af:	mov		ecx, dword ptr [rbp - 0x50]
0x7fffeafc71b2:	sub		ecx, 1
0x7fffeafc71b5:	movsxd		rdx, ecx
0x7fffeafc71b8:	mov		rax, qword ptr [rax + rdx*8]
0x7fffeafc71bc:	mov		ecx, dword ptr [rbp - 0x54]
0x7fffeafc71bf:	sub		ecx, 1
0x7fffeafc71c2:	movsxd		rdx, ecx
0x7fffeafc71c5:	mov		ecx, dword ptr [rax + rdx*4]
0x7fffeafc71c8:	movsxd		rax, dword ptr [rbp - 0x38]
0x7fffeafc71cc:	shl		rax, 4
0x7fffeafc71d0:	lea		rdx, [rbp - 0xa0]
0x7fffeafc71d7:	add		rdx, rax
0x7fffeafc71da:	movsxd		rax, dword ptr [rbp - 0x3c]
0x7fffeafc71de:	add		ecx, dword ptr [rdx + rax*4]
0x7fffeafc71e1:	push		rbx
0x7fffeafc71e2:	push		rax
0x7fffeafc71e3:	lea		rax, [rbp - 0x44]
0x7fffeafc71e7:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc71f1:	cmp		rax, rbx
0x7fffeafc71f4:	ja		0x7fffeafc79fb
0x7fffeafc71fa:	movabs		rbx, 1
0x7fffeafc7204:	cmp		rax, rbx
0x7fffeafc7207:	jb		0x7fffeafc79fb
0x7fffeafc720d:	pop		rax
0x7fffeafc720e:	pop		rbx
0x7fffeafc720f:	mov		dword ptr [rbp - 0x44], ecx
0x7fffeafc7212:	mov		rax, qword ptr [rbp - 8]
0x7fffeafc7216:	movsxd		rdx, dword ptr [rbp - 0x50]
0x7fffeafc721a:	mov		rax, qword ptr [rax + rdx*8]
0x7fffeafc721e:	mov		ecx, dword ptr [rbp - 0x54]
0x7fffeafc7221:	sub		ecx, 1
0x7fffeafc7224:	movsxd		rdx, ecx
0x7fffeafc7227:	mov		ecx, dword ptr [rax + rdx*4]
0x7fffeafc722a:	sub		ecx, dword ptr [rbp + 0x10]
0x7fffeafc722d:	push		rbx
0x7fffeafc722e:	push		rax
0x7fffeafc722f:	lea		rax, [rbp - 0x48]
0x7fffeafc7233:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc723d:	cmp		rax, rbx
0x7fffeafc7240:	ja		0x7fffeafc79fb
0x7fffeafc7246:	movabs		rbx, 1
0x7fffeafc7250:	cmp		rax, rbx
0x7fffeafc7253:	jb		0x7fffeafc79fb
0x7fffeafc7259:	pop		rax
0x7fffeafc725a:	pop		rbx
0x7fffeafc725b:	mov		dword ptr [rbp - 0x48], ecx
0x7fffeafc725e:	mov		edi, dword ptr [rbp - 0x40]
0x7fffeafc7261:	mov		esi, dword ptr [rbp - 0x44]
0x7fffeafc7264:	mov		edx, dword ptr [rbp - 0x48]
0x7fffeafc7267:	lea		rcx, [rbp - 0x49]
0x7fffeafc726b:	call		0x7fffeafc55b0
0x7fffeafc7270:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafc7274:	movsxd		r8, dword ptr [rbp - 0x50]
0x7fffeafc7278:	mov		rcx, qword ptr [rcx + r8*8]
0x7fffeafc727c:	movsxd		r8, dword ptr [rbp - 0x54]
0x7fffeafc7280:	push		rbx
0x7fffeafc7281:	push		rax
0x7fffeafc7282:	lea		rax, [rcx + r8*4]
0x7fffeafc7286:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7290:	cmp		rax, rbx
0x7fffeafc7293:	ja		0x7fffeafc79fb
0x7fffeafc7299:	movabs		rbx, 1
0x7fffeafc72a3:	cmp		rax, rbx
0x7fffeafc72a6:	jb		0x7fffeafc79fb
0x7fffeafc72ac:	pop		rax
0x7fffeafc72ad:	pop		rbx
0x7fffeafc72ae:	mov		dword ptr [rcx + r8*4], eax
0x7fffeafc72b2:	mov		r9b, byte ptr [rbp - 0x49]
0x7fffeafc72b6:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafc72ba:	movsxd		r8, dword ptr [rbp - 0x50]
0x7fffeafc72be:	mov		rcx, qword ptr [rcx + r8*8]
0x7fffeafc72c2:	movsxd		r8, dword ptr [rbp - 0x54]
0x7fffeafc72c6:	push		rbx
0x7fffeafc72c7:	push		rax
0x7fffeafc72c8:	lea		rax, [rcx + r8]
0x7fffeafc72cc:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc72d6:	cmp		rax, rbx
0x7fffeafc72d9:	ja		0x7fffeafc79fb
0x7fffeafc72df:	movabs		rbx, 1
0x7fffeafc72e9:	cmp		rax, rbx
0x7fffeafc72ec:	jb		0x7fffeafc79fb
0x7fffeafc72f2:	pop		rax
0x7fffeafc72f3:	pop		rbx
0x7fffeafc72f4:	mov		byte ptr [rcx + r8], r9b
0x7fffeafc72f8:	mov		eax, dword ptr [rbp - 0x54]
0x7fffeafc72fb:	add		eax, 1
0x7fffeafc72fe:	push		rbx
0x7fffeafc72ff:	push		rax
0x7fffeafc7300:	lea		rax, [rbp - 0x54]
0x7fffeafc7304:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc730e:	cmp		rax, rbx
0x7fffeafc7311:	ja		0x7fffeafc79fb
0x7fffeafc7317:	movabs		rbx, 1
0x7fffeafc7321:	cmp		rax, rbx
0x7fffeafc7324:	jb		0x7fffeafc79fb
0x7fffeafc732a:	pop		rax
0x7fffeafc732b:	pop		rbx
0x7fffeafc732c:	mov		dword ptr [rbp - 0x54], eax
0x7fffeafc732f:	jmp		0x7fffeafc6e42
0x7fffeafc7334:	jmp		0x7fffeafc7339
0x7fffeafc7339:	mov		eax, dword ptr [rbp - 0x50]
0x7fffeafc733c:	add		eax, 1
0x7fffeafc733f:	push		rbx
0x7fffeafc7340:	push		rax
0x7fffeafc7341:	lea		rax, [rbp - 0x50]
0x7fffeafc7345:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc734f:	cmp		rax, rbx
0x7fffeafc7352:	ja		0x7fffeafc79fb
0x7fffeafc7358:	movabs		rbx, 1
0x7fffeafc7362:	cmp		rax, rbx
0x7fffeafc7365:	jb		0x7fffeafc79fb
0x7fffeafc736b:	pop		rax
0x7fffeafc736c:	pop		rbx
0x7fffeafc736d:	mov		dword ptr [rbp - 0x50], eax
0x7fffeafc7370:	jmp		0x7fffeafc6dfe
0x7fffeafc7375:	mov		eax, dword ptr [rbp - 0x50]
0x7fffeafc7378:	add		eax, -1
0x7fffeafc737b:	push		rbx
0x7fffeafc737c:	push		rax
0x7fffeafc737d:	lea		rax, [rbp - 0x50]
0x7fffeafc7381:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc738b:	cmp		rax, rbx
0x7fffeafc738e:	ja		0x7fffeafc79fb
0x7fffeafc7394:	movabs		rbx, 1
0x7fffeafc739e:	cmp		rax, rbx
0x7fffeafc73a1:	jb		0x7fffeafc79fb
0x7fffeafc73a7:	pop		rax
0x7fffeafc73a8:	pop		rbx
0x7fffeafc73a9:	mov		dword ptr [rbp - 0x50], eax
0x7fffeafc73ac:	mov		eax, dword ptr [rbp - 0x54]
0x7fffeafc73af:	add		eax, -1
0x7fffeafc73b2:	push		rbx
0x7fffeafc73b3:	push		rax
0x7fffeafc73b4:	lea		rax, [rbp - 0x54]
0x7fffeafc73b8:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc73c2:	cmp		rax, rbx
0x7fffeafc73c5:	ja		0x7fffeafc79fb
0x7fffeafc73cb:	movabs		rbx, 1
0x7fffeafc73d5:	cmp		rax, rbx
0x7fffeafc73d8:	jb		0x7fffeafc79fb
0x7fffeafc73de:	pop		rax
0x7fffeafc73df:	pop		rbx
0x7fffeafc73e0:	mov		dword ptr [rbp - 0x54], eax
0x7fffeafc73e3:	cmp		dword ptr [rbp - 0x50], 0
0x7fffeafc73e7:	mov		al, 1
0x7fffeafc73e9:	push		rbx
0x7fffeafc73ea:	push		rax
0x7fffeafc73eb:	lea		rax, [rbp - 0xd9]
0x7fffeafc73f2:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc73fc:	cmp		rax, rbx
0x7fffeafc73ff:	ja		0x7fffeafc79fb
0x7fffeafc7405:	movabs		rbx, 1
0x7fffeafc740f:	cmp		rax, rbx
0x7fffeafc7412:	jb		0x7fffeafc79fb
0x7fffeafc7418:	pop		rax
0x7fffeafc7419:	pop		rbx
0x7fffeafc741a:	mov		byte ptr [rbp - 0xd9], al
0x7fffeafc7420:	jg		0x7fffeafc7464
0x7fffeafc7426:	cmp		dword ptr [rbp - 0x54], 0
0x7fffeafc742a:	setg		al
0x7fffeafc742d:	push		rbx
0x7fffeafc742e:	push		rax
0x7fffeafc742f:	lea		rax, [rbp - 0xd9]
0x7fffeafc7436:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7440:	cmp		rax, rbx
0x7fffeafc7443:	ja		0x7fffeafc79fb
0x7fffeafc7449:	movabs		rbx, 1
0x7fffeafc7453:	cmp		rax, rbx
0x7fffeafc7456:	jb		0x7fffeafc79fb
0x7fffeafc745c:	pop		rax
0x7fffeafc745d:	pop		rbx
0x7fffeafc745e:	mov		byte ptr [rbp - 0xd9], al
0x7fffeafc7464:	mov		al, byte ptr [rbp - 0xd9]
0x7fffeafc746a:	test		al, 1
0x7fffeafc746c:	jne		0x7fffeafc7477
0x7fffeafc7472:	jmp		0x7fffeafc794b
0x7fffeafc7477:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafc747b:	movsxd		rcx, dword ptr [rbp - 0x50]
0x7fffeafc747f:	mov		rax, qword ptr [rax + rcx*8]
0x7fffeafc7483:	movsxd		rcx, dword ptr [rbp - 0x54]
0x7fffeafc7487:	movsx		edx, byte ptr [rax + rcx]
0x7fffeafc748b:	mov		esi, edx
0x7fffeafc748d:	sub		esi, 0x2d
0x7fffeafc7490:	push		rbx
0x7fffeafc7491:	push		rax
0x7fffeafc7492:	lea		rax, [rbp - 0xe0]
0x7fffeafc7499:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc74a3:	cmp		rax, rbx
0x7fffeafc74a6:	ja		0x7fffeafc79fb
0x7fffeafc74ac:	movabs		rbx, 1
0x7fffeafc74b6:	cmp		rax, rbx
0x7fffeafc74b9:	jb		0x7fffeafc79fb
0x7fffeafc74bf:	pop		rax
0x7fffeafc74c0:	pop		rbx
0x7fffeafc74c1:	mov		dword ptr [rbp - 0xe0], edx
0x7fffeafc74c7:	je		0x7fffeafc77f5
0x7fffeafc74cd:	jmp		0x7fffeafc74d2
0x7fffeafc74d2:	mov		eax, dword ptr [rbp - 0xe0]
0x7fffeafc74d8:	sub		eax, 0x5c
0x7fffeafc74db:	je		0x7fffeafc761e
0x7fffeafc74e1:	jmp		0x7fffeafc74e6
0x7fffeafc74e6:	mov		eax, dword ptr [rbp - 0xe0]
0x7fffeafc74ec:	sub		eax, 0x7c
0x7fffeafc74ef:	jne		0x7fffeafc790f
0x7fffeafc74f5:	jmp		0x7fffeafc74fa
0x7fffeafc74fa:	mov		rdi, qword ptr [rbp - 0x28]
0x7fffeafc74fe:	lea		rsi, [rip + 0x2c2499b]
0x7fffeafc7505:	mov		edx, 1
0x7fffeafc750a:	call		0x7fffeafc6720
0x7fffeafc750f:	lea		rsi, [rbp - 0xaa]
0x7fffeafc7516:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafc751a:	mov		r8d, dword ptr [rbp - 0x50]
0x7fffeafc751e:	sub		r8d, 1
0x7fffeafc7522:	movsxd		rdx, r8d
0x7fffeafc7525:	mov		r9b, byte ptr [rcx + rdx]
0x7fffeafc7529:	push		rbx
0x7fffeafc752a:	push		rax
0x7fffeafc752b:	lea		rax, [rbp - 0xaa]
0x7fffeafc7532:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc753c:	cmp		rax, rbx
0x7fffeafc753f:	ja		0x7fffeafc79fb
0x7fffeafc7545:	movabs		rbx, 1
0x7fffeafc754f:	cmp		rax, rbx
0x7fffeafc7552:	jb		0x7fffeafc79fb
0x7fffeafc7558:	pop		rax
0x7fffeafc7559:	pop		rbx
0x7fffeafc755a:	mov		byte ptr [rbp - 0xaa], r9b
0x7fffeafc7561:	push		rbx
0x7fffeafc7562:	push		rax
0x7fffeafc7563:	lea		rax, [rbp - 0xa9]
0x7fffeafc756a:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7574:	cmp		rax, rbx
0x7fffeafc7577:	ja		0x7fffeafc79fb
0x7fffeafc757d:	movabs		rbx, 1
0x7fffeafc7587:	cmp		rax, rbx
0x7fffeafc758a:	jb		0x7fffeafc79fb
0x7fffeafc7590:	pop		rax
0x7fffeafc7591:	pop		rbx
0x7fffeafc7592:	mov		byte ptr [rbp - 0xa9], 0
0x7fffeafc7599:	mov		rdi, qword ptr [rbp - 0x30]
0x7fffeafc759d:	mov		edx, 1
0x7fffeafc75a2:	push		rbx
0x7fffeafc75a3:	push		rax
0x7fffeafc75a4:	lea		rax, [rbp - 0xe8]
0x7fffeafc75ab:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc75b5:	cmp		rax, rbx
0x7fffeafc75b8:	ja		0x7fffeafc79fb
0x7fffeafc75be:	movabs		rbx, 1
0x7fffeafc75c8:	cmp		rax, rbx
0x7fffeafc75cb:	jb		0x7fffeafc79fb
0x7fffeafc75d1:	pop		rax
0x7fffeafc75d2:	pop		rbx
0x7fffeafc75d3:	mov		qword ptr [rbp - 0xe8], rax
0x7fffeafc75da:	call		0x7fffeafc6720
0x7fffeafc75df:	mov		r8d, dword ptr [rbp - 0x50]
0x7fffeafc75e3:	add		r8d, -1
0x7fffeafc75e7:	push		rbx
0x7fffeafc75e8:	push		rax
0x7fffeafc75e9:	lea		rax, [rbp - 0x50]
0x7fffeafc75ed:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc75f7:	cmp		rax, rbx
0x7fffeafc75fa:	ja		0x7fffeafc79fb
0x7fffeafc7600:	movabs		rbx, 1
0x7fffeafc760a:	cmp		rax, rbx
0x7fffeafc760d:	jb		0x7fffeafc79fb
0x7fffeafc7613:	pop		rax
0x7fffeafc7614:	pop		rbx
0x7fffeafc7615:	mov		dword ptr [rbp - 0x50], r8d
0x7fffeafc7619:	jmp		0x7fffeafc790f
0x7fffeafc761e:	lea		rsi, [rbp - 0xaa]
0x7fffeafc7625:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc7629:	mov		ecx, dword ptr [rbp - 0x54]
0x7fffeafc762c:	sub		ecx, 1
0x7fffeafc762f:	movsxd		rdx, ecx
0x7fffeafc7632:	mov		dil, byte ptr [rax + rdx]
0x7fffeafc7636:	push		rbx
0x7fffeafc7637:	push		rax
0x7fffeafc7638:	lea		rax, [rbp - 0xaa]
0x7fffeafc763f:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7649:	cmp		rax, rbx
0x7fffeafc764c:	ja		0x7fffeafc79fb
0x7fffeafc7652:	movabs		rbx, 1
0x7fffeafc765c:	cmp		rax, rbx
0x7fffeafc765f:	jb		0x7fffeafc79fb
0x7fffeafc7665:	pop		rax
0x7fffeafc7666:	pop		rbx
0x7fffeafc7667:	mov		byte ptr [rbp - 0xaa], dil
0x7fffeafc766e:	push		rbx
0x7fffeafc766f:	push		rax
0x7fffeafc7670:	lea		rax, [rbp - 0xa9]
0x7fffeafc7677:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7681:	cmp		rax, rbx
0x7fffeafc7684:	ja		0x7fffeafc79fb
0x7fffeafc768a:	movabs		rbx, 1
0x7fffeafc7694:	cmp		rax, rbx
0x7fffeafc7697:	jb		0x7fffeafc79fb
0x7fffeafc769d:	pop		rax
0x7fffeafc769e:	pop		rbx
0x7fffeafc769f:	mov		byte ptr [rbp - 0xa9], 0
0x7fffeafc76a6:	mov		rdi, qword ptr [rbp - 0x28]
0x7fffeafc76aa:	mov		edx, 1
0x7fffeafc76af:	call		0x7fffeafc6720
0x7fffeafc76b4:	lea		rsi, [rbp - 0xaa]
0x7fffeafc76bb:	mov		rdx, qword ptr [rbp - 0x20]
0x7fffeafc76bf:	mov		ecx, dword ptr [rbp - 0x50]
0x7fffeafc76c2:	sub		ecx, 1
0x7fffeafc76c5:	movsxd		rdi, ecx
0x7fffeafc76c8:	mov		r8b, byte ptr [rdx + rdi]
0x7fffeafc76cc:	push		rbx
0x7fffeafc76cd:	push		rax
0x7fffeafc76ce:	lea		rax, [rbp - 0xaa]
0x7fffeafc76d5:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc76df:	cmp		rax, rbx
0x7fffeafc76e2:	ja		0x7fffeafc79fb
0x7fffeafc76e8:	movabs		rbx, 1
0x7fffeafc76f2:	cmp		rax, rbx
0x7fffeafc76f5:	jb		0x7fffeafc79fb
0x7fffeafc76fb:	pop		rax
0x7fffeafc76fc:	pop		rbx
0x7fffeafc76fd:	mov		byte ptr [rbp - 0xaa], r8b
0x7fffeafc7704:	push		rbx
0x7fffeafc7705:	push		rax
0x7fffeafc7706:	lea		rax, [rbp - 0xa9]
0x7fffeafc770d:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7717:	cmp		rax, rbx
0x7fffeafc771a:	ja		0x7fffeafc79fb
0x7fffeafc7720:	movabs		rbx, 1
0x7fffeafc772a:	cmp		rax, rbx
0x7fffeafc772d:	jb		0x7fffeafc79fb
0x7fffeafc7733:	pop		rax
0x7fffeafc7734:	pop		rbx
0x7fffeafc7735:	mov		byte ptr [rbp - 0xa9], 0
0x7fffeafc773c:	mov		rdi, qword ptr [rbp - 0x30]
0x7fffeafc7740:	mov		edx, 1
0x7fffeafc7745:	push		rbx
0x7fffeafc7746:	push		rax
0x7fffeafc7747:	lea		rax, [rbp - 0xf0]
0x7fffeafc774e:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7758:	cmp		rax, rbx
0x7fffeafc775b:	ja		0x7fffeafc79fb
0x7fffeafc7761:	movabs		rbx, 1
0x7fffeafc776b:	cmp		rax, rbx
0x7fffeafc776e:	jb		0x7fffeafc79fb
0x7fffeafc7774:	pop		rax
0x7fffeafc7775:	pop		rbx
0x7fffeafc7776:	mov		qword ptr [rbp - 0xf0], rax
0x7fffeafc777d:	call		0x7fffeafc6720
0x7fffeafc7782:	mov		ecx, dword ptr [rbp - 0x50]
0x7fffeafc7785:	add		ecx, -1
0x7fffeafc7788:	push		rbx
0x7fffeafc7789:	push		rax
0x7fffeafc778a:	lea		rax, [rbp - 0x50]
0x7fffeafc778e:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7798:	cmp		rax, rbx
0x7fffeafc779b:	ja		0x7fffeafc79fb
0x7fffeafc77a1:	movabs		rbx, 1
0x7fffeafc77ab:	cmp		rax, rbx
0x7fffeafc77ae:	jb		0x7fffeafc79fb
0x7fffeafc77b4:	pop		rax
0x7fffeafc77b5:	pop		rbx
0x7fffeafc77b6:	mov		dword ptr [rbp - 0x50], ecx
0x7fffeafc77b9:	mov		ecx, dword ptr [rbp - 0x54]
0x7fffeafc77bc:	add		ecx, -1
0x7fffeafc77bf:	push		rbx
0x7fffeafc77c0:	push		rax
0x7fffeafc77c1:	lea		rax, [rbp - 0x54]
0x7fffeafc77c5:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc77cf:	cmp		rax, rbx
0x7fffeafc77d2:	ja		0x7fffeafc79fb
0x7fffeafc77d8:	movabs		rbx, 1
0x7fffeafc77e2:	cmp		rax, rbx
0x7fffeafc77e5:	jb		0x7fffeafc79fb
0x7fffeafc77eb:	pop		rax
0x7fffeafc77ec:	pop		rbx
0x7fffeafc77ed:	mov		dword ptr [rbp - 0x54], ecx
0x7fffeafc77f0:	jmp		0x7fffeafc790f
0x7fffeafc77f5:	lea		rsi, [rbp - 0xaa]
0x7fffeafc77fc:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc7800:	mov		ecx, dword ptr [rbp - 0x54]
0x7fffeafc7803:	sub		ecx, 1
0x7fffeafc7806:	movsxd		rdx, ecx
0x7fffeafc7809:	mov		dil, byte ptr [rax + rdx]
0x7fffeafc780d:	push		rbx
0x7fffeafc780e:	push		rax
0x7fffeafc780f:	lea		rax, [rbp - 0xaa]
0x7fffeafc7816:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7820:	cmp		rax, rbx
0x7fffeafc7823:	ja		0x7fffeafc79fb
0x7fffeafc7829:	movabs		rbx, 1
0x7fffeafc7833:	cmp		rax, rbx
0x7fffeafc7836:	jb		0x7fffeafc79fb
0x7fffeafc783c:	pop		rax
0x7fffeafc783d:	pop		rbx
0x7fffeafc783e:	mov		byte ptr [rbp - 0xaa], dil
0x7fffeafc7845:	push		rbx
0x7fffeafc7846:	push		rax
0x7fffeafc7847:	lea		rax, [rbp - 0xa9]
0x7fffeafc784e:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7858:	cmp		rax, rbx
0x7fffeafc785b:	ja		0x7fffeafc79fb
0x7fffeafc7861:	movabs		rbx, 1
0x7fffeafc786b:	cmp		rax, rbx
0x7fffeafc786e:	jb		0x7fffeafc79fb
0x7fffeafc7874:	pop		rax
0x7fffeafc7875:	pop		rbx
0x7fffeafc7876:	mov		byte ptr [rbp - 0xa9], 0
0x7fffeafc787d:	mov		rdi, qword ptr [rbp - 0x28]
0x7fffeafc7881:	mov		edx, 1
0x7fffeafc7886:	call		0x7fffeafc6720
0x7fffeafc788b:	mov		rdi, qword ptr [rbp - 0x30]
0x7fffeafc788f:	lea		rsi, [rip + 0x2c2460a]
0x7fffeafc7896:	mov		edx, 1
0x7fffeafc789b:	push		rbx
0x7fffeafc789c:	push		rax
0x7fffeafc789d:	lea		rax, [rbp - 0xf8]
0x7fffeafc78a4:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc78ae:	cmp		rax, rbx
0x7fffeafc78b1:	ja		0x7fffeafc79fb
0x7fffeafc78b7:	movabs		rbx, 1
0x7fffeafc78c1:	cmp		rax, rbx
0x7fffeafc78c4:	jb		0x7fffeafc79fb
0x7fffeafc78ca:	pop		rax
0x7fffeafc78cb:	pop		rbx
0x7fffeafc78cc:	mov		qword ptr [rbp - 0xf8], rax
0x7fffeafc78d3:	call		0x7fffeafc6720
0x7fffeafc78d8:	mov		ecx, dword ptr [rbp - 0x54]
0x7fffeafc78db:	add		ecx, -1
0x7fffeafc78de:	push		rbx
0x7fffeafc78df:	push		rax
0x7fffeafc78e0:	lea		rax, [rbp - 0x54]
0x7fffeafc78e4:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc78ee:	cmp		rax, rbx
0x7fffeafc78f1:	ja		0x7fffeafc79fb
0x7fffeafc78f7:	movabs		rbx, 1
0x7fffeafc7901:	cmp		rax, rbx
0x7fffeafc7904:	jb		0x7fffeafc79fb
0x7fffeafc790a:	pop		rax
0x7fffeafc790b:	pop		rbx
0x7fffeafc790c:	mov		dword ptr [rbp - 0x54], ecx
0x7fffeafc790f:	mov		eax, dword ptr [rbp - 0x34]
0x7fffeafc7912:	add		eax, 1
0x7fffeafc7915:	push		rbx
0x7fffeafc7916:	push		rax
0x7fffeafc7917:	lea		rax, [rbp - 0x34]
0x7fffeafc791b:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7925:	cmp		rax, rbx
0x7fffeafc7928:	ja		0x7fffeafc79fb
0x7fffeafc792e:	movabs		rbx, 1
0x7fffeafc7938:	cmp		rax, rbx
0x7fffeafc793b:	jb		0x7fffeafc79fb
0x7fffeafc7941:	pop		rax
0x7fffeafc7942:	pop		rbx
0x7fffeafc7943:	mov		dword ptr [rbp - 0x34], eax
0x7fffeafc7946:	jmp		0x7fffeafc73e3
0x7fffeafc794b:	mov		rdi, qword ptr [rbp - 0x28]
0x7fffeafc794f:	call		0x7fffeafc6400
0x7fffeafc7954:	push		rbx
0x7fffeafc7955:	push		rax
0x7fffeafc7956:	lea		rax, [rbp - 0xb8]
0x7fffeafc795d:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7967:	cmp		rax, rbx
0x7fffeafc796a:	ja		0x7fffeafc79fb
0x7fffeafc7970:	movabs		rbx, 1
0x7fffeafc797a:	cmp		rax, rbx
0x7fffeafc797d:	jb		0x7fffeafc79fb
0x7fffeafc7983:	pop		rax
0x7fffeafc7984:	pop		rbx
0x7fffeafc7985:	mov		qword ptr [rbp - 0xb8], rax
0x7fffeafc798c:	mov		rdi, qword ptr [rbp - 0x30]
0x7fffeafc7990:	call		0x7fffeafc6400
0x7fffeafc7995:	xor		ecx, ecx
0x7fffeafc7997:	push		rbx
0x7fffeafc7998:	push		rax
0x7fffeafc7999:	lea		rax, [rbp - 0xc0]
0x7fffeafc79a0:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc79aa:	cmp		rax, rbx
0x7fffeafc79ad:	ja		0x7fffeafc79fb
0x7fffeafc79b3:	movabs		rbx, 1
0x7fffeafc79bd:	cmp		rax, rbx
0x7fffeafc79c0:	jb		0x7fffeafc79fb
0x7fffeafc79c6:	pop		rax
0x7fffeafc79c7:	pop		rbx
0x7fffeafc79c8:	mov		qword ptr [rbp - 0xc0], rax
0x7fffeafc79cf:	mov		eax, ecx
0x7fffeafc79d1:	add		rsp, 0x100
0x7fffeafc79d8:	pop		rbp
0x7fffeafc79d9:	movabs		r11, 0x7fffe87c3ca8
0x7fffeafc79e3:	mov		r10, qword ptr [r11]
0x7fffeafc79e6:	add		r10, r11
0x7fffeafc79e9:	sub		qword ptr [r11], 8
0x7fffeafc79ed:	mov		r11, qword ptr [r10]
0x7fffeafc79f0:	cmp		qword ptr [rsp], r11
0x7fffeafc79f4:	jne		0x7fffeafc7a07
0x7fffeafc79fa:	ret		
0x7fffeafc79fb:	pop		rax
0x7fffeafc79fc:	pop		rbx
0x7fffeafc79fd:	mov		edi, 0xffffffff
0x7fffeafc7a02:	call		0x7fffeafd41d0
0x7fffeafc7a07:	mov		edi, 0xffffffff
0x7fffeafc7a0c:	call		0x7fffeafd41d0
0x7fffeafc7a11:	nop		word ptr cs:[rax + rax]
0x7fffeafc7a1b:	nop		dword ptr [rax + rax]
disassembling symbol '.LBB8_1':
textAddr: 0x7fffeafc6dfe, textSize: 68
0x7fffeafc6dfe:	mov		eax, dword ptr [rbp - 0x50]
0x7fffeafc6e01:	cmp		eax, dword ptr [rbp - 0xa8]
0x7fffeafc6e07:	jg		0x7fffeafc7375
0x7fffeafc6e0d:	push		rbx
0x7fffeafc6e0e:	push		rax
0x7fffeafc6e0f:	lea		rax, [rbp - 0x54]
0x7fffeafc6e13:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc6e1d:	cmp		rax, rbx
0x7fffeafc6e20:	ja		0x7fffeafc79fb
0x7fffeafc6e26:	movabs		rbx, 1
0x7fffeafc6e30:	cmp		rax, rbx
0x7fffeafc6e33:	jb		0x7fffeafc79fb
0x7fffeafc6e39:	pop		rax
0x7fffeafc6e3a:	pop		rbx
0x7fffeafc6e3b:	mov		dword ptr [rbp - 0x54], 1
disassembling symbol '.LBB8_3':
textAddr: 0x7fffeafc6e42, textSize: 179
0x7fffeafc6e42:	mov		eax, dword ptr [rbp - 0x54]
0x7fffeafc6e45:	cmp		eax, dword ptr [rbp - 0xa4]
0x7fffeafc6e4b:	jg		0x7fffeafc7334
0x7fffeafc6e51:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc6e55:	mov		ecx, dword ptr [rbp - 0x54]
0x7fffeafc6e58:	add		ecx, -1
0x7fffeafc6e5b:	movsxd		rdx, ecx
0x7fffeafc6e5e:	mov		sil, byte ptr [rax + rdx]
0x7fffeafc6e62:	push		rbx
0x7fffeafc6e63:	push		rax
0x7fffeafc6e64:	lea		rax, [rbp - 0x4a]
0x7fffeafc6e68:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc6e72:	cmp		rax, rbx
0x7fffeafc6e75:	ja		0x7fffeafc79fb
0x7fffeafc6e7b:	movabs		rbx, 1
0x7fffeafc6e85:	cmp		rax, rbx
0x7fffeafc6e88:	jb		0x7fffeafc79fb
0x7fffeafc6e8e:	pop		rax
0x7fffeafc6e8f:	pop		rbx
0x7fffeafc6e90:	mov		byte ptr [rbp - 0x4a], sil
0x7fffeafc6e94:	movsx		ecx, byte ptr [rbp - 0x4a]
0x7fffeafc6e98:	add		ecx, -0x41
0x7fffeafc6e9b:	mov		eax, ecx
0x7fffeafc6e9d:	sub		ecx, 0x13
0x7fffeafc6ea0:	push		rbx
0x7fffeafc6ea1:	push		rax
0x7fffeafc6ea2:	lea		rax, [rbp - 0xd0]
0x7fffeafc6ea9:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc6eb3:	cmp		rax, rbx
0x7fffeafc6eb6:	ja		0x7fffeafc79fb
0x7fffeafc6ebc:	movabs		rbx, 1
0x7fffeafc6ec6:	cmp		rax, rbx
0x7fffeafc6ec9:	jb		0x7fffeafc79fb
0x7fffeafc6ecf:	pop		rax
0x7fffeafc6ed0:	pop		rbx
0x7fffeafc6ed1:	mov		qword ptr [rbp - 0xd0], rax
0x7fffeafc6ed8:	ja		0x7fffeafc6fd8
0x7fffeafc6ede:	lea		rax, [rip + 0x2c2422b]
0x7fffeafc6ee5:	mov		rcx, qword ptr [rbp - 0xd0]
0x7fffeafc6eec:	movsxd		rdx, dword ptr [rax + rcx*4]
0x7fffeafc6ef0:	add		rdx, rax
0x7fffeafc6ef3:	jmp		rdx
disassembling symbol '.LBB8_5':
textAddr: 0x7fffeafc6ef5, textSize: 58
0x7fffeafc6ef5:	push		rbx
0x7fffeafc6ef6:	push		rax
0x7fffeafc6ef7:	lea		rax, [rbp - 0x38]
0x7fffeafc6efb:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc6f05:	cmp		rax, rbx
0x7fffeafc6f08:	ja		0x7fffeafc79fb
0x7fffeafc6f0e:	movabs		rbx, 1
0x7fffeafc6f18:	cmp		rax, rbx
0x7fffeafc6f1b:	jb		0x7fffeafc79fb
0x7fffeafc6f21:	pop		rax
0x7fffeafc6f22:	pop		rbx
0x7fffeafc6f23:	mov		dword ptr [rbp - 0x38], 0
0x7fffeafc6f2a:	jmp		0x7fffeafc6fd8
disassembling symbol '.LBB8_6':
textAddr: 0x7fffeafc6f2f, textSize: 58
0x7fffeafc6f2f:	push		rbx
0x7fffeafc6f30:	push		rax
0x7fffeafc6f31:	lea		rax, [rbp - 0x38]
0x7fffeafc6f35:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc6f3f:	cmp		rax, rbx
0x7fffeafc6f42:	ja		0x7fffeafc79fb
0x7fffeafc6f48:	movabs		rbx, 1
0x7fffeafc6f52:	cmp		rax, rbx
0x7fffeafc6f55:	jb		0x7fffeafc79fb
0x7fffeafc6f5b:	pop		rax
0x7fffeafc6f5c:	pop		rbx
0x7fffeafc6f5d:	mov		dword ptr [rbp - 0x38], 1
0x7fffeafc6f64:	jmp		0x7fffeafc6fd8
disassembling symbol '.LBB8_7':
textAddr: 0x7fffeafc6f69, textSize: 58
0x7fffeafc6f69:	push		rbx
0x7fffeafc6f6a:	push		rax
0x7fffeafc6f6b:	lea		rax, [rbp - 0x38]
0x7fffeafc6f6f:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc6f79:	cmp		rax, rbx
0x7fffeafc6f7c:	ja		0x7fffeafc79fb
0x7fffeafc6f82:	movabs		rbx, 1
0x7fffeafc6f8c:	cmp		rax, rbx
0x7fffeafc6f8f:	jb		0x7fffeafc79fb
0x7fffeafc6f95:	pop		rax
0x7fffeafc6f96:	pop		rbx
0x7fffeafc6f97:	mov		dword ptr [rbp - 0x38], 2
0x7fffeafc6f9e:	jmp		0x7fffeafc6fd8
disassembling symbol '.LBB8_8':
textAddr: 0x7fffeafc6fa3, textSize: 53
0x7fffeafc6fa3:	push		rbx
0x7fffeafc6fa4:	push		rax
0x7fffeafc6fa5:	lea		rax, [rbp - 0x38]
0x7fffeafc6fa9:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc6fb3:	cmp		rax, rbx
0x7fffeafc6fb6:	ja		0x7fffeafc79fb
0x7fffeafc6fbc:	movabs		rbx, 1
0x7fffeafc6fc6:	cmp		rax, rbx
0x7fffeafc6fc9:	jb		0x7fffeafc79fb
0x7fffeafc6fcf:	pop		rax
0x7fffeafc6fd0:	pop		rbx
0x7fffeafc6fd1:	mov		dword ptr [rbp - 0x38], 3
disassembling symbol '.LBB8_9':
textAddr: 0x7fffeafc6fd8, textSize: 164
0x7fffeafc6fd8:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc6fdc:	mov		ecx, dword ptr [rbp - 0x50]
0x7fffeafc6fdf:	add		ecx, -1
0x7fffeafc6fe2:	movsxd		rdx, ecx
0x7fffeafc6fe5:	mov		sil, byte ptr [rax + rdx]
0x7fffeafc6fe9:	push		rbx
0x7fffeafc6fea:	push		rax
0x7fffeafc6feb:	lea		rax, [rbp - 0x4a]
0x7fffeafc6fef:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc6ff9:	cmp		rax, rbx
0x7fffeafc6ffc:	ja		0x7fffeafc79fb
0x7fffeafc7002:	movabs		rbx, 1
0x7fffeafc700c:	cmp		rax, rbx
0x7fffeafc700f:	jb		0x7fffeafc79fb
0x7fffeafc7015:	pop		rax
0x7fffeafc7016:	pop		rbx
0x7fffeafc7017:	mov		byte ptr [rbp - 0x4a], sil
0x7fffeafc701b:	movsx		ecx, byte ptr [rbp - 0x4a]
0x7fffeafc701f:	add		ecx, -0x41
0x7fffeafc7022:	mov		eax, ecx
0x7fffeafc7024:	sub		ecx, 0x13
0x7fffeafc7027:	push		rbx
0x7fffeafc7028:	push		rax
0x7fffeafc7029:	lea		rax, [rbp - 0xd8]
0x7fffeafc7030:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc703a:	cmp		rax, rbx
0x7fffeafc703d:	ja		0x7fffeafc79fb
0x7fffeafc7043:	movabs		rbx, 1
0x7fffeafc704d:	cmp		rax, rbx
0x7fffeafc7050:	jb		0x7fffeafc79fb
0x7fffeafc7056:	pop		rax
0x7fffeafc7057:	pop		rbx
0x7fffeafc7058:	mov		qword ptr [rbp - 0xd8], rax
0x7fffeafc705f:	ja		0x7fffeafc715f
0x7fffeafc7065:	lea		rax, [rip + 0x2c240f4]
0x7fffeafc706c:	mov		rcx, qword ptr [rbp - 0xd8]
0x7fffeafc7073:	movsxd		rdx, dword ptr [rax + rcx*4]
0x7fffeafc7077:	add		rdx, rax
0x7fffeafc707a:	jmp		rdx
disassembling symbol '.LBB8_10':
textAddr: 0x7fffeafc707c, textSize: 58
0x7fffeafc707c:	push		rbx
0x7fffeafc707d:	push		rax
0x7fffeafc707e:	lea		rax, [rbp - 0x3c]
0x7fffeafc7082:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc708c:	cmp		rax, rbx
0x7fffeafc708f:	ja		0x7fffeafc79fb
0x7fffeafc7095:	movabs		rbx, 1
0x7fffeafc709f:	cmp		rax, rbx
0x7fffeafc70a2:	jb		0x7fffeafc79fb
0x7fffeafc70a8:	pop		rax
0x7fffeafc70a9:	pop		rbx
0x7fffeafc70aa:	mov		dword ptr [rbp - 0x3c], 0
0x7fffeafc70b1:	jmp		0x7fffeafc715f
disassembling symbol '.LBB8_11':
textAddr: 0x7fffeafc70b6, textSize: 58
0x7fffeafc70b6:	push		rbx
0x7fffeafc70b7:	push		rax
0x7fffeafc70b8:	lea		rax, [rbp - 0x3c]
0x7fffeafc70bc:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc70c6:	cmp		rax, rbx
0x7fffeafc70c9:	ja		0x7fffeafc79fb
0x7fffeafc70cf:	movabs		rbx, 1
0x7fffeafc70d9:	cmp		rax, rbx
0x7fffeafc70dc:	jb		0x7fffeafc79fb
0x7fffeafc70e2:	pop		rax
0x7fffeafc70e3:	pop		rbx
0x7fffeafc70e4:	mov		dword ptr [rbp - 0x3c], 1
0x7fffeafc70eb:	jmp		0x7fffeafc715f
disassembling symbol '.LBB8_12':
textAddr: 0x7fffeafc70f0, textSize: 58
0x7fffeafc70f0:	push		rbx
0x7fffeafc70f1:	push		rax
0x7fffeafc70f2:	lea		rax, [rbp - 0x3c]
0x7fffeafc70f6:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7100:	cmp		rax, rbx
0x7fffeafc7103:	ja		0x7fffeafc79fb
0x7fffeafc7109:	movabs		rbx, 1
0x7fffeafc7113:	cmp		rax, rbx
0x7fffeafc7116:	jb		0x7fffeafc79fb
0x7fffeafc711c:	pop		rax
0x7fffeafc711d:	pop		rbx
0x7fffeafc711e:	mov		dword ptr [rbp - 0x3c], 2
0x7fffeafc7125:	jmp		0x7fffeafc715f
disassembling symbol '.LBB8_13':
textAddr: 0x7fffeafc712a, textSize: 53
0x7fffeafc712a:	push		rbx
0x7fffeafc712b:	push		rax
0x7fffeafc712c:	lea		rax, [rbp - 0x3c]
0x7fffeafc7130:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc713a:	cmp		rax, rbx
0x7fffeafc713d:	ja		0x7fffeafc79fb
0x7fffeafc7143:	movabs		rbx, 1
0x7fffeafc714d:	cmp		rax, rbx
0x7fffeafc7150:	jb		0x7fffeafc79fb
0x7fffeafc7156:	pop		rax
0x7fffeafc7157:	pop		rbx
0x7fffeafc7158:	mov		dword ptr [rbp - 0x3c], 3
disassembling symbol '.LBB8_14':
textAddr: 0x7fffeafc715f, textSize: 469
0x7fffeafc715f:	mov		rax, qword ptr [rbp - 8]
0x7fffeafc7163:	mov		ecx, dword ptr [rbp - 0x50]
0x7fffeafc7166:	sub		ecx, 1
0x7fffeafc7169:	movsxd		rdx, ecx
0x7fffeafc716c:	mov		rax, qword ptr [rax + rdx*8]
0x7fffeafc7170:	movsxd		rdx, dword ptr [rbp - 0x54]
0x7fffeafc7174:	mov		ecx, dword ptr [rax + rdx*4]
0x7fffeafc7177:	sub		ecx, dword ptr [rbp + 0x10]
0x7fffeafc717a:	push		rbx
0x7fffeafc717b:	push		rax
0x7fffeafc717c:	lea		rax, [rbp - 0x40]
0x7fffeafc7180:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc718a:	cmp		rax, rbx
0x7fffeafc718d:	ja		0x7fffeafc79fb
0x7fffeafc7193:	movabs		rbx, 1
0x7fffeafc719d:	cmp		rax, rbx
0x7fffeafc71a0:	jb		0x7fffeafc79fb
0x7fffeafc71a6:	pop		rax
0x7fffeafc71a7:	pop		rbx
0x7fffeafc71a8:	mov		dword ptr [rbp - 0x40], ecx
0x7fffeafc71ab:	mov		rax, qword ptr [rbp - 8]
0x7fffeafc71af:	mov		ecx, dword ptr [rbp - 0x50]
0x7fffeafc71b2:	sub		ecx, 1
0x7fffeafc71b5:	movsxd		rdx, ecx
0x7fffeafc71b8:	mov		rax, qword ptr [rax + rdx*8]
0x7fffeafc71bc:	mov		ecx, dword ptr [rbp - 0x54]
0x7fffeafc71bf:	sub		ecx, 1
0x7fffeafc71c2:	movsxd		rdx, ecx
0x7fffeafc71c5:	mov		ecx, dword ptr [rax + rdx*4]
0x7fffeafc71c8:	movsxd		rax, dword ptr [rbp - 0x38]
0x7fffeafc71cc:	shl		rax, 4
0x7fffeafc71d0:	lea		rdx, [rbp - 0xa0]
0x7fffeafc71d7:	add		rdx, rax
0x7fffeafc71da:	movsxd		rax, dword ptr [rbp - 0x3c]
0x7fffeafc71de:	add		ecx, dword ptr [rdx + rax*4]
0x7fffeafc71e1:	push		rbx
0x7fffeafc71e2:	push		rax
0x7fffeafc71e3:	lea		rax, [rbp - 0x44]
0x7fffeafc71e7:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc71f1:	cmp		rax, rbx
0x7fffeafc71f4:	ja		0x7fffeafc79fb
0x7fffeafc71fa:	movabs		rbx, 1
0x7fffeafc7204:	cmp		rax, rbx
0x7fffeafc7207:	jb		0x7fffeafc79fb
0x7fffeafc720d:	pop		rax
0x7fffeafc720e:	pop		rbx
0x7fffeafc720f:	mov		dword ptr [rbp - 0x44], ecx
0x7fffeafc7212:	mov		rax, qword ptr [rbp - 8]
0x7fffeafc7216:	movsxd		rdx, dword ptr [rbp - 0x50]
0x7fffeafc721a:	mov		rax, qword ptr [rax + rdx*8]
0x7fffeafc721e:	mov		ecx, dword ptr [rbp - 0x54]
0x7fffeafc7221:	sub		ecx, 1
0x7fffeafc7224:	movsxd		rdx, ecx
0x7fffeafc7227:	mov		ecx, dword ptr [rax + rdx*4]
0x7fffeafc722a:	sub		ecx, dword ptr [rbp + 0x10]
0x7fffeafc722d:	push		rbx
0x7fffeafc722e:	push		rax
0x7fffeafc722f:	lea		rax, [rbp - 0x48]
0x7fffeafc7233:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc723d:	cmp		rax, rbx
0x7fffeafc7240:	ja		0x7fffeafc79fb
0x7fffeafc7246:	movabs		rbx, 1
0x7fffeafc7250:	cmp		rax, rbx
0x7fffeafc7253:	jb		0x7fffeafc79fb
0x7fffeafc7259:	pop		rax
0x7fffeafc725a:	pop		rbx
0x7fffeafc725b:	mov		dword ptr [rbp - 0x48], ecx
0x7fffeafc725e:	mov		edi, dword ptr [rbp - 0x40]
0x7fffeafc7261:	mov		esi, dword ptr [rbp - 0x44]
0x7fffeafc7264:	mov		edx, dword ptr [rbp - 0x48]
0x7fffeafc7267:	lea		rcx, [rbp - 0x49]
0x7fffeafc726b:	call		0x7fffeafc55b0
0x7fffeafc7270:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafc7274:	movsxd		r8, dword ptr [rbp - 0x50]
0x7fffeafc7278:	mov		rcx, qword ptr [rcx + r8*8]
0x7fffeafc727c:	movsxd		r8, dword ptr [rbp - 0x54]
0x7fffeafc7280:	push		rbx
0x7fffeafc7281:	push		rax
0x7fffeafc7282:	lea		rax, [rcx + r8*4]
0x7fffeafc7286:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7290:	cmp		rax, rbx
0x7fffeafc7293:	ja		0x7fffeafc79fb
0x7fffeafc7299:	movabs		rbx, 1
0x7fffeafc72a3:	cmp		rax, rbx
0x7fffeafc72a6:	jb		0x7fffeafc79fb
0x7fffeafc72ac:	pop		rax
0x7fffeafc72ad:	pop		rbx
0x7fffeafc72ae:	mov		dword ptr [rcx + r8*4], eax
0x7fffeafc72b2:	mov		r9b, byte ptr [rbp - 0x49]
0x7fffeafc72b6:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafc72ba:	movsxd		r8, dword ptr [rbp - 0x50]
0x7fffeafc72be:	mov		rcx, qword ptr [rcx + r8*8]
0x7fffeafc72c2:	movsxd		r8, dword ptr [rbp - 0x54]
0x7fffeafc72c6:	push		rbx
0x7fffeafc72c7:	push		rax
0x7fffeafc72c8:	lea		rax, [rcx + r8]
0x7fffeafc72cc:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc72d6:	cmp		rax, rbx
0x7fffeafc72d9:	ja		0x7fffeafc79fb
0x7fffeafc72df:	movabs		rbx, 1
0x7fffeafc72e9:	cmp		rax, rbx
0x7fffeafc72ec:	jb		0x7fffeafc79fb
0x7fffeafc72f2:	pop		rax
0x7fffeafc72f3:	pop		rbx
0x7fffeafc72f4:	mov		byte ptr [rcx + r8], r9b
0x7fffeafc72f8:	mov		eax, dword ptr [rbp - 0x54]
0x7fffeafc72fb:	add		eax, 1
0x7fffeafc72fe:	push		rbx
0x7fffeafc72ff:	push		rax
0x7fffeafc7300:	lea		rax, [rbp - 0x54]
0x7fffeafc7304:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc730e:	cmp		rax, rbx
0x7fffeafc7311:	ja		0x7fffeafc79fb
0x7fffeafc7317:	movabs		rbx, 1
0x7fffeafc7321:	cmp		rax, rbx
0x7fffeafc7324:	jb		0x7fffeafc79fb
0x7fffeafc732a:	pop		rax
0x7fffeafc732b:	pop		rbx
0x7fffeafc732c:	mov		dword ptr [rbp - 0x54], eax
0x7fffeafc732f:	jmp		0x7fffeafc6e42
disassembling symbol '.LBB8_16':
textAddr: 0x7fffeafc7334, textSize: 5
0x7fffeafc7334:	jmp		0x7fffeafc7339
disassembling symbol '.LBB8_17':
textAddr: 0x7fffeafc7339, textSize: 60
0x7fffeafc7339:	mov		eax, dword ptr [rbp - 0x50]
0x7fffeafc733c:	add		eax, 1
0x7fffeafc733f:	push		rbx
0x7fffeafc7340:	push		rax
0x7fffeafc7341:	lea		rax, [rbp - 0x50]
0x7fffeafc7345:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc734f:	cmp		rax, rbx
0x7fffeafc7352:	ja		0x7fffeafc79fb
0x7fffeafc7358:	movabs		rbx, 1
0x7fffeafc7362:	cmp		rax, rbx
0x7fffeafc7365:	jb		0x7fffeafc79fb
0x7fffeafc736b:	pop		rax
0x7fffeafc736c:	pop		rbx
0x7fffeafc736d:	mov		dword ptr [rbp - 0x50], eax
0x7fffeafc7370:	jmp		0x7fffeafc6dfe
disassembling symbol '.LBB8_18':
textAddr: 0x7fffeafc7375, textSize: 110
0x7fffeafc7375:	mov		eax, dword ptr [rbp - 0x50]
0x7fffeafc7378:	add		eax, -1
0x7fffeafc737b:	push		rbx
0x7fffeafc737c:	push		rax
0x7fffeafc737d:	lea		rax, [rbp - 0x50]
0x7fffeafc7381:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc738b:	cmp		rax, rbx
0x7fffeafc738e:	ja		0x7fffeafc79fb
0x7fffeafc7394:	movabs		rbx, 1
0x7fffeafc739e:	cmp		rax, rbx
0x7fffeafc73a1:	jb		0x7fffeafc79fb
0x7fffeafc73a7:	pop		rax
0x7fffeafc73a8:	pop		rbx
0x7fffeafc73a9:	mov		dword ptr [rbp - 0x50], eax
0x7fffeafc73ac:	mov		eax, dword ptr [rbp - 0x54]
0x7fffeafc73af:	add		eax, -1
0x7fffeafc73b2:	push		rbx
0x7fffeafc73b3:	push		rax
0x7fffeafc73b4:	lea		rax, [rbp - 0x54]
0x7fffeafc73b8:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc73c2:	cmp		rax, rbx
0x7fffeafc73c5:	ja		0x7fffeafc79fb
0x7fffeafc73cb:	movabs		rbx, 1
0x7fffeafc73d5:	cmp		rax, rbx
0x7fffeafc73d8:	jb		0x7fffeafc79fb
0x7fffeafc73de:	pop		rax
0x7fffeafc73df:	pop		rbx
0x7fffeafc73e0:	mov		dword ptr [rbp - 0x54], eax
disassembling symbol '.LBB8_19':
textAddr: 0x7fffeafc73e3, textSize: 129
0x7fffeafc73e3:	cmp		dword ptr [rbp - 0x50], 0
0x7fffeafc73e7:	mov		al, 1
0x7fffeafc73e9:	push		rbx
0x7fffeafc73ea:	push		rax
0x7fffeafc73eb:	lea		rax, [rbp - 0xd9]
0x7fffeafc73f2:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc73fc:	cmp		rax, rbx
0x7fffeafc73ff:	ja		0x7fffeafc79fb
0x7fffeafc7405:	movabs		rbx, 1
0x7fffeafc740f:	cmp		rax, rbx
0x7fffeafc7412:	jb		0x7fffeafc79fb
0x7fffeafc7418:	pop		rax
0x7fffeafc7419:	pop		rbx
0x7fffeafc741a:	mov		byte ptr [rbp - 0xd9], al
0x7fffeafc7420:	jg		0x7fffeafc7464
0x7fffeafc7426:	cmp		dword ptr [rbp - 0x54], 0
0x7fffeafc742a:	setg		al
0x7fffeafc742d:	push		rbx
0x7fffeafc742e:	push		rax
0x7fffeafc742f:	lea		rax, [rbp - 0xd9]
0x7fffeafc7436:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7440:	cmp		rax, rbx
0x7fffeafc7443:	ja		0x7fffeafc79fb
0x7fffeafc7449:	movabs		rbx, 1
0x7fffeafc7453:	cmp		rax, rbx
0x7fffeafc7456:	jb		0x7fffeafc79fb
0x7fffeafc745c:	pop		rax
0x7fffeafc745d:	pop		rbx
0x7fffeafc745e:	mov		byte ptr [rbp - 0xd9], al
disassembling symbol '.LBB8_21':
textAddr: 0x7fffeafc7464, textSize: 19
0x7fffeafc7464:	mov		al, byte ptr [rbp - 0xd9]
0x7fffeafc746a:	test		al, 1
0x7fffeafc746c:	jne		0x7fffeafc7477
0x7fffeafc7472:	jmp		0x7fffeafc794b
disassembling symbol '.LBB8_22':
textAddr: 0x7fffeafc7477, textSize: 91
0x7fffeafc7477:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafc747b:	movsxd		rcx, dword ptr [rbp - 0x50]
0x7fffeafc747f:	mov		rax, qword ptr [rax + rcx*8]
0x7fffeafc7483:	movsxd		rcx, dword ptr [rbp - 0x54]
0x7fffeafc7487:	movsx		edx, byte ptr [rax + rcx]
0x7fffeafc748b:	mov		esi, edx
0x7fffeafc748d:	sub		esi, 0x2d
0x7fffeafc7490:	push		rbx
0x7fffeafc7491:	push		rax
0x7fffeafc7492:	lea		rax, [rbp - 0xe0]
0x7fffeafc7499:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc74a3:	cmp		rax, rbx
0x7fffeafc74a6:	ja		0x7fffeafc79fb
0x7fffeafc74ac:	movabs		rbx, 1
0x7fffeafc74b6:	cmp		rax, rbx
0x7fffeafc74b9:	jb		0x7fffeafc79fb
0x7fffeafc74bf:	pop		rax
0x7fffeafc74c0:	pop		rbx
0x7fffeafc74c1:	mov		dword ptr [rbp - 0xe0], edx
0x7fffeafc74c7:	je		0x7fffeafc77f5
0x7fffeafc74cd:	jmp		0x7fffeafc74d2
disassembling symbol '.LBB8_28':
textAddr: 0x7fffeafc74d2, textSize: 20
0x7fffeafc74d2:	mov		eax, dword ptr [rbp - 0xe0]
0x7fffeafc74d8:	sub		eax, 0x5c
0x7fffeafc74db:	je		0x7fffeafc761e
0x7fffeafc74e1:	jmp		0x7fffeafc74e6
disassembling symbol '.LBB8_29':
textAddr: 0x7fffeafc74e6, textSize: 20
0x7fffeafc74e6:	mov		eax, dword ptr [rbp - 0xe0]
0x7fffeafc74ec:	sub		eax, 0x7c
0x7fffeafc74ef:	jne		0x7fffeafc790f
0x7fffeafc74f5:	jmp		0x7fffeafc74fa
disassembling symbol '.LBB8_23':
textAddr: 0x7fffeafc74fa, textSize: 292
0x7fffeafc74fa:	mov		rdi, qword ptr [rbp - 0x28]
0x7fffeafc74fe:	lea		rsi, [rip + 0x2c2499b]
0x7fffeafc7505:	mov		edx, 1
0x7fffeafc750a:	call		0x7fffeafc6720
0x7fffeafc750f:	lea		rsi, [rbp - 0xaa]
0x7fffeafc7516:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafc751a:	mov		r8d, dword ptr [rbp - 0x50]
0x7fffeafc751e:	sub		r8d, 1
0x7fffeafc7522:	movsxd		rdx, r8d
0x7fffeafc7525:	mov		r9b, byte ptr [rcx + rdx]
0x7fffeafc7529:	push		rbx
0x7fffeafc752a:	push		rax
0x7fffeafc752b:	lea		rax, [rbp - 0xaa]
0x7fffeafc7532:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc753c:	cmp		rax, rbx
0x7fffeafc753f:	ja		0x7fffeafc79fb
0x7fffeafc7545:	movabs		rbx, 1
0x7fffeafc754f:	cmp		rax, rbx
0x7fffeafc7552:	jb		0x7fffeafc79fb
0x7fffeafc7558:	pop		rax
0x7fffeafc7559:	pop		rbx
0x7fffeafc755a:	mov		byte ptr [rbp - 0xaa], r9b
0x7fffeafc7561:	push		rbx
0x7fffeafc7562:	push		rax
0x7fffeafc7563:	lea		rax, [rbp - 0xa9]
0x7fffeafc756a:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7574:	cmp		rax, rbx
0x7fffeafc7577:	ja		0x7fffeafc79fb
0x7fffeafc757d:	movabs		rbx, 1
0x7fffeafc7587:	cmp		rax, rbx
0x7fffeafc758a:	jb		0x7fffeafc79fb
0x7fffeafc7590:	pop		rax
0x7fffeafc7591:	pop		rbx
0x7fffeafc7592:	mov		byte ptr [rbp - 0xa9], 0
0x7fffeafc7599:	mov		rdi, qword ptr [rbp - 0x30]
0x7fffeafc759d:	mov		edx, 1
0x7fffeafc75a2:	push		rbx
0x7fffeafc75a3:	push		rax
0x7fffeafc75a4:	lea		rax, [rbp - 0xe8]
0x7fffeafc75ab:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc75b5:	cmp		rax, rbx
0x7fffeafc75b8:	ja		0x7fffeafc79fb
0x7fffeafc75be:	movabs		rbx, 1
0x7fffeafc75c8:	cmp		rax, rbx
0x7fffeafc75cb:	jb		0x7fffeafc79fb
0x7fffeafc75d1:	pop		rax
0x7fffeafc75d2:	pop		rbx
0x7fffeafc75d3:	mov		qword ptr [rbp - 0xe8], rax
0x7fffeafc75da:	call		0x7fffeafc6720
0x7fffeafc75df:	mov		r8d, dword ptr [rbp - 0x50]
0x7fffeafc75e3:	add		r8d, -1
0x7fffeafc75e7:	push		rbx
0x7fffeafc75e8:	push		rax
0x7fffeafc75e9:	lea		rax, [rbp - 0x50]
0x7fffeafc75ed:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc75f7:	cmp		rax, rbx
0x7fffeafc75fa:	ja		0x7fffeafc79fb
0x7fffeafc7600:	movabs		rbx, 1
0x7fffeafc760a:	cmp		rax, rbx
0x7fffeafc760d:	jb		0x7fffeafc79fb
0x7fffeafc7613:	pop		rax
0x7fffeafc7614:	pop		rbx
0x7fffeafc7615:	mov		dword ptr [rbp - 0x50], r8d
0x7fffeafc7619:	jmp		0x7fffeafc790f
disassembling symbol '.LBB8_24':
textAddr: 0x7fffeafc761e, textSize: 471
0x7fffeafc761e:	lea		rsi, [rbp - 0xaa]
0x7fffeafc7625:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc7629:	mov		ecx, dword ptr [rbp - 0x54]
0x7fffeafc762c:	sub		ecx, 1
0x7fffeafc762f:	movsxd		rdx, ecx
0x7fffeafc7632:	mov		dil, byte ptr [rax + rdx]
0x7fffeafc7636:	push		rbx
0x7fffeafc7637:	push		rax
0x7fffeafc7638:	lea		rax, [rbp - 0xaa]
0x7fffeafc763f:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7649:	cmp		rax, rbx
0x7fffeafc764c:	ja		0x7fffeafc79fb
0x7fffeafc7652:	movabs		rbx, 1
0x7fffeafc765c:	cmp		rax, rbx
0x7fffeafc765f:	jb		0x7fffeafc79fb
0x7fffeafc7665:	pop		rax
0x7fffeafc7666:	pop		rbx
0x7fffeafc7667:	mov		byte ptr [rbp - 0xaa], dil
0x7fffeafc766e:	push		rbx
0x7fffeafc766f:	push		rax
0x7fffeafc7670:	lea		rax, [rbp - 0xa9]
0x7fffeafc7677:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7681:	cmp		rax, rbx
0x7fffeafc7684:	ja		0x7fffeafc79fb
0x7fffeafc768a:	movabs		rbx, 1
0x7fffeafc7694:	cmp		rax, rbx
0x7fffeafc7697:	jb		0x7fffeafc79fb
0x7fffeafc769d:	pop		rax
0x7fffeafc769e:	pop		rbx
0x7fffeafc769f:	mov		byte ptr [rbp - 0xa9], 0
0x7fffeafc76a6:	mov		rdi, qword ptr [rbp - 0x28]
0x7fffeafc76aa:	mov		edx, 1
0x7fffeafc76af:	call		0x7fffeafc6720
0x7fffeafc76b4:	lea		rsi, [rbp - 0xaa]
0x7fffeafc76bb:	mov		rdx, qword ptr [rbp - 0x20]
0x7fffeafc76bf:	mov		ecx, dword ptr [rbp - 0x50]
0x7fffeafc76c2:	sub		ecx, 1
0x7fffeafc76c5:	movsxd		rdi, ecx
0x7fffeafc76c8:	mov		r8b, byte ptr [rdx + rdi]
0x7fffeafc76cc:	push		rbx
0x7fffeafc76cd:	push		rax
0x7fffeafc76ce:	lea		rax, [rbp - 0xaa]
0x7fffeafc76d5:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc76df:	cmp		rax, rbx
0x7fffeafc76e2:	ja		0x7fffeafc79fb
0x7fffeafc76e8:	movabs		rbx, 1
0x7fffeafc76f2:	cmp		rax, rbx
0x7fffeafc76f5:	jb		0x7fffeafc79fb
0x7fffeafc76fb:	pop		rax
0x7fffeafc76fc:	pop		rbx
0x7fffeafc76fd:	mov		byte ptr [rbp - 0xaa], r8b
0x7fffeafc7704:	push		rbx
0x7fffeafc7705:	push		rax
0x7fffeafc7706:	lea		rax, [rbp - 0xa9]
0x7fffeafc770d:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7717:	cmp		rax, rbx
0x7fffeafc771a:	ja		0x7fffeafc79fb
0x7fffeafc7720:	movabs		rbx, 1
0x7fffeafc772a:	cmp		rax, rbx
0x7fffeafc772d:	jb		0x7fffeafc79fb
0x7fffeafc7733:	pop		rax
0x7fffeafc7734:	pop		rbx
0x7fffeafc7735:	mov		byte ptr [rbp - 0xa9], 0
0x7fffeafc773c:	mov		rdi, qword ptr [rbp - 0x30]
0x7fffeafc7740:	mov		edx, 1
0x7fffeafc7745:	push		rbx
0x7fffeafc7746:	push		rax
0x7fffeafc7747:	lea		rax, [rbp - 0xf0]
0x7fffeafc774e:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7758:	cmp		rax, rbx
0x7fffeafc775b:	ja		0x7fffeafc79fb
0x7fffeafc7761:	movabs		rbx, 1
0x7fffeafc776b:	cmp		rax, rbx
0x7fffeafc776e:	jb		0x7fffeafc79fb
0x7fffeafc7774:	pop		rax
0x7fffeafc7775:	pop		rbx
0x7fffeafc7776:	mov		qword ptr [rbp - 0xf0], rax
0x7fffeafc777d:	call		0x7fffeafc6720
0x7fffeafc7782:	mov		ecx, dword ptr [rbp - 0x50]
0x7fffeafc7785:	add		ecx, -1
0x7fffeafc7788:	push		rbx
0x7fffeafc7789:	push		rax
0x7fffeafc778a:	lea		rax, [rbp - 0x50]
0x7fffeafc778e:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7798:	cmp		rax, rbx
0x7fffeafc779b:	ja		0x7fffeafc79fb
0x7fffeafc77a1:	movabs		rbx, 1
0x7fffeafc77ab:	cmp		rax, rbx
0x7fffeafc77ae:	jb		0x7fffeafc79fb
0x7fffeafc77b4:	pop		rax
0x7fffeafc77b5:	pop		rbx
0x7fffeafc77b6:	mov		dword ptr [rbp - 0x50], ecx
0x7fffeafc77b9:	mov		ecx, dword ptr [rbp - 0x54]
0x7fffeafc77bc:	add		ecx, -1
0x7fffeafc77bf:	push		rbx
0x7fffeafc77c0:	push		rax
0x7fffeafc77c1:	lea		rax, [rbp - 0x54]
0x7fffeafc77c5:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc77cf:	cmp		rax, rbx
0x7fffeafc77d2:	ja		0x7fffeafc79fb
0x7fffeafc77d8:	movabs		rbx, 1
0x7fffeafc77e2:	cmp		rax, rbx
0x7fffeafc77e5:	jb		0x7fffeafc79fb
0x7fffeafc77eb:	pop		rax
0x7fffeafc77ec:	pop		rbx
0x7fffeafc77ed:	mov		dword ptr [rbp - 0x54], ecx
0x7fffeafc77f0:	jmp		0x7fffeafc790f
disassembling symbol '.LBB8_25':
textAddr: 0x7fffeafc77f5, textSize: 282
0x7fffeafc77f5:	lea		rsi, [rbp - 0xaa]
0x7fffeafc77fc:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc7800:	mov		ecx, dword ptr [rbp - 0x54]
0x7fffeafc7803:	sub		ecx, 1
0x7fffeafc7806:	movsxd		rdx, ecx
0x7fffeafc7809:	mov		dil, byte ptr [rax + rdx]
0x7fffeafc780d:	push		rbx
0x7fffeafc780e:	push		rax
0x7fffeafc780f:	lea		rax, [rbp - 0xaa]
0x7fffeafc7816:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7820:	cmp		rax, rbx
0x7fffeafc7823:	ja		0x7fffeafc79fb
0x7fffeafc7829:	movabs		rbx, 1
0x7fffeafc7833:	cmp		rax, rbx
0x7fffeafc7836:	jb		0x7fffeafc79fb
0x7fffeafc783c:	pop		rax
0x7fffeafc783d:	pop		rbx
0x7fffeafc783e:	mov		byte ptr [rbp - 0xaa], dil
0x7fffeafc7845:	push		rbx
0x7fffeafc7846:	push		rax
0x7fffeafc7847:	lea		rax, [rbp - 0xa9]
0x7fffeafc784e:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7858:	cmp		rax, rbx
0x7fffeafc785b:	ja		0x7fffeafc79fb
0x7fffeafc7861:	movabs		rbx, 1
0x7fffeafc786b:	cmp		rax, rbx
0x7fffeafc786e:	jb		0x7fffeafc79fb
0x7fffeafc7874:	pop		rax
0x7fffeafc7875:	pop		rbx
0x7fffeafc7876:	mov		byte ptr [rbp - 0xa9], 0
0x7fffeafc787d:	mov		rdi, qword ptr [rbp - 0x28]
0x7fffeafc7881:	mov		edx, 1
0x7fffeafc7886:	call		0x7fffeafc6720
0x7fffeafc788b:	mov		rdi, qword ptr [rbp - 0x30]
0x7fffeafc788f:	lea		rsi, [rip + 0x2c2460a]
0x7fffeafc7896:	mov		edx, 1
0x7fffeafc789b:	push		rbx
0x7fffeafc789c:	push		rax
0x7fffeafc789d:	lea		rax, [rbp - 0xf8]
0x7fffeafc78a4:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc78ae:	cmp		rax, rbx
0x7fffeafc78b1:	ja		0x7fffeafc79fb
0x7fffeafc78b7:	movabs		rbx, 1
0x7fffeafc78c1:	cmp		rax, rbx
0x7fffeafc78c4:	jb		0x7fffeafc79fb
0x7fffeafc78ca:	pop		rax
0x7fffeafc78cb:	pop		rbx
0x7fffeafc78cc:	mov		qword ptr [rbp - 0xf8], rax
0x7fffeafc78d3:	call		0x7fffeafc6720
0x7fffeafc78d8:	mov		ecx, dword ptr [rbp - 0x54]
0x7fffeafc78db:	add		ecx, -1
0x7fffeafc78de:	push		rbx
0x7fffeafc78df:	push		rax
0x7fffeafc78e0:	lea		rax, [rbp - 0x54]
0x7fffeafc78e4:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc78ee:	cmp		rax, rbx
0x7fffeafc78f1:	ja		0x7fffeafc79fb
0x7fffeafc78f7:	movabs		rbx, 1
0x7fffeafc7901:	cmp		rax, rbx
0x7fffeafc7904:	jb		0x7fffeafc79fb
0x7fffeafc790a:	pop		rax
0x7fffeafc790b:	pop		rbx
0x7fffeafc790c:	mov		dword ptr [rbp - 0x54], ecx
disassembling symbol '.LBB8_26':
textAddr: 0x7fffeafc790f, textSize: 60
0x7fffeafc790f:	mov		eax, dword ptr [rbp - 0x34]
0x7fffeafc7912:	add		eax, 1
0x7fffeafc7915:	push		rbx
0x7fffeafc7916:	push		rax
0x7fffeafc7917:	lea		rax, [rbp - 0x34]
0x7fffeafc791b:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7925:	cmp		rax, rbx
0x7fffeafc7928:	ja		0x7fffeafc79fb
0x7fffeafc792e:	movabs		rbx, 1
0x7fffeafc7938:	cmp		rax, rbx
0x7fffeafc793b:	jb		0x7fffeafc79fb
0x7fffeafc7941:	pop		rax
0x7fffeafc7942:	pop		rbx
0x7fffeafc7943:	mov		dword ptr [rbp - 0x34], eax
0x7fffeafc7946:	jmp		0x7fffeafc73e3
disassembling symbol '.LBB8_27':
textAddr: 0x7fffeafc794b, textSize: 176
0x7fffeafc794b:	mov		rdi, qword ptr [rbp - 0x28]
0x7fffeafc794f:	call		0x7fffeafc6400
0x7fffeafc7954:	push		rbx
0x7fffeafc7955:	push		rax
0x7fffeafc7956:	lea		rax, [rbp - 0xb8]
0x7fffeafc795d:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7967:	cmp		rax, rbx
0x7fffeafc796a:	ja		0x7fffeafc79fb
0x7fffeafc7970:	movabs		rbx, 1
0x7fffeafc797a:	cmp		rax, rbx
0x7fffeafc797d:	jb		0x7fffeafc79fb
0x7fffeafc7983:	pop		rax
0x7fffeafc7984:	pop		rbx
0x7fffeafc7985:	mov		qword ptr [rbp - 0xb8], rax
0x7fffeafc798c:	mov		rdi, qword ptr [rbp - 0x30]
0x7fffeafc7990:	call		0x7fffeafc6400
0x7fffeafc7995:	xor		ecx, ecx
0x7fffeafc7997:	push		rbx
0x7fffeafc7998:	push		rax
0x7fffeafc7999:	lea		rax, [rbp - 0xc0]
0x7fffeafc79a0:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc79aa:	cmp		rax, rbx
0x7fffeafc79ad:	ja		0x7fffeafc79fb
0x7fffeafc79b3:	movabs		rbx, 1
0x7fffeafc79bd:	cmp		rax, rbx
0x7fffeafc79c0:	jb		0x7fffeafc79fb
0x7fffeafc79c6:	pop		rax
0x7fffeafc79c7:	pop		rbx
0x7fffeafc79c8:	mov		qword ptr [rbp - 0xc0], rax
0x7fffeafc79cf:	mov		eax, ecx
0x7fffeafc79d1:	add		rsp, 0x100
0x7fffeafc79d8:	pop		rbp
0x7fffeafc79d9:	movabs		r11, 0x7fffe87c3ca8
0x7fffeafc79e3:	mov		r10, qword ptr [r11]
0x7fffeafc79e6:	add		r10, r11
0x7fffeafc79e9:	sub		qword ptr [r11], 8
0x7fffeafc79ed:	mov		r11, qword ptr [r10]
0x7fffeafc79f0:	cmp		qword ptr [rsp], r11
0x7fffeafc79f4:	jne		0x7fffeafc7a07
0x7fffeafc79fa:	ret		
disassembling symbol '.LBB8_32':
textAddr: 0x7fffeafc79fb, textSize: 12
0x7fffeafc79fb:	pop		rax
0x7fffeafc79fc:	pop		rbx
0x7fffeafc79fd:	mov		edi, 0xffffffff
0x7fffeafc7a02:	call		0x7fffeafd41d0
disassembling symbol '.LBB8_33':
textAddr: 0x7fffeafc7a07, textSize: 25
0x7fffeafc7a07:	mov		edi, 0xffffffff
0x7fffeafc7a0c:	call		0x7fffeafd41d0
0x7fffeafc7a11:	nop		word ptr cs:[rax + rax]
0x7fffeafc7a1b:	nop		dword ptr [rax + rax]
disassembling symbol 'Ecall_nw':
textAddr: 0x7fffeafc7a20, textSize: 1456
0x7fffeafc7a20:	movabs		r11, 0x7fffe87c3ca8
0x7fffeafc7a2a:	add		qword ptr [r11], 8
0x7fffeafc7a2e:	mov		r10, qword ptr [r11]
0x7fffeafc7a31:	add		r11, r10
0x7fffeafc7a34:	mov		r10, qword ptr [rsp]
0x7fffeafc7a38:	mov		qword ptr [r11], r10
0x7fffeafc7a3b:	push		rbp
0x7fffeafc7a3c:	mov		rbp, rsp
0x7fffeafc7a3f:	sub		rsp, 0x60
0x7fffeafc7a43:	push		rbx
0x7fffeafc7a44:	push		rax
0x7fffeafc7a45:	lea		rax, [rbp - 8]
0x7fffeafc7a49:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7a53:	cmp		rax, rbx
0x7fffeafc7a56:	ja		0x7fffeafc7fac
0x7fffeafc7a5c:	movabs		rbx, 1
0x7fffeafc7a66:	cmp		rax, rbx
0x7fffeafc7a69:	jb		0x7fffeafc7fac
0x7fffeafc7a6f:	pop		rax
0x7fffeafc7a70:	pop		rbx
0x7fffeafc7a71:	mov		qword ptr [rbp - 8], rdi
0x7fffeafc7a75:	push		rbx
0x7fffeafc7a76:	push		rax
0x7fffeafc7a77:	lea		rax, [rbp - 0x10]
0x7fffeafc7a7b:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7a85:	cmp		rax, rbx
0x7fffeafc7a88:	ja		0x7fffeafc7fac
0x7fffeafc7a8e:	movabs		rbx, 1
0x7fffeafc7a98:	cmp		rax, rbx
0x7fffeafc7a9b:	jb		0x7fffeafc7fac
0x7fffeafc7aa1:	pop		rax
0x7fffeafc7aa2:	pop		rbx
0x7fffeafc7aa3:	mov		qword ptr [rbp - 0x10], rsi
0x7fffeafc7aa7:	push		rbx
0x7fffeafc7aa8:	push		rax
0x7fffeafc7aa9:	lea		rax, [rbp - 0x18]
0x7fffeafc7aad:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7ab7:	cmp		rax, rbx
0x7fffeafc7aba:	ja		0x7fffeafc7fac
0x7fffeafc7ac0:	movabs		rbx, 1
0x7fffeafc7aca:	cmp		rax, rbx
0x7fffeafc7acd:	jb		0x7fffeafc7fac
0x7fffeafc7ad3:	pop		rax
0x7fffeafc7ad4:	pop		rbx
0x7fffeafc7ad5:	mov		qword ptr [rbp - 0x18], rdx
0x7fffeafc7ad9:	push		rbx
0x7fffeafc7ada:	push		rax
0x7fffeafc7adb:	lea		rax, [rbp - 0x20]
0x7fffeafc7adf:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7ae9:	cmp		rax, rbx
0x7fffeafc7aec:	ja		0x7fffeafc7fac
0x7fffeafc7af2:	movabs		rbx, 1
0x7fffeafc7afc:	cmp		rax, rbx
0x7fffeafc7aff:	jb		0x7fffeafc7fac
0x7fffeafc7b05:	pop		rax
0x7fffeafc7b06:	pop		rbx
0x7fffeafc7b07:	mov		qword ptr [rbp - 0x20], rcx
0x7fffeafc7b0b:	push		rbx
0x7fffeafc7b0c:	push		rax
0x7fffeafc7b0d:	lea		rax, [rbp - 0x24]
0x7fffeafc7b11:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7b1b:	cmp		rax, rbx
0x7fffeafc7b1e:	ja		0x7fffeafc7fac
0x7fffeafc7b24:	movabs		rbx, 1
0x7fffeafc7b2e:	cmp		rax, rbx
0x7fffeafc7b31:	jb		0x7fffeafc7fac
0x7fffeafc7b37:	pop		rax
0x7fffeafc7b38:	pop		rbx
0x7fffeafc7b39:	mov		dword ptr [rbp - 0x24], 2
0x7fffeafc7b40:	mov		rdi, qword ptr [rbp - 8]
0x7fffeafc7b44:	call		0x7fffeafc5ce0
0x7fffeafc7b49:	push		rbx
0x7fffeafc7b4a:	push		rax
0x7fffeafc7b4b:	lea		rax, [rbp - 0x28]
0x7fffeafc7b4f:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7b59:	cmp		rax, rbx
0x7fffeafc7b5c:	ja		0x7fffeafc7fac
0x7fffeafc7b62:	movabs		rbx, 1
0x7fffeafc7b6c:	cmp		rax, rbx
0x7fffeafc7b6f:	jb		0x7fffeafc7fac
0x7fffeafc7b75:	pop		rax
0x7fffeafc7b76:	pop		rbx
0x7fffeafc7b77:	mov		dword ptr [rbp - 0x28], eax
0x7fffeafc7b7a:	mov		rdi, qword ptr [rbp - 0x10]
0x7fffeafc7b7e:	call		0x7fffeafc5ce0
0x7fffeafc7b83:	push		rbx
0x7fffeafc7b84:	push		rax
0x7fffeafc7b85:	lea		rax, [rbp - 0x2c]
0x7fffeafc7b89:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7b93:	cmp		rax, rbx
0x7fffeafc7b96:	ja		0x7fffeafc7fac
0x7fffeafc7b9c:	movabs		rbx, 1
0x7fffeafc7ba6:	cmp		rax, rbx
0x7fffeafc7ba9:	jb		0x7fffeafc7fac
0x7fffeafc7baf:	pop		rax
0x7fffeafc7bb0:	pop		rbx
0x7fffeafc7bb1:	mov		dword ptr [rbp - 0x2c], eax
0x7fffeafc7bb4:	mov		eax, dword ptr [rbp - 0x2c]
0x7fffeafc7bb7:	add		eax, 1
0x7fffeafc7bba:	movsxd		rcx, eax
0x7fffeafc7bbd:	shl		rcx, 3
0x7fffeafc7bc1:	mov		rdi, rcx
0x7fffeafc7bc4:	call		0x7fffeafcf100
0x7fffeafc7bc9:	push		rbx
0x7fffeafc7bca:	push		rax
0x7fffeafc7bcb:	lea		rax, [rbp - 0x38]
0x7fffeafc7bcf:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7bd9:	cmp		rax, rbx
0x7fffeafc7bdc:	ja		0x7fffeafc7fac
0x7fffeafc7be2:	movabs		rbx, 1
0x7fffeafc7bec:	cmp		rax, rbx
0x7fffeafc7bef:	jb		0x7fffeafc7fac
0x7fffeafc7bf5:	pop		rax
0x7fffeafc7bf6:	pop		rbx
0x7fffeafc7bf7:	mov		qword ptr [rbp - 0x38], rax
0x7fffeafc7bfb:	push		rbx
0x7fffeafc7bfc:	push		rax
0x7fffeafc7bfd:	lea		rax, [rbp - 0x3c]
0x7fffeafc7c01:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7c0b:	cmp		rax, rbx
0x7fffeafc7c0e:	ja		0x7fffeafc7fac
0x7fffeafc7c14:	movabs		rbx, 1
0x7fffeafc7c1e:	cmp		rax, rbx
0x7fffeafc7c21:	jb		0x7fffeafc7fac
0x7fffeafc7c27:	pop		rax
0x7fffeafc7c28:	pop		rbx
0x7fffeafc7c29:	mov		dword ptr [rbp - 0x3c], 0
0x7fffeafc7c30:	mov		eax, dword ptr [rbp - 0x3c]
0x7fffeafc7c33:	cmp		eax, dword ptr [rbp - 0x2c]
0x7fffeafc7c36:	jg		0x7fffeafc7cc2
0x7fffeafc7c3c:	movsxd		rax, dword ptr [rbp - 0x28]
0x7fffeafc7c40:	shl		rax, 2
0x7fffeafc7c44:	mov		rdi, rax
0x7fffeafc7c47:	call		0x7fffeafcf100
0x7fffeafc7c4c:	mov		rcx, qword ptr [rbp - 0x38]
0x7fffeafc7c50:	movsxd		rdx, dword ptr [rbp - 0x3c]
0x7fffeafc7c54:	push		rbx
0x7fffeafc7c55:	push		rax
0x7fffeafc7c56:	lea		rax, [rcx + rdx*8]
0x7fffeafc7c5a:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7c64:	cmp		rax, rbx
0x7fffeafc7c67:	ja		0x7fffeafc7fac
0x7fffeafc7c6d:	movabs		rbx, 1
0x7fffeafc7c77:	cmp		rax, rbx
0x7fffeafc7c7a:	jb		0x7fffeafc7fac
0x7fffeafc7c80:	pop		rax
0x7fffeafc7c81:	pop		rbx
0x7fffeafc7c82:	mov		qword ptr [rcx + rdx*8], rax
0x7fffeafc7c86:	mov		eax, dword ptr [rbp - 0x3c]
0x7fffeafc7c89:	add		eax, 1
0x7fffeafc7c8c:	push		rbx
0x7fffeafc7c8d:	push		rax
0x7fffeafc7c8e:	lea		rax, [rbp - 0x3c]
0x7fffeafc7c92:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7c9c:	cmp		rax, rbx
0x7fffeafc7c9f:	ja		0x7fffeafc7fac
0x7fffeafc7ca5:	movabs		rbx, 1
0x7fffeafc7caf:	cmp		rax, rbx
0x7fffeafc7cb2:	jb		0x7fffeafc7fac
0x7fffeafc7cb8:	pop		rax
0x7fffeafc7cb9:	pop		rbx
0x7fffeafc7cba:	mov		dword ptr [rbp - 0x3c], eax
0x7fffeafc7cbd:	jmp		0x7fffeafc7c30
0x7fffeafc7cc2:	mov		eax, dword ptr [rbp - 0x2c]
0x7fffeafc7cc5:	add		eax, 1
0x7fffeafc7cc8:	movsxd		rcx, eax
0x7fffeafc7ccb:	shl		rcx, 3
0x7fffeafc7ccf:	mov		rdi, rcx
0x7fffeafc7cd2:	call		0x7fffeafcf100
0x7fffeafc7cd7:	push		rbx
0x7fffeafc7cd8:	push		rax
0x7fffeafc7cd9:	lea		rax, [rbp - 0x48]
0x7fffeafc7cdd:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7ce7:	cmp		rax, rbx
0x7fffeafc7cea:	ja		0x7fffeafc7fac
0x7fffeafc7cf0:	movabs		rbx, 1
0x7fffeafc7cfa:	cmp		rax, rbx
0x7fffeafc7cfd:	jb		0x7fffeafc7fac
0x7fffeafc7d03:	pop		rax
0x7fffeafc7d04:	pop		rbx
0x7fffeafc7d05:	mov		qword ptr [rbp - 0x48], rax
0x7fffeafc7d09:	push		rbx
0x7fffeafc7d0a:	push		rax
0x7fffeafc7d0b:	lea		rax, [rbp - 0x4c]
0x7fffeafc7d0f:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7d19:	cmp		rax, rbx
0x7fffeafc7d1c:	ja		0x7fffeafc7fac
0x7fffeafc7d22:	movabs		rbx, 1
0x7fffeafc7d2c:	cmp		rax, rbx
0x7fffeafc7d2f:	jb		0x7fffeafc7fac
0x7fffeafc7d35:	pop		rax
0x7fffeafc7d36:	pop		rbx
0x7fffeafc7d37:	mov		dword ptr [rbp - 0x4c], 0
0x7fffeafc7d3e:	mov		eax, dword ptr [rbp - 0x4c]
0x7fffeafc7d41:	cmp		eax, dword ptr [rbp - 0x2c]
0x7fffeafc7d44:	jg		0x7fffeafc7dd0
0x7fffeafc7d4a:	movsxd		rax, dword ptr [rbp - 0x28]
0x7fffeafc7d4e:	shl		rax, 0
0x7fffeafc7d52:	mov		rdi, rax
0x7fffeafc7d55:	call		0x7fffeafcf100
0x7fffeafc7d5a:	mov		rcx, qword ptr [rbp - 0x48]
0x7fffeafc7d5e:	movsxd		rdx, dword ptr [rbp - 0x4c]
0x7fffeafc7d62:	push		rbx
0x7fffeafc7d63:	push		rax
0x7fffeafc7d64:	lea		rax, [rcx + rdx*8]
0x7fffeafc7d68:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7d72:	cmp		rax, rbx
0x7fffeafc7d75:	ja		0x7fffeafc7fac
0x7fffeafc7d7b:	movabs		rbx, 1
0x7fffeafc7d85:	cmp		rax, rbx
0x7fffeafc7d88:	jb		0x7fffeafc7fac
0x7fffeafc7d8e:	pop		rax
0x7fffeafc7d8f:	pop		rbx
0x7fffeafc7d90:	mov		qword ptr [rcx + rdx*8], rax
0x7fffeafc7d94:	mov		eax, dword ptr [rbp - 0x4c]
0x7fffeafc7d97:	add		eax, 1
0x7fffeafc7d9a:	push		rbx
0x7fffeafc7d9b:	push		rax
0x7fffeafc7d9c:	lea		rax, [rbp - 0x4c]
0x7fffeafc7da0:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7daa:	cmp		rax, rbx
0x7fffeafc7dad:	ja		0x7fffeafc7fac
0x7fffeafc7db3:	movabs		rbx, 1
0x7fffeafc7dbd:	cmp		rax, rbx
0x7fffeafc7dc0:	jb		0x7fffeafc7fac
0x7fffeafc7dc6:	pop		rax
0x7fffeafc7dc7:	pop		rbx
0x7fffeafc7dc8:	mov		dword ptr [rbp - 0x4c], eax
0x7fffeafc7dcb:	jmp		0x7fffeafc7d3e
0x7fffeafc7dd0:	lea		rdi, [rip + 0x2c240cb]
0x7fffeafc7dd7:	call		0x7fffeafd3ff0
0x7fffeafc7ddc:	mov		rdi, qword ptr [rbp - 0x38]
0x7fffeafc7de0:	mov		rsi, qword ptr [rbp - 0x48]
0x7fffeafc7de4:	mov		edx, dword ptr [rbp - 0x28]
0x7fffeafc7de7:	mov		ecx, dword ptr [rbp - 0x2c]
0x7fffeafc7dea:	mov		r8d, dword ptr [rbp - 0x24]
0x7fffeafc7dee:	push		rbx
0x7fffeafc7def:	push		rax
0x7fffeafc7df0:	lea		rax, [rbp - 0x54]
0x7fffeafc7df4:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7dfe:	cmp		rax, rbx
0x7fffeafc7e01:	ja		0x7fffeafc7fac
0x7fffeafc7e07:	movabs		rbx, 1
0x7fffeafc7e11:	cmp		rax, rbx
0x7fffeafc7e14:	jb		0x7fffeafc7fac
0x7fffeafc7e1a:	pop		rax
0x7fffeafc7e1b:	pop		rbx
0x7fffeafc7e1c:	mov		dword ptr [rbp - 0x54], eax
0x7fffeafc7e1f:	call		0x7fffeafc5870
0x7fffeafc7e24:	mov		rsi, qword ptr [rbp - 0x18]
0x7fffeafc7e28:	push		rbx
0x7fffeafc7e29:	push		rax
0x7fffeafc7e2a:	lea		rax, [rsi]
0x7fffeafc7e2d:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7e37:	cmp		rax, rbx
0x7fffeafc7e3a:	ja		0x7fffeafc7fac
0x7fffeafc7e40:	movabs		rbx, 1
0x7fffeafc7e4a:	cmp		rax, rbx
0x7fffeafc7e4d:	jb		0x7fffeafc7fac
0x7fffeafc7e53:	pop		rax
0x7fffeafc7e54:	pop		rbx
0x7fffeafc7e55:	mov		byte ptr [rsi], 0
0x7fffeafc7e58:	mov		rsi, qword ptr [rbp - 0x20]
0x7fffeafc7e5c:	push		rbx
0x7fffeafc7e5d:	push		rax
0x7fffeafc7e5e:	lea		rax, [rsi]
0x7fffeafc7e61:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7e6b:	cmp		rax, rbx
0x7fffeafc7e6e:	ja		0x7fffeafc7fac
0x7fffeafc7e74:	movabs		rbx, 1
0x7fffeafc7e7e:	cmp		rax, rbx
0x7fffeafc7e81:	jb		0x7fffeafc7fac
0x7fffeafc7e87:	pop		rax
0x7fffeafc7e88:	pop		rbx
0x7fffeafc7e89:	mov		byte ptr [rsi], 0
0x7fffeafc7e8c:	lea		rdi, [rip + 0x2c24015]
0x7fffeafc7e93:	call		0x7fffeafd3ff0
0x7fffeafc7e98:	mov		rdi, qword ptr [rbp - 0x38]
0x7fffeafc7e9c:	mov		rsi, qword ptr [rbp - 0x48]
0x7fffeafc7ea0:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafc7ea4:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafc7ea8:	mov		r8, qword ptr [rbp - 0x18]
0x7fffeafc7eac:	mov		r9, qword ptr [rbp - 0x20]
0x7fffeafc7eb0:	mov		r10d, dword ptr [rbp - 0x24]
0x7fffeafc7eb4:	push		rbx
0x7fffeafc7eb5:	push		rax
0x7fffeafc7eb6:	lea		rax, [rsp]
0x7fffeafc7eba:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7ec4:	cmp		rax, rbx
0x7fffeafc7ec7:	ja		0x7fffeafc7fac
0x7fffeafc7ecd:	movabs		rbx, 1
0x7fffeafc7ed7:	cmp		rax, rbx
0x7fffeafc7eda:	jb		0x7fffeafc7fac
0x7fffeafc7ee0:	pop		rax
0x7fffeafc7ee1:	pop		rbx
0x7fffeafc7ee2:	mov		dword ptr [rsp], r10d
0x7fffeafc7ee6:	push		rbx
0x7fffeafc7ee7:	push		rax
0x7fffeafc7ee8:	lea		rax, [rbp - 0x58]
0x7fffeafc7eec:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7ef6:	cmp		rax, rbx
0x7fffeafc7ef9:	ja		0x7fffeafc7fac
0x7fffeafc7eff:	movabs		rbx, 1
0x7fffeafc7f09:	cmp		rax, rbx
0x7fffeafc7f0c:	jb		0x7fffeafc7fac
0x7fffeafc7f12:	pop		rax
0x7fffeafc7f13:	pop		rbx
0x7fffeafc7f14:	mov		dword ptr [rbp - 0x58], eax
0x7fffeafc7f17:	call		0x7fffeafc6a20
0x7fffeafc7f1c:	push		rbx
0x7fffeafc7f1d:	push		rax
0x7fffeafc7f1e:	lea		rax, [rbp - 0x50]
0x7fffeafc7f22:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7f2c:	cmp		rax, rbx
0x7fffeafc7f2f:	ja		0x7fffeafc7fac
0x7fffeafc7f35:	movabs		rbx, 1
0x7fffeafc7f3f:	cmp		rax, rbx
0x7fffeafc7f42:	jb		0x7fffeafc7fac
0x7fffeafc7f48:	pop		rax
0x7fffeafc7f49:	pop		rbx
0x7fffeafc7f4a:	mov		dword ptr [rbp - 0x50], eax
0x7fffeafc7f4d:	lea		rdi, [rip + 0x2c23f5a]
0x7fffeafc7f54:	call		0x7fffeafd3ff0
0x7fffeafc7f59:	cmp		dword ptr [rbp - 0x50], 0
0x7fffeafc7f5d:	jne		0x7fffeafc7f85
0x7fffeafc7f63:	mov		rdi, qword ptr [rbp - 0x38]
0x7fffeafc7f67:	mov		rsi, qword ptr [rbp - 8]
0x7fffeafc7f6b:	mov		rdx, qword ptr [rbp - 0x10]
0x7fffeafc7f6f:	call		0x7fffeafc5e00
0x7fffeafc7f74:	mov		rdi, qword ptr [rbp - 0x48]
0x7fffeafc7f78:	mov		rsi, qword ptr [rbp - 8]
0x7fffeafc7f7c:	mov		rdx, qword ptr [rbp - 0x10]
0x7fffeafc7f80:	call		0x7fffeafc6100
0x7fffeafc7f85:	add		rsp, 0x60
0x7fffeafc7f89:	pop		rbp
0x7fffeafc7f8a:	movabs		r11, 0x7fffe87c3ca8
0x7fffeafc7f94:	mov		r10, qword ptr [r11]
0x7fffeafc7f97:	add		r10, r11
0x7fffeafc7f9a:	sub		qword ptr [r11], 8
0x7fffeafc7f9e:	mov		r11, qword ptr [r10]
0x7fffeafc7fa1:	cmp		qword ptr [rsp], r11
0x7fffeafc7fa5:	jne		0x7fffeafc7fb8
0x7fffeafc7fab:	ret		
0x7fffeafc7fac:	pop		rax
0x7fffeafc7fad:	pop		rbx
0x7fffeafc7fae:	mov		edi, 0xffffffff
0x7fffeafc7fb3:	call		0x7fffeafd41d0
0x7fffeafc7fb8:	mov		edi, 0xffffffff
0x7fffeafc7fbd:	call		0x7fffeafd41d0
0x7fffeafc7fc2:	nop		word ptr cs:[rax + rax]
0x7fffeafc7fcc:	nop		dword ptr [rax]
disassembling symbol '.LBB9_1':
textAddr: 0x7fffeafc7c30, textSize: 146
0x7fffeafc7c30:	mov		eax, dword ptr [rbp - 0x3c]
0x7fffeafc7c33:	cmp		eax, dword ptr [rbp - 0x2c]
0x7fffeafc7c36:	jg		0x7fffeafc7cc2
0x7fffeafc7c3c:	movsxd		rax, dword ptr [rbp - 0x28]
0x7fffeafc7c40:	shl		rax, 2
0x7fffeafc7c44:	mov		rdi, rax
0x7fffeafc7c47:	call		0x7fffeafcf100
0x7fffeafc7c4c:	mov		rcx, qword ptr [rbp - 0x38]
0x7fffeafc7c50:	movsxd		rdx, dword ptr [rbp - 0x3c]
0x7fffeafc7c54:	push		rbx
0x7fffeafc7c55:	push		rax
0x7fffeafc7c56:	lea		rax, [rcx + rdx*8]
0x7fffeafc7c5a:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7c64:	cmp		rax, rbx
0x7fffeafc7c67:	ja		0x7fffeafc7fac
0x7fffeafc7c6d:	movabs		rbx, 1
0x7fffeafc7c77:	cmp		rax, rbx
0x7fffeafc7c7a:	jb		0x7fffeafc7fac
0x7fffeafc7c80:	pop		rax
0x7fffeafc7c81:	pop		rbx
0x7fffeafc7c82:	mov		qword ptr [rcx + rdx*8], rax
0x7fffeafc7c86:	mov		eax, dword ptr [rbp - 0x3c]
0x7fffeafc7c89:	add		eax, 1
0x7fffeafc7c8c:	push		rbx
0x7fffeafc7c8d:	push		rax
0x7fffeafc7c8e:	lea		rax, [rbp - 0x3c]
0x7fffeafc7c92:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7c9c:	cmp		rax, rbx
0x7fffeafc7c9f:	ja		0x7fffeafc7fac
0x7fffeafc7ca5:	movabs		rbx, 1
0x7fffeafc7caf:	cmp		rax, rbx
0x7fffeafc7cb2:	jb		0x7fffeafc7fac
0x7fffeafc7cb8:	pop		rax
0x7fffeafc7cb9:	pop		rbx
0x7fffeafc7cba:	mov		dword ptr [rbp - 0x3c], eax
0x7fffeafc7cbd:	jmp		0x7fffeafc7c30
disassembling symbol '.LBB9_4':
textAddr: 0x7fffeafc7cc2, textSize: 124
0x7fffeafc7cc2:	mov		eax, dword ptr [rbp - 0x2c]
0x7fffeafc7cc5:	add		eax, 1
0x7fffeafc7cc8:	movsxd		rcx, eax
0x7fffeafc7ccb:	shl		rcx, 3
0x7fffeafc7ccf:	mov		rdi, rcx
0x7fffeafc7cd2:	call		0x7fffeafcf100
0x7fffeafc7cd7:	push		rbx
0x7fffeafc7cd8:	push		rax
0x7fffeafc7cd9:	lea		rax, [rbp - 0x48]
0x7fffeafc7cdd:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7ce7:	cmp		rax, rbx
0x7fffeafc7cea:	ja		0x7fffeafc7fac
0x7fffeafc7cf0:	movabs		rbx, 1
0x7fffeafc7cfa:	cmp		rax, rbx
0x7fffeafc7cfd:	jb		0x7fffeafc7fac
0x7fffeafc7d03:	pop		rax
0x7fffeafc7d04:	pop		rbx
0x7fffeafc7d05:	mov		qword ptr [rbp - 0x48], rax
0x7fffeafc7d09:	push		rbx
0x7fffeafc7d0a:	push		rax
0x7fffeafc7d0b:	lea		rax, [rbp - 0x4c]
0x7fffeafc7d0f:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7d19:	cmp		rax, rbx
0x7fffeafc7d1c:	ja		0x7fffeafc7fac
0x7fffeafc7d22:	movabs		rbx, 1
0x7fffeafc7d2c:	cmp		rax, rbx
0x7fffeafc7d2f:	jb		0x7fffeafc7fac
0x7fffeafc7d35:	pop		rax
0x7fffeafc7d36:	pop		rbx
0x7fffeafc7d37:	mov		dword ptr [rbp - 0x4c], 0
disassembling symbol '.LBB9_5':
textAddr: 0x7fffeafc7d3e, textSize: 146
0x7fffeafc7d3e:	mov		eax, dword ptr [rbp - 0x4c]
0x7fffeafc7d41:	cmp		eax, dword ptr [rbp - 0x2c]
0x7fffeafc7d44:	jg		0x7fffeafc7dd0
0x7fffeafc7d4a:	movsxd		rax, dword ptr [rbp - 0x28]
0x7fffeafc7d4e:	shl		rax, 0
0x7fffeafc7d52:	mov		rdi, rax
0x7fffeafc7d55:	call		0x7fffeafcf100
0x7fffeafc7d5a:	mov		rcx, qword ptr [rbp - 0x48]
0x7fffeafc7d5e:	movsxd		rdx, dword ptr [rbp - 0x4c]
0x7fffeafc7d62:	push		rbx
0x7fffeafc7d63:	push		rax
0x7fffeafc7d64:	lea		rax, [rcx + rdx*8]
0x7fffeafc7d68:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7d72:	cmp		rax, rbx
0x7fffeafc7d75:	ja		0x7fffeafc7fac
0x7fffeafc7d7b:	movabs		rbx, 1
0x7fffeafc7d85:	cmp		rax, rbx
0x7fffeafc7d88:	jb		0x7fffeafc7fac
0x7fffeafc7d8e:	pop		rax
0x7fffeafc7d8f:	pop		rbx
0x7fffeafc7d90:	mov		qword ptr [rcx + rdx*8], rax
0x7fffeafc7d94:	mov		eax, dword ptr [rbp - 0x4c]
0x7fffeafc7d97:	add		eax, 1
0x7fffeafc7d9a:	push		rbx
0x7fffeafc7d9b:	push		rax
0x7fffeafc7d9c:	lea		rax, [rbp - 0x4c]
0x7fffeafc7da0:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7daa:	cmp		rax, rbx
0x7fffeafc7dad:	ja		0x7fffeafc7fac
0x7fffeafc7db3:	movabs		rbx, 1
0x7fffeafc7dbd:	cmp		rax, rbx
0x7fffeafc7dc0:	jb		0x7fffeafc7fac
0x7fffeafc7dc6:	pop		rax
0x7fffeafc7dc7:	pop		rbx
0x7fffeafc7dc8:	mov		dword ptr [rbp - 0x4c], eax
0x7fffeafc7dcb:	jmp		0x7fffeafc7d3e
disassembling symbol '.LBB9_8':
textAddr: 0x7fffeafc7dd0, textSize: 437
0x7fffeafc7dd0:	lea		rdi, [rip + 0x2c240cb]
0x7fffeafc7dd7:	call		0x7fffeafd3ff0
0x7fffeafc7ddc:	mov		rdi, qword ptr [rbp - 0x38]
0x7fffeafc7de0:	mov		rsi, qword ptr [rbp - 0x48]
0x7fffeafc7de4:	mov		edx, dword ptr [rbp - 0x28]
0x7fffeafc7de7:	mov		ecx, dword ptr [rbp - 0x2c]
0x7fffeafc7dea:	mov		r8d, dword ptr [rbp - 0x24]
0x7fffeafc7dee:	push		rbx
0x7fffeafc7def:	push		rax
0x7fffeafc7df0:	lea		rax, [rbp - 0x54]
0x7fffeafc7df4:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7dfe:	cmp		rax, rbx
0x7fffeafc7e01:	ja		0x7fffeafc7fac
0x7fffeafc7e07:	movabs		rbx, 1
0x7fffeafc7e11:	cmp		rax, rbx
0x7fffeafc7e14:	jb		0x7fffeafc7fac
0x7fffeafc7e1a:	pop		rax
0x7fffeafc7e1b:	pop		rbx
0x7fffeafc7e1c:	mov		dword ptr [rbp - 0x54], eax
0x7fffeafc7e1f:	call		0x7fffeafc5870
0x7fffeafc7e24:	mov		rsi, qword ptr [rbp - 0x18]
0x7fffeafc7e28:	push		rbx
0x7fffeafc7e29:	push		rax
0x7fffeafc7e2a:	lea		rax, [rsi]
0x7fffeafc7e2d:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7e37:	cmp		rax, rbx
0x7fffeafc7e3a:	ja		0x7fffeafc7fac
0x7fffeafc7e40:	movabs		rbx, 1
0x7fffeafc7e4a:	cmp		rax, rbx
0x7fffeafc7e4d:	jb		0x7fffeafc7fac
0x7fffeafc7e53:	pop		rax
0x7fffeafc7e54:	pop		rbx
0x7fffeafc7e55:	mov		byte ptr [rsi], 0
0x7fffeafc7e58:	mov		rsi, qword ptr [rbp - 0x20]
0x7fffeafc7e5c:	push		rbx
0x7fffeafc7e5d:	push		rax
0x7fffeafc7e5e:	lea		rax, [rsi]
0x7fffeafc7e61:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7e6b:	cmp		rax, rbx
0x7fffeafc7e6e:	ja		0x7fffeafc7fac
0x7fffeafc7e74:	movabs		rbx, 1
0x7fffeafc7e7e:	cmp		rax, rbx
0x7fffeafc7e81:	jb		0x7fffeafc7fac
0x7fffeafc7e87:	pop		rax
0x7fffeafc7e88:	pop		rbx
0x7fffeafc7e89:	mov		byte ptr [rsi], 0
0x7fffeafc7e8c:	lea		rdi, [rip + 0x2c24015]
0x7fffeafc7e93:	call		0x7fffeafd3ff0
0x7fffeafc7e98:	mov		rdi, qword ptr [rbp - 0x38]
0x7fffeafc7e9c:	mov		rsi, qword ptr [rbp - 0x48]
0x7fffeafc7ea0:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafc7ea4:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafc7ea8:	mov		r8, qword ptr [rbp - 0x18]
0x7fffeafc7eac:	mov		r9, qword ptr [rbp - 0x20]
0x7fffeafc7eb0:	mov		r10d, dword ptr [rbp - 0x24]
0x7fffeafc7eb4:	push		rbx
0x7fffeafc7eb5:	push		rax
0x7fffeafc7eb6:	lea		rax, [rsp]
0x7fffeafc7eba:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7ec4:	cmp		rax, rbx
0x7fffeafc7ec7:	ja		0x7fffeafc7fac
0x7fffeafc7ecd:	movabs		rbx, 1
0x7fffeafc7ed7:	cmp		rax, rbx
0x7fffeafc7eda:	jb		0x7fffeafc7fac
0x7fffeafc7ee0:	pop		rax
0x7fffeafc7ee1:	pop		rbx
0x7fffeafc7ee2:	mov		dword ptr [rsp], r10d
0x7fffeafc7ee6:	push		rbx
0x7fffeafc7ee7:	push		rax
0x7fffeafc7ee8:	lea		rax, [rbp - 0x58]
0x7fffeafc7eec:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7ef6:	cmp		rax, rbx
0x7fffeafc7ef9:	ja		0x7fffeafc7fac
0x7fffeafc7eff:	movabs		rbx, 1
0x7fffeafc7f09:	cmp		rax, rbx
0x7fffeafc7f0c:	jb		0x7fffeafc7fac
0x7fffeafc7f12:	pop		rax
0x7fffeafc7f13:	pop		rbx
0x7fffeafc7f14:	mov		dword ptr [rbp - 0x58], eax
0x7fffeafc7f17:	call		0x7fffeafc6a20
0x7fffeafc7f1c:	push		rbx
0x7fffeafc7f1d:	push		rax
0x7fffeafc7f1e:	lea		rax, [rbp - 0x50]
0x7fffeafc7f22:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7f2c:	cmp		rax, rbx
0x7fffeafc7f2f:	ja		0x7fffeafc7fac
0x7fffeafc7f35:	movabs		rbx, 1
0x7fffeafc7f3f:	cmp		rax, rbx
0x7fffeafc7f42:	jb		0x7fffeafc7fac
0x7fffeafc7f48:	pop		rax
0x7fffeafc7f49:	pop		rbx
0x7fffeafc7f4a:	mov		dword ptr [rbp - 0x50], eax
0x7fffeafc7f4d:	lea		rdi, [rip + 0x2c23f5a]
0x7fffeafc7f54:	call		0x7fffeafd3ff0
0x7fffeafc7f59:	cmp		dword ptr [rbp - 0x50], 0
0x7fffeafc7f5d:	jne		0x7fffeafc7f85
0x7fffeafc7f63:	mov		rdi, qword ptr [rbp - 0x38]
0x7fffeafc7f67:	mov		rsi, qword ptr [rbp - 8]
0x7fffeafc7f6b:	mov		rdx, qword ptr [rbp - 0x10]
0x7fffeafc7f6f:	call		0x7fffeafc5e00
0x7fffeafc7f74:	mov		rdi, qword ptr [rbp - 0x48]
0x7fffeafc7f78:	mov		rsi, qword ptr [rbp - 8]
0x7fffeafc7f7c:	mov		rdx, qword ptr [rbp - 0x10]
0x7fffeafc7f80:	call		0x7fffeafc6100
disassembling symbol '.LBB9_10':
textAddr: 0x7fffeafc7f85, textSize: 39
0x7fffeafc7f85:	add		rsp, 0x60
0x7fffeafc7f89:	pop		rbp
0x7fffeafc7f8a:	movabs		r11, 0x7fffe87c3ca8
0x7fffeafc7f94:	mov		r10, qword ptr [r11]
0x7fffeafc7f97:	add		r10, r11
0x7fffeafc7f9a:	sub		qword ptr [r11], 8
0x7fffeafc7f9e:	mov		r11, qword ptr [r10]
0x7fffeafc7fa1:	cmp		qword ptr [rsp], r11
0x7fffeafc7fa5:	jne		0x7fffeafc7fb8
0x7fffeafc7fab:	ret		
disassembling symbol '.LBB9_11':
textAddr: 0x7fffeafc7fac, textSize: 12
0x7fffeafc7fac:	pop		rax
0x7fffeafc7fad:	pop		rbx
0x7fffeafc7fae:	mov		edi, 0xffffffff
0x7fffeafc7fb3:	call		0x7fffeafd41d0
disassembling symbol '.LBB9_12':
textAddr: 0x7fffeafc7fb8, textSize: 24
0x7fffeafc7fb8:	mov		edi, 0xffffffff
0x7fffeafc7fbd:	call		0x7fffeafd41d0
0x7fffeafc7fc2:	nop		word ptr cs:[rax + rax]
0x7fffeafc7fcc:	nop		dword ptr [rax]
disassembling symbol 'enclave_main':
textAddr: 0x7fffeafc7fd0, textSize: 488
0x7fffeafc7fd0:	push		rbp
0x7fffeafc7fd1:	mov		rbp, rsp
0x7fffeafc7fd4:	sub		rsp, 0xa0
0x7fffeafc7fdb:	mov		rax, qword ptr [rip + 0x2c23ed2]
0x7fffeafc7fe2:	push		rbx
0x7fffeafc7fe3:	push		rax
0x7fffeafc7fe4:	lea		rax, [rbp - 9]
0x7fffeafc7fe8:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc7ff2:	cmp		rax, rbx
0x7fffeafc7ff5:	ja		0x7fffeafc81ac
0x7fffeafc7ffb:	movabs		rbx, 1
0x7fffeafc8005:	cmp		rax, rbx
0x7fffeafc8008:	jb		0x7fffeafc81ac
0x7fffeafc800e:	pop		rax
0x7fffeafc800f:	pop		rbx
0x7fffeafc8010:	mov		qword ptr [rbp - 9], rax
0x7fffeafc8014:	mov		cl, byte ptr [rip + 0x2c23ea2]
0x7fffeafc801a:	push		rbx
0x7fffeafc801b:	push		rax
0x7fffeafc801c:	lea		rax, [rbp - 1]
0x7fffeafc8020:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc802a:	cmp		rax, rbx
0x7fffeafc802d:	ja		0x7fffeafc81ac
0x7fffeafc8033:	movabs		rbx, 1
0x7fffeafc803d:	cmp		rax, rbx
0x7fffeafc8040:	jb		0x7fffeafc81ac
0x7fffeafc8046:	pop		rax
0x7fffeafc8047:	pop		rbx
0x7fffeafc8048:	mov		byte ptr [rbp - 1], cl
0x7fffeafc804b:	mov		rax, qword ptr [rip + 0x2c23e6b]
0x7fffeafc8052:	push		rbx
0x7fffeafc8053:	push		rax
0x7fffeafc8054:	lea		rax, [rbp - 0x11]
0x7fffeafc8058:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc8062:	cmp		rax, rbx
0x7fffeafc8065:	ja		0x7fffeafc81ac
0x7fffeafc806b:	movabs		rbx, 1
0x7fffeafc8075:	cmp		rax, rbx
0x7fffeafc8078:	jb		0x7fffeafc81ac
0x7fffeafc807e:	pop		rax
0x7fffeafc807f:	pop		rbx
0x7fffeafc8080:	mov		qword ptr [rbp - 0x11], rax
0x7fffeafc8084:	lea		rdi, [rip + 0x2c23e3a]
0x7fffeafc808b:	call		0x7fffeafd3ff0
0x7fffeafc8090:	lea		rdi, [rbp - 9]
0x7fffeafc8094:	push		rbx
0x7fffeafc8095:	push		rax
0x7fffeafc8096:	lea		rax, [rbp - 0x94]
0x7fffeafc809d:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc80a7:	cmp		rax, rbx
0x7fffeafc80aa:	ja		0x7fffeafc81ac
0x7fffeafc80b0:	movabs		rbx, 1
0x7fffeafc80ba:	cmp		rax, rbx
0x7fffeafc80bd:	jb		0x7fffeafc81ac
0x7fffeafc80c3:	pop		rax
0x7fffeafc80c4:	pop		rbx
0x7fffeafc80c5:	mov		dword ptr [rbp - 0x94], eax
0x7fffeafc80cb:	call		0x7fffeafd3ff0
0x7fffeafc80d0:	lea		rdi, [rip + 0x2c23df4]
0x7fffeafc80d7:	push		rbx
0x7fffeafc80d8:	push		rax
0x7fffeafc80d9:	lea		rax, [rbp - 0x98]
0x7fffeafc80e0:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc80ea:	cmp		rax, rbx
0x7fffeafc80ed:	ja		0x7fffeafc81ac
0x7fffeafc80f3:	movabs		rbx, 1
0x7fffeafc80fd:	cmp		rax, rbx
0x7fffeafc8100:	jb		0x7fffeafc81ac
0x7fffeafc8106:	pop		rax
0x7fffeafc8107:	pop		rbx
0x7fffeafc8108:	mov		dword ptr [rbp - 0x98], eax
0x7fffeafc810e:	call		0x7fffeafd3ff0
0x7fffeafc8113:	lea		rcx, [rbp - 0x90]
0x7fffeafc811a:	lea		rdx, [rbp - 0x50]
0x7fffeafc811e:	lea		rsi, [rbp - 0x11]
0x7fffeafc8122:	lea		rdi, [rbp - 9]
0x7fffeafc8126:	push		rbx
0x7fffeafc8127:	push		rax
0x7fffeafc8128:	lea		rax, [rbp - 0x9c]
0x7fffeafc812f:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc8139:	cmp		rax, rbx
0x7fffeafc813c:	ja		0x7fffeafc81ac
0x7fffeafc8142:	movabs		rbx, 1
0x7fffeafc814c:	cmp		rax, rbx
0x7fffeafc814f:	jb		0x7fffeafc81ac
0x7fffeafc8155:	pop		rax
0x7fffeafc8156:	pop		rbx
0x7fffeafc8157:	mov		dword ptr [rbp - 0x9c], eax
0x7fffeafc815d:	call		0x7fffeafc7a20
0x7fffeafc8162:	lea		rdi, [rip + 0x2c23d7a]
0x7fffeafc8169:	call		0x7fffeafd3ff0
0x7fffeafc816e:	xor		edi, edi
0x7fffeafc8170:	push		rbx
0x7fffeafc8171:	push		rax
0x7fffeafc8172:	lea		rax, [rbp - 0xa0]
0x7fffeafc8179:	movabs		rbx, 0xffffffffffffffff
0x7fffeafc8183:	cmp		rax, rbx
0x7fffeafc8186:	ja		0x7fffeafc81ac
0x7fffeafc818c:	movabs		rbx, 1
0x7fffeafc8196:	cmp		rax, rbx
0x7fffeafc8199:	jb		0x7fffeafc81ac
0x7fffeafc819f:	pop		rax
0x7fffeafc81a0:	pop		rbx
0x7fffeafc81a1:	mov		dword ptr [rbp - 0xa0], eax
0x7fffeafc81a7:	call		0x7fffeafd41d0
0x7fffeafc81ac:	pop		rax
0x7fffeafc81ad:	pop		rbx
0x7fffeafc81ae:	mov		edi, 0xffffffff
0x7fffeafc81b3:	call		0x7fffeafd41d0
disassembling symbol '.LBB10_1':
textAddr: 0x7fffeafc81ac, textSize: 20
0x7fffeafc81ac:	pop		rax
0x7fffeafc81ad:	pop		rbx
0x7fffeafc81ae:	mov		edi, 0xffffffff
0x7fffeafc81b3:	call		0x7fffeafd41d0
0x7fffeafc81b8:	add		byte ptr [rax], al
0x7fffeafc81ba:	add		byte ptr [rax], al
0x7fffeafc81bc:	add		byte ptr [rax], al
0x7fffeafc81be:	add		byte ptr [rax], al
disassembling symbol 'fprintf':
textAddr: 0x7fffeafc81c0, textSize: 388
0x7fffeafc81c0:	sub		rsp, 0x198
0x7fffeafc81c7:	test		al, al
0x7fffeafc81c9:	movaps		xmmword ptr [rsp + 0xa0], xmm7
0x7fffeafc81d1:	movaps		xmmword ptr [rsp + 0x90], xmm6
0x7fffeafc81d9:	movaps		xmmword ptr [rsp + 0x80], xmm5
0x7fffeafc81e1:	movaps		xmmword ptr [rsp + 0x70], xmm4
0x7fffeafc81e6:	movaps		xmmword ptr [rsp + 0x60], xmm3
0x7fffeafc81eb:	movaps		xmmword ptr [rsp + 0x50], xmm2
0x7fffeafc81f0:	movaps		xmmword ptr [rsp + 0x40], xmm1
0x7fffeafc81f5:	movaps		xmmword ptr [rsp + 0x30], xmm0
0x7fffeafc81fa:	mov		qword ptr [rsp + 0x28], r9
0x7fffeafc81ff:	mov		qword ptr [rsp + 0x20], r8
0x7fffeafc8204:	mov		qword ptr [rsp + 0x18], rcx
0x7fffeafc8209:	mov		qword ptr [rsp + 0x10], rdx
0x7fffeafc820e:	mov		qword ptr [rsp + 8], rsi
0x7fffeafc8213:	mov		qword ptr [rsp], rdi
0x7fffeafc8217:	je		0x7fffeafc828e
0x7fffeafc821d:	movaps		xmm0, xmmword ptr [rsp + 0x30]
0x7fffeafc8222:	movaps		xmmword ptr [rsp + 0xe0], xmm0
0x7fffeafc822a:	movaps		xmm1, xmmword ptr [rsp + 0x40]
0x7fffeafc822f:	movaps		xmmword ptr [rsp + 0xf0], xmm1
0x7fffeafc8237:	movaps		xmm2, xmmword ptr [rsp + 0x50]
0x7fffeafc823c:	movaps		xmmword ptr [rsp + 0x100], xmm2
0x7fffeafc8244:	movaps		xmm3, xmmword ptr [rsp + 0x60]
0x7fffeafc8249:	movaps		xmmword ptr [rsp + 0x110], xmm3
0x7fffeafc8251:	movaps		xmm4, xmmword ptr [rsp + 0x70]
0x7fffeafc8256:	movaps		xmmword ptr [rsp + 0x120], xmm4
0x7fffeafc825e:	movaps		xmm5, xmmword ptr [rsp + 0x80]
0x7fffeafc8266:	movaps		xmmword ptr [rsp + 0x130], xmm5
0x7fffeafc826e:	movaps		xmm6, xmmword ptr [rsp + 0x90]
0x7fffeafc8276:	movaps		xmmword ptr [rsp + 0x140], xmm6
0x7fffeafc827e:	movaps		xmm7, xmmword ptr [rsp + 0xa0]
0x7fffeafc8286:	movaps		xmmword ptr [rsp + 0x150], xmm7
0x7fffeafc828e:	mov		rax, qword ptr [rsp + 0x28]
0x7fffeafc8293:	mov		qword ptr [rsp + 0xd8], rax
0x7fffeafc829b:	mov		rcx, qword ptr [rsp + 0x20]
0x7fffeafc82a0:	mov		qword ptr [rsp + 0xd0], rcx
0x7fffeafc82a8:	mov		rdx, qword ptr [rsp + 0x18]
0x7fffeafc82ad:	mov		qword ptr [rsp + 0xc8], rdx
0x7fffeafc82b5:	mov		rsi, qword ptr [rsp + 0x10]
0x7fffeafc82ba:	mov		qword ptr [rsp + 0xc0], rsi
0x7fffeafc82c2:	mov		rdi, qword ptr [rsp]
0x7fffeafc82c6:	mov		qword ptr [rsp + 0x190], rdi
0x7fffeafc82ce:	mov		r8, qword ptr [rsp + 8]
0x7fffeafc82d3:	mov		qword ptr [rsp + 0x188], r8
0x7fffeafc82db:	lea		r9, [rsp + 0xb0]
0x7fffeafc82e3:	mov		qword ptr [rsp + 0x170], r9
0x7fffeafc82eb:	lea		r9, [rsp + 0x1a0]
0x7fffeafc82f3:	mov		qword ptr [rsp + 0x168], r9
0x7fffeafc82fb:	mov		dword ptr [rsp + 0x164], 0x30
0x7fffeafc8306:	mov		dword ptr [rsp + 0x160], 0x10
0x7fffeafc8311:	mov		rdi, qword ptr [rsp + 0x190]
0x7fffeafc8319:	mov		rsi, qword ptr [rsp + 0x188]
0x7fffeafc8321:	lea		rdx, [rsp + 0x160]
0x7fffeafc8329:	call		0x7fffeafd4a10
0x7fffeafc832e:	mov		dword ptr [rsp + 0x184], eax
0x7fffeafc8335:	mov		eax, dword ptr [rsp + 0x184]
0x7fffeafc833c:	add		rsp, 0x198
0x7fffeafc8343:	ret		
disassembling symbol '.LBB0_2':
textAddr: 0x7fffeafc828e, textSize: 194
0x7fffeafc828e:	mov		rax, qword ptr [rsp + 0x28]
0x7fffeafc8293:	mov		qword ptr [rsp + 0xd8], rax
0x7fffeafc829b:	mov		rcx, qword ptr [rsp + 0x20]
0x7fffeafc82a0:	mov		qword ptr [rsp + 0xd0], rcx
0x7fffeafc82a8:	mov		rdx, qword ptr [rsp + 0x18]
0x7fffeafc82ad:	mov		qword ptr [rsp + 0xc8], rdx
0x7fffeafc82b5:	mov		rsi, qword ptr [rsp + 0x10]
0x7fffeafc82ba:	mov		qword ptr [rsp + 0xc0], rsi
0x7fffeafc82c2:	mov		rdi, qword ptr [rsp]
0x7fffeafc82c6:	mov		qword ptr [rsp + 0x190], rdi
0x7fffeafc82ce:	mov		r8, qword ptr [rsp + 8]
0x7fffeafc82d3:	mov		qword ptr [rsp + 0x188], r8
0x7fffeafc82db:	lea		r9, [rsp + 0xb0]
0x7fffeafc82e3:	mov		qword ptr [rsp + 0x170], r9
0x7fffeafc82eb:	lea		r9, [rsp + 0x1a0]
0x7fffeafc82f3:	mov		qword ptr [rsp + 0x168], r9
0x7fffeafc82fb:	mov		dword ptr [rsp + 0x164], 0x30
0x7fffeafc8306:	mov		dword ptr [rsp + 0x160], 0x10
0x7fffeafc8311:	mov		rdi, qword ptr [rsp + 0x190]
0x7fffeafc8319:	mov		rsi, qword ptr [rsp + 0x188]
0x7fffeafc8321:	lea		rdx, [rsp + 0x160]
0x7fffeafc8329:	call		0x7fffeafd4a10
0x7fffeafc832e:	mov		dword ptr [rsp + 0x184], eax
0x7fffeafc8335:	mov		eax, dword ptr [rsp + 0x184]
0x7fffeafc833c:	add		rsp, 0x198
0x7fffeafc8343:	ret		
0x7fffeafc8344:	add		byte ptr [rax], al
0x7fffeafc8346:	add		byte ptr [rax], al
0x7fffeafc8348:	add		byte ptr [rax], al
0x7fffeafc834a:	add		byte ptr [rax], al
0x7fffeafc834c:	add		byte ptr [rax], al
0x7fffeafc834e:	add		byte ptr [rax], al
disassembling symbol 'frexpl':
textAddr: 0x7fffeafc8350, textSize: 246
0x7fffeafc8350:	sub		rsp, 0x68
0x7fffeafc8354:	fld		xword ptr [rsp + 0x70]
0x7fffeafc8358:	fstp		xword ptr [rsp + 0x40]
0x7fffeafc835c:	mov		qword ptr [rsp + 0x38], rdi
0x7fffeafc8361:	fld		xword ptr [rsp + 0x40]
0x7fffeafc8365:	fstp		xword ptr [rsp + 0x20]
0x7fffeafc8369:	movzx		eax, word ptr [rsp + 0x28]
0x7fffeafc836e:	and		eax, 0x7fff
0x7fffeafc8373:	mov		dword ptr [rsp + 0x1c], eax
0x7fffeafc8377:	cmp		dword ptr [rsp + 0x1c], 0
0x7fffeafc837c:	jne		0x7fffeafc83e7
0x7fffeafc8382:	fld		xword ptr [rsp + 0x40]
0x7fffeafc8386:	fldz		
0x7fffeafc8388:	fxch		st(1)
0x7fffeafc838a:	fucomip		st(1)
0x7fffeafc838c:	fstp		st(0)
0x7fffeafc838e:	jne		0x7fffeafc839f
0x7fffeafc8394:	jp		0x7fffeafc839f
0x7fffeafc839a:	jmp		0x7fffeafc83cf
0x7fffeafc839f:	fld		xword ptr [rsp + 0x40]
0x7fffeafc83a3:	fld		dword ptr [rip + 0x2c23ac7]
0x7fffeafc83a9:	fmulp		st(1)
0x7fffeafc83ab:	mov		rdi, qword ptr [rsp + 0x38]
0x7fffeafc83b0:	mov		rax, rsp
0x7fffeafc83b3:	fstp		xword ptr [rax]
0x7fffeafc83b5:	call		0x7fffeafc8350
0x7fffeafc83ba:	fstp		xword ptr [rsp + 0x40]
0x7fffeafc83be:	mov		rax, qword ptr [rsp + 0x38]
0x7fffeafc83c3:	mov		ecx, dword ptr [rax]
0x7fffeafc83c5:	sub		ecx, 0x78
0x7fffeafc83c8:	mov		dword ptr [rax], ecx
0x7fffeafc83ca:	jmp		0x7fffeafc83da
0x7fffeafc83cf:	mov		rax, qword ptr [rsp + 0x38]
0x7fffeafc83d4:	mov		dword ptr [rax], 0
0x7fffeafc83da:	fld		xword ptr [rsp + 0x40]
0x7fffeafc83de:	fstp		xword ptr [rsp + 0x50]
0x7fffeafc83e2:	jmp		0x7fffeafc843d
0x7fffeafc83e7:	cmp		dword ptr [rsp + 0x1c], 0x7fff
0x7fffeafc83ef:	jne		0x7fffeafc8402
0x7fffeafc83f5:	fld		xword ptr [rsp + 0x40]
0x7fffeafc83f9:	fstp		xword ptr [rsp + 0x50]
0x7fffeafc83fd:	jmp		0x7fffeafc843d
0x7fffeafc8402:	jmp		0x7fffeafc8407
0x7fffeafc8407:	mov		eax, dword ptr [rsp + 0x1c]
0x7fffeafc840b:	add		eax, 0xffffc002
0x7fffeafc8410:	mov		rcx, qword ptr [rsp + 0x38]
0x7fffeafc8415:	mov		dword ptr [rcx], eax
0x7fffeafc8417:	mov		dx, word ptr [rsp + 0x28]
0x7fffeafc841c:	and		dx, 0x8000
0x7fffeafc8421:	mov		word ptr [rsp + 0x28], dx
0x7fffeafc8426:	mov		dx, word ptr [rsp + 0x28]
0x7fffeafc842b:	or		dx, 0x3ffe
0x7fffeafc8430:	mov		word ptr [rsp + 0x28], dx
0x7fffeafc8435:	fld		xword ptr [rsp + 0x20]
0x7fffeafc8439:	fstp		xword ptr [rsp + 0x50]
0x7fffeafc843d:	fld		xword ptr [rsp + 0x50]
0x7fffeafc8441:	add		rsp, 0x68
0x7fffeafc8445:	ret		
disassembling symbol '.LBB0_2':
textAddr: 0x7fffeafc839f, textSize: 48
0x7fffeafc839f:	fld		xword ptr [rsp + 0x40]
0x7fffeafc83a3:	fld		dword ptr [rip + 0x2c23ac7]
0x7fffeafc83a9:	fmulp		st(1)
0x7fffeafc83ab:	mov		rdi, qword ptr [rsp + 0x38]
0x7fffeafc83b0:	mov		rax, rsp
0x7fffeafc83b3:	fstp		xword ptr [rax]
0x7fffeafc83b5:	call		0x7fffeafc8350
0x7fffeafc83ba:	fstp		xword ptr [rsp + 0x40]
0x7fffeafc83be:	mov		rax, qword ptr [rsp + 0x38]
0x7fffeafc83c3:	mov		ecx, dword ptr [rax]
0x7fffeafc83c5:	sub		ecx, 0x78
0x7fffeafc83c8:	mov		dword ptr [rax], ecx
0x7fffeafc83ca:	jmp		0x7fffeafc83da
disassembling symbol '.LBB0_3':
textAddr: 0x7fffeafc83cf, textSize: 11
0x7fffeafc83cf:	mov		rax, qword ptr [rsp + 0x38]
0x7fffeafc83d4:	mov		dword ptr [rax], 0
disassembling symbol '.LBB0_4':
textAddr: 0x7fffeafc83da, textSize: 13
0x7fffeafc83da:	fld		xword ptr [rsp + 0x40]
0x7fffeafc83de:	fstp		xword ptr [rsp + 0x50]
0x7fffeafc83e2:	jmp		0x7fffeafc843d
disassembling symbol '.LBB0_5':
textAddr: 0x7fffeafc83e7, textSize: 27
0x7fffeafc83e7:	cmp		dword ptr [rsp + 0x1c], 0x7fff
0x7fffeafc83ef:	jne		0x7fffeafc8402
0x7fffeafc83f5:	fld		xword ptr [rsp + 0x40]
0x7fffeafc83f9:	fstp		xword ptr [rsp + 0x50]
0x7fffeafc83fd:	jmp		0x7fffeafc843d
disassembling symbol '.LBB0_7':
textAddr: 0x7fffeafc8402, textSize: 5
0x7fffeafc8402:	jmp		0x7fffeafc8407
disassembling symbol '.LBB0_8':
textAddr: 0x7fffeafc8407, textSize: 54
0x7fffeafc8407:	mov		eax, dword ptr [rsp + 0x1c]
0x7fffeafc840b:	add		eax, 0xffffc002
0x7fffeafc8410:	mov		rcx, qword ptr [rsp + 0x38]
0x7fffeafc8415:	mov		dword ptr [rcx], eax
0x7fffeafc8417:	mov		dx, word ptr [rsp + 0x28]
0x7fffeafc841c:	and		dx, 0x8000
0x7fffeafc8421:	mov		word ptr [rsp + 0x28], dx
0x7fffeafc8426:	mov		dx, word ptr [rsp + 0x28]
0x7fffeafc842b:	or		dx, 0x3ffe
0x7fffeafc8430:	mov		word ptr [rsp + 0x28], dx
0x7fffeafc8435:	fld		xword ptr [rsp + 0x20]
0x7fffeafc8439:	fstp		xword ptr [rsp + 0x50]
disassembling symbol '.LBB0_9':
textAddr: 0x7fffeafc843d, textSize: 19
0x7fffeafc843d:	fld		xword ptr [rsp + 0x50]
0x7fffeafc8441:	add		rsp, 0x68
0x7fffeafc8445:	ret		
0x7fffeafc8446:	add		byte ptr [rax], al
0x7fffeafc8448:	add		byte ptr [rax], al
0x7fffeafc844a:	add		byte ptr [rax], al
0x7fffeafc844c:	add		byte ptr [rax], al
0x7fffeafc844e:	add		byte ptr [rax], al
disassembling symbol '__fwritex':
textAddr: 0x7fffeafc8450, textSize: 448
0x7fffeafc8450:	sub		rsp, 0x38
0x7fffeafc8454:	mov		qword ptr [rsp + 0x28], rdi
0x7fffeafc8459:	mov		qword ptr [rsp + 0x20], rsi
0x7fffeafc845e:	mov		qword ptr [rsp + 0x18], rdx
0x7fffeafc8463:	mov		qword ptr [rsp + 0x10], 0
0x7fffeafc846c:	mov		rax, qword ptr [rsp + 0x18]
0x7fffeafc8471:	cmp		qword ptr [rax + 0x20], 0
0x7fffeafc8476:	jne		0x7fffeafc849d
0x7fffeafc847c:	mov		rdi, qword ptr [rsp + 0x18]
0x7fffeafc8481:	call		0x7fffeafc4990
0x7fffeafc8486:	cmp		eax, 0
0x7fffeafc8489:	je		0x7fffeafc849d
0x7fffeafc848f:	mov		qword ptr [rsp + 0x30], 0
0x7fffeafc8498:	jmp		0x7fffeafc8600
0x7fffeafc849d:	mov		rax, qword ptr [rsp + 0x20]
0x7fffeafc84a2:	mov		rcx, qword ptr [rsp + 0x18]
0x7fffeafc84a7:	mov		rcx, qword ptr [rcx + 0x20]
0x7fffeafc84ab:	mov		rdx, qword ptr [rsp + 0x18]
0x7fffeafc84b0:	mov		rdx, qword ptr [rdx + 0x28]
0x7fffeafc84b4:	sub		rcx, rdx
0x7fffeafc84b7:	cmp		rax, rcx
0x7fffeafc84ba:	jbe		0x7fffeafc84e4
0x7fffeafc84c0:	mov		rax, qword ptr [rsp + 0x18]
0x7fffeafc84c5:	mov		rax, qword ptr [rax + 0x48]
0x7fffeafc84c9:	mov		rdi, qword ptr [rsp + 0x18]
0x7fffeafc84ce:	mov		rsi, qword ptr [rsp + 0x28]
0x7fffeafc84d3:	mov		rdx, qword ptr [rsp + 0x20]
0x7fffeafc84d8:	call		rax
0x7fffeafc84da:	mov		qword ptr [rsp + 0x30], rax
0x7fffeafc84df:	jmp		0x7fffeafc8600
0x7fffeafc84e4:	mov		rax, qword ptr [rsp + 0x18]
0x7fffeafc84e9:	movsx		ecx, byte ptr [rax + 0x8b]
0x7fffeafc84f0:	cmp		ecx, 0
0x7fffeafc84f3:	jl		0x7fffeafc85c7
0x7fffeafc84f9:	mov		rax, qword ptr [rsp + 0x20]
0x7fffeafc84fe:	mov		qword ptr [rsp + 0x10], rax
0x7fffeafc8503:	xor		eax, eax
0x7fffeafc8505:	cmp		qword ptr [rsp + 0x10], 0
0x7fffeafc850b:	mov		byte ptr [rsp + 0xf], al
0x7fffeafc850f:	je		0x7fffeafc8536
0x7fffeafc8515:	mov		rax, qword ptr [rsp + 0x28]
0x7fffeafc851a:	mov		rcx, qword ptr [rsp + 0x10]
0x7fffeafc851f:	sub		rcx, 1
0x7fffeafc8526:	movzx		edx, byte ptr [rax + rcx]
0x7fffeafc852a:	cmp		edx, 0xa
0x7fffeafc852d:	setne		sil
0x7fffeafc8531:	mov		byte ptr [rsp + 0xf], sil
0x7fffeafc8536:	mov		al, byte ptr [rsp + 0xf]
0x7fffeafc853a:	test		al, 1
0x7fffeafc853c:	jne		0x7fffeafc8547
0x7fffeafc8542:	jmp		0x7fffeafc8561
0x7fffeafc8547:	jmp		0x7fffeafc854c
0x7fffeafc854c:	mov		rax, qword ptr [rsp + 0x10]
0x7fffeafc8551:	add		rax, -1
0x7fffeafc8557:	mov		qword ptr [rsp + 0x10], rax
0x7fffeafc855c:	jmp		0x7fffeafc8503
0x7fffeafc8561:	cmp		qword ptr [rsp + 0x10], 0
0x7fffeafc8567:	je		0x7fffeafc85c2
0x7fffeafc856d:	mov		rax, qword ptr [rsp + 0x18]
0x7fffeafc8572:	mov		rax, qword ptr [rax + 0x48]
0x7fffeafc8576:	mov		rdi, qword ptr [rsp + 0x18]
0x7fffeafc857b:	mov		rsi, qword ptr [rsp + 0x28]
0x7fffeafc8580:	mov		rdx, qword ptr [rsp + 0x10]
0x7fffeafc8585:	call		rax
0x7fffeafc8587:	cmp		rax, qword ptr [rsp + 0x10]
0x7fffeafc858c:	jae		0x7fffeafc85a1
0x7fffeafc8592:	mov		rax, qword ptr [rsp + 0x10]
0x7fffeafc8597:	mov		qword ptr [rsp + 0x30], rax
0x7fffeafc859c:	jmp		0x7fffeafc8600
0x7fffeafc85a1:	mov		rax, qword ptr [rsp + 0x10]
0x7fffeafc85a6:	add		rax, qword ptr [rsp + 0x28]
0x7fffeafc85ab:	mov		qword ptr [rsp + 0x28], rax
0x7fffeafc85b0:	mov		rax, qword ptr [rsp + 0x10]
0x7fffeafc85b5:	mov		rcx, qword ptr [rsp + 0x20]
0x7fffeafc85ba:	sub		rcx, rax
0x7fffeafc85bd:	mov		qword ptr [rsp + 0x20], rcx
0x7fffeafc85c2:	jmp		0x7fffeafc85c7
0x7fffeafc85c7:	mov		rax, qword ptr [rsp + 0x18]
0x7fffeafc85cc:	mov		rdi, qword ptr [rax + 0x28]
0x7fffeafc85d0:	mov		rsi, qword ptr [rsp + 0x28]
0x7fffeafc85d5:	mov		rdx, qword ptr [rsp + 0x20]
0x7fffeafc85da:	call		0x7fffeafd2590
0x7fffeafc85df:	mov		rcx, qword ptr [rsp + 0x20]
0x7fffeafc85e4:	mov		rdx, qword ptr [rsp + 0x18]
0x7fffeafc85e9:	add		rcx, qword ptr [rdx + 0x28]
0x7fffeafc85ed:	mov		qword ptr [rdx + 0x28], rcx
0x7fffeafc85f1:	mov		rcx, qword ptr [rsp + 0x20]
0x7fffeafc85f6:	add		rcx, qword ptr [rsp + 0x10]
0x7fffeafc85fb:	mov		qword ptr [rsp + 0x30], rcx
0x7fffeafc8600:	mov		rax, qword ptr [rsp + 0x30]
0x7fffeafc8605:	add		rsp, 0x38
0x7fffeafc8609:	ret		
0x7fffeafc860a:	nop		word ptr [rax + rax]
disassembling symbol '.LBB0_3':
textAddr: 0x7fffeafc849d, textSize: 71
0x7fffeafc849d:	mov		rax, qword ptr [rsp + 0x20]
0x7fffeafc84a2:	mov		rcx, qword ptr [rsp + 0x18]
0x7fffeafc84a7:	mov		rcx, qword ptr [rcx + 0x20]
0x7fffeafc84ab:	mov		rdx, qword ptr [rsp + 0x18]
0x7fffeafc84b0:	mov		rdx, qword ptr [rdx + 0x28]
0x7fffeafc84b4:	sub		rcx, rdx
0x7fffeafc84b7:	cmp		rax, rcx
0x7fffeafc84ba:	jbe		0x7fffeafc84e4
0x7fffeafc84c0:	mov		rax, qword ptr [rsp + 0x18]
0x7fffeafc84c5:	mov		rax, qword ptr [rax + 0x48]
0x7fffeafc84c9:	mov		rdi, qword ptr [rsp + 0x18]
0x7fffeafc84ce:	mov		rsi, qword ptr [rsp + 0x28]
0x7fffeafc84d3:	mov		rdx, qword ptr [rsp + 0x20]
0x7fffeafc84d8:	call		rax
0x7fffeafc84da:	mov		qword ptr [rsp + 0x30], rax
0x7fffeafc84df:	jmp		0x7fffeafc8600
disassembling symbol '.LBB0_5':
textAddr: 0x7fffeafc84e4, textSize: 31
0x7fffeafc84e4:	mov		rax, qword ptr [rsp + 0x18]
0x7fffeafc84e9:	movsx		ecx, byte ptr [rax + 0x8b]
0x7fffeafc84f0:	cmp		ecx, 0
0x7fffeafc84f3:	jl		0x7fffeafc85c7
0x7fffeafc84f9:	mov		rax, qword ptr [rsp + 0x20]
0x7fffeafc84fe:	mov		qword ptr [rsp + 0x10], rax
disassembling symbol '.LBB0_7':
textAddr: 0x7fffeafc8503, textSize: 51
0x7fffeafc8503:	xor		eax, eax
0x7fffeafc8505:	cmp		qword ptr [rsp + 0x10], 0
0x7fffeafc850b:	mov		byte ptr [rsp + 0xf], al
0x7fffeafc850f:	je		0x7fffeafc8536
0x7fffeafc8515:	mov		rax, qword ptr [rsp + 0x28]
0x7fffeafc851a:	mov		rcx, qword ptr [rsp + 0x10]
0x7fffeafc851f:	sub		rcx, 1
0x7fffeafc8526:	movzx		edx, byte ptr [rax + rcx]
0x7fffeafc852a:	cmp		edx, 0xa
0x7fffeafc852d:	setne		sil
0x7fffeafc8531:	mov		byte ptr [rsp + 0xf], sil
disassembling symbol '.LBB0_9':
textAddr: 0x7fffeafc8536, textSize: 17
0x7fffeafc8536:	mov		al, byte ptr [rsp + 0xf]
0x7fffeafc853a:	test		al, 1
0x7fffeafc853c:	jne		0x7fffeafc8547
0x7fffeafc8542:	jmp		0x7fffeafc8561
disassembling symbol '.LBB0_10':
textAddr: 0x7fffeafc8547, textSize: 5
0x7fffeafc8547:	jmp		0x7fffeafc854c
disassembling symbol '.LBB0_11':
textAddr: 0x7fffeafc854c, textSize: 21
0x7fffeafc854c:	mov		rax, qword ptr [rsp + 0x10]
0x7fffeafc8551:	add		rax, -1
0x7fffeafc8557:	mov		qword ptr [rsp + 0x10], rax
0x7fffeafc855c:	jmp		0x7fffeafc8503
disassembling symbol '.LBB0_12':
textAddr: 0x7fffeafc8561, textSize: 64
0x7fffeafc8561:	cmp		qword ptr [rsp + 0x10], 0
0x7fffeafc8567:	je		0x7fffeafc85c2
0x7fffeafc856d:	mov		rax, qword ptr [rsp + 0x18]
0x7fffeafc8572:	mov		rax, qword ptr [rax + 0x48]
0x7fffeafc8576:	mov		rdi, qword ptr [rsp + 0x18]
0x7fffeafc857b:	mov		rsi, qword ptr [rsp + 0x28]
0x7fffeafc8580:	mov		rdx, qword ptr [rsp + 0x10]
0x7fffeafc8585:	call		rax
0x7fffeafc8587:	cmp		rax, qword ptr [rsp + 0x10]
0x7fffeafc858c:	jae		0x7fffeafc85a1
0x7fffeafc8592:	mov		rax, qword ptr [rsp + 0x10]
0x7fffeafc8597:	mov		qword ptr [rsp + 0x30], rax
0x7fffeafc859c:	jmp		0x7fffeafc8600
disassembling symbol '.LBB0_15':
textAddr: 0x7fffeafc85a1, textSize: 33
0x7fffeafc85a1:	mov		rax, qword ptr [rsp + 0x10]
0x7fffeafc85a6:	add		rax, qword ptr [rsp + 0x28]
0x7fffeafc85ab:	mov		qword ptr [rsp + 0x28], rax
0x7fffeafc85b0:	mov		rax, qword ptr [rsp + 0x10]
0x7fffeafc85b5:	mov		rcx, qword ptr [rsp + 0x20]
0x7fffeafc85ba:	sub		rcx, rax
0x7fffeafc85bd:	mov		qword ptr [rsp + 0x20], rcx
disassembling symbol '.LBB0_16':
textAddr: 0x7fffeafc85c2, textSize: 5
0x7fffeafc85c2:	jmp		0x7fffeafc85c7
disassembling symbol '.LBB0_17':
textAddr: 0x7fffeafc85c7, textSize: 57
0x7fffeafc85c7:	mov		rax, qword ptr [rsp + 0x18]
0x7fffeafc85cc:	mov		rdi, qword ptr [rax + 0x28]
0x7fffeafc85d0:	mov		rsi, qword ptr [rsp + 0x28]
0x7fffeafc85d5:	mov		rdx, qword ptr [rsp + 0x20]
0x7fffeafc85da:	call		0x7fffeafd2590
0x7fffeafc85df:	mov		rcx, qword ptr [rsp + 0x20]
0x7fffeafc85e4:	mov		rdx, qword ptr [rsp + 0x18]
0x7fffeafc85e9:	add		rcx, qword ptr [rdx + 0x28]
0x7fffeafc85ed:	mov		qword ptr [rdx + 0x28], rcx
0x7fffeafc85f1:	mov		rcx, qword ptr [rsp + 0x20]
0x7fffeafc85f6:	add		rcx, qword ptr [rsp + 0x10]
0x7fffeafc85fb:	mov		qword ptr [rsp + 0x30], rcx
disassembling symbol '.LBB0_18':
textAddr: 0x7fffeafc8600, textSize: 16
0x7fffeafc8600:	mov		rax, qword ptr [rsp + 0x30]
0x7fffeafc8605:	add		rsp, 0x38
0x7fffeafc8609:	ret		
0x7fffeafc860a:	nop		word ptr [rax + rax]
disassembling symbol 'fwrite_unlocked':
textAddr: 0x7fffeafc8610, textSize: 212
0x7fffeafc8610:	sub		rsp, 0x48
0x7fffeafc8614:	mov		qword ptr [rsp + 0x40], rdi
0x7fffeafc8619:	mov		qword ptr [rsp + 0x38], rsi
0x7fffeafc861e:	mov		qword ptr [rsp + 0x30], rdx
0x7fffeafc8623:	mov		qword ptr [rsp + 0x28], rcx
0x7fffeafc8628:	mov		rax, qword ptr [rsp + 0x38]
0x7fffeafc862d:	imul		rax, qword ptr [rsp + 0x30]
0x7fffeafc8633:	mov		qword ptr [rsp + 0x18], rax
0x7fffeafc8638:	mov		rax, qword ptr [rsp + 0x28]
0x7fffeafc863d:	cmp		dword ptr [rax + 0x8c], 0
0x7fffeafc8644:	jl		0x7fffeafc865d
0x7fffeafc864a:	mov		rdi, qword ptr [rsp + 0x28]
0x7fffeafc864f:	call		0x7fffeafc4280
0x7fffeafc8654:	mov		dword ptr [rsp + 0x10], eax
0x7fffeafc8658:	jmp		0x7fffeafc8668
0x7fffeafc865d:	xor		eax, eax
0x7fffeafc865f:	mov		dword ptr [rsp + 0x10], eax
0x7fffeafc8663:	jmp		0x7fffeafc8668
0x7fffeafc8668:	mov		eax, dword ptr [rsp + 0x10]
0x7fffeafc866c:	mov		dword ptr [rsp + 0x14], eax
0x7fffeafc8670:	mov		rdi, qword ptr [rsp + 0x40]
0x7fffeafc8675:	mov		rsi, qword ptr [rsp + 0x18]
0x7fffeafc867a:	mov		rdx, qword ptr [rsp + 0x28]
0x7fffeafc867f:	call		0x7fffeafc8450
0x7fffeafc8684:	mov		qword ptr [rsp + 0x20], rax
0x7fffeafc8689:	cmp		dword ptr [rsp + 0x14], 0
0x7fffeafc868e:	je		0x7fffeafc86a3
0x7fffeafc8694:	mov		rdi, qword ptr [rsp + 0x28]
0x7fffeafc8699:	call		0x7fffeafc4290
0x7fffeafc869e:	jmp		0x7fffeafc86a8
0x7fffeafc86a3:	jmp		0x7fffeafc86a8
0x7fffeafc86a8:	mov		rax, qword ptr [rsp + 0x20]
0x7fffeafc86ad:	cmp		rax, qword ptr [rsp + 0x18]
0x7fffeafc86b2:	jne		0x7fffeafc86c7
0x7fffeafc86b8:	mov		rax, qword ptr [rsp + 0x30]
0x7fffeafc86bd:	mov		qword ptr [rsp + 8], rax
0x7fffeafc86c2:	jmp		0x7fffeafc86da
0x7fffeafc86c7:	mov		rax, qword ptr [rsp + 0x20]
0x7fffeafc86cc:	xor		ecx, ecx
0x7fffeafc86ce:	mov		edx, ecx
0x7fffeafc86d0:	div		qword ptr [rsp + 0x38]
0x7fffeafc86d5:	mov		qword ptr [rsp + 8], rax
0x7fffeafc86da:	mov		rax, qword ptr [rsp + 8]
0x7fffeafc86df:	add		rsp, 0x48
0x7fffeafc86e3:	ret		
disassembling symbol '.LBB1_2':
textAddr: 0x7fffeafc865d, textSize: 11
0x7fffeafc865d:	xor		eax, eax
0x7fffeafc865f:	mov		dword ptr [rsp + 0x10], eax
0x7fffeafc8663:	jmp		0x7fffeafc8668
disassembling symbol '.LBB1_3':
textAddr: 0x7fffeafc8668, textSize: 59
0x7fffeafc8668:	mov		eax, dword ptr [rsp + 0x10]
0x7fffeafc866c:	mov		dword ptr [rsp + 0x14], eax
0x7fffeafc8670:	mov		rdi, qword ptr [rsp + 0x40]
0x7fffeafc8675:	mov		rsi, qword ptr [rsp + 0x18]
0x7fffeafc867a:	mov		rdx, qword ptr [rsp + 0x28]
0x7fffeafc867f:	call		0x7fffeafc8450
0x7fffeafc8684:	mov		qword ptr [rsp + 0x20], rax
0x7fffeafc8689:	cmp		dword ptr [rsp + 0x14], 0
0x7fffeafc868e:	je		0x7fffeafc86a3
0x7fffeafc8694:	mov		rdi, qword ptr [rsp + 0x28]
0x7fffeafc8699:	call		0x7fffeafc4290
0x7fffeafc869e:	jmp		0x7fffeafc86a8
disassembling symbol '.LBB1_5':
textAddr: 0x7fffeafc86a3, textSize: 5
0x7fffeafc86a3:	jmp		0x7fffeafc86a8
disassembling symbol '.LBB1_6':
textAddr: 0x7fffeafc86a8, textSize: 31
0x7fffeafc86a8:	mov		rax, qword ptr [rsp + 0x20]
0x7fffeafc86ad:	cmp		rax, qword ptr [rsp + 0x18]
0x7fffeafc86b2:	jne		0x7fffeafc86c7
0x7fffeafc86b8:	mov		rax, qword ptr [rsp + 0x30]
0x7fffeafc86bd:	mov		qword ptr [rsp + 8], rax
0x7fffeafc86c2:	jmp		0x7fffeafc86da
disassembling symbol '.LBB1_8':
textAddr: 0x7fffeafc86c7, textSize: 19
0x7fffeafc86c7:	mov		rax, qword ptr [rsp + 0x20]
0x7fffeafc86cc:	xor		ecx, ecx
0x7fffeafc86ce:	mov		edx, ecx
0x7fffeafc86d0:	div		qword ptr [rsp + 0x38]
0x7fffeafc86d5:	mov		qword ptr [rsp + 8], rax
disassembling symbol '.LBB1_9':
textAddr: 0x7fffeafc86da, textSize: 22
0x7fffeafc86da:	mov		rax, qword ptr [rsp + 8]
0x7fffeafc86df:	add		rsp, 0x48
0x7fffeafc86e3:	ret		
0x7fffeafc86e4:	add		byte ptr [rax], al
0x7fffeafc86e6:	add		byte ptr [rax], al
0x7fffeafc86e8:	add		byte ptr [rax], al
0x7fffeafc86ea:	add		byte ptr [rax], al
0x7fffeafc86ec:	add		byte ptr [rax], al
0x7fffeafc86ee:	add		byte ptr [rax], al
disassembling symbol 'morecore':
textAddr: 0x7fffeafc86f0, textSize: 48
0x7fffeafc86f0:	push		rbp
0x7fffeafc86f1:	mov		rbp, rsp
0x7fffeafc86f4:	sub		rsp, 0x10
0x7fffeafc86f8:	lea		rdi, [rip + 0x2c237ef]
0x7fffeafc86ff:	mov		al, 0
0x7fffeafc8701:	call		0x7fffeafd3ff0
0x7fffeafc8706:	xor		ecx, ecx
0x7fffeafc8708:	mov		edx, ecx
0x7fffeafc870a:	mov		dword ptr [rbp - 4], eax
0x7fffeafc870d:	mov		rax, rdx
0x7fffeafc8710:	add		rsp, 0x10
0x7fffeafc8714:	pop		rbp
0x7fffeafc8715:	ret		
0x7fffeafc8716:	nop		word ptr cs:[rax + rax]
disassembling symbol 'create_mspace':
textAddr: 0x7fffeafc8720, textSize: 336
0x7fffeafc8720:	push		rbp
0x7fffeafc8721:	mov		rbp, rsp
0x7fffeafc8724:	sub		rsp, 0x50
0x7fffeafc8728:	mov		qword ptr [rbp - 8], rdi
0x7fffeafc872c:	mov		dword ptr [rbp - 0xc], esi
0x7fffeafc872f:	mov		qword ptr [rbp - 0x18], 0
0x7fffeafc8737:	cmp		qword ptr [rip + 0x2c226e9], 0
0x7fffeafc873f:	mov		al, 1
0x7fffeafc8741:	mov		byte ptr [rbp - 0x39], al
0x7fffeafc8744:	jne		0x7fffeafc8758
0x7fffeafc874a:	call		0x7fffeafc8870
0x7fffeafc874f:	cmp		eax, 0
0x7fffeafc8752:	setne		cl
0x7fffeafc8755:	mov		byte ptr [rbp - 0x39], cl
0x7fffeafc8758:	mov		al, byte ptr [rbp - 0x39]
0x7fffeafc875b:	xor		ecx, ecx
0x7fffeafc875d:	mov		edx, ecx
0x7fffeafc875f:	mov		qword ptr [rbp - 0x20], 0x3b0
0x7fffeafc8767:	mov		rsi, qword ptr [rbp - 8]
0x7fffeafc876b:	mov		rdi, qword ptr [rbp - 0x20]
0x7fffeafc876f:	add		rdi, 0x50
0x7fffeafc8776:	add		rdi, qword ptr [rip + 0x2c226b3]
0x7fffeafc877d:	sub		rdx, rdi
0x7fffeafc8780:	cmp		rsi, rdx
0x7fffeafc8783:	jae		0x7fffeafc885e
0x7fffeafc8789:	cmp		qword ptr [rbp - 8], 0
0x7fffeafc878e:	jne		0x7fffeafc87a4
0x7fffeafc8794:	mov		rax, qword ptr [rip + 0x2c2269d]
0x7fffeafc879b:	mov		qword ptr [rbp - 0x48], rax
0x7fffeafc879f:	jmp		0x7fffeafc87b6
0x7fffeafc87a4:	mov		rax, qword ptr [rbp - 8]
0x7fffeafc87a8:	add		rax, 0x50
0x7fffeafc87ae:	add		rax, qword ptr [rbp - 0x20]
0x7fffeafc87b2:	mov		qword ptr [rbp - 0x48], rax
0x7fffeafc87b6:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafc87ba:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafc87be:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafc87c2:	mov		rcx, qword ptr [rip + 0x2c2266f]
0x7fffeafc87c9:	sub		rcx, 1
0x7fffeafc87d0:	add		rax, rcx
0x7fffeafc87d3:	mov		rcx, qword ptr [rip + 0x2c2265e]
0x7fffeafc87da:	sub		rcx, 1
0x7fffeafc87e1:	xor		rcx, 0xffffffffffffffff
0x7fffeafc87e8:	and		rax, rcx
0x7fffeafc87eb:	mov		qword ptr [rbp - 0x30], rax
0x7fffeafc87ef:	mov		rax, -1
0x7fffeafc87f6:	mov		qword ptr [rbp - 0x38], rax
0x7fffeafc87fa:	cmp		qword ptr [rbp - 0x38], rax
0x7fffeafc87fe:	je		0x7fffeafc8859
0x7fffeafc8804:	mov		rdi, qword ptr [rbp - 0x38]
0x7fffeafc8808:	mov		rsi, qword ptr [rbp - 0x30]
0x7fffeafc880c:	call		0x7fffeafc8950
0x7fffeafc8811:	mov		qword ptr [rbp - 0x18], rax
0x7fffeafc8815:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc8819:	mov		dword ptr [rax + 0x390], 0
0x7fffeafc8823:	cmp		dword ptr [rbp - 0xc], 0
0x7fffeafc8827:	je		0x7fffeafc883f
0x7fffeafc882d:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc8831:	mov		ecx, dword ptr [rax + 0x370]
0x7fffeafc8837:	mov		dword ptr [rbp - 0x4c], ecx
0x7fffeafc883a:	jmp		0x7fffeafc884c
0x7fffeafc883f:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc8843:	mov		ecx, dword ptr [rax + 0x370]
0x7fffeafc8849:	mov		dword ptr [rbp - 0x4c], ecx
0x7fffeafc884c:	mov		eax, dword ptr [rbp - 0x4c]
0x7fffeafc884f:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafc8853:	mov		dword ptr [rcx + 0x370], eax
0x7fffeafc8859:	jmp		0x7fffeafc885e
0x7fffeafc885e:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc8862:	add		rsp, 0x50
0x7fffeafc8866:	pop		rbp
0x7fffeafc8867:	ret		
0x7fffeafc8868:	nop		dword ptr [rax + rax]
disassembling symbol '.LBB1_2':
textAddr: 0x7fffeafc8758, textSize: 76
0x7fffeafc8758:	mov		al, byte ptr [rbp - 0x39]
0x7fffeafc875b:	xor		ecx, ecx
0x7fffeafc875d:	mov		edx, ecx
0x7fffeafc875f:	mov		qword ptr [rbp - 0x20], 0x3b0
0x7fffeafc8767:	mov		rsi, qword ptr [rbp - 8]
0x7fffeafc876b:	mov		rdi, qword ptr [rbp - 0x20]
0x7fffeafc876f:	add		rdi, 0x50
0x7fffeafc8776:	add		rdi, qword ptr [rip + 0x2c226b3]
0x7fffeafc877d:	sub		rdx, rdi
0x7fffeafc8780:	cmp		rsi, rdx
0x7fffeafc8783:	jae		0x7fffeafc885e
0x7fffeafc8789:	cmp		qword ptr [rbp - 8], 0
0x7fffeafc878e:	jne		0x7fffeafc87a4
0x7fffeafc8794:	mov		rax, qword ptr [rip + 0x2c2269d]
0x7fffeafc879b:	mov		qword ptr [rbp - 0x48], rax
0x7fffeafc879f:	jmp		0x7fffeafc87b6
disassembling symbol '.LBB1_5':
textAddr: 0x7fffeafc87a4, textSize: 18
0x7fffeafc87a4:	mov		rax, qword ptr [rbp - 8]
0x7fffeafc87a8:	add		rax, 0x50
0x7fffeafc87ae:	add		rax, qword ptr [rbp - 0x20]
0x7fffeafc87b2:	mov		qword ptr [rbp - 0x48], rax
disassembling symbol '.LBB1_6':
textAddr: 0x7fffeafc87b6, textSize: 137
0x7fffeafc87b6:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafc87ba:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafc87be:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafc87c2:	mov		rcx, qword ptr [rip + 0x2c2266f]
0x7fffeafc87c9:	sub		rcx, 1
0x7fffeafc87d0:	add		rax, rcx
0x7fffeafc87d3:	mov		rcx, qword ptr [rip + 0x2c2265e]
0x7fffeafc87da:	sub		rcx, 1
0x7fffeafc87e1:	xor		rcx, 0xffffffffffffffff
0x7fffeafc87e8:	and		rax, rcx
0x7fffeafc87eb:	mov		qword ptr [rbp - 0x30], rax
0x7fffeafc87ef:	mov		rax, -1
0x7fffeafc87f6:	mov		qword ptr [rbp - 0x38], rax
0x7fffeafc87fa:	cmp		qword ptr [rbp - 0x38], rax
0x7fffeafc87fe:	je		0x7fffeafc8859
0x7fffeafc8804:	mov		rdi, qword ptr [rbp - 0x38]
0x7fffeafc8808:	mov		rsi, qword ptr [rbp - 0x30]
0x7fffeafc880c:	call		0x7fffeafc8950
0x7fffeafc8811:	mov		qword ptr [rbp - 0x18], rax
0x7fffeafc8815:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc8819:	mov		dword ptr [rax + 0x390], 0
0x7fffeafc8823:	cmp		dword ptr [rbp - 0xc], 0
0x7fffeafc8827:	je		0x7fffeafc883f
0x7fffeafc882d:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc8831:	mov		ecx, dword ptr [rax + 0x370]
0x7fffeafc8837:	mov		dword ptr [rbp - 0x4c], ecx
0x7fffeafc883a:	jmp		0x7fffeafc884c
disassembling symbol '.LBB1_9':
textAddr: 0x7fffeafc883f, textSize: 13
0x7fffeafc883f:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc8843:	mov		ecx, dword ptr [rax + 0x370]
0x7fffeafc8849:	mov		dword ptr [rbp - 0x4c], ecx
disassembling symbol '.LBB1_10':
textAddr: 0x7fffeafc884c, textSize: 13
0x7fffeafc884c:	mov		eax, dword ptr [rbp - 0x4c]
0x7fffeafc884f:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafc8853:	mov		dword ptr [rcx + 0x370], eax
disassembling symbol '.LBB1_11':
textAddr: 0x7fffeafc8859, textSize: 5
0x7fffeafc8859:	jmp		0x7fffeafc885e
disassembling symbol '.LBB1_12':
textAddr: 0x7fffeafc885e, textSize: 18
0x7fffeafc885e:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc8862:	add		rsp, 0x50
0x7fffeafc8866:	pop		rbp
0x7fffeafc8867:	ret		
0x7fffeafc8868:	nop		dword ptr [rax + rax]
disassembling symbol 'init_mparams':
textAddr: 0x7fffeafc8870, textSize: 224
0x7fffeafc8870:	push		rbp
0x7fffeafc8871:	mov		rbp, rsp
0x7fffeafc8874:	sub		rsp, 0x20
0x7fffeafc8878:	cmp		qword ptr [rip + 0x2c225a8], 0
0x7fffeafc8880:	jne		0x7fffeafc8944
0x7fffeafc8886:	mov		edi, 0x1e
0x7fffeafc888b:	call		0x7fffeafd46f0
0x7fffeafc8890:	mov		qword ptr [rbp - 0x10], rax
0x7fffeafc8894:	mov		qword ptr [rbp - 0x18], 0x10000
0x7fffeafc889c:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc88a0:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafc88a4:	sub		rcx, 1
0x7fffeafc88ab:	and		rax, rcx
0x7fffeafc88ae:	cmp		rax, 0
0x7fffeafc88b2:	jne		0x7fffeafc88d4
0x7fffeafc88b8:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafc88bc:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafc88c0:	sub		rcx, 1
0x7fffeafc88c7:	and		rax, rcx
0x7fffeafc88ca:	cmp		rax, 0
0x7fffeafc88ce:	je		0x7fffeafc88d9
0x7fffeafc88d4:	call		0x7fffeafc4c10
0x7fffeafc88d9:	lea		rax, [rbp - 8]
0x7fffeafc88dd:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafc88e1:	mov		qword ptr [rip + 0x2c22550], rcx
0x7fffeafc88e8:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafc88ec:	mov		qword ptr [rip + 0x2c2253d], rcx
0x7fffeafc88f3:	mov		qword ptr [rip + 0x2c22542], -1
0x7fffeafc88fe:	mov		qword ptr [rip + 0x2c2253f], 0x200000
0x7fffeafc8909:	mov		dword ptr [rip + 0x2c2253d], 4
0x7fffeafc8913:	xor		rax, 0x55555555
0x7fffeafc8919:	mov		qword ptr [rbp - 8], rax
0x7fffeafc891d:	mov		rax, qword ptr [rbp - 8]
0x7fffeafc8921:	or		rax, 8
0x7fffeafc8927:	mov		qword ptr [rbp - 8], rax
0x7fffeafc892b:	mov		rax, qword ptr [rbp - 8]
0x7fffeafc892f:	and		rax, 0xfffffffffffffff8
0x7fffeafc8935:	mov		qword ptr [rbp - 8], rax
0x7fffeafc8939:	mov		rax, qword ptr [rbp - 8]
0x7fffeafc893d:	mov		qword ptr [rip + 0x2c224e4], rax
0x7fffeafc8944:	mov		eax, 1
0x7fffeafc8949:	add		rsp, 0x20
0x7fffeafc894d:	pop		rbp
0x7fffeafc894e:	ret		
0x7fffeafc894f:	nop		
disassembling symbol '.LBB2_3':
textAddr: 0x7fffeafc88d4, textSize: 5
0x7fffeafc88d4:	call		0x7fffeafc4c10
disassembling symbol '.LBB2_4':
textAddr: 0x7fffeafc88d9, textSize: 107
0x7fffeafc88d9:	lea		rax, [rbp - 8]
0x7fffeafc88dd:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafc88e1:	mov		qword ptr [rip + 0x2c22550], rcx
0x7fffeafc88e8:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafc88ec:	mov		qword ptr [rip + 0x2c2253d], rcx
0x7fffeafc88f3:	mov		qword ptr [rip + 0x2c22542], -1
0x7fffeafc88fe:	mov		qword ptr [rip + 0x2c2253f], 0x200000
0x7fffeafc8909:	mov		dword ptr [rip + 0x2c2253d], 4
0x7fffeafc8913:	xor		rax, 0x55555555
0x7fffeafc8919:	mov		qword ptr [rbp - 8], rax
0x7fffeafc891d:	mov		rax, qword ptr [rbp - 8]
0x7fffeafc8921:	or		rax, 8
0x7fffeafc8927:	mov		qword ptr [rbp - 8], rax
0x7fffeafc892b:	mov		rax, qword ptr [rbp - 8]
0x7fffeafc892f:	and		rax, 0xfffffffffffffff8
0x7fffeafc8935:	mov		qword ptr [rbp - 8], rax
0x7fffeafc8939:	mov		rax, qword ptr [rbp - 8]
0x7fffeafc893d:	mov		qword ptr [rip + 0x2c224e4], rax
disassembling symbol '.LBB2_5':
textAddr: 0x7fffeafc8944, textSize: 12
0x7fffeafc8944:	mov		eax, 1
0x7fffeafc8949:	add		rsp, 0x20
0x7fffeafc894d:	pop		rbp
0x7fffeafc894e:	ret		
0x7fffeafc894f:	nop		
disassembling symbol 'init_user_mstate':
textAddr: 0x7fffeafc8950, textSize: 416
0x7fffeafc8950:	push		rbp
0x7fffeafc8951:	mov		rbp, rsp
0x7fffeafc8954:	sub		rsp, 0x40
0x7fffeafc8958:	mov		qword ptr [rbp - 8], rdi
0x7fffeafc895c:	mov		qword ptr [rbp - 0x10], rsi
0x7fffeafc8960:	mov		qword ptr [rbp - 0x18], 0x3b0
0x7fffeafc8968:	mov		rax, qword ptr [rbp - 8]
0x7fffeafc896c:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafc8970:	add		rcx, 0x10
0x7fffeafc8977:	and		rcx, 0xf
0x7fffeafc897e:	cmp		rcx, 0
0x7fffeafc8982:	mov		qword ptr [rbp - 0x38], rax
0x7fffeafc8986:	jne		0x7fffeafc8999
0x7fffeafc898c:	xor		eax, eax
0x7fffeafc898e:	mov		ecx, eax
0x7fffeafc8990:	mov		qword ptr [rbp - 0x40], rcx
0x7fffeafc8994:	jmp		0x7fffeafc89bc
0x7fffeafc8999:	mov		rax, qword ptr [rbp - 8]
0x7fffeafc899d:	add		rax, 0x10
0x7fffeafc89a3:	and		rax, 0xf
0x7fffeafc89a9:	mov		ecx, 0x10
0x7fffeafc89ae:	sub		rcx, rax
0x7fffeafc89b1:	and		rcx, 0xf
0x7fffeafc89b8:	mov		qword ptr [rbp - 0x40], rcx
0x7fffeafc89bc:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafc89c0:	xor		esi, esi
0x7fffeafc89c2:	mov		rcx, qword ptr [rbp - 0x38]
0x7fffeafc89c6:	add		rcx, rax
0x7fffeafc89c9:	mov		qword ptr [rbp - 0x28], rcx
0x7fffeafc89cd:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafc89d1:	add		rax, 0x10
0x7fffeafc89d7:	mov		qword ptr [rbp - 0x30], rax
0x7fffeafc89db:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafc89df:	mov		rdx, qword ptr [rbp - 0x18]
0x7fffeafc89e3:	mov		rdi, rax
0x7fffeafc89e6:	call		0x7fffeafd2a10
0x7fffeafc89eb:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc89ef:	or		rax, 3
0x7fffeafc89f5:	mov		rcx, qword ptr [rbp - 0x28]
0x7fffeafc89f9:	mov		qword ptr [rcx + 8], rax
0x7fffeafc89fd:	mov		rax, qword ptr [rbp - 8]
0x7fffeafc8a01:	mov		rcx, qword ptr [rbp - 0x30]
0x7fffeafc8a05:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafc8a09:	mov		rcx, qword ptr [rbp - 0x30]
0x7fffeafc8a0d:	mov		qword ptr [rcx + 0x378], rax
0x7fffeafc8a14:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafc8a18:	mov		rcx, qword ptr [rbp - 0x30]
0x7fffeafc8a1c:	mov		qword ptr [rcx + 0x360], rax
0x7fffeafc8a23:	mov		rcx, qword ptr [rbp - 0x30]
0x7fffeafc8a27:	mov		qword ptr [rcx + 0x358], rax
0x7fffeafc8a2e:	mov		rcx, qword ptr [rbp - 0x30]
0x7fffeafc8a32:	mov		qword ptr [rcx + 0x380], rax
0x7fffeafc8a39:	mov		rax, qword ptr [rip + 0x2c223e8]
0x7fffeafc8a40:	mov		rcx, qword ptr [rbp - 0x30]
0x7fffeafc8a44:	mov		qword ptr [rcx + 0x40], rax
0x7fffeafc8a48:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafc8a4c:	mov		qword ptr [rax + 0x38], -1
0x7fffeafc8a54:	mov		esi, dword ptr [rip + 0x2c223f6]
0x7fffeafc8a5a:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafc8a5e:	mov		dword ptr [rax + 0x370], esi
0x7fffeafc8a64:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafc8a68:	mov		qword ptr [rax + 0x398], 0
0x7fffeafc8a73:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafc8a77:	mov		qword ptr [rax + 0x3a0], 0
0x7fffeafc8a82:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafc8a86:	mov		esi, dword ptr [rax + 0x370]
0x7fffeafc8a8c:	or		esi, 4
0x7fffeafc8a8f:	mov		dword ptr [rax + 0x370], esi
0x7fffeafc8a95:	mov		rdi, qword ptr [rbp - 0x30]
0x7fffeafc8a99:	call		0x7fffeafcf690
0x7fffeafc8a9e:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafc8aa2:	add		rax, -0x10
0x7fffeafc8aa8:	mov		rcx, qword ptr [rbp - 0x30]
0x7fffeafc8aac:	mov		rcx, qword ptr [rcx - 8]
0x7fffeafc8ab0:	and		rcx, 0xfffffffffffffff8
0x7fffeafc8ab7:	add		rax, rcx
0x7fffeafc8aba:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafc8abe:	mov		rdi, qword ptr [rbp - 0x30]
0x7fffeafc8ac2:	mov		rsi, qword ptr [rbp - 0x20]
0x7fffeafc8ac6:	mov		rax, qword ptr [rbp - 8]
0x7fffeafc8aca:	add		rax, qword ptr [rbp - 0x10]
0x7fffeafc8ace:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafc8ad2:	sub		rax, rcx
0x7fffeafc8ad5:	sub		rax, 0x50
0x7fffeafc8adb:	mov		rdx, rax
0x7fffeafc8ade:	call		0x7fffeafcf6f0
0x7fffeafc8ae3:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafc8ae7:	add		rsp, 0x40
0x7fffeafc8aeb:	pop		rbp
0x7fffeafc8aec:	ret		
0x7fffeafc8aed:	nop		dword ptr [rax]
disassembling symbol '.LBB3_2':
textAddr: 0x7fffeafc8999, textSize: 35
0x7fffeafc8999:	mov		rax, qword ptr [rbp - 8]
0x7fffeafc899d:	add		rax, 0x10
0x7fffeafc89a3:	and		rax, 0xf
0x7fffeafc89a9:	mov		ecx, 0x10
0x7fffeafc89ae:	sub		rcx, rax
0x7fffeafc89b1:	and		rcx, 0xf
0x7fffeafc89b8:	mov		qword ptr [rbp - 0x40], rcx
disassembling symbol '.LBB3_3':
textAddr: 0x7fffeafc89bc, textSize: 308
0x7fffeafc89bc:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafc89c0:	xor		esi, esi
0x7fffeafc89c2:	mov		rcx, qword ptr [rbp - 0x38]
0x7fffeafc89c6:	add		rcx, rax
0x7fffeafc89c9:	mov		qword ptr [rbp - 0x28], rcx
0x7fffeafc89cd:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafc89d1:	add		rax, 0x10
0x7fffeafc89d7:	mov		qword ptr [rbp - 0x30], rax
0x7fffeafc89db:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafc89df:	mov		rdx, qword ptr [rbp - 0x18]
0x7fffeafc89e3:	mov		rdi, rax
0x7fffeafc89e6:	call		0x7fffeafd2a10
0x7fffeafc89eb:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc89ef:	or		rax, 3
0x7fffeafc89f5:	mov		rcx, qword ptr [rbp - 0x28]
0x7fffeafc89f9:	mov		qword ptr [rcx + 8], rax
0x7fffeafc89fd:	mov		rax, qword ptr [rbp - 8]
0x7fffeafc8a01:	mov		rcx, qword ptr [rbp - 0x30]
0x7fffeafc8a05:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafc8a09:	mov		rcx, qword ptr [rbp - 0x30]
0x7fffeafc8a0d:	mov		qword ptr [rcx + 0x378], rax
0x7fffeafc8a14:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafc8a18:	mov		rcx, qword ptr [rbp - 0x30]
0x7fffeafc8a1c:	mov		qword ptr [rcx + 0x360], rax
0x7fffeafc8a23:	mov		rcx, qword ptr [rbp - 0x30]
0x7fffeafc8a27:	mov		qword ptr [rcx + 0x358], rax
0x7fffeafc8a2e:	mov		rcx, qword ptr [rbp - 0x30]
0x7fffeafc8a32:	mov		qword ptr [rcx + 0x380], rax
0x7fffeafc8a39:	mov		rax, qword ptr [rip + 0x2c223e8]
0x7fffeafc8a40:	mov		rcx, qword ptr [rbp - 0x30]
0x7fffeafc8a44:	mov		qword ptr [rcx + 0x40], rax
0x7fffeafc8a48:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafc8a4c:	mov		qword ptr [rax + 0x38], -1
0x7fffeafc8a54:	mov		esi, dword ptr [rip + 0x2c223f6]
0x7fffeafc8a5a:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafc8a5e:	mov		dword ptr [rax + 0x370], esi
0x7fffeafc8a64:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafc8a68:	mov		qword ptr [rax + 0x398], 0
0x7fffeafc8a73:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafc8a77:	mov		qword ptr [rax + 0x3a0], 0
0x7fffeafc8a82:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafc8a86:	mov		esi, dword ptr [rax + 0x370]
0x7fffeafc8a8c:	or		esi, 4
0x7fffeafc8a8f:	mov		dword ptr [rax + 0x370], esi
0x7fffeafc8a95:	mov		rdi, qword ptr [rbp - 0x30]
0x7fffeafc8a99:	call		0x7fffeafcf690
0x7fffeafc8a9e:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafc8aa2:	add		rax, -0x10
0x7fffeafc8aa8:	mov		rcx, qword ptr [rbp - 0x30]
0x7fffeafc8aac:	mov		rcx, qword ptr [rcx - 8]
0x7fffeafc8ab0:	and		rcx, 0xfffffffffffffff8
0x7fffeafc8ab7:	add		rax, rcx
0x7fffeafc8aba:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafc8abe:	mov		rdi, qword ptr [rbp - 0x30]
0x7fffeafc8ac2:	mov		rsi, qword ptr [rbp - 0x20]
0x7fffeafc8ac6:	mov		rax, qword ptr [rbp - 8]
0x7fffeafc8aca:	add		rax, qword ptr [rbp - 0x10]
0x7fffeafc8ace:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafc8ad2:	sub		rax, rcx
0x7fffeafc8ad5:	sub		rax, 0x50
0x7fffeafc8adb:	mov		rdx, rax
0x7fffeafc8ade:	call		0x7fffeafcf6f0
0x7fffeafc8ae3:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafc8ae7:	add		rsp, 0x40
0x7fffeafc8aeb:	pop		rbp
0x7fffeafc8aec:	ret		
0x7fffeafc8aed:	nop		dword ptr [rax]
disassembling symbol 'create_mspace_with_base':
textAddr: 0x7fffeafc8af0, textSize: 240
0x7fffeafc8af0:	push		rbp
0x7fffeafc8af1:	mov		rbp, rsp
0x7fffeafc8af4:	sub		rsp, 0x30
0x7fffeafc8af8:	mov		qword ptr [rbp - 8], rdi
0x7fffeafc8afc:	mov		qword ptr [rbp - 0x10], rsi
0x7fffeafc8b00:	mov		dword ptr [rbp - 0x14], edx
0x7fffeafc8b03:	mov		qword ptr [rbp - 0x20], 0
0x7fffeafc8b0b:	cmp		qword ptr [rip + 0x2c22315], 0
0x7fffeafc8b13:	mov		al, 1
0x7fffeafc8b15:	mov		byte ptr [rbp - 0x29], al
0x7fffeafc8b18:	jne		0x7fffeafc8b2c
0x7fffeafc8b1e:	call		0x7fffeafc8870
0x7fffeafc8b23:	cmp		eax, 0
0x7fffeafc8b26:	setne		cl
0x7fffeafc8b29:	mov		byte ptr [rbp - 0x29], cl
0x7fffeafc8b2c:	mov		al, byte ptr [rbp - 0x29]
0x7fffeafc8b2f:	mov		qword ptr [rbp - 0x28], 0x3b0
0x7fffeafc8b37:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafc8b3b:	mov		rdx, qword ptr [rbp - 0x28]
0x7fffeafc8b3f:	add		rdx, 0x50
0x7fffeafc8b46:	cmp		rcx, rdx
0x7fffeafc8b49:	jbe		0x7fffeafc8bca
0x7fffeafc8b4f:	xor		eax, eax
0x7fffeafc8b51:	mov		ecx, eax
0x7fffeafc8b53:	mov		rdx, qword ptr [rbp - 0x10]
0x7fffeafc8b57:	mov		rsi, qword ptr [rbp - 0x28]
0x7fffeafc8b5b:	add		rsi, 0x50
0x7fffeafc8b62:	add		rsi, qword ptr [rip + 0x2c222c7]
0x7fffeafc8b69:	sub		rcx, rsi
0x7fffeafc8b6c:	cmp		rdx, rcx
0x7fffeafc8b6f:	jae		0x7fffeafc8bca
0x7fffeafc8b75:	mov		rdi, qword ptr [rbp - 8]
0x7fffeafc8b79:	mov		rsi, qword ptr [rbp - 0x10]
0x7fffeafc8b7d:	call		0x7fffeafc8950
0x7fffeafc8b82:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafc8b86:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc8b8a:	mov		dword ptr [rax + 0x390], 8
0x7fffeafc8b94:	cmp		dword ptr [rbp - 0x14], 0
0x7fffeafc8b98:	je		0x7fffeafc8bb0
0x7fffeafc8b9e:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc8ba2:	mov		ecx, dword ptr [rax + 0x370]
0x7fffeafc8ba8:	mov		dword ptr [rbp - 0x30], ecx
0x7fffeafc8bab:	jmp		0x7fffeafc8bbd
0x7fffeafc8bb0:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc8bb4:	mov		ecx, dword ptr [rax + 0x370]
0x7fffeafc8bba:	mov		dword ptr [rbp - 0x30], ecx
0x7fffeafc8bbd:	mov		eax, dword ptr [rbp - 0x30]
0x7fffeafc8bc0:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafc8bc4:	mov		dword ptr [rcx + 0x370], eax
0x7fffeafc8bca:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc8bce:	add		rsp, 0x30
0x7fffeafc8bd2:	pop		rbp
0x7fffeafc8bd3:	ret		
0x7fffeafc8bd4:	nop		word ptr cs:[rax + rax]
0x7fffeafc8bde:	nop		
disassembling symbol '.LBB4_2':
textAddr: 0x7fffeafc8b2c, textSize: 132
0x7fffeafc8b2c:	mov		al, byte ptr [rbp - 0x29]
0x7fffeafc8b2f:	mov		qword ptr [rbp - 0x28], 0x3b0
0x7fffeafc8b37:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafc8b3b:	mov		rdx, qword ptr [rbp - 0x28]
0x7fffeafc8b3f:	add		rdx, 0x50
0x7fffeafc8b46:	cmp		rcx, rdx
0x7fffeafc8b49:	jbe		0x7fffeafc8bca
0x7fffeafc8b4f:	xor		eax, eax
0x7fffeafc8b51:	mov		ecx, eax
0x7fffeafc8b53:	mov		rdx, qword ptr [rbp - 0x10]
0x7fffeafc8b57:	mov		rsi, qword ptr [rbp - 0x28]
0x7fffeafc8b5b:	add		rsi, 0x50
0x7fffeafc8b62:	add		rsi, qword ptr [rip + 0x2c222c7]
0x7fffeafc8b69:	sub		rcx, rsi
0x7fffeafc8b6c:	cmp		rdx, rcx
0x7fffeafc8b6f:	jae		0x7fffeafc8bca
0x7fffeafc8b75:	mov		rdi, qword ptr [rbp - 8]
0x7fffeafc8b79:	mov		rsi, qword ptr [rbp - 0x10]
0x7fffeafc8b7d:	call		0x7fffeafc8950
0x7fffeafc8b82:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafc8b86:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc8b8a:	mov		dword ptr [rax + 0x390], 8
0x7fffeafc8b94:	cmp		dword ptr [rbp - 0x14], 0
0x7fffeafc8b98:	je		0x7fffeafc8bb0
0x7fffeafc8b9e:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc8ba2:	mov		ecx, dword ptr [rax + 0x370]
0x7fffeafc8ba8:	mov		dword ptr [rbp - 0x30], ecx
0x7fffeafc8bab:	jmp		0x7fffeafc8bbd
disassembling symbol '.LBB4_6':
textAddr: 0x7fffeafc8bb0, textSize: 13
0x7fffeafc8bb0:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc8bb4:	mov		ecx, dword ptr [rax + 0x370]
0x7fffeafc8bba:	mov		dword ptr [rbp - 0x30], ecx
disassembling symbol '.LBB4_7':
textAddr: 0x7fffeafc8bbd, textSize: 13
0x7fffeafc8bbd:	mov		eax, dword ptr [rbp - 0x30]
0x7fffeafc8bc0:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafc8bc4:	mov		dword ptr [rcx + 0x370], eax
disassembling symbol '.LBB4_8':
textAddr: 0x7fffeafc8bca, textSize: 22
0x7fffeafc8bca:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc8bce:	add		rsp, 0x30
0x7fffeafc8bd2:	pop		rbp
0x7fffeafc8bd3:	ret		
0x7fffeafc8bd4:	nop		word ptr cs:[rax + rax]
0x7fffeafc8bde:	nop		
disassembling symbol 'mspace_track_large_chunks':
textAddr: 0x7fffeafc8be0, textSize: 112
0x7fffeafc8be0:	push		rbp
0x7fffeafc8be1:	mov		rbp, rsp
0x7fffeafc8be4:	mov		qword ptr [rbp - 8], rdi
0x7fffeafc8be8:	mov		dword ptr [rbp - 0xc], esi
0x7fffeafc8beb:	mov		dword ptr [rbp - 0x10], 0
0x7fffeafc8bf2:	mov		rax, qword ptr [rbp - 8]
0x7fffeafc8bf6:	mov		qword ptr [rbp - 0x18], rax
0x7fffeafc8bfa:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc8bfe:	mov		ecx, dword ptr [rax + 0x370]
0x7fffeafc8c04:	mov		eax, ecx
0x7fffeafc8c06:	and		rax, 0
0x7fffeafc8c0c:	cmp		rax, 0
0x7fffeafc8c10:	jne		0x7fffeafc8c1d
0x7fffeafc8c16:	mov		dword ptr [rbp - 0x10], 1
0x7fffeafc8c1d:	cmp		dword ptr [rbp - 0xc], 0
0x7fffeafc8c21:	jne		0x7fffeafc8c3e
0x7fffeafc8c27:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc8c2b:	mov		ecx, dword ptr [rax + 0x370]
0x7fffeafc8c31:	mov		edx, ecx
0x7fffeafc8c33:	mov		dword ptr [rax + 0x370], edx
0x7fffeafc8c39:	jmp		0x7fffeafc8c43
0x7fffeafc8c3e:	jmp		0x7fffeafc8c43
0x7fffeafc8c43:	mov		eax, dword ptr [rbp - 0x10]
0x7fffeafc8c46:	pop		rbp
0x7fffeafc8c47:	ret		
0x7fffeafc8c48:	nop		dword ptr [rax + rax]
disassembling symbol '.LBB5_2':
textAddr: 0x7fffeafc8c1d, textSize: 33
0x7fffeafc8c1d:	cmp		dword ptr [rbp - 0xc], 0
0x7fffeafc8c21:	jne		0x7fffeafc8c3e
0x7fffeafc8c27:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc8c2b:	mov		ecx, dword ptr [rax + 0x370]
0x7fffeafc8c31:	mov		edx, ecx
0x7fffeafc8c33:	mov		dword ptr [rax + 0x370], edx
0x7fffeafc8c39:	jmp		0x7fffeafc8c43
disassembling symbol '.LBB5_4':
textAddr: 0x7fffeafc8c3e, textSize: 5
0x7fffeafc8c3e:	jmp		0x7fffeafc8c43
disassembling symbol '.LBB5_5':
textAddr: 0x7fffeafc8c43, textSize: 13
0x7fffeafc8c43:	mov		eax, dword ptr [rbp - 0x10]
0x7fffeafc8c46:	pop		rbp
0x7fffeafc8c47:	ret		
0x7fffeafc8c48:	nop		dword ptr [rax + rax]
disassembling symbol 'destroy_mspace':
textAddr: 0x7fffeafc8c50, textSize: 176
0x7fffeafc8c50:	push		rbp
0x7fffeafc8c51:	mov		rbp, rsp
0x7fffeafc8c54:	mov		qword ptr [rbp - 8], rdi
0x7fffeafc8c58:	mov		qword ptr [rbp - 0x10], 0
0x7fffeafc8c60:	mov		rax, qword ptr [rbp - 8]
0x7fffeafc8c64:	mov		qword ptr [rbp - 0x18], rax
0x7fffeafc8c68:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc8c6c:	add		rax, 0x378
0x7fffeafc8c72:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafc8c76:	cmp		qword ptr [rbp - 0x20], 0
0x7fffeafc8c7b:	je		0x7fffeafc8cf2
0x7fffeafc8c81:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc8c85:	mov		rax, qword ptr [rax]
0x7fffeafc8c88:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafc8c8c:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc8c90:	mov		rax, qword ptr [rax + 8]
0x7fffeafc8c94:	mov		qword ptr [rbp - 0x30], rax
0x7fffeafc8c98:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc8c9c:	mov		ecx, dword ptr [rax + 0x18]
0x7fffeafc8c9f:	mov		dword ptr [rbp - 0x34], ecx
0x7fffeafc8ca2:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc8ca6:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafc8caa:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafc8cae:	mov		ecx, dword ptr [rbp - 0x34]
0x7fffeafc8cb1:	mov		eax, ecx
0x7fffeafc8cb3:	and		rax, 0
0x7fffeafc8cb9:	cmp		rax, 0
0x7fffeafc8cbd:	je		0x7fffeafc8ced
0x7fffeafc8cc3:	mov		eax, dword ptr [rbp - 0x34]
0x7fffeafc8cc6:	and		eax, 8
0x7fffeafc8cc9:	cmp		eax, 0
0x7fffeafc8ccc:	jne		0x7fffeafc8ced
0x7fffeafc8cd2:	xor		eax, eax
0x7fffeafc8cd4:	test		al, 1
0x7fffeafc8cd6:	jne		0x7fffeafc8ce1
0x7fffeafc8cdc:	jmp		0x7fffeafc8ced
0x7fffeafc8ce1:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafc8ce5:	add		rax, qword ptr [rbp - 0x10]
0x7fffeafc8ce9:	mov		qword ptr [rbp - 0x10], rax
0x7fffeafc8ced:	jmp		0x7fffeafc8c76
0x7fffeafc8cf2:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafc8cf6:	pop		rbp
0x7fffeafc8cf7:	ret		
0x7fffeafc8cf8:	nop		dword ptr [rax + rax]
disassembling symbol '.LBB6_1':
textAddr: 0x7fffeafc8c76, textSize: 107
0x7fffeafc8c76:	cmp		qword ptr [rbp - 0x20], 0
0x7fffeafc8c7b:	je		0x7fffeafc8cf2
0x7fffeafc8c81:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc8c85:	mov		rax, qword ptr [rax]
0x7fffeafc8c88:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafc8c8c:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc8c90:	mov		rax, qword ptr [rax + 8]
0x7fffeafc8c94:	mov		qword ptr [rbp - 0x30], rax
0x7fffeafc8c98:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc8c9c:	mov		ecx, dword ptr [rax + 0x18]
0x7fffeafc8c9f:	mov		dword ptr [rbp - 0x34], ecx
0x7fffeafc8ca2:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc8ca6:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafc8caa:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafc8cae:	mov		ecx, dword ptr [rbp - 0x34]
0x7fffeafc8cb1:	mov		eax, ecx
0x7fffeafc8cb3:	and		rax, 0
0x7fffeafc8cb9:	cmp		rax, 0
0x7fffeafc8cbd:	je		0x7fffeafc8ced
0x7fffeafc8cc3:	mov		eax, dword ptr [rbp - 0x34]
0x7fffeafc8cc6:	and		eax, 8
0x7fffeafc8cc9:	cmp		eax, 0
0x7fffeafc8ccc:	jne		0x7fffeafc8ced
0x7fffeafc8cd2:	xor		eax, eax
0x7fffeafc8cd4:	test		al, 1
0x7fffeafc8cd6:	jne		0x7fffeafc8ce1
0x7fffeafc8cdc:	jmp		0x7fffeafc8ced
disassembling symbol '.LBB6_5':
textAddr: 0x7fffeafc8ce1, textSize: 12
0x7fffeafc8ce1:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafc8ce5:	add		rax, qword ptr [rbp - 0x10]
0x7fffeafc8ce9:	mov		qword ptr [rbp - 0x10], rax
disassembling symbol '.LBB6_6':
textAddr: 0x7fffeafc8ced, textSize: 5
0x7fffeafc8ced:	jmp		0x7fffeafc8c76
disassembling symbol '.LBB6_7':
textAddr: 0x7fffeafc8cf2, textSize: 14
0x7fffeafc8cf2:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafc8cf6:	pop		rbp
0x7fffeafc8cf7:	ret		
0x7fffeafc8cf8:	nop		dword ptr [rax + rax]
disassembling symbol 'mspace_malloc':
textAddr: 0x7fffeafc8d00, textSize: 1984
0x7fffeafc8d00:	push		rbp
0x7fffeafc8d01:	mov		rbp, rsp
0x7fffeafc8d04:	sub		rsp, 0x100
0x7fffeafc8d0b:	mov		qword ptr [rbp - 8], rdi
0x7fffeafc8d0f:	mov		qword ptr [rbp - 0x10], rsi
0x7fffeafc8d13:	mov		rax, qword ptr [rbp - 8]
0x7fffeafc8d17:	mov		qword ptr [rbp - 0x18], rax
0x7fffeafc8d1b:	cmp		qword ptr [rbp - 0x10], 0xe8
0x7fffeafc8d23:	ja		0x7fffeafc9256
0x7fffeafc8d29:	cmp		qword ptr [rbp - 0x10], 0x17
0x7fffeafc8d2e:	jae		0x7fffeafc8d45
0x7fffeafc8d34:	mov		eax, 0x20
0x7fffeafc8d39:	mov		qword ptr [rbp - 0xe8], rax
0x7fffeafc8d40:	jmp		0x7fffeafc8d62
0x7fffeafc8d45:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafc8d49:	add		rax, 8
0x7fffeafc8d4f:	add		rax, 0xf
0x7fffeafc8d55:	and		rax, 0xfffffffffffffff0
0x7fffeafc8d5b:	mov		qword ptr [rbp - 0xe8], rax
0x7fffeafc8d62:	mov		rax, qword ptr [rbp - 0xe8]
0x7fffeafc8d69:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafc8d6d:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafc8d71:	shr		rax, 3
0x7fffeafc8d75:	mov		dword ptr [rbp - 0x2c], eax
0x7fffeafc8d78:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafc8d7c:	mov		eax, dword ptr [rcx]
0x7fffeafc8d7e:	mov		ecx, dword ptr [rbp - 0x2c]
0x7fffeafc8d81:	shr		eax, cl
0x7fffeafc8d83:	mov		dword ptr [rbp - 0x30], eax
0x7fffeafc8d86:	mov		eax, dword ptr [rbp - 0x30]
0x7fffeafc8d89:	and		eax, 3
0x7fffeafc8d8c:	cmp		eax, 0
0x7fffeafc8d8f:	je		0x7fffeafc8ec5
0x7fffeafc8d95:	mov		eax, dword ptr [rbp - 0x30]
0x7fffeafc8d98:	xor		eax, 0xffffffff
0x7fffeafc8d9b:	and		eax, 1
0x7fffeafc8d9e:	add		eax, dword ptr [rbp - 0x2c]
0x7fffeafc8da1:	mov		dword ptr [rbp - 0x2c], eax
0x7fffeafc8da4:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafc8da8:	add		rcx, 0x48
0x7fffeafc8daf:	mov		eax, dword ptr [rbp - 0x2c]
0x7fffeafc8db2:	shl		eax, 1
0x7fffeafc8db5:	mov		eax, eax
0x7fffeafc8db7:	mov		edx, eax
0x7fffeafc8db9:	shl		rdx, 3
0x7fffeafc8dbd:	add		rcx, rdx
0x7fffeafc8dc0:	mov		qword ptr [rbp - 0x38], rcx
0x7fffeafc8dc4:	mov		rcx, qword ptr [rbp - 0x38]
0x7fffeafc8dc8:	mov		rcx, qword ptr [rcx + 0x10]
0x7fffeafc8dcc:	mov		qword ptr [rbp - 0x40], rcx
0x7fffeafc8dd0:	mov		rcx, qword ptr [rbp - 0x40]
0x7fffeafc8dd4:	mov		rcx, qword ptr [rcx + 0x10]
0x7fffeafc8dd8:	mov		qword ptr [rbp - 0x48], rcx
0x7fffeafc8ddc:	mov		rcx, qword ptr [rbp - 0x38]
0x7fffeafc8de0:	cmp		rcx, qword ptr [rbp - 0x48]
0x7fffeafc8de4:	jne		0x7fffeafc8e04
0x7fffeafc8dea:	mov		ecx, dword ptr [rbp - 0x2c]
0x7fffeafc8ded:	mov		eax, 1
0x7fffeafc8df2:	shl		eax, cl
0x7fffeafc8df4:	xor		eax, 0xffffffff
0x7fffeafc8df7:	mov		rdx, qword ptr [rbp - 0x18]
0x7fffeafc8dfb:	and		eax, dword ptr [rdx]
0x7fffeafc8dfd:	mov		dword ptr [rdx], eax
0x7fffeafc8dff:	jmp		0x7fffeafc8e72
0x7fffeafc8e04:	xor		eax, eax
0x7fffeafc8e06:	mov		rcx, qword ptr [rbp - 0x48]
0x7fffeafc8e0a:	mov		rdx, qword ptr [rbp - 0x18]
0x7fffeafc8e0e:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafc8e12:	mov		byte ptr [rbp - 0xe9], al
0x7fffeafc8e18:	jb		0x7fffeafc8e33
0x7fffeafc8e1e:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafc8e22:	mov		rax, qword ptr [rax + 0x18]
0x7fffeafc8e26:	cmp		rax, qword ptr [rbp - 0x40]
0x7fffeafc8e2a:	sete		cl
0x7fffeafc8e2d:	mov		byte ptr [rbp - 0xe9], cl
0x7fffeafc8e33:	mov		al, byte ptr [rbp - 0xe9]
0x7fffeafc8e39:	and		al, 1
0x7fffeafc8e3b:	movzx		ecx, al
0x7fffeafc8e3e:	movsxd		rdx, ecx
0x7fffeafc8e41:	cmp		rdx, 0
0x7fffeafc8e45:	je		0x7fffeafc8e68
0x7fffeafc8e4b:	mov		rax, qword ptr [rbp - 0x38]
0x7fffeafc8e4f:	mov		rcx, qword ptr [rbp - 0x48]
0x7fffeafc8e53:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafc8e57:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafc8e5b:	mov		rcx, qword ptr [rbp - 0x38]
0x7fffeafc8e5f:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafc8e63:	jmp		0x7fffeafc8e6d
0x7fffeafc8e68:	call		0x7fffeafc4c10
0x7fffeafc8e6d:	jmp		0x7fffeafc8e72
0x7fffeafc8e72:	mov		eax, dword ptr [rbp - 0x2c]
0x7fffeafc8e75:	shl		eax, 3
0x7fffeafc8e78:	mov		eax, eax
0x7fffeafc8e7a:	mov		ecx, eax
0x7fffeafc8e7c:	or		rcx, 1
0x7fffeafc8e83:	or		rcx, 2
0x7fffeafc8e8a:	mov		rdx, qword ptr [rbp - 0x40]
0x7fffeafc8e8e:	mov		qword ptr [rdx + 8], rcx
0x7fffeafc8e92:	mov		rcx, qword ptr [rbp - 0x40]
0x7fffeafc8e96:	mov		eax, dword ptr [rbp - 0x2c]
0x7fffeafc8e99:	shl		eax, 3
0x7fffeafc8e9c:	mov		eax, eax
0x7fffeafc8e9e:	mov		edx, eax
0x7fffeafc8ea0:	mov		rsi, qword ptr [rcx + rdx + 8]
0x7fffeafc8ea5:	or		rsi, 1
0x7fffeafc8eac:	mov		qword ptr [rcx + rdx + 8], rsi
0x7fffeafc8eb1:	mov		rcx, qword ptr [rbp - 0x40]
0x7fffeafc8eb5:	add		rcx, 0x10
0x7fffeafc8ebc:	mov		qword ptr [rbp - 0x20], rcx
0x7fffeafc8ec0:	jmp		0x7fffeafc94aa
0x7fffeafc8ec5:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafc8ec9:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafc8ecd:	cmp		rax, qword ptr [rcx + 8]
0x7fffeafc8ed1:	jbe		0x7fffeafc924c
0x7fffeafc8ed7:	cmp		dword ptr [rbp - 0x30], 0
0x7fffeafc8edb:	je		0x7fffeafc9214
0x7fffeafc8ee1:	xor		eax, eax
0x7fffeafc8ee3:	mov		ecx, dword ptr [rbp - 0x30]
0x7fffeafc8ee6:	mov		edx, dword ptr [rbp - 0x2c]
0x7fffeafc8ee9:	mov		dword ptr [rbp - 0xf0], ecx
0x7fffeafc8eef:	mov		ecx, edx
0x7fffeafc8ef1:	mov		edx, dword ptr [rbp - 0xf0]
0x7fffeafc8ef7:	shl		edx, cl
0x7fffeafc8ef9:	mov		ecx, dword ptr [rbp - 0x2c]
0x7fffeafc8efc:	mov		esi, 1
0x7fffeafc8f01:	mov		edi, esi
0x7fffeafc8f03:	shl		edi, cl
0x7fffeafc8f05:	shl		edi, 1
0x7fffeafc8f08:	mov		ecx, dword ptr [rbp - 0x2c]
0x7fffeafc8f0b:	shl		esi, cl
0x7fffeafc8f0d:	shl		esi, 1
0x7fffeafc8f10:	mov		r8d, eax
0x7fffeafc8f13:	sub		r8d, esi
0x7fffeafc8f16:	or		edi, r8d
0x7fffeafc8f19:	and		edx, edi
0x7fffeafc8f1b:	mov		dword ptr [rbp - 0x70], edx
0x7fffeafc8f1e:	mov		edx, dword ptr [rbp - 0x70]
0x7fffeafc8f21:	sub		eax, dword ptr [rbp - 0x70]
0x7fffeafc8f24:	and		edx, eax
0x7fffeafc8f26:	mov		dword ptr [rbp - 0x74], edx
0x7fffeafc8f29:	mov		eax, dword ptr [rbp - 0x74]
0x7fffeafc8f2c:	bsf		eax, eax
0x7fffeafc8f2f:	mov		dword ptr [rbp - 0x78], eax
0x7fffeafc8f32:	mov		eax, dword ptr [rbp - 0x78]
0x7fffeafc8f35:	mov		dword ptr [rbp - 0x6c], eax
0x7fffeafc8f38:	mov		r9, qword ptr [rbp - 0x18]
0x7fffeafc8f3c:	add		r9, 0x48
0x7fffeafc8f43:	mov		eax, dword ptr [rbp - 0x6c]
0x7fffeafc8f46:	shl		eax, 1
0x7fffeafc8f49:	mov		eax, eax
0x7fffeafc8f4b:	mov		r10d, eax
0x7fffeafc8f4e:	shl		r10, 3
0x7fffeafc8f52:	add		r9, r10
0x7fffeafc8f55:	mov		qword ptr [rbp - 0x50], r9
0x7fffeafc8f59:	mov		r9, qword ptr [rbp - 0x50]
0x7fffeafc8f5d:	mov		r9, qword ptr [r9 + 0x10]
0x7fffeafc8f61:	mov		qword ptr [rbp - 0x58], r9
0x7fffeafc8f65:	mov		r9, qword ptr [rbp - 0x58]
0x7fffeafc8f69:	mov		r9, qword ptr [r9 + 0x10]
0x7fffeafc8f6d:	mov		qword ptr [rbp - 0x80], r9
0x7fffeafc8f71:	mov		r9, qword ptr [rbp - 0x50]
0x7fffeafc8f75:	cmp		r9, qword ptr [rbp - 0x80]
0x7fffeafc8f79:	jne		0x7fffeafc8f99
0x7fffeafc8f7f:	mov		ecx, dword ptr [rbp - 0x6c]
0x7fffeafc8f82:	mov		eax, 1
0x7fffeafc8f87:	shl		eax, cl
0x7fffeafc8f89:	xor		eax, 0xffffffff
0x7fffeafc8f8c:	mov		rdx, qword ptr [rbp - 0x18]
0x7fffeafc8f90:	and		eax, dword ptr [rdx]
0x7fffeafc8f92:	mov		dword ptr [rdx], eax
0x7fffeafc8f94:	jmp		0x7fffeafc9007
0x7fffeafc8f99:	xor		eax, eax
0x7fffeafc8f9b:	mov		rcx, qword ptr [rbp - 0x80]
0x7fffeafc8f9f:	mov		rdx, qword ptr [rbp - 0x18]
0x7fffeafc8fa3:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafc8fa7:	mov		byte ptr [rbp - 0xf1], al
0x7fffeafc8fad:	jb		0x7fffeafc8fc8
0x7fffeafc8fb3:	mov		rax, qword ptr [rbp - 0x80]
0x7fffeafc8fb7:	mov		rax, qword ptr [rax + 0x18]
0x7fffeafc8fbb:	cmp		rax, qword ptr [rbp - 0x58]
0x7fffeafc8fbf:	sete		cl
0x7fffeafc8fc2:	mov		byte ptr [rbp - 0xf1], cl
0x7fffeafc8fc8:	mov		al, byte ptr [rbp - 0xf1]
0x7fffeafc8fce:	and		al, 1
0x7fffeafc8fd0:	movzx		ecx, al
0x7fffeafc8fd3:	movsxd		rdx, ecx
0x7fffeafc8fd6:	cmp		rdx, 0
0x7fffeafc8fda:	je		0x7fffeafc8ffd
0x7fffeafc8fe0:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafc8fe4:	mov		rcx, qword ptr [rbp - 0x80]
0x7fffeafc8fe8:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafc8fec:	mov		rax, qword ptr [rbp - 0x80]
0x7fffeafc8ff0:	mov		rcx, qword ptr [rbp - 0x50]
0x7fffeafc8ff4:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafc8ff8:	jmp		0x7fffeafc9002
0x7fffeafc8ffd:	call		0x7fffeafc4c10
0x7fffeafc9002:	jmp		0x7fffeafc9007
0x7fffeafc9007:	mov		eax, dword ptr [rbp - 0x6c]
0x7fffeafc900a:	shl		eax, 3
0x7fffeafc900d:	mov		eax, eax
0x7fffeafc900f:	mov		ecx, eax
0x7fffeafc9011:	sub		rcx, qword ptr [rbp - 0x28]
0x7fffeafc9015:	mov		qword ptr [rbp - 0x68], rcx
0x7fffeafc9019:	cmp		qword ptr [rbp - 0x68], 0x20
0x7fffeafc901e:	jae		0x7fffeafc9068
0x7fffeafc9024:	mov		eax, dword ptr [rbp - 0x6c]
0x7fffeafc9027:	shl		eax, 3
0x7fffeafc902a:	mov		eax, eax
0x7fffeafc902c:	mov		ecx, eax
0x7fffeafc902e:	or		rcx, 1
0x7fffeafc9035:	or		rcx, 2
0x7fffeafc903c:	mov		rdx, qword ptr [rbp - 0x58]
0x7fffeafc9040:	mov		qword ptr [rdx + 8], rcx
0x7fffeafc9044:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafc9048:	mov		eax, dword ptr [rbp - 0x6c]
0x7fffeafc904b:	shl		eax, 3
0x7fffeafc904e:	mov		eax, eax
0x7fffeafc9050:	mov		edx, eax
0x7fffeafc9052:	mov		rsi, qword ptr [rcx + rdx + 8]
0x7fffeafc9057:	or		rsi, 1
0x7fffeafc905e:	mov		qword ptr [rcx + rdx + 8], rsi
0x7fffeafc9063:	jmp		0x7fffeafc9201
0x7fffeafc9068:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafc906c:	or		rax, 1
0x7fffeafc9072:	or		rax, 2
0x7fffeafc9078:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafc907c:	mov		qword ptr [rcx + 8], rax
0x7fffeafc9080:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafc9084:	add		rax, qword ptr [rbp - 0x28]
0x7fffeafc9088:	mov		qword ptr [rbp - 0x60], rax
0x7fffeafc908c:	mov		rax, qword ptr [rbp - 0x68]
0x7fffeafc9090:	or		rax, 1
0x7fffeafc9096:	mov		rcx, qword ptr [rbp - 0x60]
0x7fffeafc909a:	mov		qword ptr [rcx + 8], rax
0x7fffeafc909e:	mov		rax, qword ptr [rbp - 0x68]
0x7fffeafc90a2:	mov		rcx, qword ptr [rbp - 0x60]
0x7fffeafc90a6:	mov		rdx, qword ptr [rbp - 0x68]
0x7fffeafc90aa:	mov		qword ptr [rcx + rdx], rax
0x7fffeafc90ae:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc90b2:	mov		rax, qword ptr [rax + 8]
0x7fffeafc90b6:	mov		qword ptr [rbp - 0x88], rax
0x7fffeafc90bd:	cmp		qword ptr [rbp - 0x88], 0
0x7fffeafc90c5:	je		0x7fffeafc91e9
0x7fffeafc90cb:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc90cf:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafc90d3:	mov		qword ptr [rbp - 0x90], rax
0x7fffeafc90da:	mov		rax, qword ptr [rbp - 0x88]
0x7fffeafc90e1:	shr		rax, 3
0x7fffeafc90e5:	mov		dword ptr [rbp - 0x94], eax
0x7fffeafc90eb:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafc90ef:	add		rcx, 0x48
0x7fffeafc90f6:	mov		eax, dword ptr [rbp - 0x94]
0x7fffeafc90fc:	shl		eax, 1
0x7fffeafc90ff:	mov		eax, eax
0x7fffeafc9101:	mov		edx, eax
0x7fffeafc9103:	shl		rdx, 3
0x7fffeafc9107:	add		rcx, rdx
0x7fffeafc910a:	mov		qword ptr [rbp - 0xa0], rcx
0x7fffeafc9111:	mov		rcx, qword ptr [rbp - 0xa0]
0x7fffeafc9118:	mov		qword ptr [rbp - 0xa8], rcx
0x7fffeafc911f:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafc9123:	mov		eax, dword ptr [rcx]
0x7fffeafc9125:	mov		ecx, dword ptr [rbp - 0x94]
0x7fffeafc912b:	mov		esi, 1
0x7fffeafc9130:	shl		esi, cl
0x7fffeafc9132:	and		eax, esi
0x7fffeafc9134:	cmp		eax, 0
0x7fffeafc9137:	jne		0x7fffeafc9157
0x7fffeafc913d:	mov		ecx, dword ptr [rbp - 0x94]
0x7fffeafc9143:	mov		eax, 1
0x7fffeafc9148:	shl		eax, cl
0x7fffeafc914a:	mov		rdx, qword ptr [rbp - 0x18]
0x7fffeafc914e:	or		eax, dword ptr [rdx]
0x7fffeafc9150:	mov		dword ptr [rdx], eax
0x7fffeafc9152:	jmp		0x7fffeafc91a1
0x7fffeafc9157:	mov		rax, qword ptr [rbp - 0xa0]
0x7fffeafc915e:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafc9162:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafc9166:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafc916a:	setae		dl
0x7fffeafc916d:	and		dl, 1
0x7fffeafc9170:	movzx		esi, dl
0x7fffeafc9173:	movsxd		rax, esi
0x7fffeafc9176:	cmp		rax, 0
0x7fffeafc917a:	je		0x7fffeafc9197
0x7fffeafc9180:	mov		rax, qword ptr [rbp - 0xa0]
0x7fffeafc9187:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafc918b:	mov		qword ptr [rbp - 0xa8], rax
0x7fffeafc9192:	jmp		0x7fffeafc919c
0x7fffeafc9197:	call		0x7fffeafc4c10
0x7fffeafc919c:	jmp		0x7fffeafc91a1
0x7fffeafc91a1:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafc91a8:	mov		rcx, qword ptr [rbp - 0xa0]
0x7fffeafc91af:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafc91b3:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafc91ba:	mov		rcx, qword ptr [rbp - 0xa8]
0x7fffeafc91c1:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafc91c5:	mov		rax, qword ptr [rbp - 0xa8]
0x7fffeafc91cc:	mov		rcx, qword ptr [rbp - 0x90]
0x7fffeafc91d3:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafc91d7:	mov		rax, qword ptr [rbp - 0xa0]
0x7fffeafc91de:	mov		rcx, qword ptr [rbp - 0x90]
0x7fffeafc91e5:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafc91e9:	mov		rax, qword ptr [rbp - 0x68]
0x7fffeafc91ed:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafc91f1:	mov		qword ptr [rcx + 8], rax
0x7fffeafc91f5:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafc91f9:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafc91fd:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafc9201:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafc9205:	add		rax, 0x10
0x7fffeafc920b:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafc920f:	jmp		0x7fffeafc94aa
0x7fffeafc9214:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc9218:	cmp		dword ptr [rax + 4], 0
0x7fffeafc921c:	je		0x7fffeafc9242
0x7fffeafc9222:	mov		rdi, qword ptr [rbp - 0x18]
0x7fffeafc9226:	mov		rsi, qword ptr [rbp - 0x28]
0x7fffeafc922a:	call		0x7fffeafc94c0
0x7fffeafc922f:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafc9233:	cmp		rax, 0
0x7fffeafc9237:	je		0x7fffeafc9242
0x7fffeafc923d:	jmp		0x7fffeafc94aa
0x7fffeafc9242:	jmp		0x7fffeafc9247
0x7fffeafc9247:	jmp		0x7fffeafc924c
0x7fffeafc924c:	jmp		0x7fffeafc9251
0x7fffeafc9251:	jmp		0x7fffeafc92c0
0x7fffeafc9256:	cmp		qword ptr [rbp - 0x10], -0x80
0x7fffeafc925b:	jb		0x7fffeafc926e
0x7fffeafc9261:	mov		qword ptr [rbp - 0x28], -1
0x7fffeafc9269:	jmp		0x7fffeafc92bb
0x7fffeafc926e:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafc9272:	add		rax, 8
0x7fffeafc9278:	add		rax, 0xf
0x7fffeafc927e:	and		rax, 0xfffffffffffffff0
0x7fffeafc9284:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafc9288:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc928c:	cmp		dword ptr [rax + 4], 0
0x7fffeafc9290:	je		0x7fffeafc92b6
0x7fffeafc9296:	mov		rdi, qword ptr [rbp - 0x18]
0x7fffeafc929a:	mov		rsi, qword ptr [rbp - 0x28]
0x7fffeafc929e:	call		0x7fffeafc9ba0
0x7fffeafc92a3:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafc92a7:	cmp		rax, 0
0x7fffeafc92ab:	je		0x7fffeafc92b6
0x7fffeafc92b1:	jmp		0x7fffeafc94aa
0x7fffeafc92b6:	jmp		0x7fffeafc92bb
0x7fffeafc92bb:	jmp		0x7fffeafc92c0
0x7fffeafc92c0:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafc92c4:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafc92c8:	cmp		rax, qword ptr [rcx + 8]
0x7fffeafc92cc:	ja		0x7fffeafc93f6
0x7fffeafc92d2:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc92d6:	mov		rax, qword ptr [rax + 8]
0x7fffeafc92da:	sub		rax, qword ptr [rbp - 0x28]
0x7fffeafc92de:	mov		qword ptr [rbp - 0xb0], rax
0x7fffeafc92e5:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc92e9:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafc92ed:	mov		qword ptr [rbp - 0xb8], rax
0x7fffeafc92f4:	cmp		qword ptr [rbp - 0xb0], 0x20
0x7fffeafc92fc:	jb		0x7fffeafc937c
0x7fffeafc9302:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafc9309:	add		rax, qword ptr [rbp - 0x28]
0x7fffeafc930d:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafc9311:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafc9315:	mov		qword ptr [rbp - 0xc0], rax
0x7fffeafc931c:	mov		rax, qword ptr [rbp - 0xb0]
0x7fffeafc9323:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafc9327:	mov		qword ptr [rcx + 8], rax
0x7fffeafc932b:	mov		rax, qword ptr [rbp - 0xb0]
0x7fffeafc9332:	or		rax, 1
0x7fffeafc9338:	mov		rcx, qword ptr [rbp - 0xc0]
0x7fffeafc933f:	mov		qword ptr [rcx + 8], rax
0x7fffeafc9343:	mov		rax, qword ptr [rbp - 0xb0]
0x7fffeafc934a:	mov		rcx, qword ptr [rbp - 0xc0]
0x7fffeafc9351:	mov		rdx, qword ptr [rbp - 0xb0]
0x7fffeafc9358:	mov		qword ptr [rcx + rdx], rax
0x7fffeafc935c:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafc9360:	or		rax, 1
0x7fffeafc9366:	or		rax, 2
0x7fffeafc936c:	mov		rcx, qword ptr [rbp - 0xb8]
0x7fffeafc9373:	mov		qword ptr [rcx + 8], rax
0x7fffeafc9377:	jmp		0x7fffeafc93e0
0x7fffeafc937c:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc9380:	mov		rax, qword ptr [rax + 8]
0x7fffeafc9384:	mov		qword ptr [rbp - 0xc8], rax
0x7fffeafc938b:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc938f:	mov		qword ptr [rax + 8], 0
0x7fffeafc9397:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc939b:	mov		qword ptr [rax + 0x20], 0
0x7fffeafc93a3:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafc93aa:	or		rax, 1
0x7fffeafc93b0:	or		rax, 2
0x7fffeafc93b6:	mov		rcx, qword ptr [rbp - 0xb8]
0x7fffeafc93bd:	mov		qword ptr [rcx + 8], rax
0x7fffeafc93c1:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafc93c8:	mov		rcx, qword ptr [rbp - 0xc8]
0x7fffeafc93cf:	mov		rdx, qword ptr [rax + rcx + 8]
0x7fffeafc93d4:	or		rdx, 1
0x7fffeafc93db:	mov		qword ptr [rax + rcx + 8], rdx
0x7fffeafc93e0:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafc93e7:	add		rax, 0x10
0x7fffeafc93ed:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafc93f1:	jmp		0x7fffeafc94aa
0x7fffeafc93f6:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafc93fa:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafc93fe:	cmp		rax, qword ptr [rcx + 0x10]
0x7fffeafc9402:	jae		0x7fffeafc9494
0x7fffeafc9408:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafc940c:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafc9410:	mov		rdx, qword ptr [rcx + 0x10]
0x7fffeafc9414:	sub		rdx, rax
0x7fffeafc9417:	mov		qword ptr [rcx + 0x10], rdx
0x7fffeafc941b:	mov		qword ptr [rbp - 0xd0], rdx
0x7fffeafc9422:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc9426:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafc942a:	mov		qword ptr [rbp - 0xd8], rax
0x7fffeafc9431:	mov		rax, qword ptr [rbp - 0xd8]
0x7fffeafc9438:	add		rax, qword ptr [rbp - 0x28]
0x7fffeafc943c:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafc9440:	mov		qword ptr [rcx + 0x28], rax
0x7fffeafc9444:	mov		qword ptr [rbp - 0xe0], rax
0x7fffeafc944b:	mov		rax, qword ptr [rbp - 0xd0]
0x7fffeafc9452:	or		rax, 1
0x7fffeafc9458:	mov		rcx, qword ptr [rbp - 0xe0]
0x7fffeafc945f:	mov		qword ptr [rcx + 8], rax
0x7fffeafc9463:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafc9467:	or		rax, 1
0x7fffeafc946d:	or		rax, 2
0x7fffeafc9473:	mov		rcx, qword ptr [rbp - 0xd8]
0x7fffeafc947a:	mov		qword ptr [rcx + 8], rax
0x7fffeafc947e:	mov		rax, qword ptr [rbp - 0xd8]
0x7fffeafc9485:	add		rax, 0x10
0x7fffeafc948b:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafc948f:	jmp		0x7fffeafc94aa
0x7fffeafc9494:	jmp		0x7fffeafc9499
0x7fffeafc9499:	mov		rdi, qword ptr [rbp - 0x18]
0x7fffeafc949d:	mov		rsi, qword ptr [rbp - 0x28]
0x7fffeafc94a1:	call		0x7fffeafca8b0
0x7fffeafc94a6:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafc94aa:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc94ae:	add		rsp, 0x100
0x7fffeafc94b5:	pop		rbp
0x7fffeafc94b6:	ret		
0x7fffeafc94b7:	nop		word ptr [rax + rax]
disassembling symbol '.LBB7_3':
textAddr: 0x7fffeafc8d45, textSize: 29
0x7fffeafc8d45:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafc8d49:	add		rax, 8
0x7fffeafc8d4f:	add		rax, 0xf
0x7fffeafc8d55:	and		rax, 0xfffffffffffffff0
0x7fffeafc8d5b:	mov		qword ptr [rbp - 0xe8], rax
disassembling symbol '.LBB7_4':
textAddr: 0x7fffeafc8d62, textSize: 162
0x7fffeafc8d62:	mov		rax, qword ptr [rbp - 0xe8]
0x7fffeafc8d69:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafc8d6d:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafc8d71:	shr		rax, 3
0x7fffeafc8d75:	mov		dword ptr [rbp - 0x2c], eax
0x7fffeafc8d78:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafc8d7c:	mov		eax, dword ptr [rcx]
0x7fffeafc8d7e:	mov		ecx, dword ptr [rbp - 0x2c]
0x7fffeafc8d81:	shr		eax, cl
0x7fffeafc8d83:	mov		dword ptr [rbp - 0x30], eax
0x7fffeafc8d86:	mov		eax, dword ptr [rbp - 0x30]
0x7fffeafc8d89:	and		eax, 3
0x7fffeafc8d8c:	cmp		eax, 0
0x7fffeafc8d8f:	je		0x7fffeafc8ec5
0x7fffeafc8d95:	mov		eax, dword ptr [rbp - 0x30]
0x7fffeafc8d98:	xor		eax, 0xffffffff
0x7fffeafc8d9b:	and		eax, 1
0x7fffeafc8d9e:	add		eax, dword ptr [rbp - 0x2c]
0x7fffeafc8da1:	mov		dword ptr [rbp - 0x2c], eax
0x7fffeafc8da4:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafc8da8:	add		rcx, 0x48
0x7fffeafc8daf:	mov		eax, dword ptr [rbp - 0x2c]
0x7fffeafc8db2:	shl		eax, 1
0x7fffeafc8db5:	mov		eax, eax
0x7fffeafc8db7:	mov		edx, eax
0x7fffeafc8db9:	shl		rdx, 3
0x7fffeafc8dbd:	add		rcx, rdx
0x7fffeafc8dc0:	mov		qword ptr [rbp - 0x38], rcx
0x7fffeafc8dc4:	mov		rcx, qword ptr [rbp - 0x38]
0x7fffeafc8dc8:	mov		rcx, qword ptr [rcx + 0x10]
0x7fffeafc8dcc:	mov		qword ptr [rbp - 0x40], rcx
0x7fffeafc8dd0:	mov		rcx, qword ptr [rbp - 0x40]
0x7fffeafc8dd4:	mov		rcx, qword ptr [rcx + 0x10]
0x7fffeafc8dd8:	mov		qword ptr [rbp - 0x48], rcx
0x7fffeafc8ddc:	mov		rcx, qword ptr [rbp - 0x38]
0x7fffeafc8de0:	cmp		rcx, qword ptr [rbp - 0x48]
0x7fffeafc8de4:	jne		0x7fffeafc8e04
0x7fffeafc8dea:	mov		ecx, dword ptr [rbp - 0x2c]
0x7fffeafc8ded:	mov		eax, 1
0x7fffeafc8df2:	shl		eax, cl
0x7fffeafc8df4:	xor		eax, 0xffffffff
0x7fffeafc8df7:	mov		rdx, qword ptr [rbp - 0x18]
0x7fffeafc8dfb:	and		eax, dword ptr [rdx]
0x7fffeafc8dfd:	mov		dword ptr [rdx], eax
0x7fffeafc8dff:	jmp		0x7fffeafc8e72
disassembling symbol '.LBB7_7':
textAddr: 0x7fffeafc8e04, textSize: 47
0x7fffeafc8e04:	xor		eax, eax
0x7fffeafc8e06:	mov		rcx, qword ptr [rbp - 0x48]
0x7fffeafc8e0a:	mov		rdx, qword ptr [rbp - 0x18]
0x7fffeafc8e0e:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafc8e12:	mov		byte ptr [rbp - 0xe9], al
0x7fffeafc8e18:	jb		0x7fffeafc8e33
0x7fffeafc8e1e:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafc8e22:	mov		rax, qword ptr [rax + 0x18]
0x7fffeafc8e26:	cmp		rax, qword ptr [rbp - 0x40]
0x7fffeafc8e2a:	sete		cl
0x7fffeafc8e2d:	mov		byte ptr [rbp - 0xe9], cl
disassembling symbol '.LBB7_9':
textAddr: 0x7fffeafc8e33, textSize: 53
0x7fffeafc8e33:	mov		al, byte ptr [rbp - 0xe9]
0x7fffeafc8e39:	and		al, 1
0x7fffeafc8e3b:	movzx		ecx, al
0x7fffeafc8e3e:	movsxd		rdx, ecx
0x7fffeafc8e41:	cmp		rdx, 0
0x7fffeafc8e45:	je		0x7fffeafc8e68
0x7fffeafc8e4b:	mov		rax, qword ptr [rbp - 0x38]
0x7fffeafc8e4f:	mov		rcx, qword ptr [rbp - 0x48]
0x7fffeafc8e53:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafc8e57:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafc8e5b:	mov		rcx, qword ptr [rbp - 0x38]
0x7fffeafc8e5f:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafc8e63:	jmp		0x7fffeafc8e6d
disassembling symbol '.LBB7_11':
textAddr: 0x7fffeafc8e68, textSize: 5
0x7fffeafc8e68:	call		0x7fffeafc4c10
disassembling symbol '.LBB7_12':
textAddr: 0x7fffeafc8e6d, textSize: 5
0x7fffeafc8e6d:	jmp		0x7fffeafc8e72
disassembling symbol '.LBB7_13':
textAddr: 0x7fffeafc8e72, textSize: 83
0x7fffeafc8e72:	mov		eax, dword ptr [rbp - 0x2c]
0x7fffeafc8e75:	shl		eax, 3
0x7fffeafc8e78:	mov		eax, eax
0x7fffeafc8e7a:	mov		ecx, eax
0x7fffeafc8e7c:	or		rcx, 1
0x7fffeafc8e83:	or		rcx, 2
0x7fffeafc8e8a:	mov		rdx, qword ptr [rbp - 0x40]
0x7fffeafc8e8e:	mov		qword ptr [rdx + 8], rcx
0x7fffeafc8e92:	mov		rcx, qword ptr [rbp - 0x40]
0x7fffeafc8e96:	mov		eax, dword ptr [rbp - 0x2c]
0x7fffeafc8e99:	shl		eax, 3
0x7fffeafc8e9c:	mov		eax, eax
0x7fffeafc8e9e:	mov		edx, eax
0x7fffeafc8ea0:	mov		rsi, qword ptr [rcx + rdx + 8]
0x7fffeafc8ea5:	or		rsi, 1
0x7fffeafc8eac:	mov		qword ptr [rcx + rdx + 8], rsi
0x7fffeafc8eb1:	mov		rcx, qword ptr [rbp - 0x40]
0x7fffeafc8eb5:	add		rcx, 0x10
0x7fffeafc8ebc:	mov		qword ptr [rbp - 0x20], rcx
0x7fffeafc8ec0:	jmp		0x7fffeafc94aa
disassembling symbol '.LBB7_14':
textAddr: 0x7fffeafc8ec5, textSize: 212
0x7fffeafc8ec5:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafc8ec9:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafc8ecd:	cmp		rax, qword ptr [rcx + 8]
0x7fffeafc8ed1:	jbe		0x7fffeafc924c
0x7fffeafc8ed7:	cmp		dword ptr [rbp - 0x30], 0
0x7fffeafc8edb:	je		0x7fffeafc9214
0x7fffeafc8ee1:	xor		eax, eax
0x7fffeafc8ee3:	mov		ecx, dword ptr [rbp - 0x30]
0x7fffeafc8ee6:	mov		edx, dword ptr [rbp - 0x2c]
0x7fffeafc8ee9:	mov		dword ptr [rbp - 0xf0], ecx
0x7fffeafc8eef:	mov		ecx, edx
0x7fffeafc8ef1:	mov		edx, dword ptr [rbp - 0xf0]
0x7fffeafc8ef7:	shl		edx, cl
0x7fffeafc8ef9:	mov		ecx, dword ptr [rbp - 0x2c]
0x7fffeafc8efc:	mov		esi, 1
0x7fffeafc8f01:	mov		edi, esi
0x7fffeafc8f03:	shl		edi, cl
0x7fffeafc8f05:	shl		edi, 1
0x7fffeafc8f08:	mov		ecx, dword ptr [rbp - 0x2c]
0x7fffeafc8f0b:	shl		esi, cl
0x7fffeafc8f0d:	shl		esi, 1
0x7fffeafc8f10:	mov		r8d, eax
0x7fffeafc8f13:	sub		r8d, esi
0x7fffeafc8f16:	or		edi, r8d
0x7fffeafc8f19:	and		edx, edi
0x7fffeafc8f1b:	mov		dword ptr [rbp - 0x70], edx
0x7fffeafc8f1e:	mov		edx, dword ptr [rbp - 0x70]
0x7fffeafc8f21:	sub		eax, dword ptr [rbp - 0x70]
0x7fffeafc8f24:	and		edx, eax
0x7fffeafc8f26:	mov		dword ptr [rbp - 0x74], edx
0x7fffeafc8f29:	mov		eax, dword ptr [rbp - 0x74]
0x7fffeafc8f2c:	bsf		eax, eax
0x7fffeafc8f2f:	mov		dword ptr [rbp - 0x78], eax
0x7fffeafc8f32:	mov		eax, dword ptr [rbp - 0x78]
0x7fffeafc8f35:	mov		dword ptr [rbp - 0x6c], eax
0x7fffeafc8f38:	mov		r9, qword ptr [rbp - 0x18]
0x7fffeafc8f3c:	add		r9, 0x48
0x7fffeafc8f43:	mov		eax, dword ptr [rbp - 0x6c]
0x7fffeafc8f46:	shl		eax, 1
0x7fffeafc8f49:	mov		eax, eax
0x7fffeafc8f4b:	mov		r10d, eax
0x7fffeafc8f4e:	shl		r10, 3
0x7fffeafc8f52:	add		r9, r10
0x7fffeafc8f55:	mov		qword ptr [rbp - 0x50], r9
0x7fffeafc8f59:	mov		r9, qword ptr [rbp - 0x50]
0x7fffeafc8f5d:	mov		r9, qword ptr [r9 + 0x10]
0x7fffeafc8f61:	mov		qword ptr [rbp - 0x58], r9
0x7fffeafc8f65:	mov		r9, qword ptr [rbp - 0x58]
0x7fffeafc8f69:	mov		r9, qword ptr [r9 + 0x10]
0x7fffeafc8f6d:	mov		qword ptr [rbp - 0x80], r9
0x7fffeafc8f71:	mov		r9, qword ptr [rbp - 0x50]
0x7fffeafc8f75:	cmp		r9, qword ptr [rbp - 0x80]
0x7fffeafc8f79:	jne		0x7fffeafc8f99
0x7fffeafc8f7f:	mov		ecx, dword ptr [rbp - 0x6c]
0x7fffeafc8f82:	mov		eax, 1
0x7fffeafc8f87:	shl		eax, cl
0x7fffeafc8f89:	xor		eax, 0xffffffff
0x7fffeafc8f8c:	mov		rdx, qword ptr [rbp - 0x18]
0x7fffeafc8f90:	and		eax, dword ptr [rdx]
0x7fffeafc8f92:	mov		dword ptr [rdx], eax
0x7fffeafc8f94:	jmp		0x7fffeafc9007
disassembling symbol '.LBB7_18':
textAddr: 0x7fffeafc8f99, textSize: 47
0x7fffeafc8f99:	xor		eax, eax
0x7fffeafc8f9b:	mov		rcx, qword ptr [rbp - 0x80]
0x7fffeafc8f9f:	mov		rdx, qword ptr [rbp - 0x18]
0x7fffeafc8fa3:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafc8fa7:	mov		byte ptr [rbp - 0xf1], al
0x7fffeafc8fad:	jb		0x7fffeafc8fc8
0x7fffeafc8fb3:	mov		rax, qword ptr [rbp - 0x80]
0x7fffeafc8fb7:	mov		rax, qword ptr [rax + 0x18]
0x7fffeafc8fbb:	cmp		rax, qword ptr [rbp - 0x58]
0x7fffeafc8fbf:	sete		cl
0x7fffeafc8fc2:	mov		byte ptr [rbp - 0xf1], cl
disassembling symbol '.LBB7_20':
textAddr: 0x7fffeafc8fc8, textSize: 53
0x7fffeafc8fc8:	mov		al, byte ptr [rbp - 0xf1]
0x7fffeafc8fce:	and		al, 1
0x7fffeafc8fd0:	movzx		ecx, al
0x7fffeafc8fd3:	movsxd		rdx, ecx
0x7fffeafc8fd6:	cmp		rdx, 0
0x7fffeafc8fda:	je		0x7fffeafc8ffd
0x7fffeafc8fe0:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafc8fe4:	mov		rcx, qword ptr [rbp - 0x80]
0x7fffeafc8fe8:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafc8fec:	mov		rax, qword ptr [rbp - 0x80]
0x7fffeafc8ff0:	mov		rcx, qword ptr [rbp - 0x50]
0x7fffeafc8ff4:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafc8ff8:	jmp		0x7fffeafc9002
disassembling symbol '.LBB7_22':
textAddr: 0x7fffeafc8ffd, textSize: 5
0x7fffeafc8ffd:	call		0x7fffeafc4c10
disassembling symbol '.LBB7_23':
textAddr: 0x7fffeafc9002, textSize: 5
0x7fffeafc9002:	jmp		0x7fffeafc9007
disassembling symbol '.LBB7_24':
textAddr: 0x7fffeafc9007, textSize: 97
0x7fffeafc9007:	mov		eax, dword ptr [rbp - 0x6c]
0x7fffeafc900a:	shl		eax, 3
0x7fffeafc900d:	mov		eax, eax
0x7fffeafc900f:	mov		ecx, eax
0x7fffeafc9011:	sub		rcx, qword ptr [rbp - 0x28]
0x7fffeafc9015:	mov		qword ptr [rbp - 0x68], rcx
0x7fffeafc9019:	cmp		qword ptr [rbp - 0x68], 0x20
0x7fffeafc901e:	jae		0x7fffeafc9068
0x7fffeafc9024:	mov		eax, dword ptr [rbp - 0x6c]
0x7fffeafc9027:	shl		eax, 3
0x7fffeafc902a:	mov		eax, eax
0x7fffeafc902c:	mov		ecx, eax
0x7fffeafc902e:	or		rcx, 1
0x7fffeafc9035:	or		rcx, 2
0x7fffeafc903c:	mov		rdx, qword ptr [rbp - 0x58]
0x7fffeafc9040:	mov		qword ptr [rdx + 8], rcx
0x7fffeafc9044:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafc9048:	mov		eax, dword ptr [rbp - 0x6c]
0x7fffeafc904b:	shl		eax, 3
0x7fffeafc904e:	mov		eax, eax
0x7fffeafc9050:	mov		edx, eax
0x7fffeafc9052:	mov		rsi, qword ptr [rcx + rdx + 8]
0x7fffeafc9057:	or		rsi, 1
0x7fffeafc905e:	mov		qword ptr [rcx + rdx + 8], rsi
0x7fffeafc9063:	jmp		0x7fffeafc9201
disassembling symbol '.LBB7_26':
textAddr: 0x7fffeafc9068, textSize: 239
0x7fffeafc9068:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafc906c:	or		rax, 1
0x7fffeafc9072:	or		rax, 2
0x7fffeafc9078:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafc907c:	mov		qword ptr [rcx + 8], rax
0x7fffeafc9080:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafc9084:	add		rax, qword ptr [rbp - 0x28]
0x7fffeafc9088:	mov		qword ptr [rbp - 0x60], rax
0x7fffeafc908c:	mov		rax, qword ptr [rbp - 0x68]
0x7fffeafc9090:	or		rax, 1
0x7fffeafc9096:	mov		rcx, qword ptr [rbp - 0x60]
0x7fffeafc909a:	mov		qword ptr [rcx + 8], rax
0x7fffeafc909e:	mov		rax, qword ptr [rbp - 0x68]
0x7fffeafc90a2:	mov		rcx, qword ptr [rbp - 0x60]
0x7fffeafc90a6:	mov		rdx, qword ptr [rbp - 0x68]
0x7fffeafc90aa:	mov		qword ptr [rcx + rdx], rax
0x7fffeafc90ae:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc90b2:	mov		rax, qword ptr [rax + 8]
0x7fffeafc90b6:	mov		qword ptr [rbp - 0x88], rax
0x7fffeafc90bd:	cmp		qword ptr [rbp - 0x88], 0
0x7fffeafc90c5:	je		0x7fffeafc91e9
0x7fffeafc90cb:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc90cf:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafc90d3:	mov		qword ptr [rbp - 0x90], rax
0x7fffeafc90da:	mov		rax, qword ptr [rbp - 0x88]
0x7fffeafc90e1:	shr		rax, 3
0x7fffeafc90e5:	mov		dword ptr [rbp - 0x94], eax
0x7fffeafc90eb:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafc90ef:	add		rcx, 0x48
0x7fffeafc90f6:	mov		eax, dword ptr [rbp - 0x94]
0x7fffeafc90fc:	shl		eax, 1
0x7fffeafc90ff:	mov		eax, eax
0x7fffeafc9101:	mov		edx, eax
0x7fffeafc9103:	shl		rdx, 3
0x7fffeafc9107:	add		rcx, rdx
0x7fffeafc910a:	mov		qword ptr [rbp - 0xa0], rcx
0x7fffeafc9111:	mov		rcx, qword ptr [rbp - 0xa0]
0x7fffeafc9118:	mov		qword ptr [rbp - 0xa8], rcx
0x7fffeafc911f:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafc9123:	mov		eax, dword ptr [rcx]
0x7fffeafc9125:	mov		ecx, dword ptr [rbp - 0x94]
0x7fffeafc912b:	mov		esi, 1
0x7fffeafc9130:	shl		esi, cl
0x7fffeafc9132:	and		eax, esi
0x7fffeafc9134:	cmp		eax, 0
0x7fffeafc9137:	jne		0x7fffeafc9157
0x7fffeafc913d:	mov		ecx, dword ptr [rbp - 0x94]
0x7fffeafc9143:	mov		eax, 1
0x7fffeafc9148:	shl		eax, cl
0x7fffeafc914a:	mov		rdx, qword ptr [rbp - 0x18]
0x7fffeafc914e:	or		eax, dword ptr [rdx]
0x7fffeafc9150:	mov		dword ptr [rdx], eax
0x7fffeafc9152:	jmp		0x7fffeafc91a1
disassembling symbol '.LBB7_29':
textAddr: 0x7fffeafc9157, textSize: 64
0x7fffeafc9157:	mov		rax, qword ptr [rbp - 0xa0]
0x7fffeafc915e:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafc9162:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafc9166:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafc916a:	setae		dl
0x7fffeafc916d:	and		dl, 1
0x7fffeafc9170:	movzx		esi, dl
0x7fffeafc9173:	movsxd		rax, esi
0x7fffeafc9176:	cmp		rax, 0
0x7fffeafc917a:	je		0x7fffeafc9197
0x7fffeafc9180:	mov		rax, qword ptr [rbp - 0xa0]
0x7fffeafc9187:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafc918b:	mov		qword ptr [rbp - 0xa8], rax
0x7fffeafc9192:	jmp		0x7fffeafc919c
disassembling symbol '.LBB7_31':
textAddr: 0x7fffeafc9197, textSize: 5
0x7fffeafc9197:	call		0x7fffeafc4c10
disassembling symbol '.LBB7_32':
textAddr: 0x7fffeafc919c, textSize: 5
0x7fffeafc919c:	jmp		0x7fffeafc91a1
disassembling symbol '.LBB7_33':
textAddr: 0x7fffeafc91a1, textSize: 72
0x7fffeafc91a1:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafc91a8:	mov		rcx, qword ptr [rbp - 0xa0]
0x7fffeafc91af:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafc91b3:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafc91ba:	mov		rcx, qword ptr [rbp - 0xa8]
0x7fffeafc91c1:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafc91c5:	mov		rax, qword ptr [rbp - 0xa8]
0x7fffeafc91cc:	mov		rcx, qword ptr [rbp - 0x90]
0x7fffeafc91d3:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafc91d7:	mov		rax, qword ptr [rbp - 0xa0]
0x7fffeafc91de:	mov		rcx, qword ptr [rbp - 0x90]
0x7fffeafc91e5:	mov		qword ptr [rcx + 0x18], rax
disassembling symbol '.LBB7_34':
textAddr: 0x7fffeafc91e9, textSize: 24
0x7fffeafc91e9:	mov		rax, qword ptr [rbp - 0x68]
0x7fffeafc91ed:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafc91f1:	mov		qword ptr [rcx + 8], rax
0x7fffeafc91f5:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafc91f9:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafc91fd:	mov		qword ptr [rcx + 0x20], rax
disassembling symbol '.LBB7_35':
textAddr: 0x7fffeafc9201, textSize: 19
0x7fffeafc9201:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafc9205:	add		rax, 0x10
0x7fffeafc920b:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafc920f:	jmp		0x7fffeafc94aa
disassembling symbol '.LBB7_36':
textAddr: 0x7fffeafc9214, textSize: 46
0x7fffeafc9214:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc9218:	cmp		dword ptr [rax + 4], 0
0x7fffeafc921c:	je		0x7fffeafc9242
0x7fffeafc9222:	mov		rdi, qword ptr [rbp - 0x18]
0x7fffeafc9226:	mov		rsi, qword ptr [rbp - 0x28]
0x7fffeafc922a:	call		0x7fffeafc94c0
0x7fffeafc922f:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafc9233:	cmp		rax, 0
0x7fffeafc9237:	je		0x7fffeafc9242
0x7fffeafc923d:	jmp		0x7fffeafc94aa
disassembling symbol '.LBB7_39':
textAddr: 0x7fffeafc9242, textSize: 5
0x7fffeafc9242:	jmp		0x7fffeafc9247
disassembling symbol '.LBB7_40':
textAddr: 0x7fffeafc9247, textSize: 5
0x7fffeafc9247:	jmp		0x7fffeafc924c
disassembling symbol '.LBB7_41':
textAddr: 0x7fffeafc924c, textSize: 5
0x7fffeafc924c:	jmp		0x7fffeafc9251
disassembling symbol '.LBB7_42':
textAddr: 0x7fffeafc9251, textSize: 5
0x7fffeafc9251:	jmp		0x7fffeafc92c0
disassembling symbol '.LBB7_43':
textAddr: 0x7fffeafc9256, textSize: 24
0x7fffeafc9256:	cmp		qword ptr [rbp - 0x10], -0x80
0x7fffeafc925b:	jb		0x7fffeafc926e
0x7fffeafc9261:	mov		qword ptr [rbp - 0x28], -1
0x7fffeafc9269:	jmp		0x7fffeafc92bb
disassembling symbol '.LBB7_45':
textAddr: 0x7fffeafc926e, textSize: 72
0x7fffeafc926e:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafc9272:	add		rax, 8
0x7fffeafc9278:	add		rax, 0xf
0x7fffeafc927e:	and		rax, 0xfffffffffffffff0
0x7fffeafc9284:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafc9288:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc928c:	cmp		dword ptr [rax + 4], 0
0x7fffeafc9290:	je		0x7fffeafc92b6
0x7fffeafc9296:	mov		rdi, qword ptr [rbp - 0x18]
0x7fffeafc929a:	mov		rsi, qword ptr [rbp - 0x28]
0x7fffeafc929e:	call		0x7fffeafc9ba0
0x7fffeafc92a3:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafc92a7:	cmp		rax, 0
0x7fffeafc92ab:	je		0x7fffeafc92b6
0x7fffeafc92b1:	jmp		0x7fffeafc94aa
disassembling symbol '.LBB7_48':
textAddr: 0x7fffeafc92b6, textSize: 5
0x7fffeafc92b6:	jmp		0x7fffeafc92bb
disassembling symbol '.LBB7_49':
textAddr: 0x7fffeafc92bb, textSize: 5
0x7fffeafc92bb:	jmp		0x7fffeafc92c0
disassembling symbol '.LBB7_50':
textAddr: 0x7fffeafc92c0, textSize: 188
0x7fffeafc92c0:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafc92c4:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafc92c8:	cmp		rax, qword ptr [rcx + 8]
0x7fffeafc92cc:	ja		0x7fffeafc93f6
0x7fffeafc92d2:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc92d6:	mov		rax, qword ptr [rax + 8]
0x7fffeafc92da:	sub		rax, qword ptr [rbp - 0x28]
0x7fffeafc92de:	mov		qword ptr [rbp - 0xb0], rax
0x7fffeafc92e5:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc92e9:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafc92ed:	mov		qword ptr [rbp - 0xb8], rax
0x7fffeafc92f4:	cmp		qword ptr [rbp - 0xb0], 0x20
0x7fffeafc92fc:	jb		0x7fffeafc937c
0x7fffeafc9302:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafc9309:	add		rax, qword ptr [rbp - 0x28]
0x7fffeafc930d:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafc9311:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafc9315:	mov		qword ptr [rbp - 0xc0], rax
0x7fffeafc931c:	mov		rax, qword ptr [rbp - 0xb0]
0x7fffeafc9323:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafc9327:	mov		qword ptr [rcx + 8], rax
0x7fffeafc932b:	mov		rax, qword ptr [rbp - 0xb0]
0x7fffeafc9332:	or		rax, 1
0x7fffeafc9338:	mov		rcx, qword ptr [rbp - 0xc0]
0x7fffeafc933f:	mov		qword ptr [rcx + 8], rax
0x7fffeafc9343:	mov		rax, qword ptr [rbp - 0xb0]
0x7fffeafc934a:	mov		rcx, qword ptr [rbp - 0xc0]
0x7fffeafc9351:	mov		rdx, qword ptr [rbp - 0xb0]
0x7fffeafc9358:	mov		qword ptr [rcx + rdx], rax
0x7fffeafc935c:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafc9360:	or		rax, 1
0x7fffeafc9366:	or		rax, 2
0x7fffeafc936c:	mov		rcx, qword ptr [rbp - 0xb8]
0x7fffeafc9373:	mov		qword ptr [rcx + 8], rax
0x7fffeafc9377:	jmp		0x7fffeafc93e0
disassembling symbol '.LBB7_53':
textAddr: 0x7fffeafc937c, textSize: 100
0x7fffeafc937c:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc9380:	mov		rax, qword ptr [rax + 8]
0x7fffeafc9384:	mov		qword ptr [rbp - 0xc8], rax
0x7fffeafc938b:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc938f:	mov		qword ptr [rax + 8], 0
0x7fffeafc9397:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc939b:	mov		qword ptr [rax + 0x20], 0
0x7fffeafc93a3:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafc93aa:	or		rax, 1
0x7fffeafc93b0:	or		rax, 2
0x7fffeafc93b6:	mov		rcx, qword ptr [rbp - 0xb8]
0x7fffeafc93bd:	mov		qword ptr [rcx + 8], rax
0x7fffeafc93c1:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafc93c8:	mov		rcx, qword ptr [rbp - 0xc8]
0x7fffeafc93cf:	mov		rdx, qword ptr [rax + rcx + 8]
0x7fffeafc93d4:	or		rdx, 1
0x7fffeafc93db:	mov		qword ptr [rax + rcx + 8], rdx
disassembling symbol '.LBB7_54':
textAddr: 0x7fffeafc93e0, textSize: 22
0x7fffeafc93e0:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafc93e7:	add		rax, 0x10
0x7fffeafc93ed:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafc93f1:	jmp		0x7fffeafc94aa
disassembling symbol '.LBB7_55':
textAddr: 0x7fffeafc93f6, textSize: 158
0x7fffeafc93f6:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafc93fa:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafc93fe:	cmp		rax, qword ptr [rcx + 0x10]
0x7fffeafc9402:	jae		0x7fffeafc9494
0x7fffeafc9408:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafc940c:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafc9410:	mov		rdx, qword ptr [rcx + 0x10]
0x7fffeafc9414:	sub		rdx, rax
0x7fffeafc9417:	mov		qword ptr [rcx + 0x10], rdx
0x7fffeafc941b:	mov		qword ptr [rbp - 0xd0], rdx
0x7fffeafc9422:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc9426:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafc942a:	mov		qword ptr [rbp - 0xd8], rax
0x7fffeafc9431:	mov		rax, qword ptr [rbp - 0xd8]
0x7fffeafc9438:	add		rax, qword ptr [rbp - 0x28]
0x7fffeafc943c:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafc9440:	mov		qword ptr [rcx + 0x28], rax
0x7fffeafc9444:	mov		qword ptr [rbp - 0xe0], rax
0x7fffeafc944b:	mov		rax, qword ptr [rbp - 0xd0]
0x7fffeafc9452:	or		rax, 1
0x7fffeafc9458:	mov		rcx, qword ptr [rbp - 0xe0]
0x7fffeafc945f:	mov		qword ptr [rcx + 8], rax
0x7fffeafc9463:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafc9467:	or		rax, 1
0x7fffeafc946d:	or		rax, 2
0x7fffeafc9473:	mov		rcx, qword ptr [rbp - 0xd8]
0x7fffeafc947a:	mov		qword ptr [rcx + 8], rax
0x7fffeafc947e:	mov		rax, qword ptr [rbp - 0xd8]
0x7fffeafc9485:	add		rax, 0x10
0x7fffeafc948b:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafc948f:	jmp		0x7fffeafc94aa
disassembling symbol '.LBB7_57':
textAddr: 0x7fffeafc9494, textSize: 5
0x7fffeafc9494:	jmp		0x7fffeafc9499
disassembling symbol '.LBB7_58':
textAddr: 0x7fffeafc9499, textSize: 17
0x7fffeafc9499:	mov		rdi, qword ptr [rbp - 0x18]
0x7fffeafc949d:	mov		rsi, qword ptr [rbp - 0x28]
0x7fffeafc94a1:	call		0x7fffeafca8b0
0x7fffeafc94a6:	mov		qword ptr [rbp - 0x20], rax
disassembling symbol '.LBB7_59':
textAddr: 0x7fffeafc94aa, textSize: 22
0x7fffeafc94aa:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc94ae:	add		rsp, 0x100
0x7fffeafc94b5:	pop		rbp
0x7fffeafc94b6:	ret		
0x7fffeafc94b7:	nop		word ptr [rax + rax]
disassembling symbol 'tmalloc_small':
textAddr: 0x7fffeafc94c0, textSize: 1760
0x7fffeafc94c0:	push		rbp
0x7fffeafc94c1:	mov		rbp, rsp
0x7fffeafc94c4:	sub		rsp, 0xc0
0x7fffeafc94cb:	xor		eax, eax
0x7fffeafc94cd:	mov		qword ptr [rbp - 8], rdi
0x7fffeafc94d1:	mov		qword ptr [rbp - 0x10], rsi
0x7fffeafc94d5:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafc94d9:	mov		edx, dword ptr [rcx + 4]
0x7fffeafc94dc:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafc94e0:	sub		eax, dword ptr [rcx + 4]
0x7fffeafc94e3:	and		edx, eax
0x7fffeafc94e5:	mov		dword ptr [rbp - 0x30], edx
0x7fffeafc94e8:	mov		eax, dword ptr [rbp - 0x30]
0x7fffeafc94eb:	bsf		eax, eax
0x7fffeafc94ee:	mov		dword ptr [rbp - 0x34], eax
0x7fffeafc94f1:	mov		eax, dword ptr [rbp - 0x34]
0x7fffeafc94f4:	mov		dword ptr [rbp - 0x2c], eax
0x7fffeafc94f7:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafc94fb:	mov		eax, dword ptr [rbp - 0x2c]
0x7fffeafc94fe:	mov		esi, eax
0x7fffeafc9500:	mov		rcx, qword ptr [rcx + rsi*8 + 0x258]
0x7fffeafc9508:	mov		qword ptr [rbp - 0x18], rcx
0x7fffeafc950c:	mov		qword ptr [rbp - 0x20], rcx
0x7fffeafc9510:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafc9514:	mov		rcx, qword ptr [rcx + 8]
0x7fffeafc9518:	and		rcx, 0xfffffffffffffff8
0x7fffeafc951f:	sub		rcx, qword ptr [rbp - 0x10]
0x7fffeafc9523:	mov		qword ptr [rbp - 0x28], rcx
0x7fffeafc9527:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc952b:	cmp		qword ptr [rax + 0x20], 0
0x7fffeafc9530:	je		0x7fffeafc954a
0x7fffeafc9536:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc953a:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafc953e:	mov		qword ptr [rbp - 0xb8], rax
0x7fffeafc9545:	jmp		0x7fffeafc9559
0x7fffeafc954a:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc954e:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafc9552:	mov		qword ptr [rbp - 0xb8], rax
0x7fffeafc9559:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafc9560:	mov		qword ptr [rbp - 0x18], rax
0x7fffeafc9564:	cmp		rax, 0
0x7fffeafc9568:	je		0x7fffeafc95a7
0x7fffeafc956e:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc9572:	mov		rax, qword ptr [rax + 8]
0x7fffeafc9576:	and		rax, 0xfffffffffffffff8
0x7fffeafc957c:	sub		rax, qword ptr [rbp - 0x10]
0x7fffeafc9580:	mov		qword ptr [rbp - 0x40], rax
0x7fffeafc9584:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafc9588:	cmp		rax, qword ptr [rbp - 0x28]
0x7fffeafc958c:	jae		0x7fffeafc95a2
0x7fffeafc9592:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafc9596:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafc959a:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc959e:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafc95a2:	jmp		0x7fffeafc9527
0x7fffeafc95a7:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc95ab:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafc95af:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafc95b3:	setae		dl
0x7fffeafc95b6:	and		dl, 1
0x7fffeafc95b9:	movzx		esi, dl
0x7fffeafc95bc:	movsxd		rax, esi
0x7fffeafc95bf:	cmp		rax, 0
0x7fffeafc95c3:	je		0x7fffeafc9b90
0x7fffeafc95c9:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc95cd:	add		rax, qword ptr [rbp - 0x10]
0x7fffeafc95d1:	mov		qword ptr [rbp - 0x48], rax
0x7fffeafc95d5:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc95d9:	mov		rcx, qword ptr [rbp - 0x48]
0x7fffeafc95dd:	cmp		rax, rcx
0x7fffeafc95e0:	setb		dl
0x7fffeafc95e3:	and		dl, 1
0x7fffeafc95e6:	movzx		esi, dl
0x7fffeafc95e9:	movsxd		rax, esi
0x7fffeafc95ec:	cmp		rax, 0
0x7fffeafc95f0:	je		0x7fffeafc9b8b
0x7fffeafc95f6:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc95fa:	mov		rax, qword ptr [rax + 0x30]
0x7fffeafc95fe:	mov		qword ptr [rbp - 0x50], rax
0x7fffeafc9602:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc9606:	mov		rax, qword ptr [rax + 0x18]
0x7fffeafc960a:	cmp		rax, qword ptr [rbp - 0x20]
0x7fffeafc960e:	je		0x7fffeafc96b4
0x7fffeafc9614:	xor		eax, eax
0x7fffeafc9616:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafc961a:	mov		rcx, qword ptr [rcx + 0x10]
0x7fffeafc961e:	mov		qword ptr [rbp - 0x60], rcx
0x7fffeafc9622:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafc9626:	mov		rcx, qword ptr [rcx + 0x18]
0x7fffeafc962a:	mov		qword ptr [rbp - 0x58], rcx
0x7fffeafc962e:	mov		rcx, qword ptr [rbp - 0x60]
0x7fffeafc9632:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafc9636:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafc963a:	mov		byte ptr [rbp - 0xb9], al
0x7fffeafc9640:	jb		0x7fffeafc9675
0x7fffeafc9646:	xor		eax, eax
0x7fffeafc9648:	mov		rcx, qword ptr [rbp - 0x60]
0x7fffeafc964c:	mov		rcx, qword ptr [rcx + 0x18]
0x7fffeafc9650:	cmp		rcx, qword ptr [rbp - 0x20]
0x7fffeafc9654:	mov		byte ptr [rbp - 0xb9], al
0x7fffeafc965a:	jne		0x7fffeafc9675
0x7fffeafc9660:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafc9664:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafc9668:	cmp		rax, qword ptr [rbp - 0x20]
0x7fffeafc966c:	sete		cl
0x7fffeafc966f:	mov		byte ptr [rbp - 0xb9], cl
0x7fffeafc9675:	mov		al, byte ptr [rbp - 0xb9]
0x7fffeafc967b:	and		al, 1
0x7fffeafc967d:	movzx		ecx, al
0x7fffeafc9680:	movsxd		rdx, ecx
0x7fffeafc9683:	cmp		rdx, 0
0x7fffeafc9687:	je		0x7fffeafc96aa
0x7fffeafc968d:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafc9691:	mov		rcx, qword ptr [rbp - 0x60]
0x7fffeafc9695:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafc9699:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafc969d:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafc96a1:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafc96a5:	jmp		0x7fffeafc96af
0x7fffeafc96aa:	call		0x7fffeafc4c10
0x7fffeafc96af:	jmp		0x7fffeafc97bc
0x7fffeafc96b4:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc96b8:	mov		rcx, rax
0x7fffeafc96bb:	add		rcx, 0x20
0x7fffeafc96c2:	add		rcx, 8
0x7fffeafc96c9:	mov		qword ptr [rbp - 0x68], rcx
0x7fffeafc96cd:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafc96d1:	mov		qword ptr [rbp - 0x58], rax
0x7fffeafc96d5:	cmp		rax, 0
0x7fffeafc96d9:	jne		0x7fffeafc9703
0x7fffeafc96df:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc96e3:	mov		rcx, rax
0x7fffeafc96e6:	add		rcx, 0x20
0x7fffeafc96ed:	mov		qword ptr [rbp - 0x68], rcx
0x7fffeafc96f1:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafc96f5:	mov		qword ptr [rbp - 0x58], rax
0x7fffeafc96f9:	cmp		rax, 0
0x7fffeafc96fd:	je		0x7fffeafc97b7
0x7fffeafc9703:	jmp		0x7fffeafc9708
0x7fffeafc9708:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafc970c:	mov		rcx, rax
0x7fffeafc970f:	add		rcx, 0x20
0x7fffeafc9716:	add		rcx, 8
0x7fffeafc971d:	mov		qword ptr [rbp - 0x70], rcx
0x7fffeafc9721:	cmp		qword ptr [rax + 0x28], 0
0x7fffeafc9726:	mov		dl, 1
0x7fffeafc9728:	mov		byte ptr [rbp - 0xba], dl
0x7fffeafc972e:	jne		0x7fffeafc9754
0x7fffeafc9734:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafc9738:	mov		rcx, rax
0x7fffeafc973b:	add		rcx, 0x20
0x7fffeafc9742:	mov		qword ptr [rbp - 0x70], rcx
0x7fffeafc9746:	cmp		qword ptr [rax + 0x20], 0
0x7fffeafc974b:	setne		dl
0x7fffeafc974e:	mov		byte ptr [rbp - 0xba], dl
0x7fffeafc9754:	mov		al, byte ptr [rbp - 0xba]
0x7fffeafc975a:	test		al, 1
0x7fffeafc975c:	jne		0x7fffeafc9767
0x7fffeafc9762:	jmp		0x7fffeafc977b
0x7fffeafc9767:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafc976b:	mov		qword ptr [rbp - 0x68], rax
0x7fffeafc976f:	mov		rax, qword ptr [rax]
0x7fffeafc9772:	mov		qword ptr [rbp - 0x58], rax
0x7fffeafc9776:	jmp		0x7fffeafc9708
0x7fffeafc977b:	mov		rax, qword ptr [rbp - 0x68]
0x7fffeafc977f:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafc9783:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafc9787:	setae		dl
0x7fffeafc978a:	and		dl, 1
0x7fffeafc978d:	movzx		esi, dl
0x7fffeafc9790:	movsxd		rax, esi
0x7fffeafc9793:	cmp		rax, 0
0x7fffeafc9797:	je		0x7fffeafc97ad
0x7fffeafc979d:	mov		rax, qword ptr [rbp - 0x68]
0x7fffeafc97a1:	mov		qword ptr [rax], 0
0x7fffeafc97a8:	jmp		0x7fffeafc97b2
0x7fffeafc97ad:	call		0x7fffeafc4c10
0x7fffeafc97b2:	jmp		0x7fffeafc97b7
0x7fffeafc97b7:	jmp		0x7fffeafc97bc
0x7fffeafc97bc:	cmp		qword ptr [rbp - 0x50], 0
0x7fffeafc97c1:	je		0x7fffeafc99a2
0x7fffeafc97c7:	mov		rax, qword ptr [rbp - 8]
0x7fffeafc97cb:	add		rax, 0x258
0x7fffeafc97d1:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafc97d5:	mov		edx, dword ptr [rcx + 0x38]
0x7fffeafc97d8:	mov		ecx, edx
0x7fffeafc97da:	shl		rcx, 3
0x7fffeafc97de:	add		rax, rcx
0x7fffeafc97e1:	mov		qword ptr [rbp - 0x78], rax
0x7fffeafc97e5:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc97e9:	mov		rcx, qword ptr [rbp - 0x78]
0x7fffeafc97ed:	cmp		rax, qword ptr [rcx]
0x7fffeafc97f0:	jne		0x7fffeafc982b
0x7fffeafc97f6:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafc97fa:	mov		rcx, qword ptr [rbp - 0x78]
0x7fffeafc97fe:	mov		qword ptr [rcx], rax
0x7fffeafc9801:	cmp		rax, 0
0x7fffeafc9805:	jne		0x7fffeafc9826
0x7fffeafc980b:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc980f:	mov		ecx, dword ptr [rax + 0x38]
0x7fffeafc9812:	mov		edx, 1
0x7fffeafc9817:	shl		edx, cl
0x7fffeafc9819:	xor		edx, 0xffffffff
0x7fffeafc981c:	mov		rax, qword ptr [rbp - 8]
0x7fffeafc9820:	and		edx, dword ptr [rax + 4]
0x7fffeafc9823:	mov		dword ptr [rax + 4], edx
0x7fffeafc9826:	jmp		0x7fffeafc988b
0x7fffeafc982b:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafc982f:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafc9833:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafc9837:	setae		dl
0x7fffeafc983a:	and		dl, 1
0x7fffeafc983d:	movzx		esi, dl
0x7fffeafc9840:	movsxd		rax, esi
0x7fffeafc9843:	cmp		rax, 0
0x7fffeafc9847:	je		0x7fffeafc9881
0x7fffeafc984d:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafc9851:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafc9855:	cmp		rax, qword ptr [rbp - 0x20]
0x7fffeafc9859:	jne		0x7fffeafc9870
0x7fffeafc985f:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafc9863:	mov		rcx, qword ptr [rbp - 0x50]
0x7fffeafc9867:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafc986b:	jmp		0x7fffeafc987c
0x7fffeafc9870:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafc9874:	mov		rcx, qword ptr [rbp - 0x50]
0x7fffeafc9878:	mov		qword ptr [rcx + 0x28], rax
0x7fffeafc987c:	jmp		0x7fffeafc9886
0x7fffeafc9881:	call		0x7fffeafc4c10
0x7fffeafc9886:	jmp		0x7fffeafc988b
0x7fffeafc988b:	cmp		qword ptr [rbp - 0x58], 0
0x7fffeafc9890:	je		0x7fffeafc999d
0x7fffeafc9896:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafc989a:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafc989e:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafc98a2:	setae		dl
0x7fffeafc98a5:	and		dl, 1
0x7fffeafc98a8:	movzx		esi, dl
0x7fffeafc98ab:	movsxd		rax, esi
0x7fffeafc98ae:	cmp		rax, 0
0x7fffeafc98b2:	je		0x7fffeafc9993
0x7fffeafc98b8:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafc98bc:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafc98c0:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafc98c4:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc98c8:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafc98cc:	mov		qword ptr [rbp - 0x80], rax
0x7fffeafc98d0:	cmp		rax, 0
0x7fffeafc98d4:	je		0x7fffeafc9923
0x7fffeafc98da:	mov		rax, qword ptr [rbp - 0x80]
0x7fffeafc98de:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafc98e2:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafc98e6:	setae		dl
0x7fffeafc98e9:	and		dl, 1
0x7fffeafc98ec:	movzx		esi, dl
0x7fffeafc98ef:	movsxd		rax, esi
0x7fffeafc98f2:	cmp		rax, 0
0x7fffeafc98f6:	je		0x7fffeafc9919
0x7fffeafc98fc:	mov		rax, qword ptr [rbp - 0x80]
0x7fffeafc9900:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafc9904:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafc9908:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafc990c:	mov		rcx, qword ptr [rbp - 0x80]
0x7fffeafc9910:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafc9914:	jmp		0x7fffeafc991e
0x7fffeafc9919:	call		0x7fffeafc4c10
0x7fffeafc991e:	jmp		0x7fffeafc9923
0x7fffeafc9923:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc9927:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafc992b:	mov		qword ptr [rbp - 0x88], rax
0x7fffeafc9932:	cmp		rax, 0
0x7fffeafc9936:	je		0x7fffeafc998e
0x7fffeafc993c:	mov		rax, qword ptr [rbp - 0x88]
0x7fffeafc9943:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafc9947:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafc994b:	setae		dl
0x7fffeafc994e:	and		dl, 1
0x7fffeafc9951:	movzx		esi, dl
0x7fffeafc9954:	movsxd		rax, esi
0x7fffeafc9957:	cmp		rax, 0
0x7fffeafc995b:	je		0x7fffeafc9984
0x7fffeafc9961:	mov		rax, qword ptr [rbp - 0x88]
0x7fffeafc9968:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafc996c:	mov		qword ptr [rcx + 0x28], rax
0x7fffeafc9970:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafc9974:	mov		rcx, qword ptr [rbp - 0x88]
0x7fffeafc997b:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafc997f:	jmp		0x7fffeafc9989
0x7fffeafc9984:	call		0x7fffeafc4c10
0x7fffeafc9989:	jmp		0x7fffeafc998e
0x7fffeafc998e:	jmp		0x7fffeafc9998
0x7fffeafc9993:	call		0x7fffeafc4c10
0x7fffeafc9998:	jmp		0x7fffeafc999d
0x7fffeafc999d:	jmp		0x7fffeafc99a2
0x7fffeafc99a2:	cmp		qword ptr [rbp - 0x28], 0x20
0x7fffeafc99a7:	jae		0x7fffeafc99eb
0x7fffeafc99ad:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafc99b1:	add		rax, qword ptr [rbp - 0x10]
0x7fffeafc99b5:	or		rax, 1
0x7fffeafc99bb:	or		rax, 2
0x7fffeafc99c1:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafc99c5:	mov		qword ptr [rcx + 8], rax
0x7fffeafc99c9:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc99cd:	mov		rcx, qword ptr [rbp - 0x28]
0x7fffeafc99d1:	add		rcx, qword ptr [rbp - 0x10]
0x7fffeafc99d5:	mov		rdx, qword ptr [rax + rcx + 8]
0x7fffeafc99da:	or		rdx, 1
0x7fffeafc99e1:	mov		qword ptr [rax + rcx + 8], rdx
0x7fffeafc99e6:	jmp		0x7fffeafc9b78
0x7fffeafc99eb:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafc99ef:	or		rax, 1
0x7fffeafc99f5:	or		rax, 2
0x7fffeafc99fb:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafc99ff:	mov		qword ptr [rcx + 8], rax
0x7fffeafc9a03:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafc9a07:	or		rax, 1
0x7fffeafc9a0d:	mov		rcx, qword ptr [rbp - 0x48]
0x7fffeafc9a11:	mov		qword ptr [rcx + 8], rax
0x7fffeafc9a15:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafc9a19:	mov		rcx, qword ptr [rbp - 0x48]
0x7fffeafc9a1d:	mov		rdx, qword ptr [rbp - 0x28]
0x7fffeafc9a21:	mov		qword ptr [rcx + rdx], rax
0x7fffeafc9a25:	mov		rax, qword ptr [rbp - 8]
0x7fffeafc9a29:	mov		rax, qword ptr [rax + 8]
0x7fffeafc9a2d:	mov		qword ptr [rbp - 0x90], rax
0x7fffeafc9a34:	cmp		qword ptr [rbp - 0x90], 0
0x7fffeafc9a3c:	je		0x7fffeafc9b60
0x7fffeafc9a42:	mov		rax, qword ptr [rbp - 8]
0x7fffeafc9a46:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafc9a4a:	mov		qword ptr [rbp - 0x98], rax
0x7fffeafc9a51:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafc9a58:	shr		rax, 3
0x7fffeafc9a5c:	mov		dword ptr [rbp - 0x9c], eax
0x7fffeafc9a62:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafc9a66:	add		rcx, 0x48
0x7fffeafc9a6d:	mov		eax, dword ptr [rbp - 0x9c]
0x7fffeafc9a73:	shl		eax, 1
0x7fffeafc9a76:	mov		eax, eax
0x7fffeafc9a78:	mov		edx, eax
0x7fffeafc9a7a:	shl		rdx, 3
0x7fffeafc9a7e:	add		rcx, rdx
0x7fffeafc9a81:	mov		qword ptr [rbp - 0xa8], rcx
0x7fffeafc9a88:	mov		rcx, qword ptr [rbp - 0xa8]
0x7fffeafc9a8f:	mov		qword ptr [rbp - 0xb0], rcx
0x7fffeafc9a96:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafc9a9a:	mov		eax, dword ptr [rcx]
0x7fffeafc9a9c:	mov		ecx, dword ptr [rbp - 0x9c]
0x7fffeafc9aa2:	mov		esi, 1
0x7fffeafc9aa7:	shl		esi, cl
0x7fffeafc9aa9:	and		eax, esi
0x7fffeafc9aab:	cmp		eax, 0
0x7fffeafc9aae:	jne		0x7fffeafc9ace
0x7fffeafc9ab4:	mov		ecx, dword ptr [rbp - 0x9c]
0x7fffeafc9aba:	mov		eax, 1
0x7fffeafc9abf:	shl		eax, cl
0x7fffeafc9ac1:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafc9ac5:	or		eax, dword ptr [rdx]
0x7fffeafc9ac7:	mov		dword ptr [rdx], eax
0x7fffeafc9ac9:	jmp		0x7fffeafc9b18
0x7fffeafc9ace:	mov		rax, qword ptr [rbp - 0xa8]
0x7fffeafc9ad5:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafc9ad9:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafc9add:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafc9ae1:	setae		dl
0x7fffeafc9ae4:	and		dl, 1
0x7fffeafc9ae7:	movzx		esi, dl
0x7fffeafc9aea:	movsxd		rax, esi
0x7fffeafc9aed:	cmp		rax, 0
0x7fffeafc9af1:	je		0x7fffeafc9b0e
0x7fffeafc9af7:	mov		rax, qword ptr [rbp - 0xa8]
0x7fffeafc9afe:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafc9b02:	mov		qword ptr [rbp - 0xb0], rax
0x7fffeafc9b09:	jmp		0x7fffeafc9b13
0x7fffeafc9b0e:	call		0x7fffeafc4c10
0x7fffeafc9b13:	jmp		0x7fffeafc9b18
0x7fffeafc9b18:	mov		rax, qword ptr [rbp - 0x98]
0x7fffeafc9b1f:	mov		rcx, qword ptr [rbp - 0xa8]
0x7fffeafc9b26:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafc9b2a:	mov		rax, qword ptr [rbp - 0x98]
0x7fffeafc9b31:	mov		rcx, qword ptr [rbp - 0xb0]
0x7fffeafc9b38:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafc9b3c:	mov		rax, qword ptr [rbp - 0xb0]
0x7fffeafc9b43:	mov		rcx, qword ptr [rbp - 0x98]
0x7fffeafc9b4a:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafc9b4e:	mov		rax, qword ptr [rbp - 0xa8]
0x7fffeafc9b55:	mov		rcx, qword ptr [rbp - 0x98]
0x7fffeafc9b5c:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafc9b60:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafc9b64:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafc9b68:	mov		qword ptr [rcx + 8], rax
0x7fffeafc9b6c:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafc9b70:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafc9b74:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafc9b78:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc9b7c:	add		rax, 0x10
0x7fffeafc9b82:	add		rsp, 0xc0
0x7fffeafc9b89:	pop		rbp
0x7fffeafc9b8a:	ret		
0x7fffeafc9b8b:	jmp		0x7fffeafc9b90
0x7fffeafc9b90:	call		0x7fffeafc4c10
0x7fffeafc9b95:	nop		word ptr cs:[rax + rax]
0x7fffeafc9b9f:	nop		
disassembling symbol '.LBB8_1':
textAddr: 0x7fffeafc9527, textSize: 35
0x7fffeafc9527:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc952b:	cmp		qword ptr [rax + 0x20], 0
0x7fffeafc9530:	je		0x7fffeafc954a
0x7fffeafc9536:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc953a:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafc953e:	mov		qword ptr [rbp - 0xb8], rax
0x7fffeafc9545:	jmp		0x7fffeafc9559
disassembling symbol '.LBB8_3':
textAddr: 0x7fffeafc954a, textSize: 15
0x7fffeafc954a:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc954e:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafc9552:	mov		qword ptr [rbp - 0xb8], rax
disassembling symbol '.LBB8_4':
textAddr: 0x7fffeafc9559, textSize: 73
0x7fffeafc9559:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafc9560:	mov		qword ptr [rbp - 0x18], rax
0x7fffeafc9564:	cmp		rax, 0
0x7fffeafc9568:	je		0x7fffeafc95a7
0x7fffeafc956e:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc9572:	mov		rax, qword ptr [rax + 8]
0x7fffeafc9576:	and		rax, 0xfffffffffffffff8
0x7fffeafc957c:	sub		rax, qword ptr [rbp - 0x10]
0x7fffeafc9580:	mov		qword ptr [rbp - 0x40], rax
0x7fffeafc9584:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafc9588:	cmp		rax, qword ptr [rbp - 0x28]
0x7fffeafc958c:	jae		0x7fffeafc95a2
0x7fffeafc9592:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafc9596:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafc959a:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc959e:	mov		qword ptr [rbp - 0x20], rax
disassembling symbol '.LBB8_7':
textAddr: 0x7fffeafc95a2, textSize: 5
0x7fffeafc95a2:	jmp		0x7fffeafc9527
disassembling symbol '.LBB8_8':
textAddr: 0x7fffeafc95a7, textSize: 206
0x7fffeafc95a7:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc95ab:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafc95af:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafc95b3:	setae		dl
0x7fffeafc95b6:	and		dl, 1
0x7fffeafc95b9:	movzx		esi, dl
0x7fffeafc95bc:	movsxd		rax, esi
0x7fffeafc95bf:	cmp		rax, 0
0x7fffeafc95c3:	je		0x7fffeafc9b90
0x7fffeafc95c9:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc95cd:	add		rax, qword ptr [rbp - 0x10]
0x7fffeafc95d1:	mov		qword ptr [rbp - 0x48], rax
0x7fffeafc95d5:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc95d9:	mov		rcx, qword ptr [rbp - 0x48]
0x7fffeafc95dd:	cmp		rax, rcx
0x7fffeafc95e0:	setb		dl
0x7fffeafc95e3:	and		dl, 1
0x7fffeafc95e6:	movzx		esi, dl
0x7fffeafc95e9:	movsxd		rax, esi
0x7fffeafc95ec:	cmp		rax, 0
0x7fffeafc95f0:	je		0x7fffeafc9b8b
0x7fffeafc95f6:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc95fa:	mov		rax, qword ptr [rax + 0x30]
0x7fffeafc95fe:	mov		qword ptr [rbp - 0x50], rax
0x7fffeafc9602:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc9606:	mov		rax, qword ptr [rax + 0x18]
0x7fffeafc960a:	cmp		rax, qword ptr [rbp - 0x20]
0x7fffeafc960e:	je		0x7fffeafc96b4
0x7fffeafc9614:	xor		eax, eax
0x7fffeafc9616:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafc961a:	mov		rcx, qword ptr [rcx + 0x10]
0x7fffeafc961e:	mov		qword ptr [rbp - 0x60], rcx
0x7fffeafc9622:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafc9626:	mov		rcx, qword ptr [rcx + 0x18]
0x7fffeafc962a:	mov		qword ptr [rbp - 0x58], rcx
0x7fffeafc962e:	mov		rcx, qword ptr [rbp - 0x60]
0x7fffeafc9632:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafc9636:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafc963a:	mov		byte ptr [rbp - 0xb9], al
0x7fffeafc9640:	jb		0x7fffeafc9675
0x7fffeafc9646:	xor		eax, eax
0x7fffeafc9648:	mov		rcx, qword ptr [rbp - 0x60]
0x7fffeafc964c:	mov		rcx, qword ptr [rcx + 0x18]
0x7fffeafc9650:	cmp		rcx, qword ptr [rbp - 0x20]
0x7fffeafc9654:	mov		byte ptr [rbp - 0xb9], al
0x7fffeafc965a:	jne		0x7fffeafc9675
0x7fffeafc9660:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafc9664:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafc9668:	cmp		rax, qword ptr [rbp - 0x20]
0x7fffeafc966c:	sete		cl
0x7fffeafc966f:	mov		byte ptr [rbp - 0xb9], cl
disassembling symbol '.LBB8_14':
textAddr: 0x7fffeafc9675, textSize: 53
0x7fffeafc9675:	mov		al, byte ptr [rbp - 0xb9]
0x7fffeafc967b:	and		al, 1
0x7fffeafc967d:	movzx		ecx, al
0x7fffeafc9680:	movsxd		rdx, ecx
0x7fffeafc9683:	cmp		rdx, 0
0x7fffeafc9687:	je		0x7fffeafc96aa
0x7fffeafc968d:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafc9691:	mov		rcx, qword ptr [rbp - 0x60]
0x7fffeafc9695:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafc9699:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafc969d:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafc96a1:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafc96a5:	jmp		0x7fffeafc96af
disassembling symbol '.LBB8_16':
textAddr: 0x7fffeafc96aa, textSize: 5
0x7fffeafc96aa:	call		0x7fffeafc4c10
disassembling symbol '.LBB8_17':
textAddr: 0x7fffeafc96af, textSize: 5
0x7fffeafc96af:	jmp		0x7fffeafc97bc
disassembling symbol '.LBB8_18':
textAddr: 0x7fffeafc96b4, textSize: 79
0x7fffeafc96b4:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc96b8:	mov		rcx, rax
0x7fffeafc96bb:	add		rcx, 0x20
0x7fffeafc96c2:	add		rcx, 8
0x7fffeafc96c9:	mov		qword ptr [rbp - 0x68], rcx
0x7fffeafc96cd:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafc96d1:	mov		qword ptr [rbp - 0x58], rax
0x7fffeafc96d5:	cmp		rax, 0
0x7fffeafc96d9:	jne		0x7fffeafc9703
0x7fffeafc96df:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc96e3:	mov		rcx, rax
0x7fffeafc96e6:	add		rcx, 0x20
0x7fffeafc96ed:	mov		qword ptr [rbp - 0x68], rcx
0x7fffeafc96f1:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafc96f5:	mov		qword ptr [rbp - 0x58], rax
0x7fffeafc96f9:	cmp		rax, 0
0x7fffeafc96fd:	je		0x7fffeafc97b7
disassembling symbol '.LBB8_20':
textAddr: 0x7fffeafc9703, textSize: 5
0x7fffeafc9703:	jmp		0x7fffeafc9708
disassembling symbol '.LBB8_21':
textAddr: 0x7fffeafc9708, textSize: 76
0x7fffeafc9708:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafc970c:	mov		rcx, rax
0x7fffeafc970f:	add		rcx, 0x20
0x7fffeafc9716:	add		rcx, 8
0x7fffeafc971d:	mov		qword ptr [rbp - 0x70], rcx
0x7fffeafc9721:	cmp		qword ptr [rax + 0x28], 0
0x7fffeafc9726:	mov		dl, 1
0x7fffeafc9728:	mov		byte ptr [rbp - 0xba], dl
0x7fffeafc972e:	jne		0x7fffeafc9754
0x7fffeafc9734:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafc9738:	mov		rcx, rax
0x7fffeafc973b:	add		rcx, 0x20
0x7fffeafc9742:	mov		qword ptr [rbp - 0x70], rcx
0x7fffeafc9746:	cmp		qword ptr [rax + 0x20], 0
0x7fffeafc974b:	setne		dl
0x7fffeafc974e:	mov		byte ptr [rbp - 0xba], dl
disassembling symbol '.LBB8_23':
textAddr: 0x7fffeafc9754, textSize: 19
0x7fffeafc9754:	mov		al, byte ptr [rbp - 0xba]
0x7fffeafc975a:	test		al, 1
0x7fffeafc975c:	jne		0x7fffeafc9767
0x7fffeafc9762:	jmp		0x7fffeafc977b
disassembling symbol '.LBB8_24':
textAddr: 0x7fffeafc9767, textSize: 20
0x7fffeafc9767:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafc976b:	mov		qword ptr [rbp - 0x68], rax
0x7fffeafc976f:	mov		rax, qword ptr [rax]
0x7fffeafc9772:	mov		qword ptr [rbp - 0x58], rax
0x7fffeafc9776:	jmp		0x7fffeafc9708
disassembling symbol '.LBB8_25':
textAddr: 0x7fffeafc977b, textSize: 50
0x7fffeafc977b:	mov		rax, qword ptr [rbp - 0x68]
0x7fffeafc977f:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafc9783:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafc9787:	setae		dl
0x7fffeafc978a:	and		dl, 1
0x7fffeafc978d:	movzx		esi, dl
0x7fffeafc9790:	movsxd		rax, esi
0x7fffeafc9793:	cmp		rax, 0
0x7fffeafc9797:	je		0x7fffeafc97ad
0x7fffeafc979d:	mov		rax, qword ptr [rbp - 0x68]
0x7fffeafc97a1:	mov		qword ptr [rax], 0
0x7fffeafc97a8:	jmp		0x7fffeafc97b2
disassembling symbol '.LBB8_27':
textAddr: 0x7fffeafc97ad, textSize: 5
0x7fffeafc97ad:	call		0x7fffeafc4c10
disassembling symbol '.LBB8_28':
textAddr: 0x7fffeafc97b2, textSize: 5
0x7fffeafc97b2:	jmp		0x7fffeafc97b7
disassembling symbol '.LBB8_29':
textAddr: 0x7fffeafc97b7, textSize: 5
0x7fffeafc97b7:	jmp		0x7fffeafc97bc
disassembling symbol '.LBB8_30':
textAddr: 0x7fffeafc97bc, textSize: 106
0x7fffeafc97bc:	cmp		qword ptr [rbp - 0x50], 0
0x7fffeafc97c1:	je		0x7fffeafc99a2
0x7fffeafc97c7:	mov		rax, qword ptr [rbp - 8]
0x7fffeafc97cb:	add		rax, 0x258
0x7fffeafc97d1:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafc97d5:	mov		edx, dword ptr [rcx + 0x38]
0x7fffeafc97d8:	mov		ecx, edx
0x7fffeafc97da:	shl		rcx, 3
0x7fffeafc97de:	add		rax, rcx
0x7fffeafc97e1:	mov		qword ptr [rbp - 0x78], rax
0x7fffeafc97e5:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc97e9:	mov		rcx, qword ptr [rbp - 0x78]
0x7fffeafc97ed:	cmp		rax, qword ptr [rcx]
0x7fffeafc97f0:	jne		0x7fffeafc982b
0x7fffeafc97f6:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafc97fa:	mov		rcx, qword ptr [rbp - 0x78]
0x7fffeafc97fe:	mov		qword ptr [rcx], rax
0x7fffeafc9801:	cmp		rax, 0
0x7fffeafc9805:	jne		0x7fffeafc9826
0x7fffeafc980b:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc980f:	mov		ecx, dword ptr [rax + 0x38]
0x7fffeafc9812:	mov		edx, 1
0x7fffeafc9817:	shl		edx, cl
0x7fffeafc9819:	xor		edx, 0xffffffff
0x7fffeafc981c:	mov		rax, qword ptr [rbp - 8]
0x7fffeafc9820:	and		edx, dword ptr [rax + 4]
0x7fffeafc9823:	mov		dword ptr [rax + 4], edx
disassembling symbol '.LBB8_34':
textAddr: 0x7fffeafc9826, textSize: 5
0x7fffeafc9826:	jmp		0x7fffeafc988b
disassembling symbol '.LBB8_35':
textAddr: 0x7fffeafc982b, textSize: 69
0x7fffeafc982b:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafc982f:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafc9833:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafc9837:	setae		dl
0x7fffeafc983a:	and		dl, 1
0x7fffeafc983d:	movzx		esi, dl
0x7fffeafc9840:	movsxd		rax, esi
0x7fffeafc9843:	cmp		rax, 0
0x7fffeafc9847:	je		0x7fffeafc9881
0x7fffeafc984d:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafc9851:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafc9855:	cmp		rax, qword ptr [rbp - 0x20]
0x7fffeafc9859:	jne		0x7fffeafc9870
0x7fffeafc985f:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafc9863:	mov		rcx, qword ptr [rbp - 0x50]
0x7fffeafc9867:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafc986b:	jmp		0x7fffeafc987c
disassembling symbol '.LBB8_38':
textAddr: 0x7fffeafc9870, textSize: 12
0x7fffeafc9870:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafc9874:	mov		rcx, qword ptr [rbp - 0x50]
0x7fffeafc9878:	mov		qword ptr [rcx + 0x28], rax
disassembling symbol '.LBB8_39':
textAddr: 0x7fffeafc987c, textSize: 5
0x7fffeafc987c:	jmp		0x7fffeafc9886
disassembling symbol '.LBB8_40':
textAddr: 0x7fffeafc9881, textSize: 5
0x7fffeafc9881:	call		0x7fffeafc4c10
disassembling symbol '.LBB8_41':
textAddr: 0x7fffeafc9886, textSize: 5
0x7fffeafc9886:	jmp		0x7fffeafc988b
disassembling symbol '.LBB8_42':
textAddr: 0x7fffeafc988b, textSize: 142
0x7fffeafc988b:	cmp		qword ptr [rbp - 0x58], 0
0x7fffeafc9890:	je		0x7fffeafc999d
0x7fffeafc9896:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafc989a:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafc989e:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafc98a2:	setae		dl
0x7fffeafc98a5:	and		dl, 1
0x7fffeafc98a8:	movzx		esi, dl
0x7fffeafc98ab:	movsxd		rax, esi
0x7fffeafc98ae:	cmp		rax, 0
0x7fffeafc98b2:	je		0x7fffeafc9993
0x7fffeafc98b8:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafc98bc:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafc98c0:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafc98c4:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc98c8:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafc98cc:	mov		qword ptr [rbp - 0x80], rax
0x7fffeafc98d0:	cmp		rax, 0
0x7fffeafc98d4:	je		0x7fffeafc9923
0x7fffeafc98da:	mov		rax, qword ptr [rbp - 0x80]
0x7fffeafc98de:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafc98e2:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafc98e6:	setae		dl
0x7fffeafc98e9:	and		dl, 1
0x7fffeafc98ec:	movzx		esi, dl
0x7fffeafc98ef:	movsxd		rax, esi
0x7fffeafc98f2:	cmp		rax, 0
0x7fffeafc98f6:	je		0x7fffeafc9919
0x7fffeafc98fc:	mov		rax, qword ptr [rbp - 0x80]
0x7fffeafc9900:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafc9904:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafc9908:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafc990c:	mov		rcx, qword ptr [rbp - 0x80]
0x7fffeafc9910:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafc9914:	jmp		0x7fffeafc991e
disassembling symbol '.LBB8_47':
textAddr: 0x7fffeafc9919, textSize: 5
0x7fffeafc9919:	call		0x7fffeafc4c10
disassembling symbol '.LBB8_48':
textAddr: 0x7fffeafc991e, textSize: 5
0x7fffeafc991e:	jmp		0x7fffeafc9923
disassembling symbol '.LBB8_49':
textAddr: 0x7fffeafc9923, textSize: 97
0x7fffeafc9923:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc9927:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafc992b:	mov		qword ptr [rbp - 0x88], rax
0x7fffeafc9932:	cmp		rax, 0
0x7fffeafc9936:	je		0x7fffeafc998e
0x7fffeafc993c:	mov		rax, qword ptr [rbp - 0x88]
0x7fffeafc9943:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafc9947:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafc994b:	setae		dl
0x7fffeafc994e:	and		dl, 1
0x7fffeafc9951:	movzx		esi, dl
0x7fffeafc9954:	movsxd		rax, esi
0x7fffeafc9957:	cmp		rax, 0
0x7fffeafc995b:	je		0x7fffeafc9984
0x7fffeafc9961:	mov		rax, qword ptr [rbp - 0x88]
0x7fffeafc9968:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafc996c:	mov		qword ptr [rcx + 0x28], rax
0x7fffeafc9970:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafc9974:	mov		rcx, qword ptr [rbp - 0x88]
0x7fffeafc997b:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafc997f:	jmp		0x7fffeafc9989
disassembling symbol '.LBB8_52':
textAddr: 0x7fffeafc9984, textSize: 5
0x7fffeafc9984:	call		0x7fffeafc4c10
disassembling symbol '.LBB8_53':
textAddr: 0x7fffeafc9989, textSize: 5
0x7fffeafc9989:	jmp		0x7fffeafc998e
disassembling symbol '.LBB8_54':
textAddr: 0x7fffeafc998e, textSize: 5
0x7fffeafc998e:	jmp		0x7fffeafc9998
disassembling symbol '.LBB8_55':
textAddr: 0x7fffeafc9993, textSize: 5
0x7fffeafc9993:	call		0x7fffeafc4c10
disassembling symbol '.LBB8_56':
textAddr: 0x7fffeafc9998, textSize: 5
0x7fffeafc9998:	jmp		0x7fffeafc999d
disassembling symbol '.LBB8_57':
textAddr: 0x7fffeafc999d, textSize: 5
0x7fffeafc999d:	jmp		0x7fffeafc99a2
disassembling symbol '.LBB8_58':
textAddr: 0x7fffeafc99a2, textSize: 73
0x7fffeafc99a2:	cmp		qword ptr [rbp - 0x28], 0x20
0x7fffeafc99a7:	jae		0x7fffeafc99eb
0x7fffeafc99ad:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafc99b1:	add		rax, qword ptr [rbp - 0x10]
0x7fffeafc99b5:	or		rax, 1
0x7fffeafc99bb:	or		rax, 2
0x7fffeafc99c1:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafc99c5:	mov		qword ptr [rcx + 8], rax
0x7fffeafc99c9:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc99cd:	mov		rcx, qword ptr [rbp - 0x28]
0x7fffeafc99d1:	add		rcx, qword ptr [rbp - 0x10]
0x7fffeafc99d5:	mov		rdx, qword ptr [rax + rcx + 8]
0x7fffeafc99da:	or		rdx, 1
0x7fffeafc99e1:	mov		qword ptr [rax + rcx + 8], rdx
0x7fffeafc99e6:	jmp		0x7fffeafc9b78
disassembling symbol '.LBB8_60':
textAddr: 0x7fffeafc99eb, textSize: 227
0x7fffeafc99eb:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafc99ef:	or		rax, 1
0x7fffeafc99f5:	or		rax, 2
0x7fffeafc99fb:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafc99ff:	mov		qword ptr [rcx + 8], rax
0x7fffeafc9a03:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafc9a07:	or		rax, 1
0x7fffeafc9a0d:	mov		rcx, qword ptr [rbp - 0x48]
0x7fffeafc9a11:	mov		qword ptr [rcx + 8], rax
0x7fffeafc9a15:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafc9a19:	mov		rcx, qword ptr [rbp - 0x48]
0x7fffeafc9a1d:	mov		rdx, qword ptr [rbp - 0x28]
0x7fffeafc9a21:	mov		qword ptr [rcx + rdx], rax
0x7fffeafc9a25:	mov		rax, qword ptr [rbp - 8]
0x7fffeafc9a29:	mov		rax, qword ptr [rax + 8]
0x7fffeafc9a2d:	mov		qword ptr [rbp - 0x90], rax
0x7fffeafc9a34:	cmp		qword ptr [rbp - 0x90], 0
0x7fffeafc9a3c:	je		0x7fffeafc9b60
0x7fffeafc9a42:	mov		rax, qword ptr [rbp - 8]
0x7fffeafc9a46:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafc9a4a:	mov		qword ptr [rbp - 0x98], rax
0x7fffeafc9a51:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafc9a58:	shr		rax, 3
0x7fffeafc9a5c:	mov		dword ptr [rbp - 0x9c], eax
0x7fffeafc9a62:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafc9a66:	add		rcx, 0x48
0x7fffeafc9a6d:	mov		eax, dword ptr [rbp - 0x9c]
0x7fffeafc9a73:	shl		eax, 1
0x7fffeafc9a76:	mov		eax, eax
0x7fffeafc9a78:	mov		edx, eax
0x7fffeafc9a7a:	shl		rdx, 3
0x7fffeafc9a7e:	add		rcx, rdx
0x7fffeafc9a81:	mov		qword ptr [rbp - 0xa8], rcx
0x7fffeafc9a88:	mov		rcx, qword ptr [rbp - 0xa8]
0x7fffeafc9a8f:	mov		qword ptr [rbp - 0xb0], rcx
0x7fffeafc9a96:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafc9a9a:	mov		eax, dword ptr [rcx]
0x7fffeafc9a9c:	mov		ecx, dword ptr [rbp - 0x9c]
0x7fffeafc9aa2:	mov		esi, 1
0x7fffeafc9aa7:	shl		esi, cl
0x7fffeafc9aa9:	and		eax, esi
0x7fffeafc9aab:	cmp		eax, 0
0x7fffeafc9aae:	jne		0x7fffeafc9ace
0x7fffeafc9ab4:	mov		ecx, dword ptr [rbp - 0x9c]
0x7fffeafc9aba:	mov		eax, 1
0x7fffeafc9abf:	shl		eax, cl
0x7fffeafc9ac1:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafc9ac5:	or		eax, dword ptr [rdx]
0x7fffeafc9ac7:	mov		dword ptr [rdx], eax
0x7fffeafc9ac9:	jmp		0x7fffeafc9b18
disassembling symbol '.LBB8_63':
textAddr: 0x7fffeafc9ace, textSize: 64
0x7fffeafc9ace:	mov		rax, qword ptr [rbp - 0xa8]
0x7fffeafc9ad5:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafc9ad9:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafc9add:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafc9ae1:	setae		dl
0x7fffeafc9ae4:	and		dl, 1
0x7fffeafc9ae7:	movzx		esi, dl
0x7fffeafc9aea:	movsxd		rax, esi
0x7fffeafc9aed:	cmp		rax, 0
0x7fffeafc9af1:	je		0x7fffeafc9b0e
0x7fffeafc9af7:	mov		rax, qword ptr [rbp - 0xa8]
0x7fffeafc9afe:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafc9b02:	mov		qword ptr [rbp - 0xb0], rax
0x7fffeafc9b09:	jmp		0x7fffeafc9b13
disassembling symbol '.LBB8_65':
textAddr: 0x7fffeafc9b0e, textSize: 5
0x7fffeafc9b0e:	call		0x7fffeafc4c10
disassembling symbol '.LBB8_66':
textAddr: 0x7fffeafc9b13, textSize: 5
0x7fffeafc9b13:	jmp		0x7fffeafc9b18
disassembling symbol '.LBB8_67':
textAddr: 0x7fffeafc9b18, textSize: 72
0x7fffeafc9b18:	mov		rax, qword ptr [rbp - 0x98]
0x7fffeafc9b1f:	mov		rcx, qword ptr [rbp - 0xa8]
0x7fffeafc9b26:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafc9b2a:	mov		rax, qword ptr [rbp - 0x98]
0x7fffeafc9b31:	mov		rcx, qword ptr [rbp - 0xb0]
0x7fffeafc9b38:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafc9b3c:	mov		rax, qword ptr [rbp - 0xb0]
0x7fffeafc9b43:	mov		rcx, qword ptr [rbp - 0x98]
0x7fffeafc9b4a:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafc9b4e:	mov		rax, qword ptr [rbp - 0xa8]
0x7fffeafc9b55:	mov		rcx, qword ptr [rbp - 0x98]
0x7fffeafc9b5c:	mov		qword ptr [rcx + 0x18], rax
disassembling symbol '.LBB8_68':
textAddr: 0x7fffeafc9b60, textSize: 24
0x7fffeafc9b60:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafc9b64:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafc9b68:	mov		qword ptr [rcx + 8], rax
0x7fffeafc9b6c:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafc9b70:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafc9b74:	mov		qword ptr [rcx + 0x20], rax
disassembling symbol '.LBB8_69':
textAddr: 0x7fffeafc9b78, textSize: 19
0x7fffeafc9b78:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc9b7c:	add		rax, 0x10
0x7fffeafc9b82:	add		rsp, 0xc0
0x7fffeafc9b89:	pop		rbp
0x7fffeafc9b8a:	ret		
disassembling symbol '.LBB8_70':
textAddr: 0x7fffeafc9b8b, textSize: 5
0x7fffeafc9b8b:	jmp		0x7fffeafc9b90
disassembling symbol '.LBB8_71':
textAddr: 0x7fffeafc9b90, textSize: 16
0x7fffeafc9b90:	call		0x7fffeafc4c10
0x7fffeafc9b95:	nop		word ptr cs:[rax + rax]
0x7fffeafc9b9f:	nop		
disassembling symbol 'tmalloc_large':
textAddr: 0x7fffeafc9ba0, textSize: 3344
0x7fffeafc9ba0:	push		rbp
0x7fffeafc9ba1:	mov		rbp, rsp
0x7fffeafc9ba4:	sub		rsp, 0x150
0x7fffeafc9bab:	xor		eax, eax
0x7fffeafc9bad:	mov		ecx, eax
0x7fffeafc9baf:	mov		qword ptr [rbp - 0x10], rdi
0x7fffeafc9bb3:	mov		qword ptr [rbp - 0x18], rsi
0x7fffeafc9bb7:	mov		qword ptr [rbp - 0x20], 0
0x7fffeafc9bbf:	sub		rcx, qword ptr [rbp - 0x18]
0x7fffeafc9bc3:	mov		qword ptr [rbp - 0x28], rcx
0x7fffeafc9bc7:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafc9bcb:	shr		rcx, 8
0x7fffeafc9bcf:	mov		dword ptr [rbp - 0x38], ecx
0x7fffeafc9bd2:	cmp		dword ptr [rbp - 0x38], 0
0x7fffeafc9bd6:	jne		0x7fffeafc9be8
0x7fffeafc9bdc:	mov		dword ptr [rbp - 0x34], 0
0x7fffeafc9be3:	jmp		0x7fffeafc9c41
0x7fffeafc9be8:	cmp		dword ptr [rbp - 0x38], 0xffff
0x7fffeafc9bef:	jbe		0x7fffeafc9c01
0x7fffeafc9bf5:	mov		dword ptr [rbp - 0x34], 0x1f
0x7fffeafc9bfc:	jmp		0x7fffeafc9c3c
0x7fffeafc9c01:	mov		eax, dword ptr [rbp - 0x38]
0x7fffeafc9c04:	bsr		eax, eax
0x7fffeafc9c07:	xor		eax, 0x1f
0x7fffeafc9c0a:	mov		ecx, 0x1f
0x7fffeafc9c0f:	sub		ecx, eax
0x7fffeafc9c11:	mov		dword ptr [rbp - 0x3c], ecx
0x7fffeafc9c14:	mov		eax, dword ptr [rbp - 0x3c]
0x7fffeafc9c17:	shl		eax, 1
0x7fffeafc9c1a:	mov		eax, eax
0x7fffeafc9c1c:	mov		edx, eax
0x7fffeafc9c1e:	mov		rsi, qword ptr [rbp - 0x18]
0x7fffeafc9c22:	mov		eax, dword ptr [rbp - 0x3c]
0x7fffeafc9c25:	add		eax, 7
0x7fffeafc9c28:	mov		eax, eax
0x7fffeafc9c2a:	mov		ecx, eax
0x7fffeafc9c2c:	shr		rsi, cl
0x7fffeafc9c2f:	and		rsi, 1
0x7fffeafc9c36:	add		rdx, rsi
0x7fffeafc9c39:	mov		dword ptr [rbp - 0x34], edx
0x7fffeafc9c3c:	jmp		0x7fffeafc9c41
0x7fffeafc9c41:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafc9c45:	mov		ecx, dword ptr [rbp - 0x34]
0x7fffeafc9c48:	mov		edx, ecx
0x7fffeafc9c4a:	mov		rax, qword ptr [rax + rdx*8 + 0x258]
0x7fffeafc9c52:	mov		qword ptr [rbp - 0x30], rax
0x7fffeafc9c56:	cmp		rax, 0
0x7fffeafc9c5a:	je		0x7fffeafc9d83
0x7fffeafc9c60:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc9c64:	cmp		dword ptr [rbp - 0x34], 0x1f
0x7fffeafc9c68:	mov		qword ptr [rbp - 0x120], rax
0x7fffeafc9c6f:	jne		0x7fffeafc9c85
0x7fffeafc9c75:	xor		eax, eax
0x7fffeafc9c77:	mov		ecx, eax
0x7fffeafc9c79:	mov		qword ptr [rbp - 0x128], rcx
0x7fffeafc9c80:	jmp		0x7fffeafc9ca4
0x7fffeafc9c85:	mov		eax, dword ptr [rbp - 0x34]
0x7fffeafc9c88:	shr		eax, 1
0x7fffeafc9c8b:	add		eax, 8
0x7fffeafc9c8e:	sub		eax, 2
0x7fffeafc9c91:	mov		eax, eax
0x7fffeafc9c93:	mov		ecx, eax
0x7fffeafc9c95:	mov		edx, 0x3f
0x7fffeafc9c9a:	sub		rdx, rcx
0x7fffeafc9c9d:	mov		qword ptr [rbp - 0x128], rdx
0x7fffeafc9ca4:	mov		rax, qword ptr [rbp - 0x128]
0x7fffeafc9cab:	mov		rcx, rax
0x7fffeafc9cae:	mov		rax, qword ptr [rbp - 0x120]
0x7fffeafc9cb5:	shl		rax, cl
0x7fffeafc9cb8:	mov		qword ptr [rbp - 0x48], rax
0x7fffeafc9cbc:	mov		qword ptr [rbp - 0x50], 0
0x7fffeafc9cc4:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafc9cc8:	mov		rax, qword ptr [rax + 8]
0x7fffeafc9ccc:	and		rax, 0xfffffffffffffff8
0x7fffeafc9cd2:	sub		rax, qword ptr [rbp - 0x18]
0x7fffeafc9cd6:	mov		qword ptr [rbp - 0x60], rax
0x7fffeafc9cda:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafc9cde:	cmp		rax, qword ptr [rbp - 0x28]
0x7fffeafc9ce2:	jae		0x7fffeafc9d0c
0x7fffeafc9ce8:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafc9cec:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafc9cf0:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafc9cf4:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafc9cf8:	cmp		rax, 0
0x7fffeafc9cfc:	jne		0x7fffeafc9d07
0x7fffeafc9d02:	jmp		0x7fffeafc9d7e
0x7fffeafc9d07:	jmp		0x7fffeafc9d0c
0x7fffeafc9d0c:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafc9d10:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafc9d14:	mov		qword ptr [rbp - 0x58], rax
0x7fffeafc9d18:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafc9d1c:	mov		rcx, qword ptr [rbp - 0x48]
0x7fffeafc9d20:	shr		rcx, 0x3f
0x7fffeafc9d24:	and		rcx, 1
0x7fffeafc9d2b:	mov		rax, qword ptr [rax + rcx*8 + 0x20]
0x7fffeafc9d30:	mov		qword ptr [rbp - 0x30], rax
0x7fffeafc9d34:	cmp		qword ptr [rbp - 0x58], 0
0x7fffeafc9d39:	je		0x7fffeafc9d55
0x7fffeafc9d3f:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafc9d43:	cmp		rax, qword ptr [rbp - 0x30]
0x7fffeafc9d47:	je		0x7fffeafc9d55
0x7fffeafc9d4d:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafc9d51:	mov		qword ptr [rbp - 0x50], rax
0x7fffeafc9d55:	cmp		qword ptr [rbp - 0x30], 0
0x7fffeafc9d5a:	jne		0x7fffeafc9d6d
0x7fffeafc9d60:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafc9d64:	mov		qword ptr [rbp - 0x30], rax
0x7fffeafc9d68:	jmp		0x7fffeafc9d7e
0x7fffeafc9d6d:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafc9d71:	shl		rax, 1
0x7fffeafc9d75:	mov		qword ptr [rbp - 0x48], rax
0x7fffeafc9d79:	jmp		0x7fffeafc9cc4
0x7fffeafc9d7e:	jmp		0x7fffeafc9d83
0x7fffeafc9d83:	cmp		qword ptr [rbp - 0x30], 0
0x7fffeafc9d88:	jne		0x7fffeafc9e00
0x7fffeafc9d8e:	cmp		qword ptr [rbp - 0x20], 0
0x7fffeafc9d93:	jne		0x7fffeafc9e00
0x7fffeafc9d99:	xor		eax, eax
0x7fffeafc9d9b:	mov		ecx, dword ptr [rbp - 0x34]
0x7fffeafc9d9e:	mov		edx, 1
0x7fffeafc9da3:	mov		esi, edx
0x7fffeafc9da5:	shl		esi, cl
0x7fffeafc9da7:	shl		esi, 1
0x7fffeafc9daa:	mov		ecx, dword ptr [rbp - 0x34]
0x7fffeafc9dad:	shl		edx, cl
0x7fffeafc9daf:	shl		edx, 1
0x7fffeafc9db2:	sub		eax, edx
0x7fffeafc9db4:	or		esi, eax
0x7fffeafc9db6:	mov		rdi, qword ptr [rbp - 0x10]
0x7fffeafc9dba:	and		esi, dword ptr [rdi + 4]
0x7fffeafc9dbd:	mov		dword ptr [rbp - 0x64], esi
0x7fffeafc9dc0:	cmp		dword ptr [rbp - 0x64], 0
0x7fffeafc9dc4:	je		0x7fffeafc9dfb
0x7fffeafc9dca:	xor		eax, eax
0x7fffeafc9dcc:	mov		ecx, dword ptr [rbp - 0x64]
0x7fffeafc9dcf:	sub		eax, dword ptr [rbp - 0x64]
0x7fffeafc9dd2:	and		ecx, eax
0x7fffeafc9dd4:	mov		dword ptr [rbp - 0x6c], ecx
0x7fffeafc9dd7:	mov		eax, dword ptr [rbp - 0x6c]
0x7fffeafc9dda:	bsf		eax, eax
0x7fffeafc9ddd:	mov		dword ptr [rbp - 0x70], eax
0x7fffeafc9de0:	mov		eax, dword ptr [rbp - 0x70]
0x7fffeafc9de3:	mov		dword ptr [rbp - 0x68], eax
0x7fffeafc9de6:	mov		rdx, qword ptr [rbp - 0x10]
0x7fffeafc9dea:	mov		eax, dword ptr [rbp - 0x68]
0x7fffeafc9ded:	mov		esi, eax
0x7fffeafc9def:	mov		rdx, qword ptr [rdx + rsi*8 + 0x258]
0x7fffeafc9df7:	mov		qword ptr [rbp - 0x30], rdx
0x7fffeafc9dfb:	jmp		0x7fffeafc9e00
0x7fffeafc9e00:	jmp		0x7fffeafc9e05
0x7fffeafc9e05:	cmp		qword ptr [rbp - 0x30], 0
0x7fffeafc9e0a:	je		0x7fffeafc9e86
0x7fffeafc9e10:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafc9e14:	mov		rax, qword ptr [rax + 8]
0x7fffeafc9e18:	and		rax, 0xfffffffffffffff8
0x7fffeafc9e1e:	sub		rax, qword ptr [rbp - 0x18]
0x7fffeafc9e22:	mov		qword ptr [rbp - 0x78], rax
0x7fffeafc9e26:	mov		rax, qword ptr [rbp - 0x78]
0x7fffeafc9e2a:	cmp		rax, qword ptr [rbp - 0x28]
0x7fffeafc9e2e:	jae		0x7fffeafc9e44
0x7fffeafc9e34:	mov		rax, qword ptr [rbp - 0x78]
0x7fffeafc9e38:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafc9e3c:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafc9e40:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafc9e44:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafc9e48:	cmp		qword ptr [rax + 0x20], 0
0x7fffeafc9e4d:	je		0x7fffeafc9e67
0x7fffeafc9e53:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafc9e57:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafc9e5b:	mov		qword ptr [rbp - 0x130], rax
0x7fffeafc9e62:	jmp		0x7fffeafc9e76
0x7fffeafc9e67:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafc9e6b:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafc9e6f:	mov		qword ptr [rbp - 0x130], rax
0x7fffeafc9e76:	mov		rax, qword ptr [rbp - 0x130]
0x7fffeafc9e7d:	mov		qword ptr [rbp - 0x30], rax
0x7fffeafc9e81:	jmp		0x7fffeafc9e05
0x7fffeafc9e86:	cmp		qword ptr [rbp - 0x20], 0
0x7fffeafc9e8b:	je		0x7fffeafca898
0x7fffeafc9e91:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafc9e95:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafc9e99:	mov		rcx, qword ptr [rcx + 8]
0x7fffeafc9e9d:	sub		rcx, qword ptr [rbp - 0x18]
0x7fffeafc9ea1:	cmp		rax, rcx
0x7fffeafc9ea4:	jae		0x7fffeafca898
0x7fffeafc9eaa:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc9eae:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafc9eb2:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafc9eb6:	setae		dl
0x7fffeafc9eb9:	and		dl, 1
0x7fffeafc9ebc:	movzx		esi, dl
0x7fffeafc9ebf:	movsxd		rax, esi
0x7fffeafc9ec2:	cmp		rax, 0
0x7fffeafc9ec6:	je		0x7fffeafca893
0x7fffeafc9ecc:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc9ed0:	add		rax, qword ptr [rbp - 0x18]
0x7fffeafc9ed4:	mov		qword ptr [rbp - 0x80], rax
0x7fffeafc9ed8:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc9edc:	mov		rcx, qword ptr [rbp - 0x80]
0x7fffeafc9ee0:	cmp		rax, rcx
0x7fffeafc9ee3:	setb		dl
0x7fffeafc9ee6:	and		dl, 1
0x7fffeafc9ee9:	movzx		esi, dl
0x7fffeafc9eec:	movsxd		rax, esi
0x7fffeafc9eef:	cmp		rax, 0
0x7fffeafc9ef3:	je		0x7fffeafca88e
0x7fffeafc9ef9:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc9efd:	mov		rax, qword ptr [rax + 0x30]
0x7fffeafc9f01:	mov		qword ptr [rbp - 0x88], rax
0x7fffeafc9f08:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc9f0c:	mov		rax, qword ptr [rax + 0x18]
0x7fffeafc9f10:	cmp		rax, qword ptr [rbp - 0x20]
0x7fffeafc9f14:	je		0x7fffeafc9fd5
0x7fffeafc9f1a:	xor		eax, eax
0x7fffeafc9f1c:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafc9f20:	mov		rcx, qword ptr [rcx + 0x10]
0x7fffeafc9f24:	mov		qword ptr [rbp - 0x98], rcx
0x7fffeafc9f2b:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafc9f2f:	mov		rcx, qword ptr [rcx + 0x18]
0x7fffeafc9f33:	mov		qword ptr [rbp - 0x90], rcx
0x7fffeafc9f3a:	mov		rcx, qword ptr [rbp - 0x98]
0x7fffeafc9f41:	mov		rdx, qword ptr [rbp - 0x10]
0x7fffeafc9f45:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafc9f49:	mov		byte ptr [rbp - 0x131], al
0x7fffeafc9f4f:	jb		0x7fffeafc9f8a
0x7fffeafc9f55:	xor		eax, eax
0x7fffeafc9f57:	mov		rcx, qword ptr [rbp - 0x98]
0x7fffeafc9f5e:	mov		rcx, qword ptr [rcx + 0x18]
0x7fffeafc9f62:	cmp		rcx, qword ptr [rbp - 0x20]
0x7fffeafc9f66:	mov		byte ptr [rbp - 0x131], al
0x7fffeafc9f6c:	jne		0x7fffeafc9f8a
0x7fffeafc9f72:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafc9f79:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafc9f7d:	cmp		rax, qword ptr [rbp - 0x20]
0x7fffeafc9f81:	sete		cl
0x7fffeafc9f84:	mov		byte ptr [rbp - 0x131], cl
0x7fffeafc9f8a:	mov		al, byte ptr [rbp - 0x131]
0x7fffeafc9f90:	and		al, 1
0x7fffeafc9f92:	movzx		ecx, al
0x7fffeafc9f95:	movsxd		rdx, ecx
0x7fffeafc9f98:	cmp		rdx, 0
0x7fffeafc9f9c:	je		0x7fffeafc9fcb
0x7fffeafc9fa2:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafc9fa9:	mov		rcx, qword ptr [rbp - 0x98]
0x7fffeafc9fb0:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafc9fb4:	mov		rax, qword ptr [rbp - 0x98]
0x7fffeafc9fbb:	mov		rcx, qword ptr [rbp - 0x90]
0x7fffeafc9fc2:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafc9fc6:	jmp		0x7fffeafc9fd0
0x7fffeafc9fcb:	call		0x7fffeafc4c10
0x7fffeafc9fd0:	jmp		0x7fffeafca104
0x7fffeafc9fd5:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc9fd9:	mov		rcx, rax
0x7fffeafc9fdc:	add		rcx, 0x20
0x7fffeafc9fe3:	add		rcx, 8
0x7fffeafc9fea:	mov		qword ptr [rbp - 0xa0], rcx
0x7fffeafc9ff1:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafc9ff5:	mov		qword ptr [rbp - 0x90], rax
0x7fffeafc9ffc:	cmp		rax, 0
0x7fffeafca000:	jne		0x7fffeafca030
0x7fffeafca006:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafca00a:	mov		rcx, rax
0x7fffeafca00d:	add		rcx, 0x20
0x7fffeafca014:	mov		qword ptr [rbp - 0xa0], rcx
0x7fffeafca01b:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafca01f:	mov		qword ptr [rbp - 0x90], rax
0x7fffeafca026:	cmp		rax, 0
0x7fffeafca02a:	je		0x7fffeafca0ff
0x7fffeafca030:	jmp		0x7fffeafca035
0x7fffeafca035:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafca03c:	mov		rcx, rax
0x7fffeafca03f:	add		rcx, 0x20
0x7fffeafca046:	add		rcx, 8
0x7fffeafca04d:	mov		qword ptr [rbp - 0xa8], rcx
0x7fffeafca054:	cmp		qword ptr [rax + 0x28], 0
0x7fffeafca059:	mov		dl, 1
0x7fffeafca05b:	mov		byte ptr [rbp - 0x132], dl
0x7fffeafca061:	jne		0x7fffeafca08d
0x7fffeafca067:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafca06e:	mov		rcx, rax
0x7fffeafca071:	add		rcx, 0x20
0x7fffeafca078:	mov		qword ptr [rbp - 0xa8], rcx
0x7fffeafca07f:	cmp		qword ptr [rax + 0x20], 0
0x7fffeafca084:	setne		dl
0x7fffeafca087:	mov		byte ptr [rbp - 0x132], dl
0x7fffeafca08d:	mov		al, byte ptr [rbp - 0x132]
0x7fffeafca093:	test		al, 1
0x7fffeafca095:	jne		0x7fffeafca0a0
0x7fffeafca09b:	jmp		0x7fffeafca0bd
0x7fffeafca0a0:	mov		rax, qword ptr [rbp - 0xa8]
0x7fffeafca0a7:	mov		qword ptr [rbp - 0xa0], rax
0x7fffeafca0ae:	mov		rax, qword ptr [rax]
0x7fffeafca0b1:	mov		qword ptr [rbp - 0x90], rax
0x7fffeafca0b8:	jmp		0x7fffeafca035
0x7fffeafca0bd:	mov		rax, qword ptr [rbp - 0xa0]
0x7fffeafca0c4:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafca0c8:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafca0cc:	setae		dl
0x7fffeafca0cf:	and		dl, 1
0x7fffeafca0d2:	movzx		esi, dl
0x7fffeafca0d5:	movsxd		rax, esi
0x7fffeafca0d8:	cmp		rax, 0
0x7fffeafca0dc:	je		0x7fffeafca0f5
0x7fffeafca0e2:	mov		rax, qword ptr [rbp - 0xa0]
0x7fffeafca0e9:	mov		qword ptr [rax], 0
0x7fffeafca0f0:	jmp		0x7fffeafca0fa
0x7fffeafca0f5:	call		0x7fffeafc4c10
0x7fffeafca0fa:	jmp		0x7fffeafca0ff
0x7fffeafca0ff:	jmp		0x7fffeafca104
0x7fffeafca104:	cmp		qword ptr [rbp - 0x88], 0
0x7fffeafca10c:	je		0x7fffeafca32f
0x7fffeafca112:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafca116:	add		rax, 0x258
0x7fffeafca11c:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafca120:	mov		edx, dword ptr [rcx + 0x38]
0x7fffeafca123:	mov		ecx, edx
0x7fffeafca125:	shl		rcx, 3
0x7fffeafca129:	add		rax, rcx
0x7fffeafca12c:	mov		qword ptr [rbp - 0xb0], rax
0x7fffeafca133:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafca137:	mov		rcx, qword ptr [rbp - 0xb0]
0x7fffeafca13e:	cmp		rax, qword ptr [rcx]
0x7fffeafca141:	jne		0x7fffeafca182
0x7fffeafca147:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafca14e:	mov		rcx, qword ptr [rbp - 0xb0]
0x7fffeafca155:	mov		qword ptr [rcx], rax
0x7fffeafca158:	cmp		rax, 0
0x7fffeafca15c:	jne		0x7fffeafca17d
0x7fffeafca162:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafca166:	mov		ecx, dword ptr [rax + 0x38]
0x7fffeafca169:	mov		edx, 1
0x7fffeafca16e:	shl		edx, cl
0x7fffeafca170:	xor		edx, 0xffffffff
0x7fffeafca173:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafca177:	and		edx, dword ptr [rax + 4]
0x7fffeafca17a:	mov		dword ptr [rax + 4], edx
0x7fffeafca17d:	jmp		0x7fffeafca1f4
0x7fffeafca182:	mov		rax, qword ptr [rbp - 0x88]
0x7fffeafca189:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafca18d:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafca191:	setae		dl
0x7fffeafca194:	and		dl, 1
0x7fffeafca197:	movzx		esi, dl
0x7fffeafca19a:	movsxd		rax, esi
0x7fffeafca19d:	cmp		rax, 0
0x7fffeafca1a1:	je		0x7fffeafca1ea
0x7fffeafca1a7:	mov		rax, qword ptr [rbp - 0x88]
0x7fffeafca1ae:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafca1b2:	cmp		rax, qword ptr [rbp - 0x20]
0x7fffeafca1b6:	jne		0x7fffeafca1d3
0x7fffeafca1bc:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafca1c3:	mov		rcx, qword ptr [rbp - 0x88]
0x7fffeafca1ca:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafca1ce:	jmp		0x7fffeafca1e5
0x7fffeafca1d3:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafca1da:	mov		rcx, qword ptr [rbp - 0x88]
0x7fffeafca1e1:	mov		qword ptr [rcx + 0x28], rax
0x7fffeafca1e5:	jmp		0x7fffeafca1ef
0x7fffeafca1ea:	call		0x7fffeafc4c10
0x7fffeafca1ef:	jmp		0x7fffeafca1f4
0x7fffeafca1f4:	cmp		qword ptr [rbp - 0x90], 0
0x7fffeafca1fc:	je		0x7fffeafca32a
0x7fffeafca202:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafca209:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafca20d:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafca211:	setae		dl
0x7fffeafca214:	and		dl, 1
0x7fffeafca217:	movzx		esi, dl
0x7fffeafca21a:	movsxd		rax, esi
0x7fffeafca21d:	cmp		rax, 0
0x7fffeafca221:	je		0x7fffeafca320
0x7fffeafca227:	mov		rax, qword ptr [rbp - 0x88]
0x7fffeafca22e:	mov		rcx, qword ptr [rbp - 0x90]
0x7fffeafca235:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafca239:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafca23d:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafca241:	mov		qword ptr [rbp - 0xb8], rax
0x7fffeafca248:	cmp		rax, 0
0x7fffeafca24c:	je		0x7fffeafca2aa
0x7fffeafca252:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafca259:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafca25d:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafca261:	setae		dl
0x7fffeafca264:	and		dl, 1
0x7fffeafca267:	movzx		esi, dl
0x7fffeafca26a:	movsxd		rax, esi
0x7fffeafca26d:	cmp		rax, 0
0x7fffeafca271:	je		0x7fffeafca2a0
0x7fffeafca277:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafca27e:	mov		rcx, qword ptr [rbp - 0x90]
0x7fffeafca285:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafca289:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafca290:	mov		rcx, qword ptr [rbp - 0xb8]
0x7fffeafca297:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafca29b:	jmp		0x7fffeafca2a5
0x7fffeafca2a0:	call		0x7fffeafc4c10
0x7fffeafca2a5:	jmp		0x7fffeafca2aa
0x7fffeafca2aa:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafca2ae:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafca2b2:	mov		qword ptr [rbp - 0xc0], rax
0x7fffeafca2b9:	cmp		rax, 0
0x7fffeafca2bd:	je		0x7fffeafca31b
0x7fffeafca2c3:	mov		rax, qword ptr [rbp - 0xc0]
0x7fffeafca2ca:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafca2ce:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafca2d2:	setae		dl
0x7fffeafca2d5:	and		dl, 1
0x7fffeafca2d8:	movzx		esi, dl
0x7fffeafca2db:	movsxd		rax, esi
0x7fffeafca2de:	cmp		rax, 0
0x7fffeafca2e2:	je		0x7fffeafca311
0x7fffeafca2e8:	mov		rax, qword ptr [rbp - 0xc0]
0x7fffeafca2ef:	mov		rcx, qword ptr [rbp - 0x90]
0x7fffeafca2f6:	mov		qword ptr [rcx + 0x28], rax
0x7fffeafca2fa:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafca301:	mov		rcx, qword ptr [rbp - 0xc0]
0x7fffeafca308:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafca30c:	jmp		0x7fffeafca316
0x7fffeafca311:	call		0x7fffeafc4c10
0x7fffeafca316:	jmp		0x7fffeafca31b
0x7fffeafca31b:	jmp		0x7fffeafca325
0x7fffeafca320:	call		0x7fffeafc4c10
0x7fffeafca325:	jmp		0x7fffeafca32a
0x7fffeafca32a:	jmp		0x7fffeafca32f
0x7fffeafca32f:	cmp		qword ptr [rbp - 0x28], 0x20
0x7fffeafca334:	jae		0x7fffeafca378
0x7fffeafca33a:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafca33e:	add		rax, qword ptr [rbp - 0x18]
0x7fffeafca342:	or		rax, 1
0x7fffeafca348:	or		rax, 2
0x7fffeafca34e:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafca352:	mov		qword ptr [rcx + 8], rax
0x7fffeafca356:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafca35a:	mov		rcx, qword ptr [rbp - 0x28]
0x7fffeafca35e:	add		rcx, qword ptr [rbp - 0x18]
0x7fffeafca362:	mov		rdx, qword ptr [rax + rcx + 8]
0x7fffeafca367:	or		rdx, 1
0x7fffeafca36e:	mov		qword ptr [rax + rcx + 8], rdx
0x7fffeafca373:	jmp		0x7fffeafca87b
0x7fffeafca378:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafca37c:	or		rax, 1
0x7fffeafca382:	or		rax, 2
0x7fffeafca388:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafca38c:	mov		qword ptr [rcx + 8], rax
0x7fffeafca390:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafca394:	or		rax, 1
0x7fffeafca39a:	mov		rcx, qword ptr [rbp - 0x80]
0x7fffeafca39e:	mov		qword ptr [rcx + 8], rax
0x7fffeafca3a2:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafca3a6:	mov		rcx, qword ptr [rbp - 0x80]
0x7fffeafca3aa:	mov		rdx, qword ptr [rbp - 0x28]
0x7fffeafca3ae:	mov		qword ptr [rcx + rdx], rax
0x7fffeafca3b2:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafca3b6:	shr		rax, 3
0x7fffeafca3ba:	cmp		rax, 0x20
0x7fffeafca3be:	jae		0x7fffeafca4c9
0x7fffeafca3c4:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafca3c8:	shr		rax, 3
0x7fffeafca3cc:	mov		dword ptr [rbp - 0xc4], eax
0x7fffeafca3d2:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafca3d6:	add		rcx, 0x48
0x7fffeafca3dd:	mov		eax, dword ptr [rbp - 0xc4]
0x7fffeafca3e3:	shl		eax, 1
0x7fffeafca3e6:	mov		eax, eax
0x7fffeafca3e8:	mov		edx, eax
0x7fffeafca3ea:	shl		rdx, 3
0x7fffeafca3ee:	add		rcx, rdx
0x7fffeafca3f1:	mov		qword ptr [rbp - 0xd0], rcx
0x7fffeafca3f8:	mov		rcx, qword ptr [rbp - 0xd0]
0x7fffeafca3ff:	mov		qword ptr [rbp - 0xd8], rcx
0x7fffeafca406:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafca40a:	mov		eax, dword ptr [rcx]
0x7fffeafca40c:	mov		ecx, dword ptr [rbp - 0xc4]
0x7fffeafca412:	mov		esi, 1
0x7fffeafca417:	shl		esi, cl
0x7fffeafca419:	and		eax, esi
0x7fffeafca41b:	cmp		eax, 0
0x7fffeafca41e:	jne		0x7fffeafca43e
0x7fffeafca424:	mov		ecx, dword ptr [rbp - 0xc4]
0x7fffeafca42a:	mov		eax, 1
0x7fffeafca42f:	shl		eax, cl
0x7fffeafca431:	mov		rdx, qword ptr [rbp - 0x10]
0x7fffeafca435:	or		eax, dword ptr [rdx]
0x7fffeafca437:	mov		dword ptr [rdx], eax
0x7fffeafca439:	jmp		0x7fffeafca488
0x7fffeafca43e:	mov		rax, qword ptr [rbp - 0xd0]
0x7fffeafca445:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafca449:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafca44d:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafca451:	setae		dl
0x7fffeafca454:	and		dl, 1
0x7fffeafca457:	movzx		esi, dl
0x7fffeafca45a:	movsxd		rax, esi
0x7fffeafca45d:	cmp		rax, 0
0x7fffeafca461:	je		0x7fffeafca47e
0x7fffeafca467:	mov		rax, qword ptr [rbp - 0xd0]
0x7fffeafca46e:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafca472:	mov		qword ptr [rbp - 0xd8], rax
0x7fffeafca479:	jmp		0x7fffeafca483
0x7fffeafca47e:	call		0x7fffeafc4c10
0x7fffeafca483:	jmp		0x7fffeafca488
0x7fffeafca488:	mov		rax, qword ptr [rbp - 0x80]
0x7fffeafca48c:	mov		rcx, qword ptr [rbp - 0xd0]
0x7fffeafca493:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafca497:	mov		rax, qword ptr [rbp - 0x80]
0x7fffeafca49b:	mov		rcx, qword ptr [rbp - 0xd8]
0x7fffeafca4a2:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafca4a6:	mov		rax, qword ptr [rbp - 0xd8]
0x7fffeafca4ad:	mov		rcx, qword ptr [rbp - 0x80]
0x7fffeafca4b1:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafca4b5:	mov		rax, qword ptr [rbp - 0xd0]
0x7fffeafca4bc:	mov		rcx, qword ptr [rbp - 0x80]
0x7fffeafca4c0:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafca4c4:	jmp		0x7fffeafca876
0x7fffeafca4c9:	mov		rax, qword ptr [rbp - 0x80]
0x7fffeafca4cd:	mov		qword ptr [rbp - 0xe0], rax
0x7fffeafca4d4:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafca4d8:	shr		rax, 8
0x7fffeafca4dc:	mov		dword ptr [rbp - 0xf0], eax
0x7fffeafca4e2:	cmp		dword ptr [rbp - 0xf0], 0
0x7fffeafca4e9:	jne		0x7fffeafca4fe
0x7fffeafca4ef:	mov		dword ptr [rbp - 0xec], 0
0x7fffeafca4f9:	jmp		0x7fffeafca56c
0x7fffeafca4fe:	cmp		dword ptr [rbp - 0xf0], 0xffff
0x7fffeafca508:	jbe		0x7fffeafca51d
0x7fffeafca50e:	mov		dword ptr [rbp - 0xec], 0x1f
0x7fffeafca518:	jmp		0x7fffeafca567
0x7fffeafca51d:	mov		eax, dword ptr [rbp - 0xf0]
0x7fffeafca523:	bsr		eax, eax
0x7fffeafca526:	xor		eax, 0x1f
0x7fffeafca529:	mov		ecx, 0x1f
0x7fffeafca52e:	sub		ecx, eax
0x7fffeafca530:	mov		dword ptr [rbp - 0xf4], ecx
0x7fffeafca536:	mov		eax, dword ptr [rbp - 0xf4]
0x7fffeafca53c:	shl		eax, 1
0x7fffeafca53f:	mov		eax, eax
0x7fffeafca541:	mov		edx, eax
0x7fffeafca543:	mov		rsi, qword ptr [rbp - 0x28]
0x7fffeafca547:	mov		eax, dword ptr [rbp - 0xf4]
0x7fffeafca54d:	add		eax, 7
0x7fffeafca550:	mov		eax, eax
0x7fffeafca552:	mov		ecx, eax
0x7fffeafca554:	shr		rsi, cl
0x7fffeafca557:	and		rsi, 1
0x7fffeafca55e:	add		rdx, rsi
0x7fffeafca561:	mov		dword ptr [rbp - 0xec], edx
0x7fffeafca567:	jmp		0x7fffeafca56c
0x7fffeafca56c:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafca570:	add		rax, 0x258
0x7fffeafca576:	mov		ecx, dword ptr [rbp - 0xec]
0x7fffeafca57c:	mov		edx, ecx
0x7fffeafca57e:	shl		rdx, 3
0x7fffeafca582:	add		rax, rdx
0x7fffeafca585:	mov		qword ptr [rbp - 0xe8], rax
0x7fffeafca58c:	mov		ecx, dword ptr [rbp - 0xec]
0x7fffeafca592:	mov		rax, qword ptr [rbp - 0xe0]
0x7fffeafca599:	mov		dword ptr [rax + 0x38], ecx
0x7fffeafca59c:	mov		rax, qword ptr [rbp - 0xe0]
0x7fffeafca5a3:	mov		qword ptr [rax + 0x28], 0
0x7fffeafca5ab:	mov		rax, qword ptr [rbp - 0xe0]
0x7fffeafca5b2:	mov		qword ptr [rax + 0x20], 0
0x7fffeafca5ba:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafca5be:	mov		ecx, dword ptr [rax + 4]
0x7fffeafca5c1:	mov		esi, dword ptr [rbp - 0xec]
0x7fffeafca5c7:	mov		dword ptr [rbp - 0x138], ecx
0x7fffeafca5cd:	mov		ecx, esi
0x7fffeafca5cf:	mov		esi, 1
0x7fffeafca5d4:	shl		esi, cl
0x7fffeafca5d6:	mov		edi, dword ptr [rbp - 0x138]
0x7fffeafca5dc:	and		edi, esi
0x7fffeafca5de:	cmp		edi, 0
0x7fffeafca5e1:	jne		0x7fffeafca643
0x7fffeafca5e7:	mov		ecx, dword ptr [rbp - 0xec]
0x7fffeafca5ed:	mov		eax, 1
0x7fffeafca5f2:	shl		eax, cl
0x7fffeafca5f4:	mov		rdx, qword ptr [rbp - 0x10]
0x7fffeafca5f8:	or		eax, dword ptr [rdx + 4]
0x7fffeafca5fb:	mov		dword ptr [rdx + 4], eax
0x7fffeafca5fe:	mov		rdx, qword ptr [rbp - 0xe0]
0x7fffeafca605:	mov		rsi, qword ptr [rbp - 0xe8]
0x7fffeafca60c:	mov		qword ptr [rsi], rdx
0x7fffeafca60f:	mov		rdx, qword ptr [rbp - 0xe8]
0x7fffeafca616:	mov		rsi, qword ptr [rbp - 0xe0]
0x7fffeafca61d:	mov		qword ptr [rsi + 0x30], rdx
0x7fffeafca621:	mov		rdx, qword ptr [rbp - 0xe0]
0x7fffeafca628:	mov		rsi, qword ptr [rbp - 0xe0]
0x7fffeafca62f:	mov		qword ptr [rsi + 0x18], rdx
0x7fffeafca633:	mov		rsi, qword ptr [rbp - 0xe0]
0x7fffeafca63a:	mov		qword ptr [rsi + 0x10], rdx
0x7fffeafca63e:	jmp		0x7fffeafca871
0x7fffeafca643:	mov		rax, qword ptr [rbp - 0xe8]
0x7fffeafca64a:	mov		rax, qword ptr [rax]
0x7fffeafca64d:	mov		qword ptr [rbp - 0x100], rax
0x7fffeafca654:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafca658:	cmp		dword ptr [rbp - 0xec], 0x1f
0x7fffeafca65f:	mov		qword ptr [rbp - 0x140], rax
0x7fffeafca666:	jne		0x7fffeafca67c
0x7fffeafca66c:	xor		eax, eax
0x7fffeafca66e:	mov		ecx, eax
0x7fffeafca670:	mov		qword ptr [rbp - 0x148], rcx
0x7fffeafca677:	jmp		0x7fffeafca69e
0x7fffeafca67c:	mov		eax, dword ptr [rbp - 0xec]
0x7fffeafca682:	shr		eax, 1
0x7fffeafca685:	add		eax, 8
0x7fffeafca688:	sub		eax, 2
0x7fffeafca68b:	mov		eax, eax
0x7fffeafca68d:	mov		ecx, eax
0x7fffeafca68f:	mov		edx, 0x3f
0x7fffeafca694:	sub		rdx, rcx
0x7fffeafca697:	mov		qword ptr [rbp - 0x148], rdx
0x7fffeafca69e:	mov		rax, qword ptr [rbp - 0x148]
0x7fffeafca6a5:	mov		rcx, rax
0x7fffeafca6a8:	mov		rax, qword ptr [rbp - 0x140]
0x7fffeafca6af:	shl		rax, cl
0x7fffeafca6b2:	mov		qword ptr [rbp - 0x108], rax
0x7fffeafca6b9:	mov		rax, qword ptr [rbp - 0x100]
0x7fffeafca6c0:	mov		rax, qword ptr [rax + 8]
0x7fffeafca6c4:	and		rax, 0xfffffffffffffff8
0x7fffeafca6ca:	cmp		rax, qword ptr [rbp - 0x28]
0x7fffeafca6ce:	je		0x7fffeafca7ae
0x7fffeafca6d4:	mov		rax, qword ptr [rbp - 0x100]
0x7fffeafca6db:	add		rax, 0x20
0x7fffeafca6e1:	mov		rcx, qword ptr [rbp - 0x108]
0x7fffeafca6e8:	shr		rcx, 0x3f
0x7fffeafca6ec:	and		rcx, 1
0x7fffeafca6f3:	shl		rcx, 3
0x7fffeafca6f7:	add		rax, rcx
0x7fffeafca6fa:	mov		qword ptr [rbp - 0x110], rax
0x7fffeafca701:	mov		rax, qword ptr [rbp - 0x108]
0x7fffeafca708:	shl		rax, 1
0x7fffeafca70c:	mov		qword ptr [rbp - 0x108], rax
0x7fffeafca713:	mov		rax, qword ptr [rbp - 0x110]
0x7fffeafca71a:	cmp		qword ptr [rax], 0
0x7fffeafca71e:	je		0x7fffeafca73a
0x7fffeafca724:	mov		rax, qword ptr [rbp - 0x110]
0x7fffeafca72b:	mov		rax, qword ptr [rax]
0x7fffeafca72e:	mov		qword ptr [rbp - 0x100], rax
0x7fffeafca735:	jmp		0x7fffeafca7a9
0x7fffeafca73a:	mov		rax, qword ptr [rbp - 0x110]
0x7fffeafca741:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafca745:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafca749:	setae		dl
0x7fffeafca74c:	and		dl, 1
0x7fffeafca74f:	movzx		esi, dl
0x7fffeafca752:	movsxd		rax, esi
0x7fffeafca755:	cmp		rax, 0
0x7fffeafca759:	je		0x7fffeafca7a4
0x7fffeafca75f:	mov		rax, qword ptr [rbp - 0xe0]
0x7fffeafca766:	mov		rcx, qword ptr [rbp - 0x110]
0x7fffeafca76d:	mov		qword ptr [rcx], rax
0x7fffeafca770:	mov		rax, qword ptr [rbp - 0x100]
0x7fffeafca777:	mov		rcx, qword ptr [rbp - 0xe0]
0x7fffeafca77e:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafca782:	mov		rax, qword ptr [rbp - 0xe0]
0x7fffeafca789:	mov		rcx, qword ptr [rbp - 0xe0]
0x7fffeafca790:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafca794:	mov		rcx, qword ptr [rbp - 0xe0]
0x7fffeafca79b:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafca79f:	jmp		0x7fffeafca86c
0x7fffeafca7a4:	call		0x7fffeafc4c10
0x7fffeafca7a9:	jmp		0x7fffeafca867
0x7fffeafca7ae:	xor		eax, eax
0x7fffeafca7b0:	mov		rcx, qword ptr [rbp - 0x100]
0x7fffeafca7b7:	mov		rcx, qword ptr [rcx + 0x10]
0x7fffeafca7bb:	mov		qword ptr [rbp - 0x118], rcx
0x7fffeafca7c2:	mov		rcx, qword ptr [rbp - 0x100]
0x7fffeafca7c9:	mov		rdx, qword ptr [rbp - 0x10]
0x7fffeafca7cd:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafca7d1:	mov		byte ptr [rbp - 0x149], al
0x7fffeafca7d7:	jb		0x7fffeafca7f5
0x7fffeafca7dd:	mov		rax, qword ptr [rbp - 0x118]
0x7fffeafca7e4:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafca7e8:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafca7ec:	setae		dl
0x7fffeafca7ef:	mov		byte ptr [rbp - 0x149], dl
0x7fffeafca7f5:	mov		al, byte ptr [rbp - 0x149]
0x7fffeafca7fb:	and		al, 1
0x7fffeafca7fd:	movzx		ecx, al
0x7fffeafca800:	movsxd		rdx, ecx
0x7fffeafca803:	cmp		rdx, 0
0x7fffeafca807:	je		0x7fffeafca862
0x7fffeafca80d:	mov		rax, qword ptr [rbp - 0xe0]
0x7fffeafca814:	mov		rcx, qword ptr [rbp - 0x118]
0x7fffeafca81b:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafca81f:	mov		rcx, qword ptr [rbp - 0x100]
0x7fffeafca826:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafca82a:	mov		rax, qword ptr [rbp - 0x118]
0x7fffeafca831:	mov		rcx, qword ptr [rbp - 0xe0]
0x7fffeafca838:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafca83c:	mov		rax, qword ptr [rbp - 0x100]
0x7fffeafca843:	mov		rcx, qword ptr [rbp - 0xe0]
0x7fffeafca84a:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafca84e:	mov		rax, qword ptr [rbp - 0xe0]
0x7fffeafca855:	mov		qword ptr [rax + 0x30], 0
0x7fffeafca85d:	jmp		0x7fffeafca86c
0x7fffeafca862:	call		0x7fffeafc4c10
0x7fffeafca867:	jmp		0x7fffeafca6b9
0x7fffeafca86c:	jmp		0x7fffeafca871
0x7fffeafca871:	jmp		0x7fffeafca876
0x7fffeafca876:	jmp		0x7fffeafca87b
0x7fffeafca87b:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafca87f:	add		rax, 0x10
0x7fffeafca885:	mov		qword ptr [rbp - 8], rax
0x7fffeafca889:	jmp		0x7fffeafca8a0
0x7fffeafca88e:	jmp		0x7fffeafca893
0x7fffeafca893:	call		0x7fffeafc4c10
0x7fffeafca898:	mov		qword ptr [rbp - 8], 0
0x7fffeafca8a0:	mov		rax, qword ptr [rbp - 8]
0x7fffeafca8a4:	add		rsp, 0x150
0x7fffeafca8ab:	pop		rbp
0x7fffeafca8ac:	ret		
0x7fffeafca8ad:	nop		dword ptr [rax]
disassembling symbol '.LBB9_2':
textAddr: 0x7fffeafc9be8, textSize: 25
0x7fffeafc9be8:	cmp		dword ptr [rbp - 0x38], 0xffff
0x7fffeafc9bef:	jbe		0x7fffeafc9c01
0x7fffeafc9bf5:	mov		dword ptr [rbp - 0x34], 0x1f
0x7fffeafc9bfc:	jmp		0x7fffeafc9c3c
disassembling symbol '.LBB9_4':
textAddr: 0x7fffeafc9c01, textSize: 59
0x7fffeafc9c01:	mov		eax, dword ptr [rbp - 0x38]
0x7fffeafc9c04:	bsr		eax, eax
0x7fffeafc9c07:	xor		eax, 0x1f
0x7fffeafc9c0a:	mov		ecx, 0x1f
0x7fffeafc9c0f:	sub		ecx, eax
0x7fffeafc9c11:	mov		dword ptr [rbp - 0x3c], ecx
0x7fffeafc9c14:	mov		eax, dword ptr [rbp - 0x3c]
0x7fffeafc9c17:	shl		eax, 1
0x7fffeafc9c1a:	mov		eax, eax
0x7fffeafc9c1c:	mov		edx, eax
0x7fffeafc9c1e:	mov		rsi, qword ptr [rbp - 0x18]
0x7fffeafc9c22:	mov		eax, dword ptr [rbp - 0x3c]
0x7fffeafc9c25:	add		eax, 7
0x7fffeafc9c28:	mov		eax, eax
0x7fffeafc9c2a:	mov		ecx, eax
0x7fffeafc9c2c:	shr		rsi, cl
0x7fffeafc9c2f:	and		rsi, 1
0x7fffeafc9c36:	add		rdx, rsi
0x7fffeafc9c39:	mov		dword ptr [rbp - 0x34], edx
disassembling symbol '.LBB9_5':
textAddr: 0x7fffeafc9c3c, textSize: 5
0x7fffeafc9c3c:	jmp		0x7fffeafc9c41
disassembling symbol '.LBB9_6':
textAddr: 0x7fffeafc9c41, textSize: 68
0x7fffeafc9c41:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafc9c45:	mov		ecx, dword ptr [rbp - 0x34]
0x7fffeafc9c48:	mov		edx, ecx
0x7fffeafc9c4a:	mov		rax, qword ptr [rax + rdx*8 + 0x258]
0x7fffeafc9c52:	mov		qword ptr [rbp - 0x30], rax
0x7fffeafc9c56:	cmp		rax, 0
0x7fffeafc9c5a:	je		0x7fffeafc9d83
0x7fffeafc9c60:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafc9c64:	cmp		dword ptr [rbp - 0x34], 0x1f
0x7fffeafc9c68:	mov		qword ptr [rbp - 0x120], rax
0x7fffeafc9c6f:	jne		0x7fffeafc9c85
0x7fffeafc9c75:	xor		eax, eax
0x7fffeafc9c77:	mov		ecx, eax
0x7fffeafc9c79:	mov		qword ptr [rbp - 0x128], rcx
0x7fffeafc9c80:	jmp		0x7fffeafc9ca4
disassembling symbol '.LBB9_9':
textAddr: 0x7fffeafc9c85, textSize: 31
0x7fffeafc9c85:	mov		eax, dword ptr [rbp - 0x34]
0x7fffeafc9c88:	shr		eax, 1
0x7fffeafc9c8b:	add		eax, 8
0x7fffeafc9c8e:	sub		eax, 2
0x7fffeafc9c91:	mov		eax, eax
0x7fffeafc9c93:	mov		ecx, eax
0x7fffeafc9c95:	mov		edx, 0x3f
0x7fffeafc9c9a:	sub		rdx, rcx
0x7fffeafc9c9d:	mov		qword ptr [rbp - 0x128], rdx
disassembling symbol '.LBB9_10':
textAddr: 0x7fffeafc9ca4, textSize: 32
0x7fffeafc9ca4:	mov		rax, qword ptr [rbp - 0x128]
0x7fffeafc9cab:	mov		rcx, rax
0x7fffeafc9cae:	mov		rax, qword ptr [rbp - 0x120]
0x7fffeafc9cb5:	shl		rax, cl
0x7fffeafc9cb8:	mov		qword ptr [rbp - 0x48], rax
0x7fffeafc9cbc:	mov		qword ptr [rbp - 0x50], 0
disassembling symbol '.LBB9_11':
textAddr: 0x7fffeafc9cc4, textSize: 67
0x7fffeafc9cc4:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafc9cc8:	mov		rax, qword ptr [rax + 8]
0x7fffeafc9ccc:	and		rax, 0xfffffffffffffff8
0x7fffeafc9cd2:	sub		rax, qword ptr [rbp - 0x18]
0x7fffeafc9cd6:	mov		qword ptr [rbp - 0x60], rax
0x7fffeafc9cda:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafc9cde:	cmp		rax, qword ptr [rbp - 0x28]
0x7fffeafc9ce2:	jae		0x7fffeafc9d0c
0x7fffeafc9ce8:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafc9cec:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafc9cf0:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafc9cf4:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafc9cf8:	cmp		rax, 0
0x7fffeafc9cfc:	jne		0x7fffeafc9d07
0x7fffeafc9d02:	jmp		0x7fffeafc9d7e
disassembling symbol '.LBB9_14':
textAddr: 0x7fffeafc9d07, textSize: 5
0x7fffeafc9d07:	jmp		0x7fffeafc9d0c
disassembling symbol '.LBB9_15':
textAddr: 0x7fffeafc9d0c, textSize: 73
0x7fffeafc9d0c:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafc9d10:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafc9d14:	mov		qword ptr [rbp - 0x58], rax
0x7fffeafc9d18:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafc9d1c:	mov		rcx, qword ptr [rbp - 0x48]
0x7fffeafc9d20:	shr		rcx, 0x3f
0x7fffeafc9d24:	and		rcx, 1
0x7fffeafc9d2b:	mov		rax, qword ptr [rax + rcx*8 + 0x20]
0x7fffeafc9d30:	mov		qword ptr [rbp - 0x30], rax
0x7fffeafc9d34:	cmp		qword ptr [rbp - 0x58], 0
0x7fffeafc9d39:	je		0x7fffeafc9d55
0x7fffeafc9d3f:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafc9d43:	cmp		rax, qword ptr [rbp - 0x30]
0x7fffeafc9d47:	je		0x7fffeafc9d55
0x7fffeafc9d4d:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafc9d51:	mov		qword ptr [rbp - 0x50], rax
disassembling symbol '.LBB9_18':
textAddr: 0x7fffeafc9d55, textSize: 24
0x7fffeafc9d55:	cmp		qword ptr [rbp - 0x30], 0
0x7fffeafc9d5a:	jne		0x7fffeafc9d6d
0x7fffeafc9d60:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafc9d64:	mov		qword ptr [rbp - 0x30], rax
0x7fffeafc9d68:	jmp		0x7fffeafc9d7e
disassembling symbol '.LBB9_20':
textAddr: 0x7fffeafc9d6d, textSize: 17
0x7fffeafc9d6d:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafc9d71:	shl		rax, 1
0x7fffeafc9d75:	mov		qword ptr [rbp - 0x48], rax
0x7fffeafc9d79:	jmp		0x7fffeafc9cc4
disassembling symbol '.LBB9_21':
textAddr: 0x7fffeafc9d7e, textSize: 5
0x7fffeafc9d7e:	jmp		0x7fffeafc9d83
disassembling symbol '.LBB9_22':
textAddr: 0x7fffeafc9d83, textSize: 120
0x7fffeafc9d83:	cmp		qword ptr [rbp - 0x30], 0
0x7fffeafc9d88:	jne		0x7fffeafc9e00
0x7fffeafc9d8e:	cmp		qword ptr [rbp - 0x20], 0
0x7fffeafc9d93:	jne		0x7fffeafc9e00
0x7fffeafc9d99:	xor		eax, eax
0x7fffeafc9d9b:	mov		ecx, dword ptr [rbp - 0x34]
0x7fffeafc9d9e:	mov		edx, 1
0x7fffeafc9da3:	mov		esi, edx
0x7fffeafc9da5:	shl		esi, cl
0x7fffeafc9da7:	shl		esi, 1
0x7fffeafc9daa:	mov		ecx, dword ptr [rbp - 0x34]
0x7fffeafc9dad:	shl		edx, cl
0x7fffeafc9daf:	shl		edx, 1
0x7fffeafc9db2:	sub		eax, edx
0x7fffeafc9db4:	or		esi, eax
0x7fffeafc9db6:	mov		rdi, qword ptr [rbp - 0x10]
0x7fffeafc9dba:	and		esi, dword ptr [rdi + 4]
0x7fffeafc9dbd:	mov		dword ptr [rbp - 0x64], esi
0x7fffeafc9dc0:	cmp		dword ptr [rbp - 0x64], 0
0x7fffeafc9dc4:	je		0x7fffeafc9dfb
0x7fffeafc9dca:	xor		eax, eax
0x7fffeafc9dcc:	mov		ecx, dword ptr [rbp - 0x64]
0x7fffeafc9dcf:	sub		eax, dword ptr [rbp - 0x64]
0x7fffeafc9dd2:	and		ecx, eax
0x7fffeafc9dd4:	mov		dword ptr [rbp - 0x6c], ecx
0x7fffeafc9dd7:	mov		eax, dword ptr [rbp - 0x6c]
0x7fffeafc9dda:	bsf		eax, eax
0x7fffeafc9ddd:	mov		dword ptr [rbp - 0x70], eax
0x7fffeafc9de0:	mov		eax, dword ptr [rbp - 0x70]
0x7fffeafc9de3:	mov		dword ptr [rbp - 0x68], eax
0x7fffeafc9de6:	mov		rdx, qword ptr [rbp - 0x10]
0x7fffeafc9dea:	mov		eax, dword ptr [rbp - 0x68]
0x7fffeafc9ded:	mov		esi, eax
0x7fffeafc9def:	mov		rdx, qword ptr [rdx + rsi*8 + 0x258]
0x7fffeafc9df7:	mov		qword ptr [rbp - 0x30], rdx
disassembling symbol '.LBB9_26':
textAddr: 0x7fffeafc9dfb, textSize: 5
0x7fffeafc9dfb:	jmp		0x7fffeafc9e00
disassembling symbol '.LBB9_27':
textAddr: 0x7fffeafc9e00, textSize: 5
0x7fffeafc9e00:	jmp		0x7fffeafc9e05
disassembling symbol '.LBB9_28':
textAddr: 0x7fffeafc9e05, textSize: 63
0x7fffeafc9e05:	cmp		qword ptr [rbp - 0x30], 0
0x7fffeafc9e0a:	je		0x7fffeafc9e86
0x7fffeafc9e10:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafc9e14:	mov		rax, qword ptr [rax + 8]
0x7fffeafc9e18:	and		rax, 0xfffffffffffffff8
0x7fffeafc9e1e:	sub		rax, qword ptr [rbp - 0x18]
0x7fffeafc9e22:	mov		qword ptr [rbp - 0x78], rax
0x7fffeafc9e26:	mov		rax, qword ptr [rbp - 0x78]
0x7fffeafc9e2a:	cmp		rax, qword ptr [rbp - 0x28]
0x7fffeafc9e2e:	jae		0x7fffeafc9e44
0x7fffeafc9e34:	mov		rax, qword ptr [rbp - 0x78]
0x7fffeafc9e38:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafc9e3c:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafc9e40:	mov		qword ptr [rbp - 0x20], rax
disassembling symbol '.LBB9_31':
textAddr: 0x7fffeafc9e44, textSize: 35
0x7fffeafc9e44:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafc9e48:	cmp		qword ptr [rax + 0x20], 0
0x7fffeafc9e4d:	je		0x7fffeafc9e67
0x7fffeafc9e53:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafc9e57:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafc9e5b:	mov		qword ptr [rbp - 0x130], rax
0x7fffeafc9e62:	jmp		0x7fffeafc9e76
disassembling symbol '.LBB9_33':
textAddr: 0x7fffeafc9e67, textSize: 15
0x7fffeafc9e67:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafc9e6b:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafc9e6f:	mov		qword ptr [rbp - 0x130], rax
disassembling symbol '.LBB9_34':
textAddr: 0x7fffeafc9e76, textSize: 16
0x7fffeafc9e76:	mov		rax, qword ptr [rbp - 0x130]
0x7fffeafc9e7d:	mov		qword ptr [rbp - 0x30], rax
0x7fffeafc9e81:	jmp		0x7fffeafc9e05
disassembling symbol '.LBB9_35':
textAddr: 0x7fffeafc9e86, textSize: 260
0x7fffeafc9e86:	cmp		qword ptr [rbp - 0x20], 0
0x7fffeafc9e8b:	je		0x7fffeafca898
0x7fffeafc9e91:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafc9e95:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafc9e99:	mov		rcx, qword ptr [rcx + 8]
0x7fffeafc9e9d:	sub		rcx, qword ptr [rbp - 0x18]
0x7fffeafc9ea1:	cmp		rax, rcx
0x7fffeafc9ea4:	jae		0x7fffeafca898
0x7fffeafc9eaa:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc9eae:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafc9eb2:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafc9eb6:	setae		dl
0x7fffeafc9eb9:	and		dl, 1
0x7fffeafc9ebc:	movzx		esi, dl
0x7fffeafc9ebf:	movsxd		rax, esi
0x7fffeafc9ec2:	cmp		rax, 0
0x7fffeafc9ec6:	je		0x7fffeafca893
0x7fffeafc9ecc:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc9ed0:	add		rax, qword ptr [rbp - 0x18]
0x7fffeafc9ed4:	mov		qword ptr [rbp - 0x80], rax
0x7fffeafc9ed8:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc9edc:	mov		rcx, qword ptr [rbp - 0x80]
0x7fffeafc9ee0:	cmp		rax, rcx
0x7fffeafc9ee3:	setb		dl
0x7fffeafc9ee6:	and		dl, 1
0x7fffeafc9ee9:	movzx		esi, dl
0x7fffeafc9eec:	movsxd		rax, esi
0x7fffeafc9eef:	cmp		rax, 0
0x7fffeafc9ef3:	je		0x7fffeafca88e
0x7fffeafc9ef9:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc9efd:	mov		rax, qword ptr [rax + 0x30]
0x7fffeafc9f01:	mov		qword ptr [rbp - 0x88], rax
0x7fffeafc9f08:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc9f0c:	mov		rax, qword ptr [rax + 0x18]
0x7fffeafc9f10:	cmp		rax, qword ptr [rbp - 0x20]
0x7fffeafc9f14:	je		0x7fffeafc9fd5
0x7fffeafc9f1a:	xor		eax, eax
0x7fffeafc9f1c:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafc9f20:	mov		rcx, qword ptr [rcx + 0x10]
0x7fffeafc9f24:	mov		qword ptr [rbp - 0x98], rcx
0x7fffeafc9f2b:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafc9f2f:	mov		rcx, qword ptr [rcx + 0x18]
0x7fffeafc9f33:	mov		qword ptr [rbp - 0x90], rcx
0x7fffeafc9f3a:	mov		rcx, qword ptr [rbp - 0x98]
0x7fffeafc9f41:	mov		rdx, qword ptr [rbp - 0x10]
0x7fffeafc9f45:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafc9f49:	mov		byte ptr [rbp - 0x131], al
0x7fffeafc9f4f:	jb		0x7fffeafc9f8a
0x7fffeafc9f55:	xor		eax, eax
0x7fffeafc9f57:	mov		rcx, qword ptr [rbp - 0x98]
0x7fffeafc9f5e:	mov		rcx, qword ptr [rcx + 0x18]
0x7fffeafc9f62:	cmp		rcx, qword ptr [rbp - 0x20]
0x7fffeafc9f66:	mov		byte ptr [rbp - 0x131], al
0x7fffeafc9f6c:	jne		0x7fffeafc9f8a
0x7fffeafc9f72:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafc9f79:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafc9f7d:	cmp		rax, qword ptr [rbp - 0x20]
0x7fffeafc9f81:	sete		cl
0x7fffeafc9f84:	mov		byte ptr [rbp - 0x131], cl
disassembling symbol '.LBB9_43':
textAddr: 0x7fffeafc9f8a, textSize: 65
0x7fffeafc9f8a:	mov		al, byte ptr [rbp - 0x131]
0x7fffeafc9f90:	and		al, 1
0x7fffeafc9f92:	movzx		ecx, al
0x7fffeafc9f95:	movsxd		rdx, ecx
0x7fffeafc9f98:	cmp		rdx, 0
0x7fffeafc9f9c:	je		0x7fffeafc9fcb
0x7fffeafc9fa2:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafc9fa9:	mov		rcx, qword ptr [rbp - 0x98]
0x7fffeafc9fb0:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafc9fb4:	mov		rax, qword ptr [rbp - 0x98]
0x7fffeafc9fbb:	mov		rcx, qword ptr [rbp - 0x90]
0x7fffeafc9fc2:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafc9fc6:	jmp		0x7fffeafc9fd0
disassembling symbol '.LBB9_45':
textAddr: 0x7fffeafc9fcb, textSize: 5
0x7fffeafc9fcb:	call		0x7fffeafc4c10
disassembling symbol '.LBB9_46':
textAddr: 0x7fffeafc9fd0, textSize: 5
0x7fffeafc9fd0:	jmp		0x7fffeafca104
disassembling symbol '.LBB9_47':
textAddr: 0x7fffeafc9fd5, textSize: 91
0x7fffeafc9fd5:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafc9fd9:	mov		rcx, rax
0x7fffeafc9fdc:	add		rcx, 0x20
0x7fffeafc9fe3:	add		rcx, 8
0x7fffeafc9fea:	mov		qword ptr [rbp - 0xa0], rcx
0x7fffeafc9ff1:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafc9ff5:	mov		qword ptr [rbp - 0x90], rax
0x7fffeafc9ffc:	cmp		rax, 0
0x7fffeafca000:	jne		0x7fffeafca030
0x7fffeafca006:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafca00a:	mov		rcx, rax
0x7fffeafca00d:	add		rcx, 0x20
0x7fffeafca014:	mov		qword ptr [rbp - 0xa0], rcx
0x7fffeafca01b:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafca01f:	mov		qword ptr [rbp - 0x90], rax
0x7fffeafca026:	cmp		rax, 0
0x7fffeafca02a:	je		0x7fffeafca0ff
disassembling symbol '.LBB9_49':
textAddr: 0x7fffeafca030, textSize: 5
0x7fffeafca030:	jmp		0x7fffeafca035
disassembling symbol '.LBB9_50':
textAddr: 0x7fffeafca035, textSize: 88
0x7fffeafca035:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafca03c:	mov		rcx, rax
0x7fffeafca03f:	add		rcx, 0x20
0x7fffeafca046:	add		rcx, 8
0x7fffeafca04d:	mov		qword ptr [rbp - 0xa8], rcx
0x7fffeafca054:	cmp		qword ptr [rax + 0x28], 0
0x7fffeafca059:	mov		dl, 1
0x7fffeafca05b:	mov		byte ptr [rbp - 0x132], dl
0x7fffeafca061:	jne		0x7fffeafca08d
0x7fffeafca067:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafca06e:	mov		rcx, rax
0x7fffeafca071:	add		rcx, 0x20
0x7fffeafca078:	mov		qword ptr [rbp - 0xa8], rcx
0x7fffeafca07f:	cmp		qword ptr [rax + 0x20], 0
0x7fffeafca084:	setne		dl
0x7fffeafca087:	mov		byte ptr [rbp - 0x132], dl
disassembling symbol '.LBB9_52':
textAddr: 0x7fffeafca08d, textSize: 19
0x7fffeafca08d:	mov		al, byte ptr [rbp - 0x132]
0x7fffeafca093:	test		al, 1
0x7fffeafca095:	jne		0x7fffeafca0a0
0x7fffeafca09b:	jmp		0x7fffeafca0bd
disassembling symbol '.LBB9_53':
textAddr: 0x7fffeafca0a0, textSize: 29
0x7fffeafca0a0:	mov		rax, qword ptr [rbp - 0xa8]
0x7fffeafca0a7:	mov		qword ptr [rbp - 0xa0], rax
0x7fffeafca0ae:	mov		rax, qword ptr [rax]
0x7fffeafca0b1:	mov		qword ptr [rbp - 0x90], rax
0x7fffeafca0b8:	jmp		0x7fffeafca035
disassembling symbol '.LBB9_54':
textAddr: 0x7fffeafca0bd, textSize: 56
0x7fffeafca0bd:	mov		rax, qword ptr [rbp - 0xa0]
0x7fffeafca0c4:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafca0c8:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafca0cc:	setae		dl
0x7fffeafca0cf:	and		dl, 1
0x7fffeafca0d2:	movzx		esi, dl
0x7fffeafca0d5:	movsxd		rax, esi
0x7fffeafca0d8:	cmp		rax, 0
0x7fffeafca0dc:	je		0x7fffeafca0f5
0x7fffeafca0e2:	mov		rax, qword ptr [rbp - 0xa0]
0x7fffeafca0e9:	mov		qword ptr [rax], 0
0x7fffeafca0f0:	jmp		0x7fffeafca0fa
disassembling symbol '.LBB9_56':
textAddr: 0x7fffeafca0f5, textSize: 5
0x7fffeafca0f5:	call		0x7fffeafc4c10
disassembling symbol '.LBB9_57':
textAddr: 0x7fffeafca0fa, textSize: 5
0x7fffeafca0fa:	jmp		0x7fffeafca0ff
disassembling symbol '.LBB9_58':
textAddr: 0x7fffeafca0ff, textSize: 5
0x7fffeafca0ff:	jmp		0x7fffeafca104
disassembling symbol '.LBB9_59':
textAddr: 0x7fffeafca104, textSize: 121
0x7fffeafca104:	cmp		qword ptr [rbp - 0x88], 0
0x7fffeafca10c:	je		0x7fffeafca32f
0x7fffeafca112:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafca116:	add		rax, 0x258
0x7fffeafca11c:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafca120:	mov		edx, dword ptr [rcx + 0x38]
0x7fffeafca123:	mov		ecx, edx
0x7fffeafca125:	shl		rcx, 3
0x7fffeafca129:	add		rax, rcx
0x7fffeafca12c:	mov		qword ptr [rbp - 0xb0], rax
0x7fffeafca133:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafca137:	mov		rcx, qword ptr [rbp - 0xb0]
0x7fffeafca13e:	cmp		rax, qword ptr [rcx]
0x7fffeafca141:	jne		0x7fffeafca182
0x7fffeafca147:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafca14e:	mov		rcx, qword ptr [rbp - 0xb0]
0x7fffeafca155:	mov		qword ptr [rcx], rax
0x7fffeafca158:	cmp		rax, 0
0x7fffeafca15c:	jne		0x7fffeafca17d
0x7fffeafca162:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafca166:	mov		ecx, dword ptr [rax + 0x38]
0x7fffeafca169:	mov		edx, 1
0x7fffeafca16e:	shl		edx, cl
0x7fffeafca170:	xor		edx, 0xffffffff
0x7fffeafca173:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafca177:	and		edx, dword ptr [rax + 4]
0x7fffeafca17a:	mov		dword ptr [rax + 4], edx
disassembling symbol '.LBB9_63':
textAddr: 0x7fffeafca17d, textSize: 5
0x7fffeafca17d:	jmp		0x7fffeafca1f4
disassembling symbol '.LBB9_64':
textAddr: 0x7fffeafca182, textSize: 81
0x7fffeafca182:	mov		rax, qword ptr [rbp - 0x88]
0x7fffeafca189:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafca18d:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafca191:	setae		dl
0x7fffeafca194:	and		dl, 1
0x7fffeafca197:	movzx		esi, dl
0x7fffeafca19a:	movsxd		rax, esi
0x7fffeafca19d:	cmp		rax, 0
0x7fffeafca1a1:	je		0x7fffeafca1ea
0x7fffeafca1a7:	mov		rax, qword ptr [rbp - 0x88]
0x7fffeafca1ae:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafca1b2:	cmp		rax, qword ptr [rbp - 0x20]
0x7fffeafca1b6:	jne		0x7fffeafca1d3
0x7fffeafca1bc:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafca1c3:	mov		rcx, qword ptr [rbp - 0x88]
0x7fffeafca1ca:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafca1ce:	jmp		0x7fffeafca1e5
disassembling symbol '.LBB9_67':
textAddr: 0x7fffeafca1d3, textSize: 18
0x7fffeafca1d3:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafca1da:	mov		rcx, qword ptr [rbp - 0x88]
0x7fffeafca1e1:	mov		qword ptr [rcx + 0x28], rax
disassembling symbol '.LBB9_68':
textAddr: 0x7fffeafca1e5, textSize: 5
0x7fffeafca1e5:	jmp		0x7fffeafca1ef
disassembling symbol '.LBB9_69':
textAddr: 0x7fffeafca1ea, textSize: 5
0x7fffeafca1ea:	call		0x7fffeafc4c10
disassembling symbol '.LBB9_70':
textAddr: 0x7fffeafca1ef, textSize: 5
0x7fffeafca1ef:	jmp		0x7fffeafca1f4
disassembling symbol '.LBB9_71':
textAddr: 0x7fffeafca1f4, textSize: 172
0x7fffeafca1f4:	cmp		qword ptr [rbp - 0x90], 0
0x7fffeafca1fc:	je		0x7fffeafca32a
0x7fffeafca202:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafca209:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafca20d:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafca211:	setae		dl
0x7fffeafca214:	and		dl, 1
0x7fffeafca217:	movzx		esi, dl
0x7fffeafca21a:	movsxd		rax, esi
0x7fffeafca21d:	cmp		rax, 0
0x7fffeafca221:	je		0x7fffeafca320
0x7fffeafca227:	mov		rax, qword ptr [rbp - 0x88]
0x7fffeafca22e:	mov		rcx, qword ptr [rbp - 0x90]
0x7fffeafca235:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafca239:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafca23d:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafca241:	mov		qword ptr [rbp - 0xb8], rax
0x7fffeafca248:	cmp		rax, 0
0x7fffeafca24c:	je		0x7fffeafca2aa
0x7fffeafca252:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafca259:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafca25d:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafca261:	setae		dl
0x7fffeafca264:	and		dl, 1
0x7fffeafca267:	movzx		esi, dl
0x7fffeafca26a:	movsxd		rax, esi
0x7fffeafca26d:	cmp		rax, 0
0x7fffeafca271:	je		0x7fffeafca2a0
0x7fffeafca277:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafca27e:	mov		rcx, qword ptr [rbp - 0x90]
0x7fffeafca285:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafca289:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafca290:	mov		rcx, qword ptr [rbp - 0xb8]
0x7fffeafca297:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafca29b:	jmp		0x7fffeafca2a5
disassembling symbol '.LBB9_76':
textAddr: 0x7fffeafca2a0, textSize: 5
0x7fffeafca2a0:	call		0x7fffeafc4c10
disassembling symbol '.LBB9_77':
textAddr: 0x7fffeafca2a5, textSize: 5
0x7fffeafca2a5:	jmp		0x7fffeafca2aa
disassembling symbol '.LBB9_78':
textAddr: 0x7fffeafca2aa, textSize: 103
0x7fffeafca2aa:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafca2ae:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafca2b2:	mov		qword ptr [rbp - 0xc0], rax
0x7fffeafca2b9:	cmp		rax, 0
0x7fffeafca2bd:	je		0x7fffeafca31b
0x7fffeafca2c3:	mov		rax, qword ptr [rbp - 0xc0]
0x7fffeafca2ca:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafca2ce:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafca2d2:	setae		dl
0x7fffeafca2d5:	and		dl, 1
0x7fffeafca2d8:	movzx		esi, dl
0x7fffeafca2db:	movsxd		rax, esi
0x7fffeafca2de:	cmp		rax, 0
0x7fffeafca2e2:	je		0x7fffeafca311
0x7fffeafca2e8:	mov		rax, qword ptr [rbp - 0xc0]
0x7fffeafca2ef:	mov		rcx, qword ptr [rbp - 0x90]
0x7fffeafca2f6:	mov		qword ptr [rcx + 0x28], rax
0x7fffeafca2fa:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafca301:	mov		rcx, qword ptr [rbp - 0xc0]
0x7fffeafca308:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafca30c:	jmp		0x7fffeafca316
disassembling symbol '.LBB9_81':
textAddr: 0x7fffeafca311, textSize: 5
0x7fffeafca311:	call		0x7fffeafc4c10
disassembling symbol '.LBB9_82':
textAddr: 0x7fffeafca316, textSize: 5
0x7fffeafca316:	jmp		0x7fffeafca31b
disassembling symbol '.LBB9_83':
textAddr: 0x7fffeafca31b, textSize: 5
0x7fffeafca31b:	jmp		0x7fffeafca325
disassembling symbol '.LBB9_84':
textAddr: 0x7fffeafca320, textSize: 5
0x7fffeafca320:	call		0x7fffeafc4c10
disassembling symbol '.LBB9_85':
textAddr: 0x7fffeafca325, textSize: 5
0x7fffeafca325:	jmp		0x7fffeafca32a
disassembling symbol '.LBB9_86':
textAddr: 0x7fffeafca32a, textSize: 5
0x7fffeafca32a:	jmp		0x7fffeafca32f
disassembling symbol '.LBB9_87':
textAddr: 0x7fffeafca32f, textSize: 73
0x7fffeafca32f:	cmp		qword ptr [rbp - 0x28], 0x20
0x7fffeafca334:	jae		0x7fffeafca378
0x7fffeafca33a:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafca33e:	add		rax, qword ptr [rbp - 0x18]
0x7fffeafca342:	or		rax, 1
0x7fffeafca348:	or		rax, 2
0x7fffeafca34e:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafca352:	mov		qword ptr [rcx + 8], rax
0x7fffeafca356:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafca35a:	mov		rcx, qword ptr [rbp - 0x28]
0x7fffeafca35e:	add		rcx, qword ptr [rbp - 0x18]
0x7fffeafca362:	mov		rdx, qword ptr [rax + rcx + 8]
0x7fffeafca367:	or		rdx, 1
0x7fffeafca36e:	mov		qword ptr [rax + rcx + 8], rdx
0x7fffeafca373:	jmp		0x7fffeafca87b
disassembling symbol '.LBB9_89':
textAddr: 0x7fffeafca378, textSize: 198
0x7fffeafca378:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafca37c:	or		rax, 1
0x7fffeafca382:	or		rax, 2
0x7fffeafca388:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafca38c:	mov		qword ptr [rcx + 8], rax
0x7fffeafca390:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafca394:	or		rax, 1
0x7fffeafca39a:	mov		rcx, qword ptr [rbp - 0x80]
0x7fffeafca39e:	mov		qword ptr [rcx + 8], rax
0x7fffeafca3a2:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafca3a6:	mov		rcx, qword ptr [rbp - 0x80]
0x7fffeafca3aa:	mov		rdx, qword ptr [rbp - 0x28]
0x7fffeafca3ae:	mov		qword ptr [rcx + rdx], rax
0x7fffeafca3b2:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafca3b6:	shr		rax, 3
0x7fffeafca3ba:	cmp		rax, 0x20
0x7fffeafca3be:	jae		0x7fffeafca4c9
0x7fffeafca3c4:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafca3c8:	shr		rax, 3
0x7fffeafca3cc:	mov		dword ptr [rbp - 0xc4], eax
0x7fffeafca3d2:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafca3d6:	add		rcx, 0x48
0x7fffeafca3dd:	mov		eax, dword ptr [rbp - 0xc4]
0x7fffeafca3e3:	shl		eax, 1
0x7fffeafca3e6:	mov		eax, eax
0x7fffeafca3e8:	mov		edx, eax
0x7fffeafca3ea:	shl		rdx, 3
0x7fffeafca3ee:	add		rcx, rdx
0x7fffeafca3f1:	mov		qword ptr [rbp - 0xd0], rcx
0x7fffeafca3f8:	mov		rcx, qword ptr [rbp - 0xd0]
0x7fffeafca3ff:	mov		qword ptr [rbp - 0xd8], rcx
0x7fffeafca406:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafca40a:	mov		eax, dword ptr [rcx]
0x7fffeafca40c:	mov		ecx, dword ptr [rbp - 0xc4]
0x7fffeafca412:	mov		esi, 1
0x7fffeafca417:	shl		esi, cl
0x7fffeafca419:	and		eax, esi
0x7fffeafca41b:	cmp		eax, 0
0x7fffeafca41e:	jne		0x7fffeafca43e
0x7fffeafca424:	mov		ecx, dword ptr [rbp - 0xc4]
0x7fffeafca42a:	mov		eax, 1
0x7fffeafca42f:	shl		eax, cl
0x7fffeafca431:	mov		rdx, qword ptr [rbp - 0x10]
0x7fffeafca435:	or		eax, dword ptr [rdx]
0x7fffeafca437:	mov		dword ptr [rdx], eax
0x7fffeafca439:	jmp		0x7fffeafca488
disassembling symbol '.LBB9_92':
textAddr: 0x7fffeafca43e, textSize: 64
0x7fffeafca43e:	mov		rax, qword ptr [rbp - 0xd0]
0x7fffeafca445:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafca449:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafca44d:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafca451:	setae		dl
0x7fffeafca454:	and		dl, 1
0x7fffeafca457:	movzx		esi, dl
0x7fffeafca45a:	movsxd		rax, esi
0x7fffeafca45d:	cmp		rax, 0
0x7fffeafca461:	je		0x7fffeafca47e
0x7fffeafca467:	mov		rax, qword ptr [rbp - 0xd0]
0x7fffeafca46e:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafca472:	mov		qword ptr [rbp - 0xd8], rax
0x7fffeafca479:	jmp		0x7fffeafca483
disassembling symbol '.LBB9_94':
textAddr: 0x7fffeafca47e, textSize: 5
0x7fffeafca47e:	call		0x7fffeafc4c10
disassembling symbol '.LBB9_95':
textAddr: 0x7fffeafca483, textSize: 5
0x7fffeafca483:	jmp		0x7fffeafca488
disassembling symbol '.LBB9_96':
textAddr: 0x7fffeafca488, textSize: 65
0x7fffeafca488:	mov		rax, qword ptr [rbp - 0x80]
0x7fffeafca48c:	mov		rcx, qword ptr [rbp - 0xd0]
0x7fffeafca493:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafca497:	mov		rax, qword ptr [rbp - 0x80]
0x7fffeafca49b:	mov		rcx, qword ptr [rbp - 0xd8]
0x7fffeafca4a2:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafca4a6:	mov		rax, qword ptr [rbp - 0xd8]
0x7fffeafca4ad:	mov		rcx, qword ptr [rbp - 0x80]
0x7fffeafca4b1:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafca4b5:	mov		rax, qword ptr [rbp - 0xd0]
0x7fffeafca4bc:	mov		rcx, qword ptr [rbp - 0x80]
0x7fffeafca4c0:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafca4c4:	jmp		0x7fffeafca876
disassembling symbol '.LBB9_97':
textAddr: 0x7fffeafca4c9, textSize: 53
0x7fffeafca4c9:	mov		rax, qword ptr [rbp - 0x80]
0x7fffeafca4cd:	mov		qword ptr [rbp - 0xe0], rax
0x7fffeafca4d4:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafca4d8:	shr		rax, 8
0x7fffeafca4dc:	mov		dword ptr [rbp - 0xf0], eax
0x7fffeafca4e2:	cmp		dword ptr [rbp - 0xf0], 0
0x7fffeafca4e9:	jne		0x7fffeafca4fe
0x7fffeafca4ef:	mov		dword ptr [rbp - 0xec], 0
0x7fffeafca4f9:	jmp		0x7fffeafca56c
disassembling symbol '.LBB9_99':
textAddr: 0x7fffeafca4fe, textSize: 31
0x7fffeafca4fe:	cmp		dword ptr [rbp - 0xf0], 0xffff
0x7fffeafca508:	jbe		0x7fffeafca51d
0x7fffeafca50e:	mov		dword ptr [rbp - 0xec], 0x1f
0x7fffeafca518:	jmp		0x7fffeafca567
disassembling symbol '.LBB9_101':
textAddr: 0x7fffeafca51d, textSize: 74
0x7fffeafca51d:	mov		eax, dword ptr [rbp - 0xf0]
0x7fffeafca523:	bsr		eax, eax
0x7fffeafca526:	xor		eax, 0x1f
0x7fffeafca529:	mov		ecx, 0x1f
0x7fffeafca52e:	sub		ecx, eax
0x7fffeafca530:	mov		dword ptr [rbp - 0xf4], ecx
0x7fffeafca536:	mov		eax, dword ptr [rbp - 0xf4]
0x7fffeafca53c:	shl		eax, 1
0x7fffeafca53f:	mov		eax, eax
0x7fffeafca541:	mov		edx, eax
0x7fffeafca543:	mov		rsi, qword ptr [rbp - 0x28]
0x7fffeafca547:	mov		eax, dword ptr [rbp - 0xf4]
0x7fffeafca54d:	add		eax, 7
0x7fffeafca550:	mov		eax, eax
0x7fffeafca552:	mov		ecx, eax
0x7fffeafca554:	shr		rsi, cl
0x7fffeafca557:	and		rsi, 1
0x7fffeafca55e:	add		rdx, rsi
0x7fffeafca561:	mov		dword ptr [rbp - 0xec], edx
disassembling symbol '.LBB9_102':
textAddr: 0x7fffeafca567, textSize: 5
0x7fffeafca567:	jmp		0x7fffeafca56c
disassembling symbol '.LBB9_103':
textAddr: 0x7fffeafca56c, textSize: 215
0x7fffeafca56c:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafca570:	add		rax, 0x258
0x7fffeafca576:	mov		ecx, dword ptr [rbp - 0xec]
0x7fffeafca57c:	mov		edx, ecx
0x7fffeafca57e:	shl		rdx, 3
0x7fffeafca582:	add		rax, rdx
0x7fffeafca585:	mov		qword ptr [rbp - 0xe8], rax
0x7fffeafca58c:	mov		ecx, dword ptr [rbp - 0xec]
0x7fffeafca592:	mov		rax, qword ptr [rbp - 0xe0]
0x7fffeafca599:	mov		dword ptr [rax + 0x38], ecx
0x7fffeafca59c:	mov		rax, qword ptr [rbp - 0xe0]
0x7fffeafca5a3:	mov		qword ptr [rax + 0x28], 0
0x7fffeafca5ab:	mov		rax, qword ptr [rbp - 0xe0]
0x7fffeafca5b2:	mov		qword ptr [rax + 0x20], 0
0x7fffeafca5ba:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafca5be:	mov		ecx, dword ptr [rax + 4]
0x7fffeafca5c1:	mov		esi, dword ptr [rbp - 0xec]
0x7fffeafca5c7:	mov		dword ptr [rbp - 0x138], ecx
0x7fffeafca5cd:	mov		ecx, esi
0x7fffeafca5cf:	mov		esi, 1
0x7fffeafca5d4:	shl		esi, cl
0x7fffeafca5d6:	mov		edi, dword ptr [rbp - 0x138]
0x7fffeafca5dc:	and		edi, esi
0x7fffeafca5de:	cmp		edi, 0
0x7fffeafca5e1:	jne		0x7fffeafca643
0x7fffeafca5e7:	mov		ecx, dword ptr [rbp - 0xec]
0x7fffeafca5ed:	mov		eax, 1
0x7fffeafca5f2:	shl		eax, cl
0x7fffeafca5f4:	mov		rdx, qword ptr [rbp - 0x10]
0x7fffeafca5f8:	or		eax, dword ptr [rdx + 4]
0x7fffeafca5fb:	mov		dword ptr [rdx + 4], eax
0x7fffeafca5fe:	mov		rdx, qword ptr [rbp - 0xe0]
0x7fffeafca605:	mov		rsi, qword ptr [rbp - 0xe8]
0x7fffeafca60c:	mov		qword ptr [rsi], rdx
0x7fffeafca60f:	mov		rdx, qword ptr [rbp - 0xe8]
0x7fffeafca616:	mov		rsi, qword ptr [rbp - 0xe0]
0x7fffeafca61d:	mov		qword ptr [rsi + 0x30], rdx
0x7fffeafca621:	mov		rdx, qword ptr [rbp - 0xe0]
0x7fffeafca628:	mov		rsi, qword ptr [rbp - 0xe0]
0x7fffeafca62f:	mov		qword ptr [rsi + 0x18], rdx
0x7fffeafca633:	mov		rsi, qword ptr [rbp - 0xe0]
0x7fffeafca63a:	mov		qword ptr [rsi + 0x10], rdx
0x7fffeafca63e:	jmp		0x7fffeafca871
disassembling symbol '.LBB9_105':
textAddr: 0x7fffeafca643, textSize: 57
0x7fffeafca643:	mov		rax, qword ptr [rbp - 0xe8]
0x7fffeafca64a:	mov		rax, qword ptr [rax]
0x7fffeafca64d:	mov		qword ptr [rbp - 0x100], rax
0x7fffeafca654:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafca658:	cmp		dword ptr [rbp - 0xec], 0x1f
0x7fffeafca65f:	mov		qword ptr [rbp - 0x140], rax
0x7fffeafca666:	jne		0x7fffeafca67c
0x7fffeafca66c:	xor		eax, eax
0x7fffeafca66e:	mov		ecx, eax
0x7fffeafca670:	mov		qword ptr [rbp - 0x148], rcx
0x7fffeafca677:	jmp		0x7fffeafca69e
disassembling symbol '.LBB9_107':
textAddr: 0x7fffeafca67c, textSize: 34
0x7fffeafca67c:	mov		eax, dword ptr [rbp - 0xec]
0x7fffeafca682:	shr		eax, 1
0x7fffeafca685:	add		eax, 8
0x7fffeafca688:	sub		eax, 2
0x7fffeafca68b:	mov		eax, eax
0x7fffeafca68d:	mov		ecx, eax
0x7fffeafca68f:	mov		edx, 0x3f
0x7fffeafca694:	sub		rdx, rcx
0x7fffeafca697:	mov		qword ptr [rbp - 0x148], rdx
disassembling symbol '.LBB9_108':
textAddr: 0x7fffeafca69e, textSize: 27
0x7fffeafca69e:	mov		rax, qword ptr [rbp - 0x148]
0x7fffeafca6a5:	mov		rcx, rax
0x7fffeafca6a8:	mov		rax, qword ptr [rbp - 0x140]
0x7fffeafca6af:	shl		rax, cl
0x7fffeafca6b2:	mov		qword ptr [rbp - 0x108], rax
disassembling symbol '.LBB9_109':
textAddr: 0x7fffeafca6b9, textSize: 129
0x7fffeafca6b9:	mov		rax, qword ptr [rbp - 0x100]
0x7fffeafca6c0:	mov		rax, qword ptr [rax + 8]
0x7fffeafca6c4:	and		rax, 0xfffffffffffffff8
0x7fffeafca6ca:	cmp		rax, qword ptr [rbp - 0x28]
0x7fffeafca6ce:	je		0x7fffeafca7ae
0x7fffeafca6d4:	mov		rax, qword ptr [rbp - 0x100]
0x7fffeafca6db:	add		rax, 0x20
0x7fffeafca6e1:	mov		rcx, qword ptr [rbp - 0x108]
0x7fffeafca6e8:	shr		rcx, 0x3f
0x7fffeafca6ec:	and		rcx, 1
0x7fffeafca6f3:	shl		rcx, 3
0x7fffeafca6f7:	add		rax, rcx
0x7fffeafca6fa:	mov		qword ptr [rbp - 0x110], rax
0x7fffeafca701:	mov		rax, qword ptr [rbp - 0x108]
0x7fffeafca708:	shl		rax, 1
0x7fffeafca70c:	mov		qword ptr [rbp - 0x108], rax
0x7fffeafca713:	mov		rax, qword ptr [rbp - 0x110]
0x7fffeafca71a:	cmp		qword ptr [rax], 0
0x7fffeafca71e:	je		0x7fffeafca73a
0x7fffeafca724:	mov		rax, qword ptr [rbp - 0x110]
0x7fffeafca72b:	mov		rax, qword ptr [rax]
0x7fffeafca72e:	mov		qword ptr [rbp - 0x100], rax
0x7fffeafca735:	jmp		0x7fffeafca7a9
disassembling symbol '.LBB9_112':
textAddr: 0x7fffeafca73a, textSize: 106
0x7fffeafca73a:	mov		rax, qword ptr [rbp - 0x110]
0x7fffeafca741:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafca745:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafca749:	setae		dl
0x7fffeafca74c:	and		dl, 1
0x7fffeafca74f:	movzx		esi, dl
0x7fffeafca752:	movsxd		rax, esi
0x7fffeafca755:	cmp		rax, 0
0x7fffeafca759:	je		0x7fffeafca7a4
0x7fffeafca75f:	mov		rax, qword ptr [rbp - 0xe0]
0x7fffeafca766:	mov		rcx, qword ptr [rbp - 0x110]
0x7fffeafca76d:	mov		qword ptr [rcx], rax
0x7fffeafca770:	mov		rax, qword ptr [rbp - 0x100]
0x7fffeafca777:	mov		rcx, qword ptr [rbp - 0xe0]
0x7fffeafca77e:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafca782:	mov		rax, qword ptr [rbp - 0xe0]
0x7fffeafca789:	mov		rcx, qword ptr [rbp - 0xe0]
0x7fffeafca790:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafca794:	mov		rcx, qword ptr [rbp - 0xe0]
0x7fffeafca79b:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafca79f:	jmp		0x7fffeafca86c
disassembling symbol '.LBB9_114':
textAddr: 0x7fffeafca7a4, textSize: 5
0x7fffeafca7a4:	call		0x7fffeafc4c10
disassembling symbol '.LBB9_115':
textAddr: 0x7fffeafca7a9, textSize: 5
0x7fffeafca7a9:	jmp		0x7fffeafca867
disassembling symbol '.LBB9_116':
textAddr: 0x7fffeafca7ae, textSize: 71
0x7fffeafca7ae:	xor		eax, eax
0x7fffeafca7b0:	mov		rcx, qword ptr [rbp - 0x100]
0x7fffeafca7b7:	mov		rcx, qword ptr [rcx + 0x10]
0x7fffeafca7bb:	mov		qword ptr [rbp - 0x118], rcx
0x7fffeafca7c2:	mov		rcx, qword ptr [rbp - 0x100]
0x7fffeafca7c9:	mov		rdx, qword ptr [rbp - 0x10]
0x7fffeafca7cd:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafca7d1:	mov		byte ptr [rbp - 0x149], al
0x7fffeafca7d7:	jb		0x7fffeafca7f5
0x7fffeafca7dd:	mov		rax, qword ptr [rbp - 0x118]
0x7fffeafca7e4:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafca7e8:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafca7ec:	setae		dl
0x7fffeafca7ef:	mov		byte ptr [rbp - 0x149], dl
disassembling symbol '.LBB9_118':
textAddr: 0x7fffeafca7f5, textSize: 109
0x7fffeafca7f5:	mov		al, byte ptr [rbp - 0x149]
0x7fffeafca7fb:	and		al, 1
0x7fffeafca7fd:	movzx		ecx, al
0x7fffeafca800:	movsxd		rdx, ecx
0x7fffeafca803:	cmp		rdx, 0
0x7fffeafca807:	je		0x7fffeafca862
0x7fffeafca80d:	mov		rax, qword ptr [rbp - 0xe0]
0x7fffeafca814:	mov		rcx, qword ptr [rbp - 0x118]
0x7fffeafca81b:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafca81f:	mov		rcx, qword ptr [rbp - 0x100]
0x7fffeafca826:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafca82a:	mov		rax, qword ptr [rbp - 0x118]
0x7fffeafca831:	mov		rcx, qword ptr [rbp - 0xe0]
0x7fffeafca838:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafca83c:	mov		rax, qword ptr [rbp - 0x100]
0x7fffeafca843:	mov		rcx, qword ptr [rbp - 0xe0]
0x7fffeafca84a:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafca84e:	mov		rax, qword ptr [rbp - 0xe0]
0x7fffeafca855:	mov		qword ptr [rax + 0x30], 0
0x7fffeafca85d:	jmp		0x7fffeafca86c
disassembling symbol '.LBB9_120':
textAddr: 0x7fffeafca862, textSize: 5
0x7fffeafca862:	call		0x7fffeafc4c10
disassembling symbol '.LBB9_121':
textAddr: 0x7fffeafca867, textSize: 5
0x7fffeafca867:	jmp		0x7fffeafca6b9
disassembling symbol '.LBB9_122':
textAddr: 0x7fffeafca86c, textSize: 5
0x7fffeafca86c:	jmp		0x7fffeafca871
disassembling symbol '.LBB9_123':
textAddr: 0x7fffeafca871, textSize: 5
0x7fffeafca871:	jmp		0x7fffeafca876
disassembling symbol '.LBB9_124':
textAddr: 0x7fffeafca876, textSize: 5
0x7fffeafca876:	jmp		0x7fffeafca87b
disassembling symbol '.LBB9_125':
textAddr: 0x7fffeafca87b, textSize: 19
0x7fffeafca87b:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafca87f:	add		rax, 0x10
0x7fffeafca885:	mov		qword ptr [rbp - 8], rax
0x7fffeafca889:	jmp		0x7fffeafca8a0
disassembling symbol '.LBB9_126':
textAddr: 0x7fffeafca88e, textSize: 5
0x7fffeafca88e:	jmp		0x7fffeafca893
disassembling symbol '.LBB9_127':
textAddr: 0x7fffeafca893, textSize: 5
0x7fffeafca893:	call		0x7fffeafc4c10
disassembling symbol '.LBB9_128':
textAddr: 0x7fffeafca898, textSize: 8
0x7fffeafca898:	mov		qword ptr [rbp - 8], 0
disassembling symbol '.LBB9_129':
textAddr: 0x7fffeafca8a0, textSize: 16
0x7fffeafca8a0:	mov		rax, qword ptr [rbp - 8]
0x7fffeafca8a4:	add		rsp, 0x150
0x7fffeafca8ab:	pop		rbp
0x7fffeafca8ac:	ret		
0x7fffeafca8ad:	nop		dword ptr [rax]
disassembling symbol 'sys_alloc':
textAddr: 0x7fffeafca8b0, textSize: 1376
0x7fffeafca8b0:	push		rbp
0x7fffeafca8b1:	mov		rbp, rsp
0x7fffeafca8b4:	sub		rsp, 0x80
0x7fffeafca8bb:	mov		qword ptr [rbp - 0x10], rdi
0x7fffeafca8bf:	mov		qword ptr [rbp - 0x18], rsi
0x7fffeafca8c3:	mov		rax, -1
0x7fffeafca8ca:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafca8ce:	mov		qword ptr [rbp - 0x28], 0
0x7fffeafca8d6:	mov		dword ptr [rbp - 0x2c], 0
0x7fffeafca8dd:	cmp		qword ptr [rip + 0x2c20543], 0
0x7fffeafca8e5:	mov		cl, 1
0x7fffeafca8e7:	mov		byte ptr [rbp - 0x79], cl
0x7fffeafca8ea:	jne		0x7fffeafca8fe
0x7fffeafca8f0:	call		0x7fffeafc8870
0x7fffeafca8f5:	cmp		eax, 0
0x7fffeafca8f8:	setne		cl
0x7fffeafca8fb:	mov		byte ptr [rbp - 0x79], cl
0x7fffeafca8fe:	mov		al, byte ptr [rbp - 0x79]
0x7fffeafca901:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafca905:	mov		edx, dword ptr [rcx + 0x370]
0x7fffeafca90b:	mov		ecx, edx
0x7fffeafca90d:	and		rcx, 0
0x7fffeafca914:	cmp		rcx, 0
0x7fffeafca918:	je		0x7fffeafca96c
0x7fffeafca91e:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafca922:	cmp		rax, qword ptr [rip + 0x2c20517]
0x7fffeafca929:	jb		0x7fffeafca96c
0x7fffeafca92f:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafca933:	cmp		qword ptr [rax + 0x10], 0
0x7fffeafca938:	je		0x7fffeafca96c
0x7fffeafca93e:	mov		rdi, qword ptr [rbp - 0x10]
0x7fffeafca942:	mov		rsi, qword ptr [rbp - 0x18]
0x7fffeafca946:	call		0x7fffeafcf7c0
0x7fffeafca94b:	mov		qword ptr [rbp - 0x40], rax
0x7fffeafca94f:	cmp		qword ptr [rbp - 0x40], 0
0x7fffeafca954:	je		0x7fffeafca967
0x7fffeafca95a:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafca95e:	mov		qword ptr [rbp - 8], rax
0x7fffeafca962:	jmp		0x7fffeafcadf4
0x7fffeafca967:	jmp		0x7fffeafca96c
0x7fffeafca96c:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafca970:	add		rax, 0x60
0x7fffeafca976:	mov		rcx, qword ptr [rip + 0x2c204bb]
0x7fffeafca97d:	sub		rcx, 1
0x7fffeafca984:	add		rax, rcx
0x7fffeafca987:	mov		rcx, qword ptr [rip + 0x2c204aa]
0x7fffeafca98e:	sub		rcx, 1
0x7fffeafca995:	xor		rcx, 0xffffffffffffffff
0x7fffeafca99c:	and		rax, rcx
0x7fffeafca99f:	mov		qword ptr [rbp - 0x38], rax
0x7fffeafca9a3:	mov		rax, qword ptr [rbp - 0x38]
0x7fffeafca9a7:	cmp		rax, qword ptr [rbp - 0x18]
0x7fffeafca9ab:	ja		0x7fffeafca9be
0x7fffeafca9b1:	mov		qword ptr [rbp - 8], 0
0x7fffeafca9b9:	jmp		0x7fffeafcadf4
0x7fffeafca9be:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafca9c2:	cmp		qword ptr [rax + 0x368], 0
0x7fffeafca9ca:	je		0x7fffeafcaa1f
0x7fffeafca9d0:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafca9d4:	mov		rax, qword ptr [rax + 0x358]
0x7fffeafca9db:	add		rax, qword ptr [rbp - 0x38]
0x7fffeafca9df:	mov		qword ptr [rbp - 0x48], rax
0x7fffeafca9e3:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafca9e7:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafca9eb:	cmp		rax, qword ptr [rcx + 0x358]
0x7fffeafca9f2:	jbe		0x7fffeafcaa0d
0x7fffeafca9f8:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafca9fc:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcaa00:	cmp		rax, qword ptr [rcx + 0x368]
0x7fffeafcaa07:	jbe		0x7fffeafcaa1a
0x7fffeafcaa0d:	mov		qword ptr [rbp - 8], 0
0x7fffeafcaa15:	jmp		0x7fffeafcadf4
0x7fffeafcaa1a:	jmp		0x7fffeafcaa1f
0x7fffeafcaa1f:	mov		rax, -1
0x7fffeafcaa26:	cmp		qword ptr [rbp - 0x20], rax
0x7fffeafcaa2a:	je		0x7fffeafcade1
0x7fffeafcaa30:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcaa34:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcaa38:	add		rax, qword ptr [rcx + 0x358]
0x7fffeafcaa3f:	mov		qword ptr [rcx + 0x358], rax
0x7fffeafcaa46:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcaa4a:	cmp		rax, qword ptr [rcx + 0x360]
0x7fffeafcaa51:	jbe		0x7fffeafcaa6d
0x7fffeafcaa57:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcaa5b:	mov		rax, qword ptr [rax + 0x358]
0x7fffeafcaa62:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcaa66:	mov		qword ptr [rcx + 0x360], rax
0x7fffeafcaa6d:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcaa71:	cmp		qword ptr [rax + 0x28], 0
0x7fffeafcaa76:	jne		0x7fffeafcab42
0x7fffeafcaa7c:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcaa80:	cmp		qword ptr [rax + 0x18], 0
0x7fffeafcaa85:	je		0x7fffeafcaa9d
0x7fffeafcaa8b:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcaa8f:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcaa93:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcaa97:	jae		0x7fffeafcaaa9
0x7fffeafcaa9d:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcaaa1:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcaaa5:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafcaaa9:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcaaad:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcaab1:	mov		qword ptr [rcx + 0x378], rax
0x7fffeafcaab8:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcaabc:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcaac0:	mov		qword ptr [rcx + 0x380], rax
0x7fffeafcaac7:	mov		edx, dword ptr [rbp - 0x2c]
0x7fffeafcaaca:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcaace:	mov		dword ptr [rax + 0x390], edx
0x7fffeafcaad4:	mov		rax, qword ptr [rip + 0x2c2034d]
0x7fffeafcaadb:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcaadf:	mov		qword ptr [rcx + 0x40], rax
0x7fffeafcaae3:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcaae7:	mov		qword ptr [rax + 0x38], -1
0x7fffeafcaaef:	mov		rdi, qword ptr [rbp - 0x10]
0x7fffeafcaaf3:	call		0x7fffeafcf690
0x7fffeafcaaf8:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcaafc:	add		rax, -0x10
0x7fffeafcab02:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcab06:	mov		rcx, qword ptr [rcx - 8]
0x7fffeafcab0a:	and		rcx, 0xfffffffffffffff8
0x7fffeafcab11:	add		rax, rcx
0x7fffeafcab14:	mov		qword ptr [rbp - 0x50], rax
0x7fffeafcab18:	mov		rdi, qword ptr [rbp - 0x10]
0x7fffeafcab1c:	mov		rsi, qword ptr [rbp - 0x50]
0x7fffeafcab20:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcab24:	add		rax, qword ptr [rbp - 0x28]
0x7fffeafcab28:	mov		rcx, qword ptr [rbp - 0x50]
0x7fffeafcab2c:	sub		rax, rcx
0x7fffeafcab2f:	sub		rax, 0x50
0x7fffeafcab35:	mov		rdx, rax
0x7fffeafcab38:	call		0x7fffeafcf6f0
0x7fffeafcab3d:	jmp		0x7fffeafcad56
0x7fffeafcab42:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcab46:	add		rax, 0x378
0x7fffeafcab4c:	mov		qword ptr [rbp - 0x58], rax
0x7fffeafcab50:	xor		eax, eax
0x7fffeafcab52:	cmp		qword ptr [rbp - 0x58], 0
0x7fffeafcab57:	mov		byte ptr [rbp - 0x7a], al
0x7fffeafcab5a:	je		0x7fffeafcab7e
0x7fffeafcab60:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcab64:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafcab68:	mov		rcx, qword ptr [rcx]
0x7fffeafcab6b:	mov		rdx, qword ptr [rbp - 0x58]
0x7fffeafcab6f:	add		rcx, qword ptr [rdx + 8]
0x7fffeafcab73:	cmp		rax, rcx
0x7fffeafcab76:	setne		sil
0x7fffeafcab7a:	mov		byte ptr [rbp - 0x7a], sil
0x7fffeafcab7e:	mov		al, byte ptr [rbp - 0x7a]
0x7fffeafcab81:	test		al, 1
0x7fffeafcab83:	jne		0x7fffeafcab8e
0x7fffeafcab89:	jmp		0x7fffeafcab9f
0x7fffeafcab8e:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafcab92:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafcab96:	mov		qword ptr [rbp - 0x58], rax
0x7fffeafcab9a:	jmp		0x7fffeafcab50
0x7fffeafcab9f:	cmp		qword ptr [rbp - 0x58], 0
0x7fffeafcaba4:	je		0x7fffeafcac44
0x7fffeafcabaa:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafcabae:	mov		ecx, dword ptr [rax + 0x18]
0x7fffeafcabb1:	and		ecx, 8
0x7fffeafcabb4:	cmp		ecx, 0
0x7fffeafcabb7:	jne		0x7fffeafcac44
0x7fffeafcabbd:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafcabc1:	mov		ecx, dword ptr [rax + 0x18]
0x7fffeafcabc4:	mov		eax, ecx
0x7fffeafcabc6:	and		rax, 0
0x7fffeafcabcc:	mov		ecx, dword ptr [rbp - 0x2c]
0x7fffeafcabcf:	mov		edx, ecx
0x7fffeafcabd1:	cmp		rax, rdx
0x7fffeafcabd4:	jne		0x7fffeafcac44
0x7fffeafcabda:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcabde:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafcabe2:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafcabe6:	cmp		rax, qword ptr [rcx]
0x7fffeafcabe9:	jb		0x7fffeafcac44
0x7fffeafcabef:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcabf3:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafcabf7:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafcabfb:	mov		rcx, qword ptr [rcx]
0x7fffeafcabfe:	mov		rdx, qword ptr [rbp - 0x58]
0x7fffeafcac02:	add		rcx, qword ptr [rdx + 8]
0x7fffeafcac06:	cmp		rax, rcx
0x7fffeafcac09:	jae		0x7fffeafcac44
0x7fffeafcac0f:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcac13:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafcac17:	add		rax, qword ptr [rcx + 8]
0x7fffeafcac1b:	mov		qword ptr [rcx + 8], rax
0x7fffeafcac1f:	mov		rdi, qword ptr [rbp - 0x10]
0x7fffeafcac23:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcac27:	mov		rsi, qword ptr [rax + 0x28]
0x7fffeafcac2b:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcac2f:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafcac33:	add		rax, qword ptr [rbp - 0x28]
0x7fffeafcac37:	mov		rdx, rax
0x7fffeafcac3a:	call		0x7fffeafcf6f0
0x7fffeafcac3f:	jmp		0x7fffeafcad51
0x7fffeafcac44:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcac48:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcac4c:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcac50:	jae		0x7fffeafcac62
0x7fffeafcac56:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcac5a:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcac5e:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafcac62:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcac66:	add		rax, 0x378
0x7fffeafcac6c:	mov		qword ptr [rbp - 0x58], rax
0x7fffeafcac70:	xor		eax, eax
0x7fffeafcac72:	cmp		qword ptr [rbp - 0x58], 0
0x7fffeafcac77:	mov		byte ptr [rbp - 0x7b], al
0x7fffeafcac7a:	je		0x7fffeafcac98
0x7fffeafcac80:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafcac84:	mov		rax, qword ptr [rax]
0x7fffeafcac87:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcac8b:	add		rcx, qword ptr [rbp - 0x28]
0x7fffeafcac8f:	cmp		rax, rcx
0x7fffeafcac92:	setne		dl
0x7fffeafcac95:	mov		byte ptr [rbp - 0x7b], dl
0x7fffeafcac98:	mov		al, byte ptr [rbp - 0x7b]
0x7fffeafcac9b:	test		al, 1
0x7fffeafcac9d:	jne		0x7fffeafcaca8
0x7fffeafcaca3:	jmp		0x7fffeafcacb9
0x7fffeafcaca8:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafcacac:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafcacb0:	mov		qword ptr [rbp - 0x58], rax
0x7fffeafcacb4:	jmp		0x7fffeafcac70
0x7fffeafcacb9:	cmp		qword ptr [rbp - 0x58], 0
0x7fffeafcacbe:	je		0x7fffeafcad38
0x7fffeafcacc4:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafcacc8:	mov		ecx, dword ptr [rax + 0x18]
0x7fffeafcaccb:	and		ecx, 8
0x7fffeafcacce:	cmp		ecx, 0
0x7fffeafcacd1:	jne		0x7fffeafcad38
0x7fffeafcacd7:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafcacdb:	mov		ecx, dword ptr [rax + 0x18]
0x7fffeafcacde:	mov		eax, ecx
0x7fffeafcace0:	and		rax, 0
0x7fffeafcace6:	mov		ecx, dword ptr [rbp - 0x2c]
0x7fffeafcace9:	mov		edx, ecx
0x7fffeafcaceb:	cmp		rax, rdx
0x7fffeafcacee:	jne		0x7fffeafcad38
0x7fffeafcacf4:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafcacf8:	mov		rax, qword ptr [rax]
0x7fffeafcacfb:	mov		qword ptr [rbp - 0x60], rax
0x7fffeafcacff:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcad03:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafcad07:	mov		qword ptr [rcx], rax
0x7fffeafcad0a:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcad0e:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafcad12:	add		rax, qword ptr [rcx + 8]
0x7fffeafcad16:	mov		qword ptr [rcx + 8], rax
0x7fffeafcad1a:	mov		rdi, qword ptr [rbp - 0x10]
0x7fffeafcad1e:	mov		rsi, qword ptr [rbp - 0x20]
0x7fffeafcad22:	mov		rdx, qword ptr [rbp - 0x60]
0x7fffeafcad26:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafcad2a:	call		0x7fffeafcf9d0
0x7fffeafcad2f:	mov		qword ptr [rbp - 8], rax
0x7fffeafcad33:	jmp		0x7fffeafcadf4
0x7fffeafcad38:	mov		rdi, qword ptr [rbp - 0x10]
0x7fffeafcad3c:	mov		rsi, qword ptr [rbp - 0x20]
0x7fffeafcad40:	mov		rdx, qword ptr [rbp - 0x28]
0x7fffeafcad44:	mov		ecx, dword ptr [rbp - 0x2c]
0x7fffeafcad47:	call		0x7fffeafd06f0
0x7fffeafcad4c:	jmp		0x7fffeafcad51
0x7fffeafcad51:	jmp		0x7fffeafcad56
0x7fffeafcad56:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcad5a:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcad5e:	cmp		rax, qword ptr [rcx + 0x10]
0x7fffeafcad62:	jae		0x7fffeafcaddc
0x7fffeafcad68:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcad6c:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcad70:	mov		rdx, qword ptr [rcx + 0x10]
0x7fffeafcad74:	sub		rdx, rax
0x7fffeafcad77:	mov		qword ptr [rcx + 0x10], rdx
0x7fffeafcad7b:	mov		qword ptr [rbp - 0x68], rdx
0x7fffeafcad7f:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcad83:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafcad87:	mov		qword ptr [rbp - 0x70], rax
0x7fffeafcad8b:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafcad8f:	add		rax, qword ptr [rbp - 0x18]
0x7fffeafcad93:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcad97:	mov		qword ptr [rcx + 0x28], rax
0x7fffeafcad9b:	mov		qword ptr [rbp - 0x78], rax
0x7fffeafcad9f:	mov		rax, qword ptr [rbp - 0x68]
0x7fffeafcada3:	or		rax, 1
0x7fffeafcada9:	mov		rcx, qword ptr [rbp - 0x78]
0x7fffeafcadad:	mov		qword ptr [rcx + 8], rax
0x7fffeafcadb1:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcadb5:	or		rax, 1
0x7fffeafcadbb:	or		rax, 2
0x7fffeafcadc1:	mov		rcx, qword ptr [rbp - 0x70]
0x7fffeafcadc5:	mov		qword ptr [rcx + 8], rax
0x7fffeafcadc9:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafcadcd:	add		rax, 0x10
0x7fffeafcadd3:	mov		qword ptr [rbp - 8], rax
0x7fffeafcadd7:	jmp		0x7fffeafcadf4
0x7fffeafcaddc:	jmp		0x7fffeafcade1
0x7fffeafcade1:	call		0x7fffeafc3cb0
0x7fffeafcade6:	mov		dword ptr [rax], 0xc
0x7fffeafcadec:	mov		qword ptr [rbp - 8], 0
0x7fffeafcadf4:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcadf8:	add		rsp, 0x80
0x7fffeafcadff:	pop		rbp
0x7fffeafcae00:	ret		
0x7fffeafcae01:	nop		word ptr cs:[rax + rax]
0x7fffeafcae0b:	nop		dword ptr [rax + rax]
disassembling symbol '.LBB10_2':
textAddr: 0x7fffeafca8fe, textSize: 105
0x7fffeafca8fe:	mov		al, byte ptr [rbp - 0x79]
0x7fffeafca901:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafca905:	mov		edx, dword ptr [rcx + 0x370]
0x7fffeafca90b:	mov		ecx, edx
0x7fffeafca90d:	and		rcx, 0
0x7fffeafca914:	cmp		rcx, 0
0x7fffeafca918:	je		0x7fffeafca96c
0x7fffeafca91e:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafca922:	cmp		rax, qword ptr [rip + 0x2c20517]
0x7fffeafca929:	jb		0x7fffeafca96c
0x7fffeafca92f:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafca933:	cmp		qword ptr [rax + 0x10], 0
0x7fffeafca938:	je		0x7fffeafca96c
0x7fffeafca93e:	mov		rdi, qword ptr [rbp - 0x10]
0x7fffeafca942:	mov		rsi, qword ptr [rbp - 0x18]
0x7fffeafca946:	call		0x7fffeafcf7c0
0x7fffeafca94b:	mov		qword ptr [rbp - 0x40], rax
0x7fffeafca94f:	cmp		qword ptr [rbp - 0x40], 0
0x7fffeafca954:	je		0x7fffeafca967
0x7fffeafca95a:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafca95e:	mov		qword ptr [rbp - 8], rax
0x7fffeafca962:	jmp		0x7fffeafcadf4
disassembling symbol '.LBB10_7':
textAddr: 0x7fffeafca967, textSize: 5
0x7fffeafca967:	jmp		0x7fffeafca96c
disassembling symbol '.LBB10_8':
textAddr: 0x7fffeafca96c, textSize: 82
0x7fffeafca96c:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafca970:	add		rax, 0x60
0x7fffeafca976:	mov		rcx, qword ptr [rip + 0x2c204bb]
0x7fffeafca97d:	sub		rcx, 1
0x7fffeafca984:	add		rax, rcx
0x7fffeafca987:	mov		rcx, qword ptr [rip + 0x2c204aa]
0x7fffeafca98e:	sub		rcx, 1
0x7fffeafca995:	xor		rcx, 0xffffffffffffffff
0x7fffeafca99c:	and		rax, rcx
0x7fffeafca99f:	mov		qword ptr [rbp - 0x38], rax
0x7fffeafca9a3:	mov		rax, qword ptr [rbp - 0x38]
0x7fffeafca9a7:	cmp		rax, qword ptr [rbp - 0x18]
0x7fffeafca9ab:	ja		0x7fffeafca9be
0x7fffeafca9b1:	mov		qword ptr [rbp - 8], 0
0x7fffeafca9b9:	jmp		0x7fffeafcadf4
disassembling symbol '.LBB10_10':
textAddr: 0x7fffeafca9be, textSize: 79
0x7fffeafca9be:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafca9c2:	cmp		qword ptr [rax + 0x368], 0
0x7fffeafca9ca:	je		0x7fffeafcaa1f
0x7fffeafca9d0:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafca9d4:	mov		rax, qword ptr [rax + 0x358]
0x7fffeafca9db:	add		rax, qword ptr [rbp - 0x38]
0x7fffeafca9df:	mov		qword ptr [rbp - 0x48], rax
0x7fffeafca9e3:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafca9e7:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafca9eb:	cmp		rax, qword ptr [rcx + 0x358]
0x7fffeafca9f2:	jbe		0x7fffeafcaa0d
0x7fffeafca9f8:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafca9fc:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcaa00:	cmp		rax, qword ptr [rcx + 0x368]
0x7fffeafcaa07:	jbe		0x7fffeafcaa1a
disassembling symbol '.LBB10_13':
textAddr: 0x7fffeafcaa0d, textSize: 13
0x7fffeafcaa0d:	mov		qword ptr [rbp - 8], 0
0x7fffeafcaa15:	jmp		0x7fffeafcadf4
disassembling symbol '.LBB10_14':
textAddr: 0x7fffeafcaa1a, textSize: 5
0x7fffeafcaa1a:	jmp		0x7fffeafcaa1f
disassembling symbol '.LBB10_15':
textAddr: 0x7fffeafcaa1f, textSize: 78
0x7fffeafcaa1f:	mov		rax, -1
0x7fffeafcaa26:	cmp		qword ptr [rbp - 0x20], rax
0x7fffeafcaa2a:	je		0x7fffeafcade1
0x7fffeafcaa30:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcaa34:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcaa38:	add		rax, qword ptr [rcx + 0x358]
0x7fffeafcaa3f:	mov		qword ptr [rcx + 0x358], rax
0x7fffeafcaa46:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcaa4a:	cmp		rax, qword ptr [rcx + 0x360]
0x7fffeafcaa51:	jbe		0x7fffeafcaa6d
0x7fffeafcaa57:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcaa5b:	mov		rax, qword ptr [rax + 0x358]
0x7fffeafcaa62:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcaa66:	mov		qword ptr [rcx + 0x360], rax
disassembling symbol '.LBB10_18':
textAddr: 0x7fffeafcaa6d, textSize: 48
0x7fffeafcaa6d:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcaa71:	cmp		qword ptr [rax + 0x28], 0
0x7fffeafcaa76:	jne		0x7fffeafcab42
0x7fffeafcaa7c:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcaa80:	cmp		qword ptr [rax + 0x18], 0
0x7fffeafcaa85:	je		0x7fffeafcaa9d
0x7fffeafcaa8b:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcaa8f:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcaa93:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcaa97:	jae		0x7fffeafcaaa9
disassembling symbol '.LBB10_21':
textAddr: 0x7fffeafcaa9d, textSize: 12
0x7fffeafcaa9d:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcaaa1:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcaaa5:	mov		qword ptr [rcx + 0x18], rax
disassembling symbol '.LBB10_22':
textAddr: 0x7fffeafcaaa9, textSize: 153
0x7fffeafcaaa9:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcaaad:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcaab1:	mov		qword ptr [rcx + 0x378], rax
0x7fffeafcaab8:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcaabc:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcaac0:	mov		qword ptr [rcx + 0x380], rax
0x7fffeafcaac7:	mov		edx, dword ptr [rbp - 0x2c]
0x7fffeafcaaca:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcaace:	mov		dword ptr [rax + 0x390], edx
0x7fffeafcaad4:	mov		rax, qword ptr [rip + 0x2c2034d]
0x7fffeafcaadb:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcaadf:	mov		qword ptr [rcx + 0x40], rax
0x7fffeafcaae3:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcaae7:	mov		qword ptr [rax + 0x38], -1
0x7fffeafcaaef:	mov		rdi, qword ptr [rbp - 0x10]
0x7fffeafcaaf3:	call		0x7fffeafcf690
0x7fffeafcaaf8:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcaafc:	add		rax, -0x10
0x7fffeafcab02:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcab06:	mov		rcx, qword ptr [rcx - 8]
0x7fffeafcab0a:	and		rcx, 0xfffffffffffffff8
0x7fffeafcab11:	add		rax, rcx
0x7fffeafcab14:	mov		qword ptr [rbp - 0x50], rax
0x7fffeafcab18:	mov		rdi, qword ptr [rbp - 0x10]
0x7fffeafcab1c:	mov		rsi, qword ptr [rbp - 0x50]
0x7fffeafcab20:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcab24:	add		rax, qword ptr [rbp - 0x28]
0x7fffeafcab28:	mov		rcx, qword ptr [rbp - 0x50]
0x7fffeafcab2c:	sub		rax, rcx
0x7fffeafcab2f:	sub		rax, 0x50
0x7fffeafcab35:	mov		rdx, rax
0x7fffeafcab38:	call		0x7fffeafcf6f0
0x7fffeafcab3d:	jmp		0x7fffeafcad56
disassembling symbol '.LBB10_23':
textAddr: 0x7fffeafcab42, textSize: 14
0x7fffeafcab42:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcab46:	add		rax, 0x378
0x7fffeafcab4c:	mov		qword ptr [rbp - 0x58], rax
disassembling symbol '.LBB10_24':
textAddr: 0x7fffeafcab50, textSize: 46
0x7fffeafcab50:	xor		eax, eax
0x7fffeafcab52:	cmp		qword ptr [rbp - 0x58], 0
0x7fffeafcab57:	mov		byte ptr [rbp - 0x7a], al
0x7fffeafcab5a:	je		0x7fffeafcab7e
0x7fffeafcab60:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcab64:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafcab68:	mov		rcx, qword ptr [rcx]
0x7fffeafcab6b:	mov		rdx, qword ptr [rbp - 0x58]
0x7fffeafcab6f:	add		rcx, qword ptr [rdx + 8]
0x7fffeafcab73:	cmp		rax, rcx
0x7fffeafcab76:	setne		sil
0x7fffeafcab7a:	mov		byte ptr [rbp - 0x7a], sil
disassembling symbol '.LBB10_26':
textAddr: 0x7fffeafcab7e, textSize: 16
0x7fffeafcab7e:	mov		al, byte ptr [rbp - 0x7a]
0x7fffeafcab81:	test		al, 1
0x7fffeafcab83:	jne		0x7fffeafcab8e
0x7fffeafcab89:	jmp		0x7fffeafcab9f
disassembling symbol '.LBB10_27':
textAddr: 0x7fffeafcab8e, textSize: 17
0x7fffeafcab8e:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafcab92:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafcab96:	mov		qword ptr [rbp - 0x58], rax
0x7fffeafcab9a:	jmp		0x7fffeafcab50
disassembling symbol '.LBB10_28':
textAddr: 0x7fffeafcab9f, textSize: 165
0x7fffeafcab9f:	cmp		qword ptr [rbp - 0x58], 0
0x7fffeafcaba4:	je		0x7fffeafcac44
0x7fffeafcabaa:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafcabae:	mov		ecx, dword ptr [rax + 0x18]
0x7fffeafcabb1:	and		ecx, 8
0x7fffeafcabb4:	cmp		ecx, 0
0x7fffeafcabb7:	jne		0x7fffeafcac44
0x7fffeafcabbd:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafcabc1:	mov		ecx, dword ptr [rax + 0x18]
0x7fffeafcabc4:	mov		eax, ecx
0x7fffeafcabc6:	and		rax, 0
0x7fffeafcabcc:	mov		ecx, dword ptr [rbp - 0x2c]
0x7fffeafcabcf:	mov		edx, ecx
0x7fffeafcabd1:	cmp		rax, rdx
0x7fffeafcabd4:	jne		0x7fffeafcac44
0x7fffeafcabda:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcabde:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafcabe2:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafcabe6:	cmp		rax, qword ptr [rcx]
0x7fffeafcabe9:	jb		0x7fffeafcac44
0x7fffeafcabef:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcabf3:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafcabf7:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafcabfb:	mov		rcx, qword ptr [rcx]
0x7fffeafcabfe:	mov		rdx, qword ptr [rbp - 0x58]
0x7fffeafcac02:	add		rcx, qword ptr [rdx + 8]
0x7fffeafcac06:	cmp		rax, rcx
0x7fffeafcac09:	jae		0x7fffeafcac44
0x7fffeafcac0f:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcac13:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafcac17:	add		rax, qword ptr [rcx + 8]
0x7fffeafcac1b:	mov		qword ptr [rcx + 8], rax
0x7fffeafcac1f:	mov		rdi, qword ptr [rbp - 0x10]
0x7fffeafcac23:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcac27:	mov		rsi, qword ptr [rax + 0x28]
0x7fffeafcac2b:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcac2f:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafcac33:	add		rax, qword ptr [rbp - 0x28]
0x7fffeafcac37:	mov		rdx, rax
0x7fffeafcac3a:	call		0x7fffeafcf6f0
0x7fffeafcac3f:	jmp		0x7fffeafcad51
disassembling symbol '.LBB10_34':
textAddr: 0x7fffeafcac44, textSize: 30
0x7fffeafcac44:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcac48:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcac4c:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcac50:	jae		0x7fffeafcac62
0x7fffeafcac56:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcac5a:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcac5e:	mov		qword ptr [rcx + 0x18], rax
disassembling symbol '.LBB10_36':
textAddr: 0x7fffeafcac62, textSize: 14
0x7fffeafcac62:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcac66:	add		rax, 0x378
0x7fffeafcac6c:	mov		qword ptr [rbp - 0x58], rax
disassembling symbol '.LBB10_37':
textAddr: 0x7fffeafcac70, textSize: 40
0x7fffeafcac70:	xor		eax, eax
0x7fffeafcac72:	cmp		qword ptr [rbp - 0x58], 0
0x7fffeafcac77:	mov		byte ptr [rbp - 0x7b], al
0x7fffeafcac7a:	je		0x7fffeafcac98
0x7fffeafcac80:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafcac84:	mov		rax, qword ptr [rax]
0x7fffeafcac87:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcac8b:	add		rcx, qword ptr [rbp - 0x28]
0x7fffeafcac8f:	cmp		rax, rcx
0x7fffeafcac92:	setne		dl
0x7fffeafcac95:	mov		byte ptr [rbp - 0x7b], dl
disassembling symbol '.LBB10_39':
textAddr: 0x7fffeafcac98, textSize: 16
0x7fffeafcac98:	mov		al, byte ptr [rbp - 0x7b]
0x7fffeafcac9b:	test		al, 1
0x7fffeafcac9d:	jne		0x7fffeafcaca8
0x7fffeafcaca3:	jmp		0x7fffeafcacb9
disassembling symbol '.LBB10_40':
textAddr: 0x7fffeafcaca8, textSize: 17
0x7fffeafcaca8:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafcacac:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafcacb0:	mov		qword ptr [rbp - 0x58], rax
0x7fffeafcacb4:	jmp		0x7fffeafcac70
disassembling symbol '.LBB10_41':
textAddr: 0x7fffeafcacb9, textSize: 127
0x7fffeafcacb9:	cmp		qword ptr [rbp - 0x58], 0
0x7fffeafcacbe:	je		0x7fffeafcad38
0x7fffeafcacc4:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafcacc8:	mov		ecx, dword ptr [rax + 0x18]
0x7fffeafcaccb:	and		ecx, 8
0x7fffeafcacce:	cmp		ecx, 0
0x7fffeafcacd1:	jne		0x7fffeafcad38
0x7fffeafcacd7:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafcacdb:	mov		ecx, dword ptr [rax + 0x18]
0x7fffeafcacde:	mov		eax, ecx
0x7fffeafcace0:	and		rax, 0
0x7fffeafcace6:	mov		ecx, dword ptr [rbp - 0x2c]
0x7fffeafcace9:	mov		edx, ecx
0x7fffeafcaceb:	cmp		rax, rdx
0x7fffeafcacee:	jne		0x7fffeafcad38
0x7fffeafcacf4:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafcacf8:	mov		rax, qword ptr [rax]
0x7fffeafcacfb:	mov		qword ptr [rbp - 0x60], rax
0x7fffeafcacff:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcad03:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafcad07:	mov		qword ptr [rcx], rax
0x7fffeafcad0a:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcad0e:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafcad12:	add		rax, qword ptr [rcx + 8]
0x7fffeafcad16:	mov		qword ptr [rcx + 8], rax
0x7fffeafcad1a:	mov		rdi, qword ptr [rbp - 0x10]
0x7fffeafcad1e:	mov		rsi, qword ptr [rbp - 0x20]
0x7fffeafcad22:	mov		rdx, qword ptr [rbp - 0x60]
0x7fffeafcad26:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafcad2a:	call		0x7fffeafcf9d0
0x7fffeafcad2f:	mov		qword ptr [rbp - 8], rax
0x7fffeafcad33:	jmp		0x7fffeafcadf4
disassembling symbol '.LBB10_45':
textAddr: 0x7fffeafcad38, textSize: 25
0x7fffeafcad38:	mov		rdi, qword ptr [rbp - 0x10]
0x7fffeafcad3c:	mov		rsi, qword ptr [rbp - 0x20]
0x7fffeafcad40:	mov		rdx, qword ptr [rbp - 0x28]
0x7fffeafcad44:	mov		ecx, dword ptr [rbp - 0x2c]
0x7fffeafcad47:	call		0x7fffeafd06f0
0x7fffeafcad4c:	jmp		0x7fffeafcad51
disassembling symbol '.LBB10_47':
textAddr: 0x7fffeafcad51, textSize: 5
0x7fffeafcad51:	jmp		0x7fffeafcad56
disassembling symbol '.LBB10_48':
textAddr: 0x7fffeafcad56, textSize: 134
0x7fffeafcad56:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcad5a:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcad5e:	cmp		rax, qword ptr [rcx + 0x10]
0x7fffeafcad62:	jae		0x7fffeafcaddc
0x7fffeafcad68:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcad6c:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcad70:	mov		rdx, qword ptr [rcx + 0x10]
0x7fffeafcad74:	sub		rdx, rax
0x7fffeafcad77:	mov		qword ptr [rcx + 0x10], rdx
0x7fffeafcad7b:	mov		qword ptr [rbp - 0x68], rdx
0x7fffeafcad7f:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcad83:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafcad87:	mov		qword ptr [rbp - 0x70], rax
0x7fffeafcad8b:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafcad8f:	add		rax, qword ptr [rbp - 0x18]
0x7fffeafcad93:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcad97:	mov		qword ptr [rcx + 0x28], rax
0x7fffeafcad9b:	mov		qword ptr [rbp - 0x78], rax
0x7fffeafcad9f:	mov		rax, qword ptr [rbp - 0x68]
0x7fffeafcada3:	or		rax, 1
0x7fffeafcada9:	mov		rcx, qword ptr [rbp - 0x78]
0x7fffeafcadad:	mov		qword ptr [rcx + 8], rax
0x7fffeafcadb1:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcadb5:	or		rax, 1
0x7fffeafcadbb:	or		rax, 2
0x7fffeafcadc1:	mov		rcx, qword ptr [rbp - 0x70]
0x7fffeafcadc5:	mov		qword ptr [rcx + 8], rax
0x7fffeafcadc9:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafcadcd:	add		rax, 0x10
0x7fffeafcadd3:	mov		qword ptr [rbp - 8], rax
0x7fffeafcadd7:	jmp		0x7fffeafcadf4
disassembling symbol '.LBB10_50':
textAddr: 0x7fffeafcaddc, textSize: 5
0x7fffeafcaddc:	jmp		0x7fffeafcade1
disassembling symbol '.LBB10_51':
textAddr: 0x7fffeafcade1, textSize: 19
0x7fffeafcade1:	call		0x7fffeafc3cb0
0x7fffeafcade6:	mov		dword ptr [rax], 0xc
0x7fffeafcadec:	mov		qword ptr [rbp - 8], 0
disassembling symbol '.LBB10_52':
textAddr: 0x7fffeafcadf4, textSize: 28
0x7fffeafcadf4:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcadf8:	add		rsp, 0x80
0x7fffeafcadff:	pop		rbp
0x7fffeafcae00:	ret		
0x7fffeafcae01:	nop		word ptr cs:[rax + rax]
0x7fffeafcae0b:	nop		dword ptr [rax + rax]
disassembling symbol 'mspace_free':
textAddr: 0x7fffeafcae10, textSize: 5296
0x7fffeafcae10:	push		rbp
0x7fffeafcae11:	mov		rbp, rsp
0x7fffeafcae14:	sub		rsp, 0x1a0
0x7fffeafcae1b:	mov		qword ptr [rbp - 8], rdi
0x7fffeafcae1f:	mov		qword ptr [rbp - 0x10], rsi
0x7fffeafcae23:	cmp		qword ptr [rbp - 0x10], 0
0x7fffeafcae28:	je		0x7fffeafcc2b4
0x7fffeafcae2e:	xor		eax, eax
0x7fffeafcae30:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcae34:	add		rcx, -0x10
0x7fffeafcae3b:	mov		qword ptr [rbp - 0x18], rcx
0x7fffeafcae3f:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcae43:	mov		qword ptr [rbp - 0x20], rcx
0x7fffeafcae47:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafcae4b:	mov		rdx, qword ptr [rbp - 0x20]
0x7fffeafcae4f:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafcae53:	mov		byte ptr [rbp - 0x171], al
0x7fffeafcae59:	jb		0x7fffeafcae7a
0x7fffeafcae5f:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcae63:	mov		rax, qword ptr [rax + 8]
0x7fffeafcae67:	and		rax, 3
0x7fffeafcae6d:	cmp		rax, 1
0x7fffeafcae71:	setne		cl
0x7fffeafcae74:	mov		byte ptr [rbp - 0x171], cl
0x7fffeafcae7a:	mov		al, byte ptr [rbp - 0x171]
0x7fffeafcae80:	and		al, 1
0x7fffeafcae82:	movzx		ecx, al
0x7fffeafcae85:	movsxd		rdx, ecx
0x7fffeafcae88:	cmp		rdx, 0
0x7fffeafcae8c:	je		0x7fffeafcc2a5
0x7fffeafcae92:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcae96:	mov		rax, qword ptr [rax + 8]
0x7fffeafcae9a:	and		rax, 0xfffffffffffffff8
0x7fffeafcaea0:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafcaea4:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcaea8:	add		rax, qword ptr [rbp - 0x28]
0x7fffeafcaeac:	mov		qword ptr [rbp - 0x30], rax
0x7fffeafcaeb0:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcaeb4:	mov		rax, qword ptr [rax + 8]
0x7fffeafcaeb8:	and		rax, 1
0x7fffeafcaebe:	cmp		rax, 0
0x7fffeafcaec2:	jne		0x7fffeafcb552
0x7fffeafcaec8:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcaecc:	mov		rax, qword ptr [rax]
0x7fffeafcaecf:	mov		qword ptr [rbp - 0x38], rax
0x7fffeafcaed3:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcaed7:	mov		rax, qword ptr [rax + 8]
0x7fffeafcaedb:	and		rax, 3
0x7fffeafcaee1:	cmp		rax, 0
0x7fffeafcaee5:	jne		0x7fffeafcaf02
0x7fffeafcaeeb:	mov		rax, qword ptr [rbp - 0x38]
0x7fffeafcaeef:	add		rax, 0x20
0x7fffeafcaef5:	add		rax, qword ptr [rbp - 0x28]
0x7fffeafcaef9:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafcaefd:	jmp		0x7fffeafcc2af
0x7fffeafcaf02:	xor		eax, eax
0x7fffeafcaf04:	mov		ecx, eax
0x7fffeafcaf06:	mov		rdx, qword ptr [rbp - 0x18]
0x7fffeafcaf0a:	sub		rcx, qword ptr [rbp - 0x38]
0x7fffeafcaf0e:	add		rdx, rcx
0x7fffeafcaf11:	mov		qword ptr [rbp - 0x40], rdx
0x7fffeafcaf15:	mov		rcx, qword ptr [rbp - 0x38]
0x7fffeafcaf19:	add		rcx, qword ptr [rbp - 0x28]
0x7fffeafcaf1d:	mov		qword ptr [rbp - 0x28], rcx
0x7fffeafcaf21:	mov		rcx, qword ptr [rbp - 0x40]
0x7fffeafcaf25:	mov		qword ptr [rbp - 0x18], rcx
0x7fffeafcaf29:	mov		rcx, qword ptr [rbp - 0x40]
0x7fffeafcaf2d:	mov		rdx, qword ptr [rbp - 0x20]
0x7fffeafcaf31:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafcaf35:	setae		sil
0x7fffeafcaf39:	and		sil, 1
0x7fffeafcaf3d:	movzx		eax, sil
0x7fffeafcaf41:	movsxd		rcx, eax
0x7fffeafcaf44:	cmp		rcx, 0
0x7fffeafcaf48:	je		0x7fffeafcb543
0x7fffeafcaf4e:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcaf52:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcaf56:	cmp		rax, qword ptr [rcx + 0x20]
0x7fffeafcaf5a:	je		0x7fffeafcb4db
0x7fffeafcaf60:	mov		rax, qword ptr [rbp - 0x38]
0x7fffeafcaf64:	shr		rax, 3
0x7fffeafcaf68:	cmp		rax, 0x20
0x7fffeafcaf6c:	jae		0x7fffeafcb0ff
0x7fffeafcaf72:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcaf76:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafcaf7a:	mov		qword ptr [rbp - 0x48], rax
0x7fffeafcaf7e:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcaf82:	mov		rax, qword ptr [rax + 0x18]
0x7fffeafcaf86:	mov		qword ptr [rbp - 0x50], rax
0x7fffeafcaf8a:	mov		rax, qword ptr [rbp - 0x38]
0x7fffeafcaf8e:	shr		rax, 3
0x7fffeafcaf92:	mov		dword ptr [rbp - 0x54], eax
0x7fffeafcaf95:	mov		rcx, qword ptr [rbp - 0x48]
0x7fffeafcaf99:	mov		rdx, qword ptr [rbp - 0x20]
0x7fffeafcaf9d:	add		rdx, 0x48
0x7fffeafcafa4:	mov		eax, dword ptr [rbp - 0x54]
0x7fffeafcafa7:	shl		eax, 1
0x7fffeafcafaa:	mov		eax, eax
0x7fffeafcafac:	mov		esi, eax
0x7fffeafcafae:	shl		rsi, 3
0x7fffeafcafb2:	add		rdx, rsi
0x7fffeafcafb5:	cmp		rcx, rdx
0x7fffeafcafb8:	mov		dil, 1
0x7fffeafcafbb:	mov		byte ptr [rbp - 0x172], dil
0x7fffeafcafc2:	je		0x7fffeafcb003
0x7fffeafcafc8:	xor		eax, eax
0x7fffeafcafca:	mov		rcx, qword ptr [rbp - 0x48]
0x7fffeafcafce:	mov		rdx, qword ptr [rbp - 0x20]
0x7fffeafcafd2:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafcafd6:	mov		byte ptr [rbp - 0x173], al
0x7fffeafcafdc:	jb		0x7fffeafcaff7
0x7fffeafcafe2:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafcafe6:	mov		rax, qword ptr [rax + 0x18]
0x7fffeafcafea:	cmp		rax, qword ptr [rbp - 0x18]
0x7fffeafcafee:	sete		cl
0x7fffeafcaff1:	mov		byte ptr [rbp - 0x173], cl
0x7fffeafcaff7:	mov		al, byte ptr [rbp - 0x173]
0x7fffeafcaffd:	mov		byte ptr [rbp - 0x172], al
0x7fffeafcb003:	mov		al, byte ptr [rbp - 0x172]
0x7fffeafcb009:	and		al, 1
0x7fffeafcb00b:	movzx		ecx, al
0x7fffeafcb00e:	movsxd		rdx, ecx
0x7fffeafcb011:	cmp		rdx, 0
0x7fffeafcb015:	je		0x7fffeafcb0f5
0x7fffeafcb01b:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafcb01f:	cmp		rax, qword ptr [rbp - 0x48]
0x7fffeafcb023:	jne		0x7fffeafcb043
0x7fffeafcb029:	mov		ecx, dword ptr [rbp - 0x54]
0x7fffeafcb02c:	mov		eax, 1
0x7fffeafcb031:	shl		eax, cl
0x7fffeafcb033:	xor		eax, 0xffffffff
0x7fffeafcb036:	mov		rdx, qword ptr [rbp - 0x20]
0x7fffeafcb03a:	and		eax, dword ptr [rdx]
0x7fffeafcb03c:	mov		dword ptr [rdx], eax
0x7fffeafcb03e:	jmp		0x7fffeafcb0f0
0x7fffeafcb043:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafcb047:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcb04b:	add		rcx, 0x48
0x7fffeafcb052:	mov		edx, dword ptr [rbp - 0x54]
0x7fffeafcb055:	shl		edx, 1
0x7fffeafcb058:	mov		edx, edx
0x7fffeafcb05a:	mov		esi, edx
0x7fffeafcb05c:	shl		rsi, 3
0x7fffeafcb060:	add		rcx, rsi
0x7fffeafcb063:	cmp		rax, rcx
0x7fffeafcb066:	mov		dil, 1
0x7fffeafcb069:	mov		byte ptr [rbp - 0x174], dil
0x7fffeafcb070:	je		0x7fffeafcb0b1
0x7fffeafcb076:	xor		eax, eax
0x7fffeafcb078:	mov		rcx, qword ptr [rbp - 0x50]
0x7fffeafcb07c:	mov		rdx, qword ptr [rbp - 0x20]
0x7fffeafcb080:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafcb084:	mov		byte ptr [rbp - 0x175], al
0x7fffeafcb08a:	jb		0x7fffeafcb0a5
0x7fffeafcb090:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafcb094:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafcb098:	cmp		rax, qword ptr [rbp - 0x18]
0x7fffeafcb09c:	sete		cl
0x7fffeafcb09f:	mov		byte ptr [rbp - 0x175], cl
0x7fffeafcb0a5:	mov		al, byte ptr [rbp - 0x175]
0x7fffeafcb0ab:	mov		byte ptr [rbp - 0x174], al
0x7fffeafcb0b1:	mov		al, byte ptr [rbp - 0x174]
0x7fffeafcb0b7:	and		al, 1
0x7fffeafcb0b9:	movzx		ecx, al
0x7fffeafcb0bc:	movsxd		rdx, ecx
0x7fffeafcb0bf:	cmp		rdx, 0
0x7fffeafcb0c3:	je		0x7fffeafcb0e6
0x7fffeafcb0c9:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafcb0cd:	mov		rcx, qword ptr [rbp - 0x48]
0x7fffeafcb0d1:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafcb0d5:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafcb0d9:	mov		rcx, qword ptr [rbp - 0x50]
0x7fffeafcb0dd:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafcb0e1:	jmp		0x7fffeafcb0eb
0x7fffeafcb0e6:	call		0x7fffeafc4c10
0x7fffeafcb0eb:	jmp		0x7fffeafcb0f0
0x7fffeafcb0f0:	jmp		0x7fffeafcb0fa
0x7fffeafcb0f5:	call		0x7fffeafc4c10
0x7fffeafcb0fa:	jmp		0x7fffeafcb4d6
0x7fffeafcb0ff:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcb103:	mov		qword ptr [rbp - 0x60], rax
0x7fffeafcb107:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafcb10b:	mov		rax, qword ptr [rax + 0x30]
0x7fffeafcb10f:	mov		qword ptr [rbp - 0x68], rax
0x7fffeafcb113:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafcb117:	mov		rax, qword ptr [rax + 0x18]
0x7fffeafcb11b:	cmp		rax, qword ptr [rbp - 0x60]
0x7fffeafcb11f:	je		0x7fffeafcb1c5
0x7fffeafcb125:	xor		eax, eax
0x7fffeafcb127:	mov		rcx, qword ptr [rbp - 0x60]
0x7fffeafcb12b:	mov		rcx, qword ptr [rcx + 0x10]
0x7fffeafcb12f:	mov		qword ptr [rbp - 0x78], rcx
0x7fffeafcb133:	mov		rcx, qword ptr [rbp - 0x60]
0x7fffeafcb137:	mov		rcx, qword ptr [rcx + 0x18]
0x7fffeafcb13b:	mov		qword ptr [rbp - 0x70], rcx
0x7fffeafcb13f:	mov		rcx, qword ptr [rbp - 0x78]
0x7fffeafcb143:	mov		rdx, qword ptr [rbp - 0x20]
0x7fffeafcb147:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafcb14b:	mov		byte ptr [rbp - 0x176], al
0x7fffeafcb151:	jb		0x7fffeafcb186
0x7fffeafcb157:	xor		eax, eax
0x7fffeafcb159:	mov		rcx, qword ptr [rbp - 0x78]
0x7fffeafcb15d:	mov		rcx, qword ptr [rcx + 0x18]
0x7fffeafcb161:	cmp		rcx, qword ptr [rbp - 0x60]
0x7fffeafcb165:	mov		byte ptr [rbp - 0x176], al
0x7fffeafcb16b:	jne		0x7fffeafcb186
0x7fffeafcb171:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafcb175:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafcb179:	cmp		rax, qword ptr [rbp - 0x60]
0x7fffeafcb17d:	sete		cl
0x7fffeafcb180:	mov		byte ptr [rbp - 0x176], cl
0x7fffeafcb186:	mov		al, byte ptr [rbp - 0x176]
0x7fffeafcb18c:	and		al, 1
0x7fffeafcb18e:	movzx		ecx, al
0x7fffeafcb191:	movsxd		rdx, ecx
0x7fffeafcb194:	cmp		rdx, 0
0x7fffeafcb198:	je		0x7fffeafcb1bb
0x7fffeafcb19e:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafcb1a2:	mov		rcx, qword ptr [rbp - 0x78]
0x7fffeafcb1a6:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafcb1aa:	mov		rax, qword ptr [rbp - 0x78]
0x7fffeafcb1ae:	mov		rcx, qword ptr [rbp - 0x70]
0x7fffeafcb1b2:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafcb1b6:	jmp		0x7fffeafcb1c0
0x7fffeafcb1bb:	call		0x7fffeafc4c10
0x7fffeafcb1c0:	jmp		0x7fffeafcb2d6
0x7fffeafcb1c5:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafcb1c9:	mov		rcx, rax
0x7fffeafcb1cc:	add		rcx, 0x20
0x7fffeafcb1d3:	add		rcx, 8
0x7fffeafcb1da:	mov		qword ptr [rbp - 0x80], rcx
0x7fffeafcb1de:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafcb1e2:	mov		qword ptr [rbp - 0x70], rax
0x7fffeafcb1e6:	cmp		rax, 0
0x7fffeafcb1ea:	jne		0x7fffeafcb214
0x7fffeafcb1f0:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafcb1f4:	mov		rcx, rax
0x7fffeafcb1f7:	add		rcx, 0x20
0x7fffeafcb1fe:	mov		qword ptr [rbp - 0x80], rcx
0x7fffeafcb202:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafcb206:	mov		qword ptr [rbp - 0x70], rax
0x7fffeafcb20a:	cmp		rax, 0
0x7fffeafcb20e:	je		0x7fffeafcb2d1
0x7fffeafcb214:	jmp		0x7fffeafcb219
0x7fffeafcb219:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafcb21d:	mov		rcx, rax
0x7fffeafcb220:	add		rcx, 0x20
0x7fffeafcb227:	add		rcx, 8
0x7fffeafcb22e:	mov		qword ptr [rbp - 0x88], rcx
0x7fffeafcb235:	cmp		qword ptr [rax + 0x28], 0
0x7fffeafcb23a:	mov		dl, 1
0x7fffeafcb23c:	mov		byte ptr [rbp - 0x177], dl
0x7fffeafcb242:	jne		0x7fffeafcb26b
0x7fffeafcb248:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafcb24c:	mov		rcx, rax
0x7fffeafcb24f:	add		rcx, 0x20
0x7fffeafcb256:	mov		qword ptr [rbp - 0x88], rcx
0x7fffeafcb25d:	cmp		qword ptr [rax + 0x20], 0
0x7fffeafcb262:	setne		dl
0x7fffeafcb265:	mov		byte ptr [rbp - 0x177], dl
0x7fffeafcb26b:	mov		al, byte ptr [rbp - 0x177]
0x7fffeafcb271:	test		al, 1
0x7fffeafcb273:	jne		0x7fffeafcb27e
0x7fffeafcb279:	jmp		0x7fffeafcb295
0x7fffeafcb27e:	mov		rax, qword ptr [rbp - 0x88]
0x7fffeafcb285:	mov		qword ptr [rbp - 0x80], rax
0x7fffeafcb289:	mov		rax, qword ptr [rax]
0x7fffeafcb28c:	mov		qword ptr [rbp - 0x70], rax
0x7fffeafcb290:	jmp		0x7fffeafcb219
0x7fffeafcb295:	mov		rax, qword ptr [rbp - 0x80]
0x7fffeafcb299:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcb29d:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcb2a1:	setae		dl
0x7fffeafcb2a4:	and		dl, 1
0x7fffeafcb2a7:	movzx		esi, dl
0x7fffeafcb2aa:	movsxd		rax, esi
0x7fffeafcb2ad:	cmp		rax, 0
0x7fffeafcb2b1:	je		0x7fffeafcb2c7
0x7fffeafcb2b7:	mov		rax, qword ptr [rbp - 0x80]
0x7fffeafcb2bb:	mov		qword ptr [rax], 0
0x7fffeafcb2c2:	jmp		0x7fffeafcb2cc
0x7fffeafcb2c7:	call		0x7fffeafc4c10
0x7fffeafcb2cc:	jmp		0x7fffeafcb2d1
0x7fffeafcb2d1:	jmp		0x7fffeafcb2d6
0x7fffeafcb2d6:	cmp		qword ptr [rbp - 0x68], 0
0x7fffeafcb2db:	je		0x7fffeafcb4d1
0x7fffeafcb2e1:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcb2e5:	add		rax, 0x258
0x7fffeafcb2eb:	mov		rcx, qword ptr [rbp - 0x60]
0x7fffeafcb2ef:	mov		edx, dword ptr [rcx + 0x38]
0x7fffeafcb2f2:	mov		ecx, edx
0x7fffeafcb2f4:	shl		rcx, 3
0x7fffeafcb2f8:	add		rax, rcx
0x7fffeafcb2fb:	mov		qword ptr [rbp - 0x90], rax
0x7fffeafcb302:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafcb306:	mov		rcx, qword ptr [rbp - 0x90]
0x7fffeafcb30d:	cmp		rax, qword ptr [rcx]
0x7fffeafcb310:	jne		0x7fffeafcb34e
0x7fffeafcb316:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafcb31a:	mov		rcx, qword ptr [rbp - 0x90]
0x7fffeafcb321:	mov		qword ptr [rcx], rax
0x7fffeafcb324:	cmp		rax, 0
0x7fffeafcb328:	jne		0x7fffeafcb349
0x7fffeafcb32e:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafcb332:	mov		ecx, dword ptr [rax + 0x38]
0x7fffeafcb335:	mov		edx, 1
0x7fffeafcb33a:	shl		edx, cl
0x7fffeafcb33c:	xor		edx, 0xffffffff
0x7fffeafcb33f:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcb343:	and		edx, dword ptr [rax + 4]
0x7fffeafcb346:	mov		dword ptr [rax + 4], edx
0x7fffeafcb349:	jmp		0x7fffeafcb3ae
0x7fffeafcb34e:	mov		rax, qword ptr [rbp - 0x68]
0x7fffeafcb352:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcb356:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcb35a:	setae		dl
0x7fffeafcb35d:	and		dl, 1
0x7fffeafcb360:	movzx		esi, dl
0x7fffeafcb363:	movsxd		rax, esi
0x7fffeafcb366:	cmp		rax, 0
0x7fffeafcb36a:	je		0x7fffeafcb3a4
0x7fffeafcb370:	mov		rax, qword ptr [rbp - 0x68]
0x7fffeafcb374:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafcb378:	cmp		rax, qword ptr [rbp - 0x60]
0x7fffeafcb37c:	jne		0x7fffeafcb393
0x7fffeafcb382:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafcb386:	mov		rcx, qword ptr [rbp - 0x68]
0x7fffeafcb38a:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafcb38e:	jmp		0x7fffeafcb39f
0x7fffeafcb393:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafcb397:	mov		rcx, qword ptr [rbp - 0x68]
0x7fffeafcb39b:	mov		qword ptr [rcx + 0x28], rax
0x7fffeafcb39f:	jmp		0x7fffeafcb3a9
0x7fffeafcb3a4:	call		0x7fffeafc4c10
0x7fffeafcb3a9:	jmp		0x7fffeafcb3ae
0x7fffeafcb3ae:	cmp		qword ptr [rbp - 0x70], 0
0x7fffeafcb3b3:	je		0x7fffeafcb4cc
0x7fffeafcb3b9:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafcb3bd:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcb3c1:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcb3c5:	setae		dl
0x7fffeafcb3c8:	and		dl, 1
0x7fffeafcb3cb:	movzx		esi, dl
0x7fffeafcb3ce:	movsxd		rax, esi
0x7fffeafcb3d1:	cmp		rax, 0
0x7fffeafcb3d5:	je		0x7fffeafcb4c2
0x7fffeafcb3db:	mov		rax, qword ptr [rbp - 0x68]
0x7fffeafcb3df:	mov		rcx, qword ptr [rbp - 0x70]
0x7fffeafcb3e3:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafcb3e7:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafcb3eb:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafcb3ef:	mov		qword ptr [rbp - 0x98], rax
0x7fffeafcb3f6:	cmp		rax, 0
0x7fffeafcb3fa:	je		0x7fffeafcb452
0x7fffeafcb400:	mov		rax, qword ptr [rbp - 0x98]
0x7fffeafcb407:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcb40b:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcb40f:	setae		dl
0x7fffeafcb412:	and		dl, 1
0x7fffeafcb415:	movzx		esi, dl
0x7fffeafcb418:	movsxd		rax, esi
0x7fffeafcb41b:	cmp		rax, 0
0x7fffeafcb41f:	je		0x7fffeafcb448
0x7fffeafcb425:	mov		rax, qword ptr [rbp - 0x98]
0x7fffeafcb42c:	mov		rcx, qword ptr [rbp - 0x70]
0x7fffeafcb430:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafcb434:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafcb438:	mov		rcx, qword ptr [rbp - 0x98]
0x7fffeafcb43f:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafcb443:	jmp		0x7fffeafcb44d
0x7fffeafcb448:	call		0x7fffeafc4c10
0x7fffeafcb44d:	jmp		0x7fffeafcb452
0x7fffeafcb452:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafcb456:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafcb45a:	mov		qword ptr [rbp - 0xa0], rax
0x7fffeafcb461:	cmp		rax, 0
0x7fffeafcb465:	je		0x7fffeafcb4bd
0x7fffeafcb46b:	mov		rax, qword ptr [rbp - 0xa0]
0x7fffeafcb472:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcb476:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcb47a:	setae		dl
0x7fffeafcb47d:	and		dl, 1
0x7fffeafcb480:	movzx		esi, dl
0x7fffeafcb483:	movsxd		rax, esi
0x7fffeafcb486:	cmp		rax, 0
0x7fffeafcb48a:	je		0x7fffeafcb4b3
0x7fffeafcb490:	mov		rax, qword ptr [rbp - 0xa0]
0x7fffeafcb497:	mov		rcx, qword ptr [rbp - 0x70]
0x7fffeafcb49b:	mov		qword ptr [rcx + 0x28], rax
0x7fffeafcb49f:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafcb4a3:	mov		rcx, qword ptr [rbp - 0xa0]
0x7fffeafcb4aa:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafcb4ae:	jmp		0x7fffeafcb4b8
0x7fffeafcb4b3:	call		0x7fffeafc4c10
0x7fffeafcb4b8:	jmp		0x7fffeafcb4bd
0x7fffeafcb4bd:	jmp		0x7fffeafcb4c7
0x7fffeafcb4c2:	call		0x7fffeafc4c10
0x7fffeafcb4c7:	jmp		0x7fffeafcb4cc
0x7fffeafcb4cc:	jmp		0x7fffeafcb4d1
0x7fffeafcb4d1:	jmp		0x7fffeafcb4d6
0x7fffeafcb4d6:	jmp		0x7fffeafcb53e
0x7fffeafcb4db:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcb4df:	mov		rax, qword ptr [rax + 8]
0x7fffeafcb4e3:	and		rax, 3
0x7fffeafcb4e9:	cmp		rax, 3
0x7fffeafcb4ed:	jne		0x7fffeafcb539
0x7fffeafcb4f3:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcb4f7:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcb4fb:	mov		qword ptr [rcx + 8], rax
0x7fffeafcb4ff:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcb503:	mov		rcx, qword ptr [rax + 8]
0x7fffeafcb507:	and		rcx, 0xfffffffffffffffe
0x7fffeafcb50e:	mov		qword ptr [rax + 8], rcx
0x7fffeafcb512:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcb516:	or		rax, 1
0x7fffeafcb51c:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafcb520:	mov		qword ptr [rcx + 8], rax
0x7fffeafcb524:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcb528:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafcb52c:	mov		rdx, qword ptr [rbp - 0x28]
0x7fffeafcb530:	mov		qword ptr [rcx + rdx], rax
0x7fffeafcb534:	jmp		0x7fffeafcc2af
0x7fffeafcb539:	jmp		0x7fffeafcb53e
0x7fffeafcb53e:	jmp		0x7fffeafcb548
0x7fffeafcb543:	jmp		0x7fffeafcc2aa
0x7fffeafcb548:	jmp		0x7fffeafcb54d
0x7fffeafcb54d:	jmp		0x7fffeafcb552
0x7fffeafcb552:	xor		eax, eax
0x7fffeafcb554:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafcb558:	mov		rdx, qword ptr [rbp - 0x30]
0x7fffeafcb55c:	cmp		rcx, rdx
0x7fffeafcb55f:	mov		byte ptr [rbp - 0x178], al
0x7fffeafcb565:	jae		0x7fffeafcb586
0x7fffeafcb56b:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcb56f:	mov		rax, qword ptr [rax + 8]
0x7fffeafcb573:	and		rax, 1
0x7fffeafcb579:	cmp		rax, 0
0x7fffeafcb57d:	setne		cl
0x7fffeafcb580:	mov		byte ptr [rbp - 0x178], cl
0x7fffeafcb586:	mov		al, byte ptr [rbp - 0x178]
0x7fffeafcb58c:	and		al, 1
0x7fffeafcb58e:	movzx		ecx, al
0x7fffeafcb591:	movsxd		rdx, ecx
0x7fffeafcb594:	cmp		rdx, 0
0x7fffeafcb598:	je		0x7fffeafcc2a0
0x7fffeafcb59e:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcb5a2:	mov		rax, qword ptr [rax + 8]
0x7fffeafcb5a6:	and		rax, 2
0x7fffeafcb5ac:	cmp		rax, 0
0x7fffeafcb5b0:	jne		0x7fffeafcbd7c
0x7fffeafcb5b6:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcb5ba:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcb5be:	cmp		rax, qword ptr [rcx + 0x28]
0x7fffeafcb5c2:	jne		0x7fffeafcb651
0x7fffeafcb5c8:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcb5cc:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcb5d0:	add		rax, qword ptr [rcx + 0x10]
0x7fffeafcb5d4:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafcb5d8:	mov		qword ptr [rbp - 0xa8], rax
0x7fffeafcb5df:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcb5e3:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcb5e7:	mov		qword ptr [rcx + 0x28], rax
0x7fffeafcb5eb:	mov		rax, qword ptr [rbp - 0xa8]
0x7fffeafcb5f2:	or		rax, 1
0x7fffeafcb5f8:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafcb5fc:	mov		qword ptr [rcx + 8], rax
0x7fffeafcb600:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcb604:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcb608:	cmp		rax, qword ptr [rcx + 0x20]
0x7fffeafcb60c:	jne		0x7fffeafcb62a
0x7fffeafcb612:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcb616:	mov		qword ptr [rax + 0x20], 0
0x7fffeafcb61e:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcb622:	mov		qword ptr [rax + 8], 0
0x7fffeafcb62a:	mov		rax, qword ptr [rbp - 0xa8]
0x7fffeafcb631:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcb635:	cmp		rax, qword ptr [rcx + 0x30]
0x7fffeafcb639:	jbe		0x7fffeafcb64c
0x7fffeafcb63f:	xor		eax, eax
0x7fffeafcb641:	mov		esi, eax
0x7fffeafcb643:	mov		rdi, qword ptr [rbp - 0x20]
0x7fffeafcb647:	call		0x7fffeafcc2c0
0x7fffeafcb64c:	jmp		0x7fffeafcc2af
0x7fffeafcb651:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcb655:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcb659:	cmp		rax, qword ptr [rcx + 0x20]
0x7fffeafcb65d:	jne		0x7fffeafcb6b6
0x7fffeafcb663:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcb667:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcb66b:	add		rax, qword ptr [rcx + 8]
0x7fffeafcb66f:	mov		qword ptr [rcx + 8], rax
0x7fffeafcb673:	mov		qword ptr [rbp - 0xb0], rax
0x7fffeafcb67a:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcb67e:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcb682:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafcb686:	mov		rax, qword ptr [rbp - 0xb0]
0x7fffeafcb68d:	or		rax, 1
0x7fffeafcb693:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafcb697:	mov		qword ptr [rcx + 8], rax
0x7fffeafcb69b:	mov		rax, qword ptr [rbp - 0xb0]
0x7fffeafcb6a2:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafcb6a6:	mov		rdx, qword ptr [rbp - 0xb0]
0x7fffeafcb6ad:	mov		qword ptr [rcx + rdx], rax
0x7fffeafcb6b1:	jmp		0x7fffeafcc2af
0x7fffeafcb6b6:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcb6ba:	mov		rax, qword ptr [rax + 8]
0x7fffeafcb6be:	and		rax, 0xfffffffffffffff8
0x7fffeafcb6c4:	mov		qword ptr [rbp - 0xb8], rax
0x7fffeafcb6cb:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafcb6d2:	add		rax, qword ptr [rbp - 0x28]
0x7fffeafcb6d6:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafcb6da:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafcb6e1:	shr		rax, 3
0x7fffeafcb6e5:	cmp		rax, 0x20
0x7fffeafcb6e9:	jae		0x7fffeafcb8b5
0x7fffeafcb6ef:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcb6f3:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafcb6f7:	mov		qword ptr [rbp - 0xc0], rax
0x7fffeafcb6fe:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcb702:	mov		rax, qword ptr [rax + 0x18]
0x7fffeafcb706:	mov		qword ptr [rbp - 0xc8], rax
0x7fffeafcb70d:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafcb714:	shr		rax, 3
0x7fffeafcb718:	mov		dword ptr [rbp - 0xcc], eax
0x7fffeafcb71e:	mov		rcx, qword ptr [rbp - 0xc0]
0x7fffeafcb725:	mov		rdx, qword ptr [rbp - 0x20]
0x7fffeafcb729:	add		rdx, 0x48
0x7fffeafcb730:	mov		eax, dword ptr [rbp - 0xcc]
0x7fffeafcb736:	shl		eax, 1
0x7fffeafcb739:	mov		eax, eax
0x7fffeafcb73b:	mov		esi, eax
0x7fffeafcb73d:	shl		rsi, 3
0x7fffeafcb741:	add		rdx, rsi
0x7fffeafcb744:	cmp		rcx, rdx
0x7fffeafcb747:	mov		dil, 1
0x7fffeafcb74a:	mov		byte ptr [rbp - 0x179], dil
0x7fffeafcb751:	je		0x7fffeafcb798
0x7fffeafcb757:	xor		eax, eax
0x7fffeafcb759:	mov		rcx, qword ptr [rbp - 0xc0]
0x7fffeafcb760:	mov		rdx, qword ptr [rbp - 0x20]
0x7fffeafcb764:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafcb768:	mov		byte ptr [rbp - 0x17a], al
0x7fffeafcb76e:	jb		0x7fffeafcb78c
0x7fffeafcb774:	mov		rax, qword ptr [rbp - 0xc0]
0x7fffeafcb77b:	mov		rax, qword ptr [rax + 0x18]
0x7fffeafcb77f:	cmp		rax, qword ptr [rbp - 0x30]
0x7fffeafcb783:	sete		cl
0x7fffeafcb786:	mov		byte ptr [rbp - 0x17a], cl
0x7fffeafcb78c:	mov		al, byte ptr [rbp - 0x17a]
0x7fffeafcb792:	mov		byte ptr [rbp - 0x179], al
0x7fffeafcb798:	mov		al, byte ptr [rbp - 0x179]
0x7fffeafcb79e:	and		al, 1
0x7fffeafcb7a0:	movzx		ecx, al
0x7fffeafcb7a3:	movsxd		rdx, ecx
0x7fffeafcb7a6:	cmp		rdx, 0
0x7fffeafcb7aa:	je		0x7fffeafcb8ab
0x7fffeafcb7b0:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafcb7b7:	cmp		rax, qword ptr [rbp - 0xc0]
0x7fffeafcb7be:	jne		0x7fffeafcb7e1
0x7fffeafcb7c4:	mov		ecx, dword ptr [rbp - 0xcc]
0x7fffeafcb7ca:	mov		eax, 1
0x7fffeafcb7cf:	shl		eax, cl
0x7fffeafcb7d1:	xor		eax, 0xffffffff
0x7fffeafcb7d4:	mov		rdx, qword ptr [rbp - 0x20]
0x7fffeafcb7d8:	and		eax, dword ptr [rdx]
0x7fffeafcb7da:	mov		dword ptr [rdx], eax
0x7fffeafcb7dc:	jmp		0x7fffeafcb8a6
0x7fffeafcb7e1:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafcb7e8:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcb7ec:	add		rcx, 0x48
0x7fffeafcb7f3:	mov		edx, dword ptr [rbp - 0xcc]
0x7fffeafcb7f9:	shl		edx, 1
0x7fffeafcb7fc:	mov		edx, edx
0x7fffeafcb7fe:	mov		esi, edx
0x7fffeafcb800:	shl		rsi, 3
0x7fffeafcb804:	add		rcx, rsi
0x7fffeafcb807:	cmp		rax, rcx
0x7fffeafcb80a:	mov		dil, 1
0x7fffeafcb80d:	mov		byte ptr [rbp - 0x17b], dil
0x7fffeafcb814:	je		0x7fffeafcb85b
0x7fffeafcb81a:	xor		eax, eax
0x7fffeafcb81c:	mov		rcx, qword ptr [rbp - 0xc8]
0x7fffeafcb823:	mov		rdx, qword ptr [rbp - 0x20]
0x7fffeafcb827:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafcb82b:	mov		byte ptr [rbp - 0x17c], al
0x7fffeafcb831:	jb		0x7fffeafcb84f
0x7fffeafcb837:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafcb83e:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafcb842:	cmp		rax, qword ptr [rbp - 0x30]
0x7fffeafcb846:	sete		cl
0x7fffeafcb849:	mov		byte ptr [rbp - 0x17c], cl
0x7fffeafcb84f:	mov		al, byte ptr [rbp - 0x17c]
0x7fffeafcb855:	mov		byte ptr [rbp - 0x17b], al
0x7fffeafcb85b:	mov		al, byte ptr [rbp - 0x17b]
0x7fffeafcb861:	and		al, 1
0x7fffeafcb863:	movzx		ecx, al
0x7fffeafcb866:	movsxd		rdx, ecx
0x7fffeafcb869:	cmp		rdx, 0
0x7fffeafcb86d:	je		0x7fffeafcb89c
0x7fffeafcb873:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafcb87a:	mov		rcx, qword ptr [rbp - 0xc0]
0x7fffeafcb881:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafcb885:	mov		rax, qword ptr [rbp - 0xc0]
0x7fffeafcb88c:	mov		rcx, qword ptr [rbp - 0xc8]
0x7fffeafcb893:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafcb897:	jmp		0x7fffeafcb8a1
0x7fffeafcb89c:	call		0x7fffeafc4c10
0x7fffeafcb8a1:	jmp		0x7fffeafcb8a6
0x7fffeafcb8a6:	jmp		0x7fffeafcb8b0
0x7fffeafcb8ab:	call		0x7fffeafc4c10
0x7fffeafcb8b0:	jmp		0x7fffeafcbd28
0x7fffeafcb8b5:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcb8b9:	mov		qword ptr [rbp - 0xd8], rax
0x7fffeafcb8c0:	mov		rax, qword ptr [rbp - 0xd8]
0x7fffeafcb8c7:	mov		rax, qword ptr [rax + 0x30]
0x7fffeafcb8cb:	mov		qword ptr [rbp - 0xe0], rax
0x7fffeafcb8d2:	mov		rax, qword ptr [rbp - 0xd8]
0x7fffeafcb8d9:	mov		rax, qword ptr [rax + 0x18]
0x7fffeafcb8dd:	cmp		rax, qword ptr [rbp - 0xd8]
0x7fffeafcb8e4:	je		0x7fffeafcb9b1
0x7fffeafcb8ea:	xor		eax, eax
0x7fffeafcb8ec:	mov		rcx, qword ptr [rbp - 0xd8]
0x7fffeafcb8f3:	mov		rcx, qword ptr [rcx + 0x10]
0x7fffeafcb8f7:	mov		qword ptr [rbp - 0xf0], rcx
0x7fffeafcb8fe:	mov		rcx, qword ptr [rbp - 0xd8]
0x7fffeafcb905:	mov		rcx, qword ptr [rcx + 0x18]
0x7fffeafcb909:	mov		qword ptr [rbp - 0xe8], rcx
0x7fffeafcb910:	mov		rcx, qword ptr [rbp - 0xf0]
0x7fffeafcb917:	mov		rdx, qword ptr [rbp - 0x20]
0x7fffeafcb91b:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafcb91f:	mov		byte ptr [rbp - 0x17d], al
0x7fffeafcb925:	jb		0x7fffeafcb966
0x7fffeafcb92b:	xor		eax, eax
0x7fffeafcb92d:	mov		rcx, qword ptr [rbp - 0xf0]
0x7fffeafcb934:	mov		rcx, qword ptr [rcx + 0x18]
0x7fffeafcb938:	cmp		rcx, qword ptr [rbp - 0xd8]
0x7fffeafcb93f:	mov		byte ptr [rbp - 0x17d], al
0x7fffeafcb945:	jne		0x7fffeafcb966
0x7fffeafcb94b:	mov		rax, qword ptr [rbp - 0xe8]
0x7fffeafcb952:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafcb956:	cmp		rax, qword ptr [rbp - 0xd8]
0x7fffeafcb95d:	sete		cl
0x7fffeafcb960:	mov		byte ptr [rbp - 0x17d], cl
0x7fffeafcb966:	mov		al, byte ptr [rbp - 0x17d]
0x7fffeafcb96c:	and		al, 1
0x7fffeafcb96e:	movzx		ecx, al
0x7fffeafcb971:	movsxd		rdx, ecx
0x7fffeafcb974:	cmp		rdx, 0
0x7fffeafcb978:	je		0x7fffeafcb9a7
0x7fffeafcb97e:	mov		rax, qword ptr [rbp - 0xe8]
0x7fffeafcb985:	mov		rcx, qword ptr [rbp - 0xf0]
0x7fffeafcb98c:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafcb990:	mov		rax, qword ptr [rbp - 0xf0]
0x7fffeafcb997:	mov		rcx, qword ptr [rbp - 0xe8]
0x7fffeafcb99e:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafcb9a2:	jmp		0x7fffeafcb9ac
0x7fffeafcb9a7:	call		0x7fffeafc4c10
0x7fffeafcb9ac:	jmp		0x7fffeafcbae6
0x7fffeafcb9b1:	mov		rax, qword ptr [rbp - 0xd8]
0x7fffeafcb9b8:	mov		rcx, rax
0x7fffeafcb9bb:	add		rcx, 0x20
0x7fffeafcb9c2:	add		rcx, 8
0x7fffeafcb9c9:	mov		qword ptr [rbp - 0xf8], rcx
0x7fffeafcb9d0:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafcb9d4:	mov		qword ptr [rbp - 0xe8], rax
0x7fffeafcb9db:	cmp		rax, 0
0x7fffeafcb9df:	jne		0x7fffeafcba12
0x7fffeafcb9e5:	mov		rax, qword ptr [rbp - 0xd8]
0x7fffeafcb9ec:	mov		rcx, rax
0x7fffeafcb9ef:	add		rcx, 0x20
0x7fffeafcb9f6:	mov		qword ptr [rbp - 0xf8], rcx
0x7fffeafcb9fd:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafcba01:	mov		qword ptr [rbp - 0xe8], rax
0x7fffeafcba08:	cmp		rax, 0
0x7fffeafcba0c:	je		0x7fffeafcbae1
0x7fffeafcba12:	jmp		0x7fffeafcba17
0x7fffeafcba17:	mov		rax, qword ptr [rbp - 0xe8]
0x7fffeafcba1e:	mov		rcx, rax
0x7fffeafcba21:	add		rcx, 0x20
0x7fffeafcba28:	add		rcx, 8
0x7fffeafcba2f:	mov		qword ptr [rbp - 0x100], rcx
0x7fffeafcba36:	cmp		qword ptr [rax + 0x28], 0
0x7fffeafcba3b:	mov		dl, 1
0x7fffeafcba3d:	mov		byte ptr [rbp - 0x17e], dl
0x7fffeafcba43:	jne		0x7fffeafcba6f
0x7fffeafcba49:	mov		rax, qword ptr [rbp - 0xe8]
0x7fffeafcba50:	mov		rcx, rax
0x7fffeafcba53:	add		rcx, 0x20
0x7fffeafcba5a:	mov		qword ptr [rbp - 0x100], rcx
0x7fffeafcba61:	cmp		qword ptr [rax + 0x20], 0
0x7fffeafcba66:	setne		dl
0x7fffeafcba69:	mov		byte ptr [rbp - 0x17e], dl
0x7fffeafcba6f:	mov		al, byte ptr [rbp - 0x17e]
0x7fffeafcba75:	test		al, 1
0x7fffeafcba77:	jne		0x7fffeafcba82
0x7fffeafcba7d:	jmp		0x7fffeafcba9f
0x7fffeafcba82:	mov		rax, qword ptr [rbp - 0x100]
0x7fffeafcba89:	mov		qword ptr [rbp - 0xf8], rax
0x7fffeafcba90:	mov		rax, qword ptr [rax]
0x7fffeafcba93:	mov		qword ptr [rbp - 0xe8], rax
0x7fffeafcba9a:	jmp		0x7fffeafcba17
0x7fffeafcba9f:	mov		rax, qword ptr [rbp - 0xf8]
0x7fffeafcbaa6:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcbaaa:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcbaae:	setae		dl
0x7fffeafcbab1:	and		dl, 1
0x7fffeafcbab4:	movzx		esi, dl
0x7fffeafcbab7:	movsxd		rax, esi
0x7fffeafcbaba:	cmp		rax, 0
0x7fffeafcbabe:	je		0x7fffeafcbad7
0x7fffeafcbac4:	mov		rax, qword ptr [rbp - 0xf8]
0x7fffeafcbacb:	mov		qword ptr [rax], 0
0x7fffeafcbad2:	jmp		0x7fffeafcbadc
0x7fffeafcbad7:	call		0x7fffeafc4c10
0x7fffeafcbadc:	jmp		0x7fffeafcbae1
0x7fffeafcbae1:	jmp		0x7fffeafcbae6
0x7fffeafcbae6:	cmp		qword ptr [rbp - 0xe0], 0
0x7fffeafcbaee:	je		0x7fffeafcbd23
0x7fffeafcbaf4:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcbaf8:	add		rax, 0x258
0x7fffeafcbafe:	mov		rcx, qword ptr [rbp - 0xd8]
0x7fffeafcbb05:	mov		edx, dword ptr [rcx + 0x38]
0x7fffeafcbb08:	mov		ecx, edx
0x7fffeafcbb0a:	shl		rcx, 3
0x7fffeafcbb0e:	add		rax, rcx
0x7fffeafcbb11:	mov		qword ptr [rbp - 0x108], rax
0x7fffeafcbb18:	mov		rax, qword ptr [rbp - 0xd8]
0x7fffeafcbb1f:	mov		rcx, qword ptr [rbp - 0x108]
0x7fffeafcbb26:	cmp		rax, qword ptr [rcx]
0x7fffeafcbb29:	jne		0x7fffeafcbb6d
0x7fffeafcbb2f:	mov		rax, qword ptr [rbp - 0xe8]
0x7fffeafcbb36:	mov		rcx, qword ptr [rbp - 0x108]
0x7fffeafcbb3d:	mov		qword ptr [rcx], rax
0x7fffeafcbb40:	cmp		rax, 0
0x7fffeafcbb44:	jne		0x7fffeafcbb68
0x7fffeafcbb4a:	mov		rax, qword ptr [rbp - 0xd8]
0x7fffeafcbb51:	mov		ecx, dword ptr [rax + 0x38]
0x7fffeafcbb54:	mov		edx, 1
0x7fffeafcbb59:	shl		edx, cl
0x7fffeafcbb5b:	xor		edx, 0xffffffff
0x7fffeafcbb5e:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcbb62:	and		edx, dword ptr [rax + 4]
0x7fffeafcbb65:	mov		dword ptr [rax + 4], edx
0x7fffeafcbb68:	jmp		0x7fffeafcbbe2
0x7fffeafcbb6d:	mov		rax, qword ptr [rbp - 0xe0]
0x7fffeafcbb74:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcbb78:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcbb7c:	setae		dl
0x7fffeafcbb7f:	and		dl, 1
0x7fffeafcbb82:	movzx		esi, dl
0x7fffeafcbb85:	movsxd		rax, esi
0x7fffeafcbb88:	cmp		rax, 0
0x7fffeafcbb8c:	je		0x7fffeafcbbd8
0x7fffeafcbb92:	mov		rax, qword ptr [rbp - 0xe0]
0x7fffeafcbb99:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafcbb9d:	cmp		rax, qword ptr [rbp - 0xd8]
0x7fffeafcbba4:	jne		0x7fffeafcbbc1
0x7fffeafcbbaa:	mov		rax, qword ptr [rbp - 0xe8]
0x7fffeafcbbb1:	mov		rcx, qword ptr [rbp - 0xe0]
0x7fffeafcbbb8:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafcbbbc:	jmp		0x7fffeafcbbd3
0x7fffeafcbbc1:	mov		rax, qword ptr [rbp - 0xe8]
0x7fffeafcbbc8:	mov		rcx, qword ptr [rbp - 0xe0]
0x7fffeafcbbcf:	mov		qword ptr [rcx + 0x28], rax
0x7fffeafcbbd3:	jmp		0x7fffeafcbbdd
0x7fffeafcbbd8:	call		0x7fffeafc4c10
0x7fffeafcbbdd:	jmp		0x7fffeafcbbe2
0x7fffeafcbbe2:	cmp		qword ptr [rbp - 0xe8], 0
0x7fffeafcbbea:	je		0x7fffeafcbd1e
0x7fffeafcbbf0:	mov		rax, qword ptr [rbp - 0xe8]
0x7fffeafcbbf7:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcbbfb:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcbbff:	setae		dl
0x7fffeafcbc02:	and		dl, 1
0x7fffeafcbc05:	movzx		esi, dl
0x7fffeafcbc08:	movsxd		rax, esi
0x7fffeafcbc0b:	cmp		rax, 0
0x7fffeafcbc0f:	je		0x7fffeafcbd14
0x7fffeafcbc15:	mov		rax, qword ptr [rbp - 0xe0]
0x7fffeafcbc1c:	mov		rcx, qword ptr [rbp - 0xe8]
0x7fffeafcbc23:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafcbc27:	mov		rax, qword ptr [rbp - 0xd8]
0x7fffeafcbc2e:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafcbc32:	mov		qword ptr [rbp - 0x110], rax
0x7fffeafcbc39:	cmp		rax, 0
0x7fffeafcbc3d:	je		0x7fffeafcbc9b
0x7fffeafcbc43:	mov		rax, qword ptr [rbp - 0x110]
0x7fffeafcbc4a:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcbc4e:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcbc52:	setae		dl
0x7fffeafcbc55:	and		dl, 1
0x7fffeafcbc58:	movzx		esi, dl
0x7fffeafcbc5b:	movsxd		rax, esi
0x7fffeafcbc5e:	cmp		rax, 0
0x7fffeafcbc62:	je		0x7fffeafcbc91
0x7fffeafcbc68:	mov		rax, qword ptr [rbp - 0x110]
0x7fffeafcbc6f:	mov		rcx, qword ptr [rbp - 0xe8]
0x7fffeafcbc76:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafcbc7a:	mov		rax, qword ptr [rbp - 0xe8]
0x7fffeafcbc81:	mov		rcx, qword ptr [rbp - 0x110]
0x7fffeafcbc88:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafcbc8c:	jmp		0x7fffeafcbc96
0x7fffeafcbc91:	call		0x7fffeafc4c10
0x7fffeafcbc96:	jmp		0x7fffeafcbc9b
0x7fffeafcbc9b:	mov		rax, qword ptr [rbp - 0xd8]
0x7fffeafcbca2:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafcbca6:	mov		qword ptr [rbp - 0x118], rax
0x7fffeafcbcad:	cmp		rax, 0
0x7fffeafcbcb1:	je		0x7fffeafcbd0f
0x7fffeafcbcb7:	mov		rax, qword ptr [rbp - 0x118]
0x7fffeafcbcbe:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcbcc2:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcbcc6:	setae		dl
0x7fffeafcbcc9:	and		dl, 1
0x7fffeafcbccc:	movzx		esi, dl
0x7fffeafcbccf:	movsxd		rax, esi
0x7fffeafcbcd2:	cmp		rax, 0
0x7fffeafcbcd6:	je		0x7fffeafcbd05
0x7fffeafcbcdc:	mov		rax, qword ptr [rbp - 0x118]
0x7fffeafcbce3:	mov		rcx, qword ptr [rbp - 0xe8]
0x7fffeafcbcea:	mov		qword ptr [rcx + 0x28], rax
0x7fffeafcbcee:	mov		rax, qword ptr [rbp - 0xe8]
0x7fffeafcbcf5:	mov		rcx, qword ptr [rbp - 0x118]
0x7fffeafcbcfc:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafcbd00:	jmp		0x7fffeafcbd0a
0x7fffeafcbd05:	call		0x7fffeafc4c10
0x7fffeafcbd0a:	jmp		0x7fffeafcbd0f
0x7fffeafcbd0f:	jmp		0x7fffeafcbd19
0x7fffeafcbd14:	call		0x7fffeafc4c10
0x7fffeafcbd19:	jmp		0x7fffeafcbd1e
0x7fffeafcbd1e:	jmp		0x7fffeafcbd23
0x7fffeafcbd23:	jmp		0x7fffeafcbd28
0x7fffeafcbd28:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcbd2c:	or		rax, 1
0x7fffeafcbd32:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafcbd36:	mov		qword ptr [rcx + 8], rax
0x7fffeafcbd3a:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcbd3e:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafcbd42:	mov		rdx, qword ptr [rbp - 0x28]
0x7fffeafcbd46:	mov		qword ptr [rcx + rdx], rax
0x7fffeafcbd4a:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcbd4e:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcbd52:	cmp		rax, qword ptr [rcx + 0x20]
0x7fffeafcbd56:	jne		0x7fffeafcbd6d
0x7fffeafcbd5c:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcbd60:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcbd64:	mov		qword ptr [rcx + 8], rax
0x7fffeafcbd68:	jmp		0x7fffeafcc2af
0x7fffeafcbd6d:	jmp		0x7fffeafcbd72
0x7fffeafcbd72:	jmp		0x7fffeafcbd77
0x7fffeafcbd77:	jmp		0x7fffeafcbdb1
0x7fffeafcbd7c:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcbd80:	mov		rcx, qword ptr [rax + 8]
0x7fffeafcbd84:	and		rcx, 0xfffffffffffffffe
0x7fffeafcbd8b:	mov		qword ptr [rax + 8], rcx
0x7fffeafcbd8f:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcbd93:	or		rax, 1
0x7fffeafcbd99:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafcbd9d:	mov		qword ptr [rcx + 8], rax
0x7fffeafcbda1:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcbda5:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafcbda9:	mov		rdx, qword ptr [rbp - 0x28]
0x7fffeafcbdad:	mov		qword ptr [rcx + rdx], rax
0x7fffeafcbdb1:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcbdb5:	shr		rax, 3
0x7fffeafcbdb9:	cmp		rax, 0x20
0x7fffeafcbdbd:	jae		0x7fffeafcbec8
0x7fffeafcbdc3:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcbdc7:	shr		rax, 3
0x7fffeafcbdcb:	mov		dword ptr [rbp - 0x11c], eax
0x7fffeafcbdd1:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcbdd5:	add		rcx, 0x48
0x7fffeafcbddc:	mov		eax, dword ptr [rbp - 0x11c]
0x7fffeafcbde2:	shl		eax, 1
0x7fffeafcbde5:	mov		eax, eax
0x7fffeafcbde7:	mov		edx, eax
0x7fffeafcbde9:	shl		rdx, 3
0x7fffeafcbded:	add		rcx, rdx
0x7fffeafcbdf0:	mov		qword ptr [rbp - 0x128], rcx
0x7fffeafcbdf7:	mov		rcx, qword ptr [rbp - 0x128]
0x7fffeafcbdfe:	mov		qword ptr [rbp - 0x130], rcx
0x7fffeafcbe05:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcbe09:	mov		eax, dword ptr [rcx]
0x7fffeafcbe0b:	mov		ecx, dword ptr [rbp - 0x11c]
0x7fffeafcbe11:	mov		esi, 1
0x7fffeafcbe16:	shl		esi, cl
0x7fffeafcbe18:	and		eax, esi
0x7fffeafcbe1a:	cmp		eax, 0
0x7fffeafcbe1d:	jne		0x7fffeafcbe3d
0x7fffeafcbe23:	mov		ecx, dword ptr [rbp - 0x11c]
0x7fffeafcbe29:	mov		eax, 1
0x7fffeafcbe2e:	shl		eax, cl
0x7fffeafcbe30:	mov		rdx, qword ptr [rbp - 0x20]
0x7fffeafcbe34:	or		eax, dword ptr [rdx]
0x7fffeafcbe36:	mov		dword ptr [rdx], eax
0x7fffeafcbe38:	jmp		0x7fffeafcbe87
0x7fffeafcbe3d:	mov		rax, qword ptr [rbp - 0x128]
0x7fffeafcbe44:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafcbe48:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcbe4c:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcbe50:	setae		dl
0x7fffeafcbe53:	and		dl, 1
0x7fffeafcbe56:	movzx		esi, dl
0x7fffeafcbe59:	movsxd		rax, esi
0x7fffeafcbe5c:	cmp		rax, 0
0x7fffeafcbe60:	je		0x7fffeafcbe7d
0x7fffeafcbe66:	mov		rax, qword ptr [rbp - 0x128]
0x7fffeafcbe6d:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafcbe71:	mov		qword ptr [rbp - 0x130], rax
0x7fffeafcbe78:	jmp		0x7fffeafcbe82
0x7fffeafcbe7d:	call		0x7fffeafc4c10
0x7fffeafcbe82:	jmp		0x7fffeafcbe87
0x7fffeafcbe87:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcbe8b:	mov		rcx, qword ptr [rbp - 0x128]
0x7fffeafcbe92:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafcbe96:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcbe9a:	mov		rcx, qword ptr [rbp - 0x130]
0x7fffeafcbea1:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafcbea5:	mov		rax, qword ptr [rbp - 0x130]
0x7fffeafcbeac:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafcbeb0:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafcbeb4:	mov		rax, qword ptr [rbp - 0x128]
0x7fffeafcbebb:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafcbebf:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafcbec3:	jmp		0x7fffeafcc29b
0x7fffeafcbec8:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcbecc:	mov		qword ptr [rbp - 0x138], rax
0x7fffeafcbed3:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcbed7:	shr		rax, 8
0x7fffeafcbedb:	mov		dword ptr [rbp - 0x148], eax
0x7fffeafcbee1:	cmp		dword ptr [rbp - 0x148], 0
0x7fffeafcbee8:	jne		0x7fffeafcbefd
0x7fffeafcbeee:	mov		dword ptr [rbp - 0x144], 0
0x7fffeafcbef8:	jmp		0x7fffeafcbf6b
0x7fffeafcbefd:	cmp		dword ptr [rbp - 0x148], 0xffff
0x7fffeafcbf07:	jbe		0x7fffeafcbf1c
0x7fffeafcbf0d:	mov		dword ptr [rbp - 0x144], 0x1f
0x7fffeafcbf17:	jmp		0x7fffeafcbf66
0x7fffeafcbf1c:	mov		eax, dword ptr [rbp - 0x148]
0x7fffeafcbf22:	bsr		eax, eax
0x7fffeafcbf25:	xor		eax, 0x1f
0x7fffeafcbf28:	mov		ecx, 0x1f
0x7fffeafcbf2d:	sub		ecx, eax
0x7fffeafcbf2f:	mov		dword ptr [rbp - 0x14c], ecx
0x7fffeafcbf35:	mov		eax, dword ptr [rbp - 0x14c]
0x7fffeafcbf3b:	shl		eax, 1
0x7fffeafcbf3e:	mov		eax, eax
0x7fffeafcbf40:	mov		edx, eax
0x7fffeafcbf42:	mov		rsi, qword ptr [rbp - 0x28]
0x7fffeafcbf46:	mov		eax, dword ptr [rbp - 0x14c]
0x7fffeafcbf4c:	add		eax, 7
0x7fffeafcbf4f:	mov		eax, eax
0x7fffeafcbf51:	mov		ecx, eax
0x7fffeafcbf53:	shr		rsi, cl
0x7fffeafcbf56:	and		rsi, 1
0x7fffeafcbf5d:	add		rdx, rsi
0x7fffeafcbf60:	mov		dword ptr [rbp - 0x144], edx
0x7fffeafcbf66:	jmp		0x7fffeafcbf6b
0x7fffeafcbf6b:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcbf6f:	add		rax, 0x258
0x7fffeafcbf75:	mov		ecx, dword ptr [rbp - 0x144]
0x7fffeafcbf7b:	mov		edx, ecx
0x7fffeafcbf7d:	shl		rdx, 3
0x7fffeafcbf81:	add		rax, rdx
0x7fffeafcbf84:	mov		qword ptr [rbp - 0x140], rax
0x7fffeafcbf8b:	mov		ecx, dword ptr [rbp - 0x144]
0x7fffeafcbf91:	mov		rax, qword ptr [rbp - 0x138]
0x7fffeafcbf98:	mov		dword ptr [rax + 0x38], ecx
0x7fffeafcbf9b:	mov		rax, qword ptr [rbp - 0x138]
0x7fffeafcbfa2:	mov		qword ptr [rax + 0x28], 0
0x7fffeafcbfaa:	mov		rax, qword ptr [rbp - 0x138]
0x7fffeafcbfb1:	mov		qword ptr [rax + 0x20], 0
0x7fffeafcbfb9:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcbfbd:	mov		ecx, dword ptr [rax + 4]
0x7fffeafcbfc0:	mov		esi, dword ptr [rbp - 0x144]
0x7fffeafcbfc6:	mov		dword ptr [rbp - 0x184], ecx
0x7fffeafcbfcc:	mov		ecx, esi
0x7fffeafcbfce:	mov		esi, 1
0x7fffeafcbfd3:	shl		esi, cl
0x7fffeafcbfd5:	mov		edi, dword ptr [rbp - 0x184]
0x7fffeafcbfdb:	and		edi, esi
0x7fffeafcbfdd:	cmp		edi, 0
0x7fffeafcbfe0:	jne		0x7fffeafcc042
0x7fffeafcbfe6:	mov		ecx, dword ptr [rbp - 0x144]
0x7fffeafcbfec:	mov		eax, 1
0x7fffeafcbff1:	shl		eax, cl
0x7fffeafcbff3:	mov		rdx, qword ptr [rbp - 0x20]
0x7fffeafcbff7:	or		eax, dword ptr [rdx + 4]
0x7fffeafcbffa:	mov		dword ptr [rdx + 4], eax
0x7fffeafcbffd:	mov		rdx, qword ptr [rbp - 0x138]
0x7fffeafcc004:	mov		rsi, qword ptr [rbp - 0x140]
0x7fffeafcc00b:	mov		qword ptr [rsi], rdx
0x7fffeafcc00e:	mov		rdx, qword ptr [rbp - 0x140]
0x7fffeafcc015:	mov		rsi, qword ptr [rbp - 0x138]
0x7fffeafcc01c:	mov		qword ptr [rsi + 0x30], rdx
0x7fffeafcc020:	mov		rdx, qword ptr [rbp - 0x138]
0x7fffeafcc027:	mov		rsi, qword ptr [rbp - 0x138]
0x7fffeafcc02e:	mov		qword ptr [rsi + 0x18], rdx
0x7fffeafcc032:	mov		rsi, qword ptr [rbp - 0x138]
0x7fffeafcc039:	mov		qword ptr [rsi + 0x10], rdx
0x7fffeafcc03d:	jmp		0x7fffeafcc270
0x7fffeafcc042:	mov		rax, qword ptr [rbp - 0x140]
0x7fffeafcc049:	mov		rax, qword ptr [rax]
0x7fffeafcc04c:	mov		qword ptr [rbp - 0x158], rax
0x7fffeafcc053:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcc057:	cmp		dword ptr [rbp - 0x144], 0x1f
0x7fffeafcc05e:	mov		qword ptr [rbp - 0x190], rax
0x7fffeafcc065:	jne		0x7fffeafcc07b
0x7fffeafcc06b:	xor		eax, eax
0x7fffeafcc06d:	mov		ecx, eax
0x7fffeafcc06f:	mov		qword ptr [rbp - 0x198], rcx
0x7fffeafcc076:	jmp		0x7fffeafcc09d
0x7fffeafcc07b:	mov		eax, dword ptr [rbp - 0x144]
0x7fffeafcc081:	shr		eax, 1
0x7fffeafcc084:	add		eax, 8
0x7fffeafcc087:	sub		eax, 2
0x7fffeafcc08a:	mov		eax, eax
0x7fffeafcc08c:	mov		ecx, eax
0x7fffeafcc08e:	mov		edx, 0x3f
0x7fffeafcc093:	sub		rdx, rcx
0x7fffeafcc096:	mov		qword ptr [rbp - 0x198], rdx
0x7fffeafcc09d:	mov		rax, qword ptr [rbp - 0x198]
0x7fffeafcc0a4:	mov		rcx, rax
0x7fffeafcc0a7:	mov		rax, qword ptr [rbp - 0x190]
0x7fffeafcc0ae:	shl		rax, cl
0x7fffeafcc0b1:	mov		qword ptr [rbp - 0x160], rax
0x7fffeafcc0b8:	mov		rax, qword ptr [rbp - 0x158]
0x7fffeafcc0bf:	mov		rax, qword ptr [rax + 8]
0x7fffeafcc0c3:	and		rax, 0xfffffffffffffff8
0x7fffeafcc0c9:	cmp		rax, qword ptr [rbp - 0x28]
0x7fffeafcc0cd:	je		0x7fffeafcc1ad
0x7fffeafcc0d3:	mov		rax, qword ptr [rbp - 0x158]
0x7fffeafcc0da:	add		rax, 0x20
0x7fffeafcc0e0:	mov		rcx, qword ptr [rbp - 0x160]
0x7fffeafcc0e7:	shr		rcx, 0x3f
0x7fffeafcc0eb:	and		rcx, 1
0x7fffeafcc0f2:	shl		rcx, 3
0x7fffeafcc0f6:	add		rax, rcx
0x7fffeafcc0f9:	mov		qword ptr [rbp - 0x168], rax
0x7fffeafcc100:	mov		rax, qword ptr [rbp - 0x160]
0x7fffeafcc107:	shl		rax, 1
0x7fffeafcc10b:	mov		qword ptr [rbp - 0x160], rax
0x7fffeafcc112:	mov		rax, qword ptr [rbp - 0x168]
0x7fffeafcc119:	cmp		qword ptr [rax], 0
0x7fffeafcc11d:	je		0x7fffeafcc139
0x7fffeafcc123:	mov		rax, qword ptr [rbp - 0x168]
0x7fffeafcc12a:	mov		rax, qword ptr [rax]
0x7fffeafcc12d:	mov		qword ptr [rbp - 0x158], rax
0x7fffeafcc134:	jmp		0x7fffeafcc1a8
0x7fffeafcc139:	mov		rax, qword ptr [rbp - 0x168]
0x7fffeafcc140:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcc144:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcc148:	setae		dl
0x7fffeafcc14b:	and		dl, 1
0x7fffeafcc14e:	movzx		esi, dl
0x7fffeafcc151:	movsxd		rax, esi
0x7fffeafcc154:	cmp		rax, 0
0x7fffeafcc158:	je		0x7fffeafcc1a3
0x7fffeafcc15e:	mov		rax, qword ptr [rbp - 0x138]
0x7fffeafcc165:	mov		rcx, qword ptr [rbp - 0x168]
0x7fffeafcc16c:	mov		qword ptr [rcx], rax
0x7fffeafcc16f:	mov		rax, qword ptr [rbp - 0x158]
0x7fffeafcc176:	mov		rcx, qword ptr [rbp - 0x138]
0x7fffeafcc17d:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafcc181:	mov		rax, qword ptr [rbp - 0x138]
0x7fffeafcc188:	mov		rcx, qword ptr [rbp - 0x138]
0x7fffeafcc18f:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafcc193:	mov		rcx, qword ptr [rbp - 0x138]
0x7fffeafcc19a:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafcc19e:	jmp		0x7fffeafcc26b
0x7fffeafcc1a3:	call		0x7fffeafc4c10
0x7fffeafcc1a8:	jmp		0x7fffeafcc266
0x7fffeafcc1ad:	xor		eax, eax
0x7fffeafcc1af:	mov		rcx, qword ptr [rbp - 0x158]
0x7fffeafcc1b6:	mov		rcx, qword ptr [rcx + 0x10]
0x7fffeafcc1ba:	mov		qword ptr [rbp - 0x170], rcx
0x7fffeafcc1c1:	mov		rcx, qword ptr [rbp - 0x158]
0x7fffeafcc1c8:	mov		rdx, qword ptr [rbp - 0x20]
0x7fffeafcc1cc:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafcc1d0:	mov		byte ptr [rbp - 0x199], al
0x7fffeafcc1d6:	jb		0x7fffeafcc1f4
0x7fffeafcc1dc:	mov		rax, qword ptr [rbp - 0x170]
0x7fffeafcc1e3:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcc1e7:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcc1eb:	setae		dl
0x7fffeafcc1ee:	mov		byte ptr [rbp - 0x199], dl
0x7fffeafcc1f4:	mov		al, byte ptr [rbp - 0x199]
0x7fffeafcc1fa:	and		al, 1
0x7fffeafcc1fc:	movzx		ecx, al
0x7fffeafcc1ff:	movsxd		rdx, ecx
0x7fffeafcc202:	cmp		rdx, 0
0x7fffeafcc206:	je		0x7fffeafcc261
0x7fffeafcc20c:	mov		rax, qword ptr [rbp - 0x138]
0x7fffeafcc213:	mov		rcx, qword ptr [rbp - 0x170]
0x7fffeafcc21a:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafcc21e:	mov		rcx, qword ptr [rbp - 0x158]
0x7fffeafcc225:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafcc229:	mov		rax, qword ptr [rbp - 0x170]
0x7fffeafcc230:	mov		rcx, qword ptr [rbp - 0x138]
0x7fffeafcc237:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafcc23b:	mov		rax, qword ptr [rbp - 0x158]
0x7fffeafcc242:	mov		rcx, qword ptr [rbp - 0x138]
0x7fffeafcc249:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafcc24d:	mov		rax, qword ptr [rbp - 0x138]
0x7fffeafcc254:	mov		qword ptr [rax + 0x30], 0
0x7fffeafcc25c:	jmp		0x7fffeafcc26b
0x7fffeafcc261:	call		0x7fffeafc4c10
0x7fffeafcc266:	jmp		0x7fffeafcc0b8
0x7fffeafcc26b:	jmp		0x7fffeafcc270
0x7fffeafcc270:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcc274:	mov		rcx, qword ptr [rax + 0x38]
0x7fffeafcc278:	add		rcx, -1
0x7fffeafcc27f:	mov		qword ptr [rax + 0x38], rcx
0x7fffeafcc283:	cmp		rcx, 0
0x7fffeafcc287:	jne		0x7fffeafcc296
0x7fffeafcc28d:	mov		rdi, qword ptr [rbp - 0x20]
0x7fffeafcc291:	call		0x7fffeafcc470
0x7fffeafcc296:	jmp		0x7fffeafcc29b
0x7fffeafcc29b:	jmp		0x7fffeafcc2af
0x7fffeafcc2a0:	jmp		0x7fffeafcc2a5
0x7fffeafcc2a5:	jmp		0x7fffeafcc2aa
0x7fffeafcc2aa:	call		0x7fffeafc4c10
0x7fffeafcc2af:	jmp		0x7fffeafcc2b4
0x7fffeafcc2b4:	add		rsp, 0x1a0
0x7fffeafcc2bb:	pop		rbp
0x7fffeafcc2bc:	ret		
0x7fffeafcc2bd:	nop		dword ptr [rax]
disassembling symbol '.LBB11_3':
textAddr: 0x7fffeafcae7a, textSize: 136
0x7fffeafcae7a:	mov		al, byte ptr [rbp - 0x171]
0x7fffeafcae80:	and		al, 1
0x7fffeafcae82:	movzx		ecx, al
0x7fffeafcae85:	movsxd		rdx, ecx
0x7fffeafcae88:	cmp		rdx, 0
0x7fffeafcae8c:	je		0x7fffeafcc2a5
0x7fffeafcae92:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcae96:	mov		rax, qword ptr [rax + 8]
0x7fffeafcae9a:	and		rax, 0xfffffffffffffff8
0x7fffeafcaea0:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafcaea4:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcaea8:	add		rax, qword ptr [rbp - 0x28]
0x7fffeafcaeac:	mov		qword ptr [rbp - 0x30], rax
0x7fffeafcaeb0:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcaeb4:	mov		rax, qword ptr [rax + 8]
0x7fffeafcaeb8:	and		rax, 1
0x7fffeafcaebe:	cmp		rax, 0
0x7fffeafcaec2:	jne		0x7fffeafcb552
0x7fffeafcaec8:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcaecc:	mov		rax, qword ptr [rax]
0x7fffeafcaecf:	mov		qword ptr [rbp - 0x38], rax
0x7fffeafcaed3:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcaed7:	mov		rax, qword ptr [rax + 8]
0x7fffeafcaedb:	and		rax, 3
0x7fffeafcaee1:	cmp		rax, 0
0x7fffeafcaee5:	jne		0x7fffeafcaf02
0x7fffeafcaeeb:	mov		rax, qword ptr [rbp - 0x38]
0x7fffeafcaeef:	add		rax, 0x20
0x7fffeafcaef5:	add		rax, qword ptr [rbp - 0x28]
0x7fffeafcaef9:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafcaefd:	jmp		0x7fffeafcc2af
disassembling symbol '.LBB11_7':
textAddr: 0x7fffeafcaf02, textSize: 245
0x7fffeafcaf02:	xor		eax, eax
0x7fffeafcaf04:	mov		ecx, eax
0x7fffeafcaf06:	mov		rdx, qword ptr [rbp - 0x18]
0x7fffeafcaf0a:	sub		rcx, qword ptr [rbp - 0x38]
0x7fffeafcaf0e:	add		rdx, rcx
0x7fffeafcaf11:	mov		qword ptr [rbp - 0x40], rdx
0x7fffeafcaf15:	mov		rcx, qword ptr [rbp - 0x38]
0x7fffeafcaf19:	add		rcx, qword ptr [rbp - 0x28]
0x7fffeafcaf1d:	mov		qword ptr [rbp - 0x28], rcx
0x7fffeafcaf21:	mov		rcx, qword ptr [rbp - 0x40]
0x7fffeafcaf25:	mov		qword ptr [rbp - 0x18], rcx
0x7fffeafcaf29:	mov		rcx, qword ptr [rbp - 0x40]
0x7fffeafcaf2d:	mov		rdx, qword ptr [rbp - 0x20]
0x7fffeafcaf31:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafcaf35:	setae		sil
0x7fffeafcaf39:	and		sil, 1
0x7fffeafcaf3d:	movzx		eax, sil
0x7fffeafcaf41:	movsxd		rcx, eax
0x7fffeafcaf44:	cmp		rcx, 0
0x7fffeafcaf48:	je		0x7fffeafcb543
0x7fffeafcaf4e:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcaf52:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcaf56:	cmp		rax, qword ptr [rcx + 0x20]
0x7fffeafcaf5a:	je		0x7fffeafcb4db
0x7fffeafcaf60:	mov		rax, qword ptr [rbp - 0x38]
0x7fffeafcaf64:	shr		rax, 3
0x7fffeafcaf68:	cmp		rax, 0x20
0x7fffeafcaf6c:	jae		0x7fffeafcb0ff
0x7fffeafcaf72:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcaf76:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafcaf7a:	mov		qword ptr [rbp - 0x48], rax
0x7fffeafcaf7e:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcaf82:	mov		rax, qword ptr [rax + 0x18]
0x7fffeafcaf86:	mov		qword ptr [rbp - 0x50], rax
0x7fffeafcaf8a:	mov		rax, qword ptr [rbp - 0x38]
0x7fffeafcaf8e:	shr		rax, 3
0x7fffeafcaf92:	mov		dword ptr [rbp - 0x54], eax
0x7fffeafcaf95:	mov		rcx, qword ptr [rbp - 0x48]
0x7fffeafcaf99:	mov		rdx, qword ptr [rbp - 0x20]
0x7fffeafcaf9d:	add		rdx, 0x48
0x7fffeafcafa4:	mov		eax, dword ptr [rbp - 0x54]
0x7fffeafcafa7:	shl		eax, 1
0x7fffeafcafaa:	mov		eax, eax
0x7fffeafcafac:	mov		esi, eax
0x7fffeafcafae:	shl		rsi, 3
0x7fffeafcafb2:	add		rdx, rsi
0x7fffeafcafb5:	cmp		rcx, rdx
0x7fffeafcafb8:	mov		dil, 1
0x7fffeafcafbb:	mov		byte ptr [rbp - 0x172], dil
0x7fffeafcafc2:	je		0x7fffeafcb003
0x7fffeafcafc8:	xor		eax, eax
0x7fffeafcafca:	mov		rcx, qword ptr [rbp - 0x48]
0x7fffeafcafce:	mov		rdx, qword ptr [rbp - 0x20]
0x7fffeafcafd2:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafcafd6:	mov		byte ptr [rbp - 0x173], al
0x7fffeafcafdc:	jb		0x7fffeafcaff7
0x7fffeafcafe2:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafcafe6:	mov		rax, qword ptr [rax + 0x18]
0x7fffeafcafea:	cmp		rax, qword ptr [rbp - 0x18]
0x7fffeafcafee:	sete		cl
0x7fffeafcaff1:	mov		byte ptr [rbp - 0x173], cl
disassembling symbol '.LBB11_13':
textAddr: 0x7fffeafcaff7, textSize: 12
0x7fffeafcaff7:	mov		al, byte ptr [rbp - 0x173]
0x7fffeafcaffd:	mov		byte ptr [rbp - 0x172], al
disassembling symbol '.LBB11_14':
textAddr: 0x7fffeafcb003, textSize: 64
0x7fffeafcb003:	mov		al, byte ptr [rbp - 0x172]
0x7fffeafcb009:	and		al, 1
0x7fffeafcb00b:	movzx		ecx, al
0x7fffeafcb00e:	movsxd		rdx, ecx
0x7fffeafcb011:	cmp		rdx, 0
0x7fffeafcb015:	je		0x7fffeafcb0f5
0x7fffeafcb01b:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafcb01f:	cmp		rax, qword ptr [rbp - 0x48]
0x7fffeafcb023:	jne		0x7fffeafcb043
0x7fffeafcb029:	mov		ecx, dword ptr [rbp - 0x54]
0x7fffeafcb02c:	mov		eax, 1
0x7fffeafcb031:	shl		eax, cl
0x7fffeafcb033:	xor		eax, 0xffffffff
0x7fffeafcb036:	mov		rdx, qword ptr [rbp - 0x20]
0x7fffeafcb03a:	and		eax, dword ptr [rdx]
0x7fffeafcb03c:	mov		dword ptr [rdx], eax
0x7fffeafcb03e:	jmp		0x7fffeafcb0f0
disassembling symbol '.LBB11_17':
textAddr: 0x7fffeafcb043, textSize: 98
0x7fffeafcb043:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafcb047:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcb04b:	add		rcx, 0x48
0x7fffeafcb052:	mov		edx, dword ptr [rbp - 0x54]
0x7fffeafcb055:	shl		edx, 1
0x7fffeafcb058:	mov		edx, edx
0x7fffeafcb05a:	mov		esi, edx
0x7fffeafcb05c:	shl		rsi, 3
0x7fffeafcb060:	add		rcx, rsi
0x7fffeafcb063:	cmp		rax, rcx
0x7fffeafcb066:	mov		dil, 1
0x7fffeafcb069:	mov		byte ptr [rbp - 0x174], dil
0x7fffeafcb070:	je		0x7fffeafcb0b1
0x7fffeafcb076:	xor		eax, eax
0x7fffeafcb078:	mov		rcx, qword ptr [rbp - 0x50]
0x7fffeafcb07c:	mov		rdx, qword ptr [rbp - 0x20]
0x7fffeafcb080:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafcb084:	mov		byte ptr [rbp - 0x175], al
0x7fffeafcb08a:	jb		0x7fffeafcb0a5
0x7fffeafcb090:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafcb094:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafcb098:	cmp		rax, qword ptr [rbp - 0x18]
0x7fffeafcb09c:	sete		cl
0x7fffeafcb09f:	mov		byte ptr [rbp - 0x175], cl
disassembling symbol '.LBB11_20':
textAddr: 0x7fffeafcb0a5, textSize: 12
0x7fffeafcb0a5:	mov		al, byte ptr [rbp - 0x175]
0x7fffeafcb0ab:	mov		byte ptr [rbp - 0x174], al
disassembling symbol '.LBB11_21':
textAddr: 0x7fffeafcb0b1, textSize: 53
0x7fffeafcb0b1:	mov		al, byte ptr [rbp - 0x174]
0x7fffeafcb0b7:	and		al, 1
0x7fffeafcb0b9:	movzx		ecx, al
0x7fffeafcb0bc:	movsxd		rdx, ecx
0x7fffeafcb0bf:	cmp		rdx, 0
0x7fffeafcb0c3:	je		0x7fffeafcb0e6
0x7fffeafcb0c9:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafcb0cd:	mov		rcx, qword ptr [rbp - 0x48]
0x7fffeafcb0d1:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafcb0d5:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafcb0d9:	mov		rcx, qword ptr [rbp - 0x50]
0x7fffeafcb0dd:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafcb0e1:	jmp		0x7fffeafcb0eb
disassembling symbol '.LBB11_23':
textAddr: 0x7fffeafcb0e6, textSize: 5
0x7fffeafcb0e6:	call		0x7fffeafc4c10
disassembling symbol '.LBB11_24':
textAddr: 0x7fffeafcb0eb, textSize: 5
0x7fffeafcb0eb:	jmp		0x7fffeafcb0f0
disassembling symbol '.LBB11_25':
textAddr: 0x7fffeafcb0f0, textSize: 5
0x7fffeafcb0f0:	jmp		0x7fffeafcb0fa
disassembling symbol '.LBB11_26':
textAddr: 0x7fffeafcb0f5, textSize: 5
0x7fffeafcb0f5:	call		0x7fffeafc4c10
disassembling symbol '.LBB11_27':
textAddr: 0x7fffeafcb0fa, textSize: 5
0x7fffeafcb0fa:	jmp		0x7fffeafcb4d6
disassembling symbol '.LBB11_28':
textAddr: 0x7fffeafcb0ff, textSize: 135
0x7fffeafcb0ff:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcb103:	mov		qword ptr [rbp - 0x60], rax
0x7fffeafcb107:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafcb10b:	mov		rax, qword ptr [rax + 0x30]
0x7fffeafcb10f:	mov		qword ptr [rbp - 0x68], rax
0x7fffeafcb113:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafcb117:	mov		rax, qword ptr [rax + 0x18]
0x7fffeafcb11b:	cmp		rax, qword ptr [rbp - 0x60]
0x7fffeafcb11f:	je		0x7fffeafcb1c5
0x7fffeafcb125:	xor		eax, eax
0x7fffeafcb127:	mov		rcx, qword ptr [rbp - 0x60]
0x7fffeafcb12b:	mov		rcx, qword ptr [rcx + 0x10]
0x7fffeafcb12f:	mov		qword ptr [rbp - 0x78], rcx
0x7fffeafcb133:	mov		rcx, qword ptr [rbp - 0x60]
0x7fffeafcb137:	mov		rcx, qword ptr [rcx + 0x18]
0x7fffeafcb13b:	mov		qword ptr [rbp - 0x70], rcx
0x7fffeafcb13f:	mov		rcx, qword ptr [rbp - 0x78]
0x7fffeafcb143:	mov		rdx, qword ptr [rbp - 0x20]
0x7fffeafcb147:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafcb14b:	mov		byte ptr [rbp - 0x176], al
0x7fffeafcb151:	jb		0x7fffeafcb186
0x7fffeafcb157:	xor		eax, eax
0x7fffeafcb159:	mov		rcx, qword ptr [rbp - 0x78]
0x7fffeafcb15d:	mov		rcx, qword ptr [rcx + 0x18]
0x7fffeafcb161:	cmp		rcx, qword ptr [rbp - 0x60]
0x7fffeafcb165:	mov		byte ptr [rbp - 0x176], al
0x7fffeafcb16b:	jne		0x7fffeafcb186
0x7fffeafcb171:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafcb175:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafcb179:	cmp		rax, qword ptr [rbp - 0x60]
0x7fffeafcb17d:	sete		cl
0x7fffeafcb180:	mov		byte ptr [rbp - 0x176], cl
disassembling symbol '.LBB11_32':
textAddr: 0x7fffeafcb186, textSize: 53
0x7fffeafcb186:	mov		al, byte ptr [rbp - 0x176]
0x7fffeafcb18c:	and		al, 1
0x7fffeafcb18e:	movzx		ecx, al
0x7fffeafcb191:	movsxd		rdx, ecx
0x7fffeafcb194:	cmp		rdx, 0
0x7fffeafcb198:	je		0x7fffeafcb1bb
0x7fffeafcb19e:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafcb1a2:	mov		rcx, qword ptr [rbp - 0x78]
0x7fffeafcb1a6:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafcb1aa:	mov		rax, qword ptr [rbp - 0x78]
0x7fffeafcb1ae:	mov		rcx, qword ptr [rbp - 0x70]
0x7fffeafcb1b2:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafcb1b6:	jmp		0x7fffeafcb1c0
disassembling symbol '.LBB11_34':
textAddr: 0x7fffeafcb1bb, textSize: 5
0x7fffeafcb1bb:	call		0x7fffeafc4c10
disassembling symbol '.LBB11_35':
textAddr: 0x7fffeafcb1c0, textSize: 5
0x7fffeafcb1c0:	jmp		0x7fffeafcb2d6
disassembling symbol '.LBB11_36':
textAddr: 0x7fffeafcb1c5, textSize: 79
0x7fffeafcb1c5:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafcb1c9:	mov		rcx, rax
0x7fffeafcb1cc:	add		rcx, 0x20
0x7fffeafcb1d3:	add		rcx, 8
0x7fffeafcb1da:	mov		qword ptr [rbp - 0x80], rcx
0x7fffeafcb1de:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafcb1e2:	mov		qword ptr [rbp - 0x70], rax
0x7fffeafcb1e6:	cmp		rax, 0
0x7fffeafcb1ea:	jne		0x7fffeafcb214
0x7fffeafcb1f0:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafcb1f4:	mov		rcx, rax
0x7fffeafcb1f7:	add		rcx, 0x20
0x7fffeafcb1fe:	mov		qword ptr [rbp - 0x80], rcx
0x7fffeafcb202:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafcb206:	mov		qword ptr [rbp - 0x70], rax
0x7fffeafcb20a:	cmp		rax, 0
0x7fffeafcb20e:	je		0x7fffeafcb2d1
disassembling symbol '.LBB11_38':
textAddr: 0x7fffeafcb214, textSize: 5
0x7fffeafcb214:	jmp		0x7fffeafcb219
disassembling symbol '.LBB11_39':
textAddr: 0x7fffeafcb219, textSize: 82
0x7fffeafcb219:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafcb21d:	mov		rcx, rax
0x7fffeafcb220:	add		rcx, 0x20
0x7fffeafcb227:	add		rcx, 8
0x7fffeafcb22e:	mov		qword ptr [rbp - 0x88], rcx
0x7fffeafcb235:	cmp		qword ptr [rax + 0x28], 0
0x7fffeafcb23a:	mov		dl, 1
0x7fffeafcb23c:	mov		byte ptr [rbp - 0x177], dl
0x7fffeafcb242:	jne		0x7fffeafcb26b
0x7fffeafcb248:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafcb24c:	mov		rcx, rax
0x7fffeafcb24f:	add		rcx, 0x20
0x7fffeafcb256:	mov		qword ptr [rbp - 0x88], rcx
0x7fffeafcb25d:	cmp		qword ptr [rax + 0x20], 0
0x7fffeafcb262:	setne		dl
0x7fffeafcb265:	mov		byte ptr [rbp - 0x177], dl
disassembling symbol '.LBB11_41':
textAddr: 0x7fffeafcb26b, textSize: 19
0x7fffeafcb26b:	mov		al, byte ptr [rbp - 0x177]
0x7fffeafcb271:	test		al, 1
0x7fffeafcb273:	jne		0x7fffeafcb27e
0x7fffeafcb279:	jmp		0x7fffeafcb295
disassembling symbol '.LBB11_42':
textAddr: 0x7fffeafcb27e, textSize: 23
0x7fffeafcb27e:	mov		rax, qword ptr [rbp - 0x88]
0x7fffeafcb285:	mov		qword ptr [rbp - 0x80], rax
0x7fffeafcb289:	mov		rax, qword ptr [rax]
0x7fffeafcb28c:	mov		qword ptr [rbp - 0x70], rax
0x7fffeafcb290:	jmp		0x7fffeafcb219
disassembling symbol '.LBB11_43':
textAddr: 0x7fffeafcb295, textSize: 50
0x7fffeafcb295:	mov		rax, qword ptr [rbp - 0x80]
0x7fffeafcb299:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcb29d:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcb2a1:	setae		dl
0x7fffeafcb2a4:	and		dl, 1
0x7fffeafcb2a7:	movzx		esi, dl
0x7fffeafcb2aa:	movsxd		rax, esi
0x7fffeafcb2ad:	cmp		rax, 0
0x7fffeafcb2b1:	je		0x7fffeafcb2c7
0x7fffeafcb2b7:	mov		rax, qword ptr [rbp - 0x80]
0x7fffeafcb2bb:	mov		qword ptr [rax], 0
0x7fffeafcb2c2:	jmp		0x7fffeafcb2cc
disassembling symbol '.LBB11_45':
textAddr: 0x7fffeafcb2c7, textSize: 5
0x7fffeafcb2c7:	call		0x7fffeafc4c10
disassembling symbol '.LBB11_46':
textAddr: 0x7fffeafcb2cc, textSize: 5
0x7fffeafcb2cc:	jmp		0x7fffeafcb2d1
disassembling symbol '.LBB11_47':
textAddr: 0x7fffeafcb2d1, textSize: 5
0x7fffeafcb2d1:	jmp		0x7fffeafcb2d6
disassembling symbol '.LBB11_48':
textAddr: 0x7fffeafcb2d6, textSize: 115
0x7fffeafcb2d6:	cmp		qword ptr [rbp - 0x68], 0
0x7fffeafcb2db:	je		0x7fffeafcb4d1
0x7fffeafcb2e1:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcb2e5:	add		rax, 0x258
0x7fffeafcb2eb:	mov		rcx, qword ptr [rbp - 0x60]
0x7fffeafcb2ef:	mov		edx, dword ptr [rcx + 0x38]
0x7fffeafcb2f2:	mov		ecx, edx
0x7fffeafcb2f4:	shl		rcx, 3
0x7fffeafcb2f8:	add		rax, rcx
0x7fffeafcb2fb:	mov		qword ptr [rbp - 0x90], rax
0x7fffeafcb302:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafcb306:	mov		rcx, qword ptr [rbp - 0x90]
0x7fffeafcb30d:	cmp		rax, qword ptr [rcx]
0x7fffeafcb310:	jne		0x7fffeafcb34e
0x7fffeafcb316:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafcb31a:	mov		rcx, qword ptr [rbp - 0x90]
0x7fffeafcb321:	mov		qword ptr [rcx], rax
0x7fffeafcb324:	cmp		rax, 0
0x7fffeafcb328:	jne		0x7fffeafcb349
0x7fffeafcb32e:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafcb332:	mov		ecx, dword ptr [rax + 0x38]
0x7fffeafcb335:	mov		edx, 1
0x7fffeafcb33a:	shl		edx, cl
0x7fffeafcb33c:	xor		edx, 0xffffffff
0x7fffeafcb33f:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcb343:	and		edx, dword ptr [rax + 4]
0x7fffeafcb346:	mov		dword ptr [rax + 4], edx
disassembling symbol '.LBB11_52':
textAddr: 0x7fffeafcb349, textSize: 5
0x7fffeafcb349:	jmp		0x7fffeafcb3ae
disassembling symbol '.LBB11_53':
textAddr: 0x7fffeafcb34e, textSize: 69
0x7fffeafcb34e:	mov		rax, qword ptr [rbp - 0x68]
0x7fffeafcb352:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcb356:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcb35a:	setae		dl
0x7fffeafcb35d:	and		dl, 1
0x7fffeafcb360:	movzx		esi, dl
0x7fffeafcb363:	movsxd		rax, esi
0x7fffeafcb366:	cmp		rax, 0
0x7fffeafcb36a:	je		0x7fffeafcb3a4
0x7fffeafcb370:	mov		rax, qword ptr [rbp - 0x68]
0x7fffeafcb374:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafcb378:	cmp		rax, qword ptr [rbp - 0x60]
0x7fffeafcb37c:	jne		0x7fffeafcb393
0x7fffeafcb382:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafcb386:	mov		rcx, qword ptr [rbp - 0x68]
0x7fffeafcb38a:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafcb38e:	jmp		0x7fffeafcb39f
disassembling symbol '.LBB11_56':
textAddr: 0x7fffeafcb393, textSize: 12
0x7fffeafcb393:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafcb397:	mov		rcx, qword ptr [rbp - 0x68]
0x7fffeafcb39b:	mov		qword ptr [rcx + 0x28], rax
disassembling symbol '.LBB11_57':
textAddr: 0x7fffeafcb39f, textSize: 5
0x7fffeafcb39f:	jmp		0x7fffeafcb3a9
disassembling symbol '.LBB11_58':
textAddr: 0x7fffeafcb3a4, textSize: 5
0x7fffeafcb3a4:	call		0x7fffeafc4c10
disassembling symbol '.LBB11_59':
textAddr: 0x7fffeafcb3a9, textSize: 5
0x7fffeafcb3a9:	jmp		0x7fffeafcb3ae
disassembling symbol '.LBB11_60':
textAddr: 0x7fffeafcb3ae, textSize: 154
0x7fffeafcb3ae:	cmp		qword ptr [rbp - 0x70], 0
0x7fffeafcb3b3:	je		0x7fffeafcb4cc
0x7fffeafcb3b9:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafcb3bd:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcb3c1:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcb3c5:	setae		dl
0x7fffeafcb3c8:	and		dl, 1
0x7fffeafcb3cb:	movzx		esi, dl
0x7fffeafcb3ce:	movsxd		rax, esi
0x7fffeafcb3d1:	cmp		rax, 0
0x7fffeafcb3d5:	je		0x7fffeafcb4c2
0x7fffeafcb3db:	mov		rax, qword ptr [rbp - 0x68]
0x7fffeafcb3df:	mov		rcx, qword ptr [rbp - 0x70]
0x7fffeafcb3e3:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafcb3e7:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafcb3eb:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafcb3ef:	mov		qword ptr [rbp - 0x98], rax
0x7fffeafcb3f6:	cmp		rax, 0
0x7fffeafcb3fa:	je		0x7fffeafcb452
0x7fffeafcb400:	mov		rax, qword ptr [rbp - 0x98]
0x7fffeafcb407:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcb40b:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcb40f:	setae		dl
0x7fffeafcb412:	and		dl, 1
0x7fffeafcb415:	movzx		esi, dl
0x7fffeafcb418:	movsxd		rax, esi
0x7fffeafcb41b:	cmp		rax, 0
0x7fffeafcb41f:	je		0x7fffeafcb448
0x7fffeafcb425:	mov		rax, qword ptr [rbp - 0x98]
0x7fffeafcb42c:	mov		rcx, qword ptr [rbp - 0x70]
0x7fffeafcb430:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafcb434:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafcb438:	mov		rcx, qword ptr [rbp - 0x98]
0x7fffeafcb43f:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafcb443:	jmp		0x7fffeafcb44d
disassembling symbol '.LBB11_65':
textAddr: 0x7fffeafcb448, textSize: 5
0x7fffeafcb448:	call		0x7fffeafc4c10
disassembling symbol '.LBB11_66':
textAddr: 0x7fffeafcb44d, textSize: 5
0x7fffeafcb44d:	jmp		0x7fffeafcb452
disassembling symbol '.LBB11_67':
textAddr: 0x7fffeafcb452, textSize: 97
0x7fffeafcb452:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafcb456:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafcb45a:	mov		qword ptr [rbp - 0xa0], rax
0x7fffeafcb461:	cmp		rax, 0
0x7fffeafcb465:	je		0x7fffeafcb4bd
0x7fffeafcb46b:	mov		rax, qword ptr [rbp - 0xa0]
0x7fffeafcb472:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcb476:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcb47a:	setae		dl
0x7fffeafcb47d:	and		dl, 1
0x7fffeafcb480:	movzx		esi, dl
0x7fffeafcb483:	movsxd		rax, esi
0x7fffeafcb486:	cmp		rax, 0
0x7fffeafcb48a:	je		0x7fffeafcb4b3
0x7fffeafcb490:	mov		rax, qword ptr [rbp - 0xa0]
0x7fffeafcb497:	mov		rcx, qword ptr [rbp - 0x70]
0x7fffeafcb49b:	mov		qword ptr [rcx + 0x28], rax
0x7fffeafcb49f:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafcb4a3:	mov		rcx, qword ptr [rbp - 0xa0]
0x7fffeafcb4aa:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafcb4ae:	jmp		0x7fffeafcb4b8
disassembling symbol '.LBB11_70':
textAddr: 0x7fffeafcb4b3, textSize: 5
0x7fffeafcb4b3:	call		0x7fffeafc4c10
disassembling symbol '.LBB11_71':
textAddr: 0x7fffeafcb4b8, textSize: 5
0x7fffeafcb4b8:	jmp		0x7fffeafcb4bd
disassembling symbol '.LBB11_72':
textAddr: 0x7fffeafcb4bd, textSize: 5
0x7fffeafcb4bd:	jmp		0x7fffeafcb4c7
disassembling symbol '.LBB11_73':
textAddr: 0x7fffeafcb4c2, textSize: 5
0x7fffeafcb4c2:	call		0x7fffeafc4c10
disassembling symbol '.LBB11_74':
textAddr: 0x7fffeafcb4c7, textSize: 5
0x7fffeafcb4c7:	jmp		0x7fffeafcb4cc
disassembling symbol '.LBB11_75':
textAddr: 0x7fffeafcb4cc, textSize: 5
0x7fffeafcb4cc:	jmp		0x7fffeafcb4d1
disassembling symbol '.LBB11_76':
textAddr: 0x7fffeafcb4d1, textSize: 5
0x7fffeafcb4d1:	jmp		0x7fffeafcb4d6
disassembling symbol '.LBB11_77':
textAddr: 0x7fffeafcb4d6, textSize: 5
0x7fffeafcb4d6:	jmp		0x7fffeafcb53e
disassembling symbol '.LBB11_78':
textAddr: 0x7fffeafcb4db, textSize: 94
0x7fffeafcb4db:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcb4df:	mov		rax, qword ptr [rax + 8]
0x7fffeafcb4e3:	and		rax, 3
0x7fffeafcb4e9:	cmp		rax, 3
0x7fffeafcb4ed:	jne		0x7fffeafcb539
0x7fffeafcb4f3:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcb4f7:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcb4fb:	mov		qword ptr [rcx + 8], rax
0x7fffeafcb4ff:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcb503:	mov		rcx, qword ptr [rax + 8]
0x7fffeafcb507:	and		rcx, 0xfffffffffffffffe
0x7fffeafcb50e:	mov		qword ptr [rax + 8], rcx
0x7fffeafcb512:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcb516:	or		rax, 1
0x7fffeafcb51c:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafcb520:	mov		qword ptr [rcx + 8], rax
0x7fffeafcb524:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcb528:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafcb52c:	mov		rdx, qword ptr [rbp - 0x28]
0x7fffeafcb530:	mov		qword ptr [rcx + rdx], rax
0x7fffeafcb534:	jmp		0x7fffeafcc2af
disassembling symbol '.LBB11_80':
textAddr: 0x7fffeafcb539, textSize: 5
0x7fffeafcb539:	jmp		0x7fffeafcb53e
disassembling symbol '.LBB11_81':
textAddr: 0x7fffeafcb53e, textSize: 5
0x7fffeafcb53e:	jmp		0x7fffeafcb548
disassembling symbol '.LBB11_82':
textAddr: 0x7fffeafcb543, textSize: 5
0x7fffeafcb543:	jmp		0x7fffeafcc2aa
disassembling symbol '.LBB11_83':
textAddr: 0x7fffeafcb548, textSize: 5
0x7fffeafcb548:	jmp		0x7fffeafcb54d
disassembling symbol '.LBB11_84':
textAddr: 0x7fffeafcb54d, textSize: 5
0x7fffeafcb54d:	jmp		0x7fffeafcb552
disassembling symbol '.LBB11_85':
textAddr: 0x7fffeafcb552, textSize: 52
0x7fffeafcb552:	xor		eax, eax
0x7fffeafcb554:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafcb558:	mov		rdx, qword ptr [rbp - 0x30]
0x7fffeafcb55c:	cmp		rcx, rdx
0x7fffeafcb55f:	mov		byte ptr [rbp - 0x178], al
0x7fffeafcb565:	jae		0x7fffeafcb586
0x7fffeafcb56b:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcb56f:	mov		rax, qword ptr [rax + 8]
0x7fffeafcb573:	and		rax, 1
0x7fffeafcb579:	cmp		rax, 0
0x7fffeafcb57d:	setne		cl
0x7fffeafcb580:	mov		byte ptr [rbp - 0x178], cl
disassembling symbol '.LBB11_87':
textAddr: 0x7fffeafcb586, textSize: 164
0x7fffeafcb586:	mov		al, byte ptr [rbp - 0x178]
0x7fffeafcb58c:	and		al, 1
0x7fffeafcb58e:	movzx		ecx, al
0x7fffeafcb591:	movsxd		rdx, ecx
0x7fffeafcb594:	cmp		rdx, 0
0x7fffeafcb598:	je		0x7fffeafcc2a0
0x7fffeafcb59e:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcb5a2:	mov		rax, qword ptr [rax + 8]
0x7fffeafcb5a6:	and		rax, 2
0x7fffeafcb5ac:	cmp		rax, 0
0x7fffeafcb5b0:	jne		0x7fffeafcbd7c
0x7fffeafcb5b6:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcb5ba:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcb5be:	cmp		rax, qword ptr [rcx + 0x28]
0x7fffeafcb5c2:	jne		0x7fffeafcb651
0x7fffeafcb5c8:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcb5cc:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcb5d0:	add		rax, qword ptr [rcx + 0x10]
0x7fffeafcb5d4:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafcb5d8:	mov		qword ptr [rbp - 0xa8], rax
0x7fffeafcb5df:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcb5e3:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcb5e7:	mov		qword ptr [rcx + 0x28], rax
0x7fffeafcb5eb:	mov		rax, qword ptr [rbp - 0xa8]
0x7fffeafcb5f2:	or		rax, 1
0x7fffeafcb5f8:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafcb5fc:	mov		qword ptr [rcx + 8], rax
0x7fffeafcb600:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcb604:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcb608:	cmp		rax, qword ptr [rcx + 0x20]
0x7fffeafcb60c:	jne		0x7fffeafcb62a
0x7fffeafcb612:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcb616:	mov		qword ptr [rax + 0x20], 0
0x7fffeafcb61e:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcb622:	mov		qword ptr [rax + 8], 0
disassembling symbol '.LBB11_92':
textAddr: 0x7fffeafcb62a, textSize: 34
0x7fffeafcb62a:	mov		rax, qword ptr [rbp - 0xa8]
0x7fffeafcb631:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcb635:	cmp		rax, qword ptr [rcx + 0x30]
0x7fffeafcb639:	jbe		0x7fffeafcb64c
0x7fffeafcb63f:	xor		eax, eax
0x7fffeafcb641:	mov		esi, eax
0x7fffeafcb643:	mov		rdi, qword ptr [rbp - 0x20]
0x7fffeafcb647:	call		0x7fffeafcc2c0
disassembling symbol '.LBB11_94':
textAddr: 0x7fffeafcb64c, textSize: 5
0x7fffeafcb64c:	jmp		0x7fffeafcc2af
disassembling symbol '.LBB11_95':
textAddr: 0x7fffeafcb651, textSize: 101
0x7fffeafcb651:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcb655:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcb659:	cmp		rax, qword ptr [rcx + 0x20]
0x7fffeafcb65d:	jne		0x7fffeafcb6b6
0x7fffeafcb663:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcb667:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcb66b:	add		rax, qword ptr [rcx + 8]
0x7fffeafcb66f:	mov		qword ptr [rcx + 8], rax
0x7fffeafcb673:	mov		qword ptr [rbp - 0xb0], rax
0x7fffeafcb67a:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcb67e:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcb682:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafcb686:	mov		rax, qword ptr [rbp - 0xb0]
0x7fffeafcb68d:	or		rax, 1
0x7fffeafcb693:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafcb697:	mov		qword ptr [rcx + 8], rax
0x7fffeafcb69b:	mov		rax, qword ptr [rbp - 0xb0]
0x7fffeafcb6a2:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafcb6a6:	mov		rdx, qword ptr [rbp - 0xb0]
0x7fffeafcb6ad:	mov		qword ptr [rcx + rdx], rax
0x7fffeafcb6b1:	jmp		0x7fffeafcc2af
disassembling symbol '.LBB11_97':
textAddr: 0x7fffeafcb6b6, textSize: 214
0x7fffeafcb6b6:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcb6ba:	mov		rax, qword ptr [rax + 8]
0x7fffeafcb6be:	and		rax, 0xfffffffffffffff8
0x7fffeafcb6c4:	mov		qword ptr [rbp - 0xb8], rax
0x7fffeafcb6cb:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafcb6d2:	add		rax, qword ptr [rbp - 0x28]
0x7fffeafcb6d6:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafcb6da:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafcb6e1:	shr		rax, 3
0x7fffeafcb6e5:	cmp		rax, 0x20
0x7fffeafcb6e9:	jae		0x7fffeafcb8b5
0x7fffeafcb6ef:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcb6f3:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafcb6f7:	mov		qword ptr [rbp - 0xc0], rax
0x7fffeafcb6fe:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcb702:	mov		rax, qword ptr [rax + 0x18]
0x7fffeafcb706:	mov		qword ptr [rbp - 0xc8], rax
0x7fffeafcb70d:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafcb714:	shr		rax, 3
0x7fffeafcb718:	mov		dword ptr [rbp - 0xcc], eax
0x7fffeafcb71e:	mov		rcx, qword ptr [rbp - 0xc0]
0x7fffeafcb725:	mov		rdx, qword ptr [rbp - 0x20]
0x7fffeafcb729:	add		rdx, 0x48
0x7fffeafcb730:	mov		eax, dword ptr [rbp - 0xcc]
0x7fffeafcb736:	shl		eax, 1
0x7fffeafcb739:	mov		eax, eax
0x7fffeafcb73b:	mov		esi, eax
0x7fffeafcb73d:	shl		rsi, 3
0x7fffeafcb741:	add		rdx, rsi
0x7fffeafcb744:	cmp		rcx, rdx
0x7fffeafcb747:	mov		dil, 1
0x7fffeafcb74a:	mov		byte ptr [rbp - 0x179], dil
0x7fffeafcb751:	je		0x7fffeafcb798
0x7fffeafcb757:	xor		eax, eax
0x7fffeafcb759:	mov		rcx, qword ptr [rbp - 0xc0]
0x7fffeafcb760:	mov		rdx, qword ptr [rbp - 0x20]
0x7fffeafcb764:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafcb768:	mov		byte ptr [rbp - 0x17a], al
0x7fffeafcb76e:	jb		0x7fffeafcb78c
0x7fffeafcb774:	mov		rax, qword ptr [rbp - 0xc0]
0x7fffeafcb77b:	mov		rax, qword ptr [rax + 0x18]
0x7fffeafcb77f:	cmp		rax, qword ptr [rbp - 0x30]
0x7fffeafcb783:	sete		cl
0x7fffeafcb786:	mov		byte ptr [rbp - 0x17a], cl
disassembling symbol '.LBB11_101':
textAddr: 0x7fffeafcb78c, textSize: 12
0x7fffeafcb78c:	mov		al, byte ptr [rbp - 0x17a]
0x7fffeafcb792:	mov		byte ptr [rbp - 0x179], al
disassembling symbol '.LBB11_102':
textAddr: 0x7fffeafcb798, textSize: 73
0x7fffeafcb798:	mov		al, byte ptr [rbp - 0x179]
0x7fffeafcb79e:	and		al, 1
0x7fffeafcb7a0:	movzx		ecx, al
0x7fffeafcb7a3:	movsxd		rdx, ecx
0x7fffeafcb7a6:	cmp		rdx, 0
0x7fffeafcb7aa:	je		0x7fffeafcb8ab
0x7fffeafcb7b0:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafcb7b7:	cmp		rax, qword ptr [rbp - 0xc0]
0x7fffeafcb7be:	jne		0x7fffeafcb7e1
0x7fffeafcb7c4:	mov		ecx, dword ptr [rbp - 0xcc]
0x7fffeafcb7ca:	mov		eax, 1
0x7fffeafcb7cf:	shl		eax, cl
0x7fffeafcb7d1:	xor		eax, 0xffffffff
0x7fffeafcb7d4:	mov		rdx, qword ptr [rbp - 0x20]
0x7fffeafcb7d8:	and		eax, dword ptr [rdx]
0x7fffeafcb7da:	mov		dword ptr [rdx], eax
0x7fffeafcb7dc:	jmp		0x7fffeafcb8a6
disassembling symbol '.LBB11_105':
textAddr: 0x7fffeafcb7e1, textSize: 110
0x7fffeafcb7e1:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafcb7e8:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcb7ec:	add		rcx, 0x48
0x7fffeafcb7f3:	mov		edx, dword ptr [rbp - 0xcc]
0x7fffeafcb7f9:	shl		edx, 1
0x7fffeafcb7fc:	mov		edx, edx
0x7fffeafcb7fe:	mov		esi, edx
0x7fffeafcb800:	shl		rsi, 3
0x7fffeafcb804:	add		rcx, rsi
0x7fffeafcb807:	cmp		rax, rcx
0x7fffeafcb80a:	mov		dil, 1
0x7fffeafcb80d:	mov		byte ptr [rbp - 0x17b], dil
0x7fffeafcb814:	je		0x7fffeafcb85b
0x7fffeafcb81a:	xor		eax, eax
0x7fffeafcb81c:	mov		rcx, qword ptr [rbp - 0xc8]
0x7fffeafcb823:	mov		rdx, qword ptr [rbp - 0x20]
0x7fffeafcb827:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafcb82b:	mov		byte ptr [rbp - 0x17c], al
0x7fffeafcb831:	jb		0x7fffeafcb84f
0x7fffeafcb837:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafcb83e:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafcb842:	cmp		rax, qword ptr [rbp - 0x30]
0x7fffeafcb846:	sete		cl
0x7fffeafcb849:	mov		byte ptr [rbp - 0x17c], cl
disassembling symbol '.LBB11_108':
textAddr: 0x7fffeafcb84f, textSize: 12
0x7fffeafcb84f:	mov		al, byte ptr [rbp - 0x17c]
0x7fffeafcb855:	mov		byte ptr [rbp - 0x17b], al
disassembling symbol '.LBB11_109':
textAddr: 0x7fffeafcb85b, textSize: 65
0x7fffeafcb85b:	mov		al, byte ptr [rbp - 0x17b]
0x7fffeafcb861:	and		al, 1
0x7fffeafcb863:	movzx		ecx, al
0x7fffeafcb866:	movsxd		rdx, ecx
0x7fffeafcb869:	cmp		rdx, 0
0x7fffeafcb86d:	je		0x7fffeafcb89c
0x7fffeafcb873:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafcb87a:	mov		rcx, qword ptr [rbp - 0xc0]
0x7fffeafcb881:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafcb885:	mov		rax, qword ptr [rbp - 0xc0]
0x7fffeafcb88c:	mov		rcx, qword ptr [rbp - 0xc8]
0x7fffeafcb893:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafcb897:	jmp		0x7fffeafcb8a1
disassembling symbol '.LBB11_111':
textAddr: 0x7fffeafcb89c, textSize: 5
0x7fffeafcb89c:	call		0x7fffeafc4c10
disassembling symbol '.LBB11_112':
textAddr: 0x7fffeafcb8a1, textSize: 5
0x7fffeafcb8a1:	jmp		0x7fffeafcb8a6
disassembling symbol '.LBB11_113':
textAddr: 0x7fffeafcb8a6, textSize: 5
0x7fffeafcb8a6:	jmp		0x7fffeafcb8b0
disassembling symbol '.LBB11_114':
textAddr: 0x7fffeafcb8ab, textSize: 5
0x7fffeafcb8ab:	call		0x7fffeafc4c10
disassembling symbol '.LBB11_115':
textAddr: 0x7fffeafcb8b0, textSize: 5
0x7fffeafcb8b0:	jmp		0x7fffeafcbd28
disassembling symbol '.LBB11_116':
textAddr: 0x7fffeafcb8b5, textSize: 177
0x7fffeafcb8b5:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcb8b9:	mov		qword ptr [rbp - 0xd8], rax
0x7fffeafcb8c0:	mov		rax, qword ptr [rbp - 0xd8]
0x7fffeafcb8c7:	mov		rax, qword ptr [rax + 0x30]
0x7fffeafcb8cb:	mov		qword ptr [rbp - 0xe0], rax
0x7fffeafcb8d2:	mov		rax, qword ptr [rbp - 0xd8]
0x7fffeafcb8d9:	mov		rax, qword ptr [rax + 0x18]
0x7fffeafcb8dd:	cmp		rax, qword ptr [rbp - 0xd8]
0x7fffeafcb8e4:	je		0x7fffeafcb9b1
0x7fffeafcb8ea:	xor		eax, eax
0x7fffeafcb8ec:	mov		rcx, qword ptr [rbp - 0xd8]
0x7fffeafcb8f3:	mov		rcx, qword ptr [rcx + 0x10]
0x7fffeafcb8f7:	mov		qword ptr [rbp - 0xf0], rcx
0x7fffeafcb8fe:	mov		rcx, qword ptr [rbp - 0xd8]
0x7fffeafcb905:	mov		rcx, qword ptr [rcx + 0x18]
0x7fffeafcb909:	mov		qword ptr [rbp - 0xe8], rcx
0x7fffeafcb910:	mov		rcx, qword ptr [rbp - 0xf0]
0x7fffeafcb917:	mov		rdx, qword ptr [rbp - 0x20]
0x7fffeafcb91b:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafcb91f:	mov		byte ptr [rbp - 0x17d], al
0x7fffeafcb925:	jb		0x7fffeafcb966
0x7fffeafcb92b:	xor		eax, eax
0x7fffeafcb92d:	mov		rcx, qword ptr [rbp - 0xf0]
0x7fffeafcb934:	mov		rcx, qword ptr [rcx + 0x18]
0x7fffeafcb938:	cmp		rcx, qword ptr [rbp - 0xd8]
0x7fffeafcb93f:	mov		byte ptr [rbp - 0x17d], al
0x7fffeafcb945:	jne		0x7fffeafcb966
0x7fffeafcb94b:	mov		rax, qword ptr [rbp - 0xe8]
0x7fffeafcb952:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafcb956:	cmp		rax, qword ptr [rbp - 0xd8]
0x7fffeafcb95d:	sete		cl
0x7fffeafcb960:	mov		byte ptr [rbp - 0x17d], cl
disassembling symbol '.LBB11_120':
textAddr: 0x7fffeafcb966, textSize: 65
0x7fffeafcb966:	mov		al, byte ptr [rbp - 0x17d]
0x7fffeafcb96c:	and		al, 1
0x7fffeafcb96e:	movzx		ecx, al
0x7fffeafcb971:	movsxd		rdx, ecx
0x7fffeafcb974:	cmp		rdx, 0
0x7fffeafcb978:	je		0x7fffeafcb9a7
0x7fffeafcb97e:	mov		rax, qword ptr [rbp - 0xe8]
0x7fffeafcb985:	mov		rcx, qword ptr [rbp - 0xf0]
0x7fffeafcb98c:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafcb990:	mov		rax, qword ptr [rbp - 0xf0]
0x7fffeafcb997:	mov		rcx, qword ptr [rbp - 0xe8]
0x7fffeafcb99e:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafcb9a2:	jmp		0x7fffeafcb9ac
disassembling symbol '.LBB11_122':
textAddr: 0x7fffeafcb9a7, textSize: 5
0x7fffeafcb9a7:	call		0x7fffeafc4c10
disassembling symbol '.LBB11_123':
textAddr: 0x7fffeafcb9ac, textSize: 5
0x7fffeafcb9ac:	jmp		0x7fffeafcbae6
disassembling symbol '.LBB11_124':
textAddr: 0x7fffeafcb9b1, textSize: 97
0x7fffeafcb9b1:	mov		rax, qword ptr [rbp - 0xd8]
0x7fffeafcb9b8:	mov		rcx, rax
0x7fffeafcb9bb:	add		rcx, 0x20
0x7fffeafcb9c2:	add		rcx, 8
0x7fffeafcb9c9:	mov		qword ptr [rbp - 0xf8], rcx
0x7fffeafcb9d0:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafcb9d4:	mov		qword ptr [rbp - 0xe8], rax
0x7fffeafcb9db:	cmp		rax, 0
0x7fffeafcb9df:	jne		0x7fffeafcba12
0x7fffeafcb9e5:	mov		rax, qword ptr [rbp - 0xd8]
0x7fffeafcb9ec:	mov		rcx, rax
0x7fffeafcb9ef:	add		rcx, 0x20
0x7fffeafcb9f6:	mov		qword ptr [rbp - 0xf8], rcx
0x7fffeafcb9fd:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafcba01:	mov		qword ptr [rbp - 0xe8], rax
0x7fffeafcba08:	cmp		rax, 0
0x7fffeafcba0c:	je		0x7fffeafcbae1
disassembling symbol '.LBB11_126':
textAddr: 0x7fffeafcba12, textSize: 5
0x7fffeafcba12:	jmp		0x7fffeafcba17
disassembling symbol '.LBB11_127':
textAddr: 0x7fffeafcba17, textSize: 88
0x7fffeafcba17:	mov		rax, qword ptr [rbp - 0xe8]
0x7fffeafcba1e:	mov		rcx, rax
0x7fffeafcba21:	add		rcx, 0x20
0x7fffeafcba28:	add		rcx, 8
0x7fffeafcba2f:	mov		qword ptr [rbp - 0x100], rcx
0x7fffeafcba36:	cmp		qword ptr [rax + 0x28], 0
0x7fffeafcba3b:	mov		dl, 1
0x7fffeafcba3d:	mov		byte ptr [rbp - 0x17e], dl
0x7fffeafcba43:	jne		0x7fffeafcba6f
0x7fffeafcba49:	mov		rax, qword ptr [rbp - 0xe8]
0x7fffeafcba50:	mov		rcx, rax
0x7fffeafcba53:	add		rcx, 0x20
0x7fffeafcba5a:	mov		qword ptr [rbp - 0x100], rcx
0x7fffeafcba61:	cmp		qword ptr [rax + 0x20], 0
0x7fffeafcba66:	setne		dl
0x7fffeafcba69:	mov		byte ptr [rbp - 0x17e], dl
disassembling symbol '.LBB11_129':
textAddr: 0x7fffeafcba6f, textSize: 19
0x7fffeafcba6f:	mov		al, byte ptr [rbp - 0x17e]
0x7fffeafcba75:	test		al, 1
0x7fffeafcba77:	jne		0x7fffeafcba82
0x7fffeafcba7d:	jmp		0x7fffeafcba9f
disassembling symbol '.LBB11_130':
textAddr: 0x7fffeafcba82, textSize: 29
0x7fffeafcba82:	mov		rax, qword ptr [rbp - 0x100]
0x7fffeafcba89:	mov		qword ptr [rbp - 0xf8], rax
0x7fffeafcba90:	mov		rax, qword ptr [rax]
0x7fffeafcba93:	mov		qword ptr [rbp - 0xe8], rax
0x7fffeafcba9a:	jmp		0x7fffeafcba17
disassembling symbol '.LBB11_131':
textAddr: 0x7fffeafcba9f, textSize: 56
0x7fffeafcba9f:	mov		rax, qword ptr [rbp - 0xf8]
0x7fffeafcbaa6:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcbaaa:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcbaae:	setae		dl
0x7fffeafcbab1:	and		dl, 1
0x7fffeafcbab4:	movzx		esi, dl
0x7fffeafcbab7:	movsxd		rax, esi
0x7fffeafcbaba:	cmp		rax, 0
0x7fffeafcbabe:	je		0x7fffeafcbad7
0x7fffeafcbac4:	mov		rax, qword ptr [rbp - 0xf8]
0x7fffeafcbacb:	mov		qword ptr [rax], 0
0x7fffeafcbad2:	jmp		0x7fffeafcbadc
disassembling symbol '.LBB11_133':
textAddr: 0x7fffeafcbad7, textSize: 5
0x7fffeafcbad7:	call		0x7fffeafc4c10
disassembling symbol '.LBB11_134':
textAddr: 0x7fffeafcbadc, textSize: 5
0x7fffeafcbadc:	jmp		0x7fffeafcbae1
disassembling symbol '.LBB11_135':
textAddr: 0x7fffeafcbae1, textSize: 5
0x7fffeafcbae1:	jmp		0x7fffeafcbae6
disassembling symbol '.LBB11_136':
textAddr: 0x7fffeafcbae6, textSize: 130
0x7fffeafcbae6:	cmp		qword ptr [rbp - 0xe0], 0
0x7fffeafcbaee:	je		0x7fffeafcbd23
0x7fffeafcbaf4:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcbaf8:	add		rax, 0x258
0x7fffeafcbafe:	mov		rcx, qword ptr [rbp - 0xd8]
0x7fffeafcbb05:	mov		edx, dword ptr [rcx + 0x38]
0x7fffeafcbb08:	mov		ecx, edx
0x7fffeafcbb0a:	shl		rcx, 3
0x7fffeafcbb0e:	add		rax, rcx
0x7fffeafcbb11:	mov		qword ptr [rbp - 0x108], rax
0x7fffeafcbb18:	mov		rax, qword ptr [rbp - 0xd8]
0x7fffeafcbb1f:	mov		rcx, qword ptr [rbp - 0x108]
0x7fffeafcbb26:	cmp		rax, qword ptr [rcx]
0x7fffeafcbb29:	jne		0x7fffeafcbb6d
0x7fffeafcbb2f:	mov		rax, qword ptr [rbp - 0xe8]
0x7fffeafcbb36:	mov		rcx, qword ptr [rbp - 0x108]
0x7fffeafcbb3d:	mov		qword ptr [rcx], rax
0x7fffeafcbb40:	cmp		rax, 0
0x7fffeafcbb44:	jne		0x7fffeafcbb68
0x7fffeafcbb4a:	mov		rax, qword ptr [rbp - 0xd8]
0x7fffeafcbb51:	mov		ecx, dword ptr [rax + 0x38]
0x7fffeafcbb54:	mov		edx, 1
0x7fffeafcbb59:	shl		edx, cl
0x7fffeafcbb5b:	xor		edx, 0xffffffff
0x7fffeafcbb5e:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcbb62:	and		edx, dword ptr [rax + 4]
0x7fffeafcbb65:	mov		dword ptr [rax + 4], edx
disassembling symbol '.LBB11_140':
textAddr: 0x7fffeafcbb68, textSize: 5
0x7fffeafcbb68:	jmp		0x7fffeafcbbe2
disassembling symbol '.LBB11_141':
textAddr: 0x7fffeafcbb6d, textSize: 84
0x7fffeafcbb6d:	mov		rax, qword ptr [rbp - 0xe0]
0x7fffeafcbb74:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcbb78:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcbb7c:	setae		dl
0x7fffeafcbb7f:	and		dl, 1
0x7fffeafcbb82:	movzx		esi, dl
0x7fffeafcbb85:	movsxd		rax, esi
0x7fffeafcbb88:	cmp		rax, 0
0x7fffeafcbb8c:	je		0x7fffeafcbbd8
0x7fffeafcbb92:	mov		rax, qword ptr [rbp - 0xe0]
0x7fffeafcbb99:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafcbb9d:	cmp		rax, qword ptr [rbp - 0xd8]
0x7fffeafcbba4:	jne		0x7fffeafcbbc1
0x7fffeafcbbaa:	mov		rax, qword ptr [rbp - 0xe8]
0x7fffeafcbbb1:	mov		rcx, qword ptr [rbp - 0xe0]
0x7fffeafcbbb8:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafcbbbc:	jmp		0x7fffeafcbbd3
disassembling symbol '.LBB11_144':
textAddr: 0x7fffeafcbbc1, textSize: 18
0x7fffeafcbbc1:	mov		rax, qword ptr [rbp - 0xe8]
0x7fffeafcbbc8:	mov		rcx, qword ptr [rbp - 0xe0]
0x7fffeafcbbcf:	mov		qword ptr [rcx + 0x28], rax
disassembling symbol '.LBB11_145':
textAddr: 0x7fffeafcbbd3, textSize: 5
0x7fffeafcbbd3:	jmp		0x7fffeafcbbdd
disassembling symbol '.LBB11_146':
textAddr: 0x7fffeafcbbd8, textSize: 5
0x7fffeafcbbd8:	call		0x7fffeafc4c10
disassembling symbol '.LBB11_147':
textAddr: 0x7fffeafcbbdd, textSize: 5
0x7fffeafcbbdd:	jmp		0x7fffeafcbbe2
disassembling symbol '.LBB11_148':
textAddr: 0x7fffeafcbbe2, textSize: 175
0x7fffeafcbbe2:	cmp		qword ptr [rbp - 0xe8], 0
0x7fffeafcbbea:	je		0x7fffeafcbd1e
0x7fffeafcbbf0:	mov		rax, qword ptr [rbp - 0xe8]
0x7fffeafcbbf7:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcbbfb:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcbbff:	setae		dl
0x7fffeafcbc02:	and		dl, 1
0x7fffeafcbc05:	movzx		esi, dl
0x7fffeafcbc08:	movsxd		rax, esi
0x7fffeafcbc0b:	cmp		rax, 0
0x7fffeafcbc0f:	je		0x7fffeafcbd14
0x7fffeafcbc15:	mov		rax, qword ptr [rbp - 0xe0]
0x7fffeafcbc1c:	mov		rcx, qword ptr [rbp - 0xe8]
0x7fffeafcbc23:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafcbc27:	mov		rax, qword ptr [rbp - 0xd8]
0x7fffeafcbc2e:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafcbc32:	mov		qword ptr [rbp - 0x110], rax
0x7fffeafcbc39:	cmp		rax, 0
0x7fffeafcbc3d:	je		0x7fffeafcbc9b
0x7fffeafcbc43:	mov		rax, qword ptr [rbp - 0x110]
0x7fffeafcbc4a:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcbc4e:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcbc52:	setae		dl
0x7fffeafcbc55:	and		dl, 1
0x7fffeafcbc58:	movzx		esi, dl
0x7fffeafcbc5b:	movsxd		rax, esi
0x7fffeafcbc5e:	cmp		rax, 0
0x7fffeafcbc62:	je		0x7fffeafcbc91
0x7fffeafcbc68:	mov		rax, qword ptr [rbp - 0x110]
0x7fffeafcbc6f:	mov		rcx, qword ptr [rbp - 0xe8]
0x7fffeafcbc76:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafcbc7a:	mov		rax, qword ptr [rbp - 0xe8]
0x7fffeafcbc81:	mov		rcx, qword ptr [rbp - 0x110]
0x7fffeafcbc88:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafcbc8c:	jmp		0x7fffeafcbc96
disassembling symbol '.LBB11_153':
textAddr: 0x7fffeafcbc91, textSize: 5
0x7fffeafcbc91:	call		0x7fffeafc4c10
disassembling symbol '.LBB11_154':
textAddr: 0x7fffeafcbc96, textSize: 5
0x7fffeafcbc96:	jmp		0x7fffeafcbc9b
disassembling symbol '.LBB11_155':
textAddr: 0x7fffeafcbc9b, textSize: 106
0x7fffeafcbc9b:	mov		rax, qword ptr [rbp - 0xd8]
0x7fffeafcbca2:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafcbca6:	mov		qword ptr [rbp - 0x118], rax
0x7fffeafcbcad:	cmp		rax, 0
0x7fffeafcbcb1:	je		0x7fffeafcbd0f
0x7fffeafcbcb7:	mov		rax, qword ptr [rbp - 0x118]
0x7fffeafcbcbe:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcbcc2:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcbcc6:	setae		dl
0x7fffeafcbcc9:	and		dl, 1
0x7fffeafcbccc:	movzx		esi, dl
0x7fffeafcbccf:	movsxd		rax, esi
0x7fffeafcbcd2:	cmp		rax, 0
0x7fffeafcbcd6:	je		0x7fffeafcbd05
0x7fffeafcbcdc:	mov		rax, qword ptr [rbp - 0x118]
0x7fffeafcbce3:	mov		rcx, qword ptr [rbp - 0xe8]
0x7fffeafcbcea:	mov		qword ptr [rcx + 0x28], rax
0x7fffeafcbcee:	mov		rax, qword ptr [rbp - 0xe8]
0x7fffeafcbcf5:	mov		rcx, qword ptr [rbp - 0x118]
0x7fffeafcbcfc:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafcbd00:	jmp		0x7fffeafcbd0a
disassembling symbol '.LBB11_158':
textAddr: 0x7fffeafcbd05, textSize: 5
0x7fffeafcbd05:	call		0x7fffeafc4c10
disassembling symbol '.LBB11_159':
textAddr: 0x7fffeafcbd0a, textSize: 5
0x7fffeafcbd0a:	jmp		0x7fffeafcbd0f
disassembling symbol '.LBB11_160':
textAddr: 0x7fffeafcbd0f, textSize: 5
0x7fffeafcbd0f:	jmp		0x7fffeafcbd19
disassembling symbol '.LBB11_161':
textAddr: 0x7fffeafcbd14, textSize: 5
0x7fffeafcbd14:	call		0x7fffeafc4c10
disassembling symbol '.LBB11_162':
textAddr: 0x7fffeafcbd19, textSize: 5
0x7fffeafcbd19:	jmp		0x7fffeafcbd1e
disassembling symbol '.LBB11_163':
textAddr: 0x7fffeafcbd1e, textSize: 5
0x7fffeafcbd1e:	jmp		0x7fffeafcbd23
disassembling symbol '.LBB11_164':
textAddr: 0x7fffeafcbd23, textSize: 5
0x7fffeafcbd23:	jmp		0x7fffeafcbd28
disassembling symbol '.LBB11_165':
textAddr: 0x7fffeafcbd28, textSize: 69
0x7fffeafcbd28:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcbd2c:	or		rax, 1
0x7fffeafcbd32:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafcbd36:	mov		qword ptr [rcx + 8], rax
0x7fffeafcbd3a:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcbd3e:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafcbd42:	mov		rdx, qword ptr [rbp - 0x28]
0x7fffeafcbd46:	mov		qword ptr [rcx + rdx], rax
0x7fffeafcbd4a:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcbd4e:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcbd52:	cmp		rax, qword ptr [rcx + 0x20]
0x7fffeafcbd56:	jne		0x7fffeafcbd6d
0x7fffeafcbd5c:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcbd60:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcbd64:	mov		qword ptr [rcx + 8], rax
0x7fffeafcbd68:	jmp		0x7fffeafcc2af
disassembling symbol '.LBB11_167':
textAddr: 0x7fffeafcbd6d, textSize: 5
0x7fffeafcbd6d:	jmp		0x7fffeafcbd72
disassembling symbol '.LBB11_168':
textAddr: 0x7fffeafcbd72, textSize: 5
0x7fffeafcbd72:	jmp		0x7fffeafcbd77
disassembling symbol '.LBB11_169':
textAddr: 0x7fffeafcbd77, textSize: 5
0x7fffeafcbd77:	jmp		0x7fffeafcbdb1
disassembling symbol '.LBB11_170':
textAddr: 0x7fffeafcbd7c, textSize: 53
0x7fffeafcbd7c:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcbd80:	mov		rcx, qword ptr [rax + 8]
0x7fffeafcbd84:	and		rcx, 0xfffffffffffffffe
0x7fffeafcbd8b:	mov		qword ptr [rax + 8], rcx
0x7fffeafcbd8f:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcbd93:	or		rax, 1
0x7fffeafcbd99:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafcbd9d:	mov		qword ptr [rcx + 8], rax
0x7fffeafcbda1:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcbda5:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafcbda9:	mov		rdx, qword ptr [rbp - 0x28]
0x7fffeafcbdad:	mov		qword ptr [rcx + rdx], rax
disassembling symbol '.LBB11_171':
textAddr: 0x7fffeafcbdb1, textSize: 140
0x7fffeafcbdb1:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcbdb5:	shr		rax, 3
0x7fffeafcbdb9:	cmp		rax, 0x20
0x7fffeafcbdbd:	jae		0x7fffeafcbec8
0x7fffeafcbdc3:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcbdc7:	shr		rax, 3
0x7fffeafcbdcb:	mov		dword ptr [rbp - 0x11c], eax
0x7fffeafcbdd1:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcbdd5:	add		rcx, 0x48
0x7fffeafcbddc:	mov		eax, dword ptr [rbp - 0x11c]
0x7fffeafcbde2:	shl		eax, 1
0x7fffeafcbde5:	mov		eax, eax
0x7fffeafcbde7:	mov		edx, eax
0x7fffeafcbde9:	shl		rdx, 3
0x7fffeafcbded:	add		rcx, rdx
0x7fffeafcbdf0:	mov		qword ptr [rbp - 0x128], rcx
0x7fffeafcbdf7:	mov		rcx, qword ptr [rbp - 0x128]
0x7fffeafcbdfe:	mov		qword ptr [rbp - 0x130], rcx
0x7fffeafcbe05:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcbe09:	mov		eax, dword ptr [rcx]
0x7fffeafcbe0b:	mov		ecx, dword ptr [rbp - 0x11c]
0x7fffeafcbe11:	mov		esi, 1
0x7fffeafcbe16:	shl		esi, cl
0x7fffeafcbe18:	and		eax, esi
0x7fffeafcbe1a:	cmp		eax, 0
0x7fffeafcbe1d:	jne		0x7fffeafcbe3d
0x7fffeafcbe23:	mov		ecx, dword ptr [rbp - 0x11c]
0x7fffeafcbe29:	mov		eax, 1
0x7fffeafcbe2e:	shl		eax, cl
0x7fffeafcbe30:	mov		rdx, qword ptr [rbp - 0x20]
0x7fffeafcbe34:	or		eax, dword ptr [rdx]
0x7fffeafcbe36:	mov		dword ptr [rdx], eax
0x7fffeafcbe38:	jmp		0x7fffeafcbe87
disassembling symbol '.LBB11_174':
textAddr: 0x7fffeafcbe3d, textSize: 64
0x7fffeafcbe3d:	mov		rax, qword ptr [rbp - 0x128]
0x7fffeafcbe44:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafcbe48:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcbe4c:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcbe50:	setae		dl
0x7fffeafcbe53:	and		dl, 1
0x7fffeafcbe56:	movzx		esi, dl
0x7fffeafcbe59:	movsxd		rax, esi
0x7fffeafcbe5c:	cmp		rax, 0
0x7fffeafcbe60:	je		0x7fffeafcbe7d
0x7fffeafcbe66:	mov		rax, qword ptr [rbp - 0x128]
0x7fffeafcbe6d:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafcbe71:	mov		qword ptr [rbp - 0x130], rax
0x7fffeafcbe78:	jmp		0x7fffeafcbe82
disassembling symbol '.LBB11_176':
textAddr: 0x7fffeafcbe7d, textSize: 5
0x7fffeafcbe7d:	call		0x7fffeafc4c10
disassembling symbol '.LBB11_177':
textAddr: 0x7fffeafcbe82, textSize: 5
0x7fffeafcbe82:	jmp		0x7fffeafcbe87
disassembling symbol '.LBB11_178':
textAddr: 0x7fffeafcbe87, textSize: 65
0x7fffeafcbe87:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcbe8b:	mov		rcx, qword ptr [rbp - 0x128]
0x7fffeafcbe92:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafcbe96:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcbe9a:	mov		rcx, qword ptr [rbp - 0x130]
0x7fffeafcbea1:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafcbea5:	mov		rax, qword ptr [rbp - 0x130]
0x7fffeafcbeac:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafcbeb0:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafcbeb4:	mov		rax, qword ptr [rbp - 0x128]
0x7fffeafcbebb:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafcbebf:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafcbec3:	jmp		0x7fffeafcc29b
disassembling symbol '.LBB11_179':
textAddr: 0x7fffeafcbec8, textSize: 53
0x7fffeafcbec8:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcbecc:	mov		qword ptr [rbp - 0x138], rax
0x7fffeafcbed3:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcbed7:	shr		rax, 8
0x7fffeafcbedb:	mov		dword ptr [rbp - 0x148], eax
0x7fffeafcbee1:	cmp		dword ptr [rbp - 0x148], 0
0x7fffeafcbee8:	jne		0x7fffeafcbefd
0x7fffeafcbeee:	mov		dword ptr [rbp - 0x144], 0
0x7fffeafcbef8:	jmp		0x7fffeafcbf6b
disassembling symbol '.LBB11_181':
textAddr: 0x7fffeafcbefd, textSize: 31
0x7fffeafcbefd:	cmp		dword ptr [rbp - 0x148], 0xffff
0x7fffeafcbf07:	jbe		0x7fffeafcbf1c
0x7fffeafcbf0d:	mov		dword ptr [rbp - 0x144], 0x1f
0x7fffeafcbf17:	jmp		0x7fffeafcbf66
disassembling symbol '.LBB11_183':
textAddr: 0x7fffeafcbf1c, textSize: 74
0x7fffeafcbf1c:	mov		eax, dword ptr [rbp - 0x148]
0x7fffeafcbf22:	bsr		eax, eax
0x7fffeafcbf25:	xor		eax, 0x1f
0x7fffeafcbf28:	mov		ecx, 0x1f
0x7fffeafcbf2d:	sub		ecx, eax
0x7fffeafcbf2f:	mov		dword ptr [rbp - 0x14c], ecx
0x7fffeafcbf35:	mov		eax, dword ptr [rbp - 0x14c]
0x7fffeafcbf3b:	shl		eax, 1
0x7fffeafcbf3e:	mov		eax, eax
0x7fffeafcbf40:	mov		edx, eax
0x7fffeafcbf42:	mov		rsi, qword ptr [rbp - 0x28]
0x7fffeafcbf46:	mov		eax, dword ptr [rbp - 0x14c]
0x7fffeafcbf4c:	add		eax, 7
0x7fffeafcbf4f:	mov		eax, eax
0x7fffeafcbf51:	mov		ecx, eax
0x7fffeafcbf53:	shr		rsi, cl
0x7fffeafcbf56:	and		rsi, 1
0x7fffeafcbf5d:	add		rdx, rsi
0x7fffeafcbf60:	mov		dword ptr [rbp - 0x144], edx
disassembling symbol '.LBB11_184':
textAddr: 0x7fffeafcbf66, textSize: 5
0x7fffeafcbf66:	jmp		0x7fffeafcbf6b
disassembling symbol '.LBB11_185':
textAddr: 0x7fffeafcbf6b, textSize: 215
0x7fffeafcbf6b:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcbf6f:	add		rax, 0x258
0x7fffeafcbf75:	mov		ecx, dword ptr [rbp - 0x144]
0x7fffeafcbf7b:	mov		edx, ecx
0x7fffeafcbf7d:	shl		rdx, 3
0x7fffeafcbf81:	add		rax, rdx
0x7fffeafcbf84:	mov		qword ptr [rbp - 0x140], rax
0x7fffeafcbf8b:	mov		ecx, dword ptr [rbp - 0x144]
0x7fffeafcbf91:	mov		rax, qword ptr [rbp - 0x138]
0x7fffeafcbf98:	mov		dword ptr [rax + 0x38], ecx
0x7fffeafcbf9b:	mov		rax, qword ptr [rbp - 0x138]
0x7fffeafcbfa2:	mov		qword ptr [rax + 0x28], 0
0x7fffeafcbfaa:	mov		rax, qword ptr [rbp - 0x138]
0x7fffeafcbfb1:	mov		qword ptr [rax + 0x20], 0
0x7fffeafcbfb9:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcbfbd:	mov		ecx, dword ptr [rax + 4]
0x7fffeafcbfc0:	mov		esi, dword ptr [rbp - 0x144]
0x7fffeafcbfc6:	mov		dword ptr [rbp - 0x184], ecx
0x7fffeafcbfcc:	mov		ecx, esi
0x7fffeafcbfce:	mov		esi, 1
0x7fffeafcbfd3:	shl		esi, cl
0x7fffeafcbfd5:	mov		edi, dword ptr [rbp - 0x184]
0x7fffeafcbfdb:	and		edi, esi
0x7fffeafcbfdd:	cmp		edi, 0
0x7fffeafcbfe0:	jne		0x7fffeafcc042
0x7fffeafcbfe6:	mov		ecx, dword ptr [rbp - 0x144]
0x7fffeafcbfec:	mov		eax, 1
0x7fffeafcbff1:	shl		eax, cl
0x7fffeafcbff3:	mov		rdx, qword ptr [rbp - 0x20]
0x7fffeafcbff7:	or		eax, dword ptr [rdx + 4]
0x7fffeafcbffa:	mov		dword ptr [rdx + 4], eax
0x7fffeafcbffd:	mov		rdx, qword ptr [rbp - 0x138]
0x7fffeafcc004:	mov		rsi, qword ptr [rbp - 0x140]
0x7fffeafcc00b:	mov		qword ptr [rsi], rdx
0x7fffeafcc00e:	mov		rdx, qword ptr [rbp - 0x140]
0x7fffeafcc015:	mov		rsi, qword ptr [rbp - 0x138]
0x7fffeafcc01c:	mov		qword ptr [rsi + 0x30], rdx
0x7fffeafcc020:	mov		rdx, qword ptr [rbp - 0x138]
0x7fffeafcc027:	mov		rsi, qword ptr [rbp - 0x138]
0x7fffeafcc02e:	mov		qword ptr [rsi + 0x18], rdx
0x7fffeafcc032:	mov		rsi, qword ptr [rbp - 0x138]
0x7fffeafcc039:	mov		qword ptr [rsi + 0x10], rdx
0x7fffeafcc03d:	jmp		0x7fffeafcc270
disassembling symbol '.LBB11_187':
textAddr: 0x7fffeafcc042, textSize: 57
0x7fffeafcc042:	mov		rax, qword ptr [rbp - 0x140]
0x7fffeafcc049:	mov		rax, qword ptr [rax]
0x7fffeafcc04c:	mov		qword ptr [rbp - 0x158], rax
0x7fffeafcc053:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcc057:	cmp		dword ptr [rbp - 0x144], 0x1f
0x7fffeafcc05e:	mov		qword ptr [rbp - 0x190], rax
0x7fffeafcc065:	jne		0x7fffeafcc07b
0x7fffeafcc06b:	xor		eax, eax
0x7fffeafcc06d:	mov		ecx, eax
0x7fffeafcc06f:	mov		qword ptr [rbp - 0x198], rcx
0x7fffeafcc076:	jmp		0x7fffeafcc09d
disassembling symbol '.LBB11_189':
textAddr: 0x7fffeafcc07b, textSize: 34
0x7fffeafcc07b:	mov		eax, dword ptr [rbp - 0x144]
0x7fffeafcc081:	shr		eax, 1
0x7fffeafcc084:	add		eax, 8
0x7fffeafcc087:	sub		eax, 2
0x7fffeafcc08a:	mov		eax, eax
0x7fffeafcc08c:	mov		ecx, eax
0x7fffeafcc08e:	mov		edx, 0x3f
0x7fffeafcc093:	sub		rdx, rcx
0x7fffeafcc096:	mov		qword ptr [rbp - 0x198], rdx
disassembling symbol '.LBB11_190':
textAddr: 0x7fffeafcc09d, textSize: 27
0x7fffeafcc09d:	mov		rax, qword ptr [rbp - 0x198]
0x7fffeafcc0a4:	mov		rcx, rax
0x7fffeafcc0a7:	mov		rax, qword ptr [rbp - 0x190]
0x7fffeafcc0ae:	shl		rax, cl
0x7fffeafcc0b1:	mov		qword ptr [rbp - 0x160], rax
disassembling symbol '.LBB11_191':
textAddr: 0x7fffeafcc0b8, textSize: 129
0x7fffeafcc0b8:	mov		rax, qword ptr [rbp - 0x158]
0x7fffeafcc0bf:	mov		rax, qword ptr [rax + 8]
0x7fffeafcc0c3:	and		rax, 0xfffffffffffffff8
0x7fffeafcc0c9:	cmp		rax, qword ptr [rbp - 0x28]
0x7fffeafcc0cd:	je		0x7fffeafcc1ad
0x7fffeafcc0d3:	mov		rax, qword ptr [rbp - 0x158]
0x7fffeafcc0da:	add		rax, 0x20
0x7fffeafcc0e0:	mov		rcx, qword ptr [rbp - 0x160]
0x7fffeafcc0e7:	shr		rcx, 0x3f
0x7fffeafcc0eb:	and		rcx, 1
0x7fffeafcc0f2:	shl		rcx, 3
0x7fffeafcc0f6:	add		rax, rcx
0x7fffeafcc0f9:	mov		qword ptr [rbp - 0x168], rax
0x7fffeafcc100:	mov		rax, qword ptr [rbp - 0x160]
0x7fffeafcc107:	shl		rax, 1
0x7fffeafcc10b:	mov		qword ptr [rbp - 0x160], rax
0x7fffeafcc112:	mov		rax, qword ptr [rbp - 0x168]
0x7fffeafcc119:	cmp		qword ptr [rax], 0
0x7fffeafcc11d:	je		0x7fffeafcc139
0x7fffeafcc123:	mov		rax, qword ptr [rbp - 0x168]
0x7fffeafcc12a:	mov		rax, qword ptr [rax]
0x7fffeafcc12d:	mov		qword ptr [rbp - 0x158], rax
0x7fffeafcc134:	jmp		0x7fffeafcc1a8
disassembling symbol '.LBB11_194':
textAddr: 0x7fffeafcc139, textSize: 106
0x7fffeafcc139:	mov		rax, qword ptr [rbp - 0x168]
0x7fffeafcc140:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcc144:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcc148:	setae		dl
0x7fffeafcc14b:	and		dl, 1
0x7fffeafcc14e:	movzx		esi, dl
0x7fffeafcc151:	movsxd		rax, esi
0x7fffeafcc154:	cmp		rax, 0
0x7fffeafcc158:	je		0x7fffeafcc1a3
0x7fffeafcc15e:	mov		rax, qword ptr [rbp - 0x138]
0x7fffeafcc165:	mov		rcx, qword ptr [rbp - 0x168]
0x7fffeafcc16c:	mov		qword ptr [rcx], rax
0x7fffeafcc16f:	mov		rax, qword ptr [rbp - 0x158]
0x7fffeafcc176:	mov		rcx, qword ptr [rbp - 0x138]
0x7fffeafcc17d:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafcc181:	mov		rax, qword ptr [rbp - 0x138]
0x7fffeafcc188:	mov		rcx, qword ptr [rbp - 0x138]
0x7fffeafcc18f:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafcc193:	mov		rcx, qword ptr [rbp - 0x138]
0x7fffeafcc19a:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafcc19e:	jmp		0x7fffeafcc26b
disassembling symbol '.LBB11_196':
textAddr: 0x7fffeafcc1a3, textSize: 5
0x7fffeafcc1a3:	call		0x7fffeafc4c10
disassembling symbol '.LBB11_197':
textAddr: 0x7fffeafcc1a8, textSize: 5
0x7fffeafcc1a8:	jmp		0x7fffeafcc266
disassembling symbol '.LBB11_198':
textAddr: 0x7fffeafcc1ad, textSize: 71
0x7fffeafcc1ad:	xor		eax, eax
0x7fffeafcc1af:	mov		rcx, qword ptr [rbp - 0x158]
0x7fffeafcc1b6:	mov		rcx, qword ptr [rcx + 0x10]
0x7fffeafcc1ba:	mov		qword ptr [rbp - 0x170], rcx
0x7fffeafcc1c1:	mov		rcx, qword ptr [rbp - 0x158]
0x7fffeafcc1c8:	mov		rdx, qword ptr [rbp - 0x20]
0x7fffeafcc1cc:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafcc1d0:	mov		byte ptr [rbp - 0x199], al
0x7fffeafcc1d6:	jb		0x7fffeafcc1f4
0x7fffeafcc1dc:	mov		rax, qword ptr [rbp - 0x170]
0x7fffeafcc1e3:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcc1e7:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcc1eb:	setae		dl
0x7fffeafcc1ee:	mov		byte ptr [rbp - 0x199], dl
disassembling symbol '.LBB11_200':
textAddr: 0x7fffeafcc1f4, textSize: 109
0x7fffeafcc1f4:	mov		al, byte ptr [rbp - 0x199]
0x7fffeafcc1fa:	and		al, 1
0x7fffeafcc1fc:	movzx		ecx, al
0x7fffeafcc1ff:	movsxd		rdx, ecx
0x7fffeafcc202:	cmp		rdx, 0
0x7fffeafcc206:	je		0x7fffeafcc261
0x7fffeafcc20c:	mov		rax, qword ptr [rbp - 0x138]
0x7fffeafcc213:	mov		rcx, qword ptr [rbp - 0x170]
0x7fffeafcc21a:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafcc21e:	mov		rcx, qword ptr [rbp - 0x158]
0x7fffeafcc225:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafcc229:	mov		rax, qword ptr [rbp - 0x170]
0x7fffeafcc230:	mov		rcx, qword ptr [rbp - 0x138]
0x7fffeafcc237:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafcc23b:	mov		rax, qword ptr [rbp - 0x158]
0x7fffeafcc242:	mov		rcx, qword ptr [rbp - 0x138]
0x7fffeafcc249:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafcc24d:	mov		rax, qword ptr [rbp - 0x138]
0x7fffeafcc254:	mov		qword ptr [rax + 0x30], 0
0x7fffeafcc25c:	jmp		0x7fffeafcc26b
disassembling symbol '.LBB11_202':
textAddr: 0x7fffeafcc261, textSize: 5
0x7fffeafcc261:	call		0x7fffeafc4c10
disassembling symbol '.LBB11_203':
textAddr: 0x7fffeafcc266, textSize: 5
0x7fffeafcc266:	jmp		0x7fffeafcc0b8
disassembling symbol '.LBB11_204':
textAddr: 0x7fffeafcc26b, textSize: 5
0x7fffeafcc26b:	jmp		0x7fffeafcc270
disassembling symbol '.LBB11_205':
textAddr: 0x7fffeafcc270, textSize: 38
0x7fffeafcc270:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcc274:	mov		rcx, qword ptr [rax + 0x38]
0x7fffeafcc278:	add		rcx, -1
0x7fffeafcc27f:	mov		qword ptr [rax + 0x38], rcx
0x7fffeafcc283:	cmp		rcx, 0
0x7fffeafcc287:	jne		0x7fffeafcc296
0x7fffeafcc28d:	mov		rdi, qword ptr [rbp - 0x20]
0x7fffeafcc291:	call		0x7fffeafcc470
disassembling symbol '.LBB11_207':
textAddr: 0x7fffeafcc296, textSize: 5
0x7fffeafcc296:	jmp		0x7fffeafcc29b
disassembling symbol '.LBB11_208':
textAddr: 0x7fffeafcc29b, textSize: 5
0x7fffeafcc29b:	jmp		0x7fffeafcc2af
disassembling symbol '.LBB11_209':
textAddr: 0x7fffeafcc2a0, textSize: 5
0x7fffeafcc2a0:	jmp		0x7fffeafcc2a5
disassembling symbol '.LBB11_210':
textAddr: 0x7fffeafcc2a5, textSize: 5
0x7fffeafcc2a5:	jmp		0x7fffeafcc2aa
disassembling symbol '.LBB11_211':
textAddr: 0x7fffeafcc2aa, textSize: 5
0x7fffeafcc2aa:	call		0x7fffeafc4c10
disassembling symbol '.LBB11_212':
textAddr: 0x7fffeafcc2af, textSize: 5
0x7fffeafcc2af:	jmp		0x7fffeafcc2b4
disassembling symbol '.LBB11_213':
textAddr: 0x7fffeafcc2b4, textSize: 12
0x7fffeafcc2b4:	add		rsp, 0x1a0
0x7fffeafcc2bb:	pop		rbp
0x7fffeafcc2bc:	ret		
0x7fffeafcc2bd:	nop		dword ptr [rax]
disassembling symbol 'sys_trim':
textAddr: 0x7fffeafcc2c0, textSize: 432
0x7fffeafcc2c0:	push		rbp
0x7fffeafcc2c1:	mov		rbp, rsp
0x7fffeafcc2c4:	sub		rsp, 0x40
0x7fffeafcc2c8:	mov		qword ptr [rbp - 8], rdi
0x7fffeafcc2cc:	mov		qword ptr [rbp - 0x10], rsi
0x7fffeafcc2d0:	mov		qword ptr [rbp - 0x18], 0
0x7fffeafcc2d8:	cmp		qword ptr [rip + 0x2c1eb48], 0
0x7fffeafcc2e0:	mov		al, 1
0x7fffeafcc2e2:	mov		byte ptr [rbp - 0x31], al
0x7fffeafcc2e5:	jne		0x7fffeafcc2f9
0x7fffeafcc2eb:	call		0x7fffeafc8870
0x7fffeafcc2f0:	cmp		eax, 0
0x7fffeafcc2f3:	setne		cl
0x7fffeafcc2f6:	mov		byte ptr [rbp - 0x31], cl
0x7fffeafcc2f9:	mov		al, byte ptr [rbp - 0x31]
0x7fffeafcc2fc:	cmp		qword ptr [rbp - 0x10], -0x80
0x7fffeafcc301:	jae		0x7fffeafcc454
0x7fffeafcc307:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcc30b:	cmp		qword ptr [rax + 0x28], 0
0x7fffeafcc310:	je		0x7fffeafcc454
0x7fffeafcc316:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcc31a:	add		rax, 0x50
0x7fffeafcc320:	mov		qword ptr [rbp - 0x10], rax
0x7fffeafcc324:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcc328:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafcc32c:	cmp		rax, qword ptr [rbp - 0x10]
0x7fffeafcc330:	jbe		0x7fffeafcc422
0x7fffeafcc336:	mov		rax, qword ptr [rip + 0x2c1eafb]
0x7fffeafcc33d:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafcc341:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcc345:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafcc349:	sub		rax, qword ptr [rbp - 0x10]
0x7fffeafcc34d:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcc351:	sub		rcx, 1
0x7fffeafcc358:	add		rax, rcx
0x7fffeafcc35b:	xor		edx, edx
0x7fffeafcc35d:	div		qword ptr [rbp - 0x20]
0x7fffeafcc361:	sub		rax, 1
0x7fffeafcc367:	imul		rax, qword ptr [rbp - 0x20]
0x7fffeafcc36c:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafcc370:	mov		rdi, qword ptr [rbp - 8]
0x7fffeafcc374:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcc378:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafcc37c:	mov		rsi, rax
0x7fffeafcc37f:	call		0x7fffeafd0ec0
0x7fffeafcc384:	mov		qword ptr [rbp - 0x30], rax
0x7fffeafcc388:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcc38c:	mov		r8d, dword ptr [rax + 0x18]
0x7fffeafcc390:	and		r8d, 8
0x7fffeafcc394:	cmp		r8d, 0
0x7fffeafcc398:	jne		0x7fffeafcc3c6
0x7fffeafcc39e:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcc3a2:	mov		ecx, dword ptr [rax + 0x18]
0x7fffeafcc3a5:	mov		eax, ecx
0x7fffeafcc3a7:	and		rax, 0
0x7fffeafcc3ad:	cmp		rax, 0
0x7fffeafcc3b1:	je		0x7fffeafcc3bc
0x7fffeafcc3b7:	jmp		0x7fffeafcc3c1
0x7fffeafcc3bc:	jmp		0x7fffeafcc3c1
0x7fffeafcc3c1:	jmp		0x7fffeafcc3c6
0x7fffeafcc3c6:	cmp		qword ptr [rbp - 0x18], 0
0x7fffeafcc3cb:	je		0x7fffeafcc41d
0x7fffeafcc3d1:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcc3d5:	mov		rcx, qword ptr [rbp - 0x30]
0x7fffeafcc3d9:	mov		rdx, qword ptr [rcx + 8]
0x7fffeafcc3dd:	sub		rdx, rax
0x7fffeafcc3e0:	mov		qword ptr [rcx + 8], rdx
0x7fffeafcc3e4:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcc3e8:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcc3ec:	mov		rdx, qword ptr [rcx + 0x358]
0x7fffeafcc3f3:	sub		rdx, rax
0x7fffeafcc3f6:	mov		qword ptr [rcx + 0x358], rdx
0x7fffeafcc3fd:	mov		rdi, qword ptr [rbp - 8]
0x7fffeafcc401:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcc405:	mov		rsi, qword ptr [rax + 0x28]
0x7fffeafcc409:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcc40d:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafcc411:	sub		rax, qword ptr [rbp - 0x18]
0x7fffeafcc415:	mov		rdx, rax
0x7fffeafcc418:	call		0x7fffeafcf6f0
0x7fffeafcc41d:	jmp		0x7fffeafcc422
0x7fffeafcc422:	cmp		qword ptr [rbp - 0x18], 0
0x7fffeafcc427:	jne		0x7fffeafcc44f
0x7fffeafcc42d:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcc431:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafcc435:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcc439:	cmp		rax, qword ptr [rcx + 0x30]
0x7fffeafcc43d:	jbe		0x7fffeafcc44f
0x7fffeafcc443:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcc447:	mov		qword ptr [rax + 0x30], -1
0x7fffeafcc44f:	jmp		0x7fffeafcc454
0x7fffeafcc454:	xor		eax, eax
0x7fffeafcc456:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafcc45a:	cmp		rcx, 0
0x7fffeafcc45e:	mov		edx, 1
0x7fffeafcc463:	cmovne		eax, edx
0x7fffeafcc466:	add		rsp, 0x40
0x7fffeafcc46a:	pop		rbp
0x7fffeafcc46b:	ret		
0x7fffeafcc46c:	nop		dword ptr [rax]
disassembling symbol '.LBB12_2':
textAddr: 0x7fffeafcc2f9, textSize: 195
0x7fffeafcc2f9:	mov		al, byte ptr [rbp - 0x31]
0x7fffeafcc2fc:	cmp		qword ptr [rbp - 0x10], -0x80
0x7fffeafcc301:	jae		0x7fffeafcc454
0x7fffeafcc307:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcc30b:	cmp		qword ptr [rax + 0x28], 0
0x7fffeafcc310:	je		0x7fffeafcc454
0x7fffeafcc316:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcc31a:	add		rax, 0x50
0x7fffeafcc320:	mov		qword ptr [rbp - 0x10], rax
0x7fffeafcc324:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcc328:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafcc32c:	cmp		rax, qword ptr [rbp - 0x10]
0x7fffeafcc330:	jbe		0x7fffeafcc422
0x7fffeafcc336:	mov		rax, qword ptr [rip + 0x2c1eafb]
0x7fffeafcc33d:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafcc341:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcc345:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafcc349:	sub		rax, qword ptr [rbp - 0x10]
0x7fffeafcc34d:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcc351:	sub		rcx, 1
0x7fffeafcc358:	add		rax, rcx
0x7fffeafcc35b:	xor		edx, edx
0x7fffeafcc35d:	div		qword ptr [rbp - 0x20]
0x7fffeafcc361:	sub		rax, 1
0x7fffeafcc367:	imul		rax, qword ptr [rbp - 0x20]
0x7fffeafcc36c:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafcc370:	mov		rdi, qword ptr [rbp - 8]
0x7fffeafcc374:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcc378:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafcc37c:	mov		rsi, rax
0x7fffeafcc37f:	call		0x7fffeafd0ec0
0x7fffeafcc384:	mov		qword ptr [rbp - 0x30], rax
0x7fffeafcc388:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcc38c:	mov		r8d, dword ptr [rax + 0x18]
0x7fffeafcc390:	and		r8d, 8
0x7fffeafcc394:	cmp		r8d, 0
0x7fffeafcc398:	jne		0x7fffeafcc3c6
0x7fffeafcc39e:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcc3a2:	mov		ecx, dword ptr [rax + 0x18]
0x7fffeafcc3a5:	mov		eax, ecx
0x7fffeafcc3a7:	and		rax, 0
0x7fffeafcc3ad:	cmp		rax, 0
0x7fffeafcc3b1:	je		0x7fffeafcc3bc
0x7fffeafcc3b7:	jmp		0x7fffeafcc3c1
disassembling symbol '.LBB12_8':
textAddr: 0x7fffeafcc3bc, textSize: 5
0x7fffeafcc3bc:	jmp		0x7fffeafcc3c1
disassembling symbol '.LBB12_9':
textAddr: 0x7fffeafcc3c1, textSize: 5
0x7fffeafcc3c1:	jmp		0x7fffeafcc3c6
disassembling symbol '.LBB12_10':
textAddr: 0x7fffeafcc3c6, textSize: 87
0x7fffeafcc3c6:	cmp		qword ptr [rbp - 0x18], 0
0x7fffeafcc3cb:	je		0x7fffeafcc41d
0x7fffeafcc3d1:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcc3d5:	mov		rcx, qword ptr [rbp - 0x30]
0x7fffeafcc3d9:	mov		rdx, qword ptr [rcx + 8]
0x7fffeafcc3dd:	sub		rdx, rax
0x7fffeafcc3e0:	mov		qword ptr [rcx + 8], rdx
0x7fffeafcc3e4:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcc3e8:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcc3ec:	mov		rdx, qword ptr [rcx + 0x358]
0x7fffeafcc3f3:	sub		rdx, rax
0x7fffeafcc3f6:	mov		qword ptr [rcx + 0x358], rdx
0x7fffeafcc3fd:	mov		rdi, qword ptr [rbp - 8]
0x7fffeafcc401:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcc405:	mov		rsi, qword ptr [rax + 0x28]
0x7fffeafcc409:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcc40d:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafcc411:	sub		rax, qword ptr [rbp - 0x18]
0x7fffeafcc415:	mov		rdx, rax
0x7fffeafcc418:	call		0x7fffeafcf6f0
disassembling symbol '.LBB12_12':
textAddr: 0x7fffeafcc41d, textSize: 5
0x7fffeafcc41d:	jmp		0x7fffeafcc422
disassembling symbol '.LBB12_13':
textAddr: 0x7fffeafcc422, textSize: 45
0x7fffeafcc422:	cmp		qword ptr [rbp - 0x18], 0
0x7fffeafcc427:	jne		0x7fffeafcc44f
0x7fffeafcc42d:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcc431:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafcc435:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcc439:	cmp		rax, qword ptr [rcx + 0x30]
0x7fffeafcc43d:	jbe		0x7fffeafcc44f
0x7fffeafcc443:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcc447:	mov		qword ptr [rax + 0x30], -1
disassembling symbol '.LBB12_16':
textAddr: 0x7fffeafcc44f, textSize: 5
0x7fffeafcc44f:	jmp		0x7fffeafcc454
disassembling symbol '.LBB12_17':
textAddr: 0x7fffeafcc454, textSize: 28
0x7fffeafcc454:	xor		eax, eax
0x7fffeafcc456:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafcc45a:	cmp		rcx, 0
0x7fffeafcc45e:	mov		edx, 1
0x7fffeafcc463:	cmovne		eax, edx
0x7fffeafcc466:	add		rsp, 0x40
0x7fffeafcc46a:	pop		rbp
0x7fffeafcc46b:	ret		
0x7fffeafcc46c:	nop		dword ptr [rax]
disassembling symbol 'release_unused_segments':
textAddr: 0x7fffeafcc470, textSize: 2352
0x7fffeafcc470:	push		rbp
0x7fffeafcc471:	mov		rbp, rsp
0x7fffeafcc474:	sub		rsp, 0x110
0x7fffeafcc47b:	mov		qword ptr [rbp - 8], rdi
0x7fffeafcc47f:	mov		qword ptr [rbp - 0x10], 0
0x7fffeafcc487:	mov		dword ptr [rbp - 0x14], 0
0x7fffeafcc48e:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcc492:	add		rax, 0x378
0x7fffeafcc498:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafcc49c:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcc4a0:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafcc4a4:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafcc4a8:	cmp		qword ptr [rbp - 0x28], 0
0x7fffeafcc4ad:	je		0x7fffeafccd4d
0x7fffeafcc4b3:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcc4b7:	mov		rax, qword ptr [rax]
0x7fffeafcc4ba:	mov		qword ptr [rbp - 0x30], rax
0x7fffeafcc4be:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcc4c2:	mov		rax, qword ptr [rax + 8]
0x7fffeafcc4c6:	mov		qword ptr [rbp - 0x38], rax
0x7fffeafcc4ca:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcc4ce:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafcc4d2:	mov		qword ptr [rbp - 0x40], rax
0x7fffeafcc4d6:	mov		ecx, dword ptr [rbp - 0x14]
0x7fffeafcc4d9:	add		ecx, 1
0x7fffeafcc4dc:	mov		dword ptr [rbp - 0x14], ecx
0x7fffeafcc4df:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcc4e3:	mov		ecx, dword ptr [rax + 0x18]
0x7fffeafcc4e6:	mov		eax, ecx
0x7fffeafcc4e8:	and		rax, 0
0x7fffeafcc4ee:	cmp		rax, 0
0x7fffeafcc4f2:	je		0x7fffeafccd38
0x7fffeafcc4f8:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcc4fc:	mov		ecx, dword ptr [rax + 0x18]
0x7fffeafcc4ff:	and		ecx, 8
0x7fffeafcc502:	cmp		ecx, 0
0x7fffeafcc505:	jne		0x7fffeafccd38
0x7fffeafcc50b:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcc50f:	mov		rcx, qword ptr [rbp - 0x30]
0x7fffeafcc513:	add		rcx, 0x10
0x7fffeafcc51a:	and		rcx, 0xf
0x7fffeafcc521:	cmp		rcx, 0
0x7fffeafcc525:	mov		qword ptr [rbp - 0xd8], rax
0x7fffeafcc52c:	jne		0x7fffeafcc542
0x7fffeafcc532:	xor		eax, eax
0x7fffeafcc534:	mov		ecx, eax
0x7fffeafcc536:	mov		qword ptr [rbp - 0xe0], rcx
0x7fffeafcc53d:	jmp		0x7fffeafcc568
0x7fffeafcc542:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcc546:	add		rax, 0x10
0x7fffeafcc54c:	and		rax, 0xf
0x7fffeafcc552:	mov		ecx, 0x10
0x7fffeafcc557:	sub		rcx, rax
0x7fffeafcc55a:	and		rcx, 0xf
0x7fffeafcc561:	mov		qword ptr [rbp - 0xe0], rcx
0x7fffeafcc568:	mov		rax, qword ptr [rbp - 0xe0]
0x7fffeafcc56f:	mov		rcx, qword ptr [rbp - 0xd8]
0x7fffeafcc576:	add		rcx, rax
0x7fffeafcc579:	mov		qword ptr [rbp - 0x48], rcx
0x7fffeafcc57d:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafcc581:	mov		rax, qword ptr [rax + 8]
0x7fffeafcc585:	and		rax, 0xfffffffffffffff8
0x7fffeafcc58b:	mov		qword ptr [rbp - 0x50], rax
0x7fffeafcc58f:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafcc593:	mov		rax, qword ptr [rax + 8]
0x7fffeafcc597:	and		rax, 3
0x7fffeafcc59d:	cmp		rax, 1
0x7fffeafcc5a1:	jne		0x7fffeafccd33
0x7fffeafcc5a7:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafcc5ab:	add		rax, qword ptr [rbp - 0x50]
0x7fffeafcc5af:	mov		rcx, qword ptr [rbp - 0x30]
0x7fffeafcc5b3:	add		rcx, qword ptr [rbp - 0x38]
0x7fffeafcc5b7:	add		rcx, -0x50
0x7fffeafcc5be:	cmp		rax, rcx
0x7fffeafcc5c1:	jb		0x7fffeafccd33
0x7fffeafcc5c7:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafcc5cb:	mov		qword ptr [rbp - 0x58], rax
0x7fffeafcc5cf:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafcc5d3:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcc5d7:	cmp		rax, qword ptr [rcx + 0x20]
0x7fffeafcc5db:	jne		0x7fffeafcc5fe
0x7fffeafcc5e1:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcc5e5:	mov		qword ptr [rax + 0x20], 0
0x7fffeafcc5ed:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcc5f1:	mov		qword ptr [rax + 8], 0
0x7fffeafcc5f9:	jmp		0x7fffeafcc9c4
0x7fffeafcc5fe:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafcc602:	mov		rax, qword ptr [rax + 0x30]
0x7fffeafcc606:	mov		qword ptr [rbp - 0x60], rax
0x7fffeafcc60a:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafcc60e:	mov		rax, qword ptr [rax + 0x18]
0x7fffeafcc612:	cmp		rax, qword ptr [rbp - 0x58]
0x7fffeafcc616:	je		0x7fffeafcc6bc
0x7fffeafcc61c:	xor		eax, eax
0x7fffeafcc61e:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafcc622:	mov		rcx, qword ptr [rcx + 0x10]
0x7fffeafcc626:	mov		qword ptr [rbp - 0x70], rcx
0x7fffeafcc62a:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafcc62e:	mov		rcx, qword ptr [rcx + 0x18]
0x7fffeafcc632:	mov		qword ptr [rbp - 0x68], rcx
0x7fffeafcc636:	mov		rcx, qword ptr [rbp - 0x70]
0x7fffeafcc63a:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafcc63e:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafcc642:	mov		byte ptr [rbp - 0xe1], al
0x7fffeafcc648:	jb		0x7fffeafcc67d
0x7fffeafcc64e:	xor		eax, eax
0x7fffeafcc650:	mov		rcx, qword ptr [rbp - 0x70]
0x7fffeafcc654:	mov		rcx, qword ptr [rcx + 0x18]
0x7fffeafcc658:	cmp		rcx, qword ptr [rbp - 0x58]
0x7fffeafcc65c:	mov		byte ptr [rbp - 0xe1], al
0x7fffeafcc662:	jne		0x7fffeafcc67d
0x7fffeafcc668:	mov		rax, qword ptr [rbp - 0x68]
0x7fffeafcc66c:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafcc670:	cmp		rax, qword ptr [rbp - 0x58]
0x7fffeafcc674:	sete		cl
0x7fffeafcc677:	mov		byte ptr [rbp - 0xe1], cl
0x7fffeafcc67d:	mov		al, byte ptr [rbp - 0xe1]
0x7fffeafcc683:	and		al, 1
0x7fffeafcc685:	movzx		ecx, al
0x7fffeafcc688:	movsxd		rdx, ecx
0x7fffeafcc68b:	cmp		rdx, 0
0x7fffeafcc68f:	je		0x7fffeafcc6b2
0x7fffeafcc695:	mov		rax, qword ptr [rbp - 0x68]
0x7fffeafcc699:	mov		rcx, qword ptr [rbp - 0x70]
0x7fffeafcc69d:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafcc6a1:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafcc6a5:	mov		rcx, qword ptr [rbp - 0x68]
0x7fffeafcc6a9:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafcc6ad:	jmp		0x7fffeafcc6b7
0x7fffeafcc6b2:	call		0x7fffeafc4c10
0x7fffeafcc6b7:	jmp		0x7fffeafcc7c4
0x7fffeafcc6bc:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafcc6c0:	mov		rcx, rax
0x7fffeafcc6c3:	add		rcx, 0x20
0x7fffeafcc6ca:	add		rcx, 8
0x7fffeafcc6d1:	mov		qword ptr [rbp - 0x78], rcx
0x7fffeafcc6d5:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafcc6d9:	mov		qword ptr [rbp - 0x68], rax
0x7fffeafcc6dd:	cmp		rax, 0
0x7fffeafcc6e1:	jne		0x7fffeafcc70b
0x7fffeafcc6e7:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafcc6eb:	mov		rcx, rax
0x7fffeafcc6ee:	add		rcx, 0x20
0x7fffeafcc6f5:	mov		qword ptr [rbp - 0x78], rcx
0x7fffeafcc6f9:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafcc6fd:	mov		qword ptr [rbp - 0x68], rax
0x7fffeafcc701:	cmp		rax, 0
0x7fffeafcc705:	je		0x7fffeafcc7bf
0x7fffeafcc70b:	jmp		0x7fffeafcc710
0x7fffeafcc710:	mov		rax, qword ptr [rbp - 0x68]
0x7fffeafcc714:	mov		rcx, rax
0x7fffeafcc717:	add		rcx, 0x20
0x7fffeafcc71e:	add		rcx, 8
0x7fffeafcc725:	mov		qword ptr [rbp - 0x80], rcx
0x7fffeafcc729:	cmp		qword ptr [rax + 0x28], 0
0x7fffeafcc72e:	mov		dl, 1
0x7fffeafcc730:	mov		byte ptr [rbp - 0xe2], dl
0x7fffeafcc736:	jne		0x7fffeafcc75c
0x7fffeafcc73c:	mov		rax, qword ptr [rbp - 0x68]
0x7fffeafcc740:	mov		rcx, rax
0x7fffeafcc743:	add		rcx, 0x20
0x7fffeafcc74a:	mov		qword ptr [rbp - 0x80], rcx
0x7fffeafcc74e:	cmp		qword ptr [rax + 0x20], 0
0x7fffeafcc753:	setne		dl
0x7fffeafcc756:	mov		byte ptr [rbp - 0xe2], dl
0x7fffeafcc75c:	mov		al, byte ptr [rbp - 0xe2]
0x7fffeafcc762:	test		al, 1
0x7fffeafcc764:	jne		0x7fffeafcc76f
0x7fffeafcc76a:	jmp		0x7fffeafcc783
0x7fffeafcc76f:	mov		rax, qword ptr [rbp - 0x80]
0x7fffeafcc773:	mov		qword ptr [rbp - 0x78], rax
0x7fffeafcc777:	mov		rax, qword ptr [rax]
0x7fffeafcc77a:	mov		qword ptr [rbp - 0x68], rax
0x7fffeafcc77e:	jmp		0x7fffeafcc710
0x7fffeafcc783:	mov		rax, qword ptr [rbp - 0x78]
0x7fffeafcc787:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcc78b:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcc78f:	setae		dl
0x7fffeafcc792:	and		dl, 1
0x7fffeafcc795:	movzx		esi, dl
0x7fffeafcc798:	movsxd		rax, esi
0x7fffeafcc79b:	cmp		rax, 0
0x7fffeafcc79f:	je		0x7fffeafcc7b5
0x7fffeafcc7a5:	mov		rax, qword ptr [rbp - 0x78]
0x7fffeafcc7a9:	mov		qword ptr [rax], 0
0x7fffeafcc7b0:	jmp		0x7fffeafcc7ba
0x7fffeafcc7b5:	call		0x7fffeafc4c10
0x7fffeafcc7ba:	jmp		0x7fffeafcc7bf
0x7fffeafcc7bf:	jmp		0x7fffeafcc7c4
0x7fffeafcc7c4:	cmp		qword ptr [rbp - 0x60], 0
0x7fffeafcc7c9:	je		0x7fffeafcc9bf
0x7fffeafcc7cf:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcc7d3:	add		rax, 0x258
0x7fffeafcc7d9:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafcc7dd:	mov		edx, dword ptr [rcx + 0x38]
0x7fffeafcc7e0:	mov		ecx, edx
0x7fffeafcc7e2:	shl		rcx, 3
0x7fffeafcc7e6:	add		rax, rcx
0x7fffeafcc7e9:	mov		qword ptr [rbp - 0x88], rax
0x7fffeafcc7f0:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafcc7f4:	mov		rcx, qword ptr [rbp - 0x88]
0x7fffeafcc7fb:	cmp		rax, qword ptr [rcx]
0x7fffeafcc7fe:	jne		0x7fffeafcc83c
0x7fffeafcc804:	mov		rax, qword ptr [rbp - 0x68]
0x7fffeafcc808:	mov		rcx, qword ptr [rbp - 0x88]
0x7fffeafcc80f:	mov		qword ptr [rcx], rax
0x7fffeafcc812:	cmp		rax, 0
0x7fffeafcc816:	jne		0x7fffeafcc837
0x7fffeafcc81c:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafcc820:	mov		ecx, dword ptr [rax + 0x38]
0x7fffeafcc823:	mov		edx, 1
0x7fffeafcc828:	shl		edx, cl
0x7fffeafcc82a:	xor		edx, 0xffffffff
0x7fffeafcc82d:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcc831:	and		edx, dword ptr [rax + 4]
0x7fffeafcc834:	mov		dword ptr [rax + 4], edx
0x7fffeafcc837:	jmp		0x7fffeafcc89c
0x7fffeafcc83c:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafcc840:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcc844:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcc848:	setae		dl
0x7fffeafcc84b:	and		dl, 1
0x7fffeafcc84e:	movzx		esi, dl
0x7fffeafcc851:	movsxd		rax, esi
0x7fffeafcc854:	cmp		rax, 0
0x7fffeafcc858:	je		0x7fffeafcc892
0x7fffeafcc85e:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafcc862:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafcc866:	cmp		rax, qword ptr [rbp - 0x58]
0x7fffeafcc86a:	jne		0x7fffeafcc881
0x7fffeafcc870:	mov		rax, qword ptr [rbp - 0x68]
0x7fffeafcc874:	mov		rcx, qword ptr [rbp - 0x60]
0x7fffeafcc878:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafcc87c:	jmp		0x7fffeafcc88d
0x7fffeafcc881:	mov		rax, qword ptr [rbp - 0x68]
0x7fffeafcc885:	mov		rcx, qword ptr [rbp - 0x60]
0x7fffeafcc889:	mov		qword ptr [rcx + 0x28], rax
0x7fffeafcc88d:	jmp		0x7fffeafcc897
0x7fffeafcc892:	call		0x7fffeafc4c10
0x7fffeafcc897:	jmp		0x7fffeafcc89c
0x7fffeafcc89c:	cmp		qword ptr [rbp - 0x68], 0
0x7fffeafcc8a1:	je		0x7fffeafcc9ba
0x7fffeafcc8a7:	mov		rax, qword ptr [rbp - 0x68]
0x7fffeafcc8ab:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcc8af:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcc8b3:	setae		dl
0x7fffeafcc8b6:	and		dl, 1
0x7fffeafcc8b9:	movzx		esi, dl
0x7fffeafcc8bc:	movsxd		rax, esi
0x7fffeafcc8bf:	cmp		rax, 0
0x7fffeafcc8c3:	je		0x7fffeafcc9b0
0x7fffeafcc8c9:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafcc8cd:	mov		rcx, qword ptr [rbp - 0x68]
0x7fffeafcc8d1:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafcc8d5:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafcc8d9:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafcc8dd:	mov		qword ptr [rbp - 0x90], rax
0x7fffeafcc8e4:	cmp		rax, 0
0x7fffeafcc8e8:	je		0x7fffeafcc940
0x7fffeafcc8ee:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafcc8f5:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcc8f9:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcc8fd:	setae		dl
0x7fffeafcc900:	and		dl, 1
0x7fffeafcc903:	movzx		esi, dl
0x7fffeafcc906:	movsxd		rax, esi
0x7fffeafcc909:	cmp		rax, 0
0x7fffeafcc90d:	je		0x7fffeafcc936
0x7fffeafcc913:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafcc91a:	mov		rcx, qword ptr [rbp - 0x68]
0x7fffeafcc91e:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafcc922:	mov		rax, qword ptr [rbp - 0x68]
0x7fffeafcc926:	mov		rcx, qword ptr [rbp - 0x90]
0x7fffeafcc92d:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafcc931:	jmp		0x7fffeafcc93b
0x7fffeafcc936:	call		0x7fffeafc4c10
0x7fffeafcc93b:	jmp		0x7fffeafcc940
0x7fffeafcc940:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafcc944:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafcc948:	mov		qword ptr [rbp - 0x98], rax
0x7fffeafcc94f:	cmp		rax, 0
0x7fffeafcc953:	je		0x7fffeafcc9ab
0x7fffeafcc959:	mov		rax, qword ptr [rbp - 0x98]
0x7fffeafcc960:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcc964:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcc968:	setae		dl
0x7fffeafcc96b:	and		dl, 1
0x7fffeafcc96e:	movzx		esi, dl
0x7fffeafcc971:	movsxd		rax, esi
0x7fffeafcc974:	cmp		rax, 0
0x7fffeafcc978:	je		0x7fffeafcc9a1
0x7fffeafcc97e:	mov		rax, qword ptr [rbp - 0x98]
0x7fffeafcc985:	mov		rcx, qword ptr [rbp - 0x68]
0x7fffeafcc989:	mov		qword ptr [rcx + 0x28], rax
0x7fffeafcc98d:	mov		rax, qword ptr [rbp - 0x68]
0x7fffeafcc991:	mov		rcx, qword ptr [rbp - 0x98]
0x7fffeafcc998:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafcc99c:	jmp		0x7fffeafcc9a6
0x7fffeafcc9a1:	call		0x7fffeafc4c10
0x7fffeafcc9a6:	jmp		0x7fffeafcc9ab
0x7fffeafcc9ab:	jmp		0x7fffeafcc9b5
0x7fffeafcc9b0:	call		0x7fffeafc4c10
0x7fffeafcc9b5:	jmp		0x7fffeafcc9ba
0x7fffeafcc9ba:	jmp		0x7fffeafcc9bf
0x7fffeafcc9bf:	jmp		0x7fffeafcc9c4
0x7fffeafcc9c4:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafcc9c8:	shr		rax, 8
0x7fffeafcc9cc:	mov		dword ptr [rbp - 0xa8], eax
0x7fffeafcc9d2:	cmp		dword ptr [rbp - 0xa8], 0
0x7fffeafcc9d9:	jne		0x7fffeafcc9ee
0x7fffeafcc9df:	mov		dword ptr [rbp - 0xa4], 0
0x7fffeafcc9e9:	jmp		0x7fffeafcca5c
0x7fffeafcc9ee:	cmp		dword ptr [rbp - 0xa8], 0xffff
0x7fffeafcc9f8:	jbe		0x7fffeafcca0d
0x7fffeafcc9fe:	mov		dword ptr [rbp - 0xa4], 0x1f
0x7fffeafcca08:	jmp		0x7fffeafcca57
0x7fffeafcca0d:	mov		eax, dword ptr [rbp - 0xa8]
0x7fffeafcca13:	bsr		eax, eax
0x7fffeafcca16:	xor		eax, 0x1f
0x7fffeafcca19:	mov		ecx, 0x1f
0x7fffeafcca1e:	sub		ecx, eax
0x7fffeafcca20:	mov		dword ptr [rbp - 0xac], ecx
0x7fffeafcca26:	mov		eax, dword ptr [rbp - 0xac]
0x7fffeafcca2c:	shl		eax, 1
0x7fffeafcca2f:	mov		eax, eax
0x7fffeafcca31:	mov		edx, eax
0x7fffeafcca33:	mov		rsi, qword ptr [rbp - 0x50]
0x7fffeafcca37:	mov		eax, dword ptr [rbp - 0xac]
0x7fffeafcca3d:	add		eax, 7
0x7fffeafcca40:	mov		eax, eax
0x7fffeafcca42:	mov		ecx, eax
0x7fffeafcca44:	shr		rsi, cl
0x7fffeafcca47:	and		rsi, 1
0x7fffeafcca4e:	add		rdx, rsi
0x7fffeafcca51:	mov		dword ptr [rbp - 0xa4], edx
0x7fffeafcca57:	jmp		0x7fffeafcca5c
0x7fffeafcca5c:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcca60:	add		rax, 0x258
0x7fffeafcca66:	mov		ecx, dword ptr [rbp - 0xa4]
0x7fffeafcca6c:	mov		edx, ecx
0x7fffeafcca6e:	shl		rdx, 3
0x7fffeafcca72:	add		rax, rdx
0x7fffeafcca75:	mov		qword ptr [rbp - 0xa0], rax
0x7fffeafcca7c:	mov		ecx, dword ptr [rbp - 0xa4]
0x7fffeafcca82:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafcca86:	mov		dword ptr [rax + 0x38], ecx
0x7fffeafcca89:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafcca8d:	mov		qword ptr [rax + 0x28], 0
0x7fffeafcca95:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafcca99:	mov		qword ptr [rax + 0x20], 0
0x7fffeafccaa1:	mov		rax, qword ptr [rbp - 8]
0x7fffeafccaa5:	mov		ecx, dword ptr [rax + 4]
0x7fffeafccaa8:	mov		esi, dword ptr [rbp - 0xa4]
0x7fffeafccaae:	mov		dword ptr [rbp - 0xe8], ecx
0x7fffeafccab4:	mov		ecx, esi
0x7fffeafccab6:	mov		esi, 1
0x7fffeafccabb:	shl		esi, cl
0x7fffeafccabd:	mov		edi, dword ptr [rbp - 0xe8]
0x7fffeafccac3:	and		edi, esi
0x7fffeafccac5:	cmp		edi, 0
0x7fffeafccac8:	jne		0x7fffeafccb1b
0x7fffeafccace:	mov		ecx, dword ptr [rbp - 0xa4]
0x7fffeafccad4:	mov		eax, 1
0x7fffeafccad9:	shl		eax, cl
0x7fffeafccadb:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafccadf:	or		eax, dword ptr [rdx + 4]
0x7fffeafccae2:	mov		dword ptr [rdx + 4], eax
0x7fffeafccae5:	mov		rdx, qword ptr [rbp - 0x58]
0x7fffeafccae9:	mov		rsi, qword ptr [rbp - 0xa0]
0x7fffeafccaf0:	mov		qword ptr [rsi], rdx
0x7fffeafccaf3:	mov		rdx, qword ptr [rbp - 0xa0]
0x7fffeafccafa:	mov		rsi, qword ptr [rbp - 0x58]
0x7fffeafccafe:	mov		qword ptr [rsi + 0x30], rdx
0x7fffeafccb02:	mov		rdx, qword ptr [rbp - 0x58]
0x7fffeafccb06:	mov		rsi, qword ptr [rbp - 0x58]
0x7fffeafccb0a:	mov		qword ptr [rsi + 0x18], rdx
0x7fffeafccb0e:	mov		rsi, qword ptr [rbp - 0x58]
0x7fffeafccb12:	mov		qword ptr [rsi + 0x10], rdx
0x7fffeafccb16:	jmp		0x7fffeafccd2e
0x7fffeafccb1b:	mov		rax, qword ptr [rbp - 0xa0]
0x7fffeafccb22:	mov		rax, qword ptr [rax]
0x7fffeafccb25:	mov		qword ptr [rbp - 0xb8], rax
0x7fffeafccb2c:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafccb30:	cmp		dword ptr [rbp - 0xa4], 0x1f
0x7fffeafccb37:	mov		qword ptr [rbp - 0xf0], rax
0x7fffeafccb3e:	jne		0x7fffeafccb54
0x7fffeafccb44:	xor		eax, eax
0x7fffeafccb46:	mov		ecx, eax
0x7fffeafccb48:	mov		qword ptr [rbp - 0xf8], rcx
0x7fffeafccb4f:	jmp		0x7fffeafccb76
0x7fffeafccb54:	mov		eax, dword ptr [rbp - 0xa4]
0x7fffeafccb5a:	shr		eax, 1
0x7fffeafccb5d:	add		eax, 8
0x7fffeafccb60:	sub		eax, 2
0x7fffeafccb63:	mov		eax, eax
0x7fffeafccb65:	mov		ecx, eax
0x7fffeafccb67:	mov		edx, 0x3f
0x7fffeafccb6c:	sub		rdx, rcx
0x7fffeafccb6f:	mov		qword ptr [rbp - 0xf8], rdx
0x7fffeafccb76:	mov		rax, qword ptr [rbp - 0xf8]
0x7fffeafccb7d:	mov		rcx, rax
0x7fffeafccb80:	mov		rax, qword ptr [rbp - 0xf0]
0x7fffeafccb87:	shl		rax, cl
0x7fffeafccb8a:	mov		qword ptr [rbp - 0xc0], rax
0x7fffeafccb91:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafccb98:	mov		rax, qword ptr [rax + 8]
0x7fffeafccb9c:	and		rax, 0xfffffffffffffff8
0x7fffeafccba2:	cmp		rax, qword ptr [rbp - 0x50]
0x7fffeafccba6:	je		0x7fffeafccc77
0x7fffeafccbac:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafccbb3:	add		rax, 0x20
0x7fffeafccbb9:	mov		rcx, qword ptr [rbp - 0xc0]
0x7fffeafccbc0:	shr		rcx, 0x3f
0x7fffeafccbc4:	and		rcx, 1
0x7fffeafccbcb:	shl		rcx, 3
0x7fffeafccbcf:	add		rax, rcx
0x7fffeafccbd2:	mov		qword ptr [rbp - 0xc8], rax
0x7fffeafccbd9:	mov		rax, qword ptr [rbp - 0xc0]
0x7fffeafccbe0:	shl		rax, 1
0x7fffeafccbe4:	mov		qword ptr [rbp - 0xc0], rax
0x7fffeafccbeb:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafccbf2:	cmp		qword ptr [rax], 0
0x7fffeafccbf6:	je		0x7fffeafccc12
0x7fffeafccbfc:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafccc03:	mov		rax, qword ptr [rax]
0x7fffeafccc06:	mov		qword ptr [rbp - 0xb8], rax
0x7fffeafccc0d:	jmp		0x7fffeafccc72
0x7fffeafccc12:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafccc19:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafccc1d:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafccc21:	setae		dl
0x7fffeafccc24:	and		dl, 1
0x7fffeafccc27:	movzx		esi, dl
0x7fffeafccc2a:	movsxd		rax, esi
0x7fffeafccc2d:	cmp		rax, 0
0x7fffeafccc31:	je		0x7fffeafccc6d
0x7fffeafccc37:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafccc3b:	mov		rcx, qword ptr [rbp - 0xc8]
0x7fffeafccc42:	mov		qword ptr [rcx], rax
0x7fffeafccc45:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafccc4c:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafccc50:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafccc54:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafccc58:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafccc5c:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafccc60:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafccc64:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafccc68:	jmp		0x7fffeafccd29
0x7fffeafccc6d:	call		0x7fffeafc4c10
0x7fffeafccc72:	jmp		0x7fffeafccd24
0x7fffeafccc77:	xor		eax, eax
0x7fffeafccc79:	mov		rcx, qword ptr [rbp - 0xb8]
0x7fffeafccc80:	mov		rcx, qword ptr [rcx + 0x10]
0x7fffeafccc84:	mov		qword ptr [rbp - 0xd0], rcx
0x7fffeafccc8b:	mov		rcx, qword ptr [rbp - 0xb8]
0x7fffeafccc92:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafccc96:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafccc9a:	mov		byte ptr [rbp - 0xf9], al
0x7fffeafccca0:	jb		0x7fffeafcccbe
0x7fffeafccca6:	mov		rax, qword ptr [rbp - 0xd0]
0x7fffeafcccad:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcccb1:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcccb5:	setae		dl
0x7fffeafcccb8:	mov		byte ptr [rbp - 0xf9], dl
0x7fffeafcccbe:	mov		al, byte ptr [rbp - 0xf9]
0x7fffeafcccc4:	and		al, 1
0x7fffeafcccc6:	movzx		ecx, al
0x7fffeafcccc9:	movsxd		rdx, ecx
0x7fffeafccccc:	cmp		rdx, 0
0x7fffeafcccd0:	je		0x7fffeafccd1f
0x7fffeafcccd6:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafcccda:	mov		rcx, qword ptr [rbp - 0xd0]
0x7fffeafccce1:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafccce5:	mov		rcx, qword ptr [rbp - 0xb8]
0x7fffeafcccec:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafcccf0:	mov		rax, qword ptr [rbp - 0xd0]
0x7fffeafcccf7:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafcccfb:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafcccff:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafccd06:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafccd0a:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafccd0e:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafccd12:	mov		qword ptr [rax + 0x30], 0
0x7fffeafccd1a:	jmp		0x7fffeafccd29
0x7fffeafccd1f:	call		0x7fffeafc4c10
0x7fffeafccd24:	jmp		0x7fffeafccb91
0x7fffeafccd29:	jmp		0x7fffeafccd2e
0x7fffeafccd2e:	jmp		0x7fffeafccd33
0x7fffeafccd33:	jmp		0x7fffeafccd38
0x7fffeafccd38:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafccd3c:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafccd40:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafccd44:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafccd48:	jmp		0x7fffeafcc4a8
0x7fffeafccd4d:	movsxd		rax, dword ptr [rbp - 0x14]
0x7fffeafccd51:	cmp		rax, -1
0x7fffeafccd55:	jbe		0x7fffeafccd6b
0x7fffeafccd5b:	movsxd		rax, dword ptr [rbp - 0x14]
0x7fffeafccd5f:	mov		qword ptr [rbp - 0x108], rax
0x7fffeafccd66:	jmp		0x7fffeafccd7e
0x7fffeafccd6b:	mov		rax, -1
0x7fffeafccd72:	mov		qword ptr [rbp - 0x108], rax
0x7fffeafccd79:	jmp		0x7fffeafccd7e
0x7fffeafccd7e:	mov		rax, qword ptr [rbp - 0x108]
0x7fffeafccd85:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafccd89:	mov		qword ptr [rcx + 0x38], rax
0x7fffeafccd8d:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafccd91:	add		rsp, 0x110
0x7fffeafccd98:	pop		rbp
0x7fffeafccd99:	ret		
0x7fffeafccd9a:	nop		word ptr [rax + rax]
disassembling symbol '.LBB13_1':
textAddr: 0x7fffeafcc4a8, textSize: 154
0x7fffeafcc4a8:	cmp		qword ptr [rbp - 0x28], 0
0x7fffeafcc4ad:	je		0x7fffeafccd4d
0x7fffeafcc4b3:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcc4b7:	mov		rax, qword ptr [rax]
0x7fffeafcc4ba:	mov		qword ptr [rbp - 0x30], rax
0x7fffeafcc4be:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcc4c2:	mov		rax, qword ptr [rax + 8]
0x7fffeafcc4c6:	mov		qword ptr [rbp - 0x38], rax
0x7fffeafcc4ca:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcc4ce:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafcc4d2:	mov		qword ptr [rbp - 0x40], rax
0x7fffeafcc4d6:	mov		ecx, dword ptr [rbp - 0x14]
0x7fffeafcc4d9:	add		ecx, 1
0x7fffeafcc4dc:	mov		dword ptr [rbp - 0x14], ecx
0x7fffeafcc4df:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcc4e3:	mov		ecx, dword ptr [rax + 0x18]
0x7fffeafcc4e6:	mov		eax, ecx
0x7fffeafcc4e8:	and		rax, 0
0x7fffeafcc4ee:	cmp		rax, 0
0x7fffeafcc4f2:	je		0x7fffeafccd38
0x7fffeafcc4f8:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcc4fc:	mov		ecx, dword ptr [rax + 0x18]
0x7fffeafcc4ff:	and		ecx, 8
0x7fffeafcc502:	cmp		ecx, 0
0x7fffeafcc505:	jne		0x7fffeafccd38
0x7fffeafcc50b:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcc50f:	mov		rcx, qword ptr [rbp - 0x30]
0x7fffeafcc513:	add		rcx, 0x10
0x7fffeafcc51a:	and		rcx, 0xf
0x7fffeafcc521:	cmp		rcx, 0
0x7fffeafcc525:	mov		qword ptr [rbp - 0xd8], rax
0x7fffeafcc52c:	jne		0x7fffeafcc542
0x7fffeafcc532:	xor		eax, eax
0x7fffeafcc534:	mov		ecx, eax
0x7fffeafcc536:	mov		qword ptr [rbp - 0xe0], rcx
0x7fffeafcc53d:	jmp		0x7fffeafcc568
disassembling symbol '.LBB13_6':
textAddr: 0x7fffeafcc542, textSize: 38
0x7fffeafcc542:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcc546:	add		rax, 0x10
0x7fffeafcc54c:	and		rax, 0xf
0x7fffeafcc552:	mov		ecx, 0x10
0x7fffeafcc557:	sub		rcx, rax
0x7fffeafcc55a:	and		rcx, 0xf
0x7fffeafcc561:	mov		qword ptr [rbp - 0xe0], rcx
disassembling symbol '.LBB13_7':
textAddr: 0x7fffeafcc568, textSize: 150
0x7fffeafcc568:	mov		rax, qword ptr [rbp - 0xe0]
0x7fffeafcc56f:	mov		rcx, qword ptr [rbp - 0xd8]
0x7fffeafcc576:	add		rcx, rax
0x7fffeafcc579:	mov		qword ptr [rbp - 0x48], rcx
0x7fffeafcc57d:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafcc581:	mov		rax, qword ptr [rax + 8]
0x7fffeafcc585:	and		rax, 0xfffffffffffffff8
0x7fffeafcc58b:	mov		qword ptr [rbp - 0x50], rax
0x7fffeafcc58f:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafcc593:	mov		rax, qword ptr [rax + 8]
0x7fffeafcc597:	and		rax, 3
0x7fffeafcc59d:	cmp		rax, 1
0x7fffeafcc5a1:	jne		0x7fffeafccd33
0x7fffeafcc5a7:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafcc5ab:	add		rax, qword ptr [rbp - 0x50]
0x7fffeafcc5af:	mov		rcx, qword ptr [rbp - 0x30]
0x7fffeafcc5b3:	add		rcx, qword ptr [rbp - 0x38]
0x7fffeafcc5b7:	add		rcx, -0x50
0x7fffeafcc5be:	cmp		rax, rcx
0x7fffeafcc5c1:	jb		0x7fffeafccd33
0x7fffeafcc5c7:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafcc5cb:	mov		qword ptr [rbp - 0x58], rax
0x7fffeafcc5cf:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafcc5d3:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcc5d7:	cmp		rax, qword ptr [rcx + 0x20]
0x7fffeafcc5db:	jne		0x7fffeafcc5fe
0x7fffeafcc5e1:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcc5e5:	mov		qword ptr [rax + 0x20], 0
0x7fffeafcc5ed:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcc5f1:	mov		qword ptr [rax + 8], 0
0x7fffeafcc5f9:	jmp		0x7fffeafcc9c4
disassembling symbol '.LBB13_11':
textAddr: 0x7fffeafcc5fe, textSize: 127
0x7fffeafcc5fe:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafcc602:	mov		rax, qword ptr [rax + 0x30]
0x7fffeafcc606:	mov		qword ptr [rbp - 0x60], rax
0x7fffeafcc60a:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafcc60e:	mov		rax, qword ptr [rax + 0x18]
0x7fffeafcc612:	cmp		rax, qword ptr [rbp - 0x58]
0x7fffeafcc616:	je		0x7fffeafcc6bc
0x7fffeafcc61c:	xor		eax, eax
0x7fffeafcc61e:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafcc622:	mov		rcx, qword ptr [rcx + 0x10]
0x7fffeafcc626:	mov		qword ptr [rbp - 0x70], rcx
0x7fffeafcc62a:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafcc62e:	mov		rcx, qword ptr [rcx + 0x18]
0x7fffeafcc632:	mov		qword ptr [rbp - 0x68], rcx
0x7fffeafcc636:	mov		rcx, qword ptr [rbp - 0x70]
0x7fffeafcc63a:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafcc63e:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafcc642:	mov		byte ptr [rbp - 0xe1], al
0x7fffeafcc648:	jb		0x7fffeafcc67d
0x7fffeafcc64e:	xor		eax, eax
0x7fffeafcc650:	mov		rcx, qword ptr [rbp - 0x70]
0x7fffeafcc654:	mov		rcx, qword ptr [rcx + 0x18]
0x7fffeafcc658:	cmp		rcx, qword ptr [rbp - 0x58]
0x7fffeafcc65c:	mov		byte ptr [rbp - 0xe1], al
0x7fffeafcc662:	jne		0x7fffeafcc67d
0x7fffeafcc668:	mov		rax, qword ptr [rbp - 0x68]
0x7fffeafcc66c:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafcc670:	cmp		rax, qword ptr [rbp - 0x58]
0x7fffeafcc674:	sete		cl
0x7fffeafcc677:	mov		byte ptr [rbp - 0xe1], cl
disassembling symbol '.LBB13_15':
textAddr: 0x7fffeafcc67d, textSize: 53
0x7fffeafcc67d:	mov		al, byte ptr [rbp - 0xe1]
0x7fffeafcc683:	and		al, 1
0x7fffeafcc685:	movzx		ecx, al
0x7fffeafcc688:	movsxd		rdx, ecx
0x7fffeafcc68b:	cmp		rdx, 0
0x7fffeafcc68f:	je		0x7fffeafcc6b2
0x7fffeafcc695:	mov		rax, qword ptr [rbp - 0x68]
0x7fffeafcc699:	mov		rcx, qword ptr [rbp - 0x70]
0x7fffeafcc69d:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafcc6a1:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafcc6a5:	mov		rcx, qword ptr [rbp - 0x68]
0x7fffeafcc6a9:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafcc6ad:	jmp		0x7fffeafcc6b7
disassembling symbol '.LBB13_17':
textAddr: 0x7fffeafcc6b2, textSize: 5
0x7fffeafcc6b2:	call		0x7fffeafc4c10
disassembling symbol '.LBB13_18':
textAddr: 0x7fffeafcc6b7, textSize: 5
0x7fffeafcc6b7:	jmp		0x7fffeafcc7c4
disassembling symbol '.LBB13_19':
textAddr: 0x7fffeafcc6bc, textSize: 79
0x7fffeafcc6bc:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafcc6c0:	mov		rcx, rax
0x7fffeafcc6c3:	add		rcx, 0x20
0x7fffeafcc6ca:	add		rcx, 8
0x7fffeafcc6d1:	mov		qword ptr [rbp - 0x78], rcx
0x7fffeafcc6d5:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafcc6d9:	mov		qword ptr [rbp - 0x68], rax
0x7fffeafcc6dd:	cmp		rax, 0
0x7fffeafcc6e1:	jne		0x7fffeafcc70b
0x7fffeafcc6e7:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafcc6eb:	mov		rcx, rax
0x7fffeafcc6ee:	add		rcx, 0x20
0x7fffeafcc6f5:	mov		qword ptr [rbp - 0x78], rcx
0x7fffeafcc6f9:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafcc6fd:	mov		qword ptr [rbp - 0x68], rax
0x7fffeafcc701:	cmp		rax, 0
0x7fffeafcc705:	je		0x7fffeafcc7bf
disassembling symbol '.LBB13_21':
textAddr: 0x7fffeafcc70b, textSize: 5
0x7fffeafcc70b:	jmp		0x7fffeafcc710
disassembling symbol '.LBB13_22':
textAddr: 0x7fffeafcc710, textSize: 76
0x7fffeafcc710:	mov		rax, qword ptr [rbp - 0x68]
0x7fffeafcc714:	mov		rcx, rax
0x7fffeafcc717:	add		rcx, 0x20
0x7fffeafcc71e:	add		rcx, 8
0x7fffeafcc725:	mov		qword ptr [rbp - 0x80], rcx
0x7fffeafcc729:	cmp		qword ptr [rax + 0x28], 0
0x7fffeafcc72e:	mov		dl, 1
0x7fffeafcc730:	mov		byte ptr [rbp - 0xe2], dl
0x7fffeafcc736:	jne		0x7fffeafcc75c
0x7fffeafcc73c:	mov		rax, qword ptr [rbp - 0x68]
0x7fffeafcc740:	mov		rcx, rax
0x7fffeafcc743:	add		rcx, 0x20
0x7fffeafcc74a:	mov		qword ptr [rbp - 0x80], rcx
0x7fffeafcc74e:	cmp		qword ptr [rax + 0x20], 0
0x7fffeafcc753:	setne		dl
0x7fffeafcc756:	mov		byte ptr [rbp - 0xe2], dl
disassembling symbol '.LBB13_24':
textAddr: 0x7fffeafcc75c, textSize: 19
0x7fffeafcc75c:	mov		al, byte ptr [rbp - 0xe2]
0x7fffeafcc762:	test		al, 1
0x7fffeafcc764:	jne		0x7fffeafcc76f
0x7fffeafcc76a:	jmp		0x7fffeafcc783
disassembling symbol '.LBB13_25':
textAddr: 0x7fffeafcc76f, textSize: 20
0x7fffeafcc76f:	mov		rax, qword ptr [rbp - 0x80]
0x7fffeafcc773:	mov		qword ptr [rbp - 0x78], rax
0x7fffeafcc777:	mov		rax, qword ptr [rax]
0x7fffeafcc77a:	mov		qword ptr [rbp - 0x68], rax
0x7fffeafcc77e:	jmp		0x7fffeafcc710
disassembling symbol '.LBB13_26':
textAddr: 0x7fffeafcc783, textSize: 50
0x7fffeafcc783:	mov		rax, qword ptr [rbp - 0x78]
0x7fffeafcc787:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcc78b:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcc78f:	setae		dl
0x7fffeafcc792:	and		dl, 1
0x7fffeafcc795:	movzx		esi, dl
0x7fffeafcc798:	movsxd		rax, esi
0x7fffeafcc79b:	cmp		rax, 0
0x7fffeafcc79f:	je		0x7fffeafcc7b5
0x7fffeafcc7a5:	mov		rax, qword ptr [rbp - 0x78]
0x7fffeafcc7a9:	mov		qword ptr [rax], 0
0x7fffeafcc7b0:	jmp		0x7fffeafcc7ba
disassembling symbol '.LBB13_28':
textAddr: 0x7fffeafcc7b5, textSize: 5
0x7fffeafcc7b5:	call		0x7fffeafc4c10
disassembling symbol '.LBB13_29':
textAddr: 0x7fffeafcc7ba, textSize: 5
0x7fffeafcc7ba:	jmp		0x7fffeafcc7bf
disassembling symbol '.LBB13_30':
textAddr: 0x7fffeafcc7bf, textSize: 5
0x7fffeafcc7bf:	jmp		0x7fffeafcc7c4
disassembling symbol '.LBB13_31':
textAddr: 0x7fffeafcc7c4, textSize: 115
0x7fffeafcc7c4:	cmp		qword ptr [rbp - 0x60], 0
0x7fffeafcc7c9:	je		0x7fffeafcc9bf
0x7fffeafcc7cf:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcc7d3:	add		rax, 0x258
0x7fffeafcc7d9:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafcc7dd:	mov		edx, dword ptr [rcx + 0x38]
0x7fffeafcc7e0:	mov		ecx, edx
0x7fffeafcc7e2:	shl		rcx, 3
0x7fffeafcc7e6:	add		rax, rcx
0x7fffeafcc7e9:	mov		qword ptr [rbp - 0x88], rax
0x7fffeafcc7f0:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafcc7f4:	mov		rcx, qword ptr [rbp - 0x88]
0x7fffeafcc7fb:	cmp		rax, qword ptr [rcx]
0x7fffeafcc7fe:	jne		0x7fffeafcc83c
0x7fffeafcc804:	mov		rax, qword ptr [rbp - 0x68]
0x7fffeafcc808:	mov		rcx, qword ptr [rbp - 0x88]
0x7fffeafcc80f:	mov		qword ptr [rcx], rax
0x7fffeafcc812:	cmp		rax, 0
0x7fffeafcc816:	jne		0x7fffeafcc837
0x7fffeafcc81c:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafcc820:	mov		ecx, dword ptr [rax + 0x38]
0x7fffeafcc823:	mov		edx, 1
0x7fffeafcc828:	shl		edx, cl
0x7fffeafcc82a:	xor		edx, 0xffffffff
0x7fffeafcc82d:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcc831:	and		edx, dword ptr [rax + 4]
0x7fffeafcc834:	mov		dword ptr [rax + 4], edx
disassembling symbol '.LBB13_35':
textAddr: 0x7fffeafcc837, textSize: 5
0x7fffeafcc837:	jmp		0x7fffeafcc89c
disassembling symbol '.LBB13_36':
textAddr: 0x7fffeafcc83c, textSize: 69
0x7fffeafcc83c:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafcc840:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcc844:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcc848:	setae		dl
0x7fffeafcc84b:	and		dl, 1
0x7fffeafcc84e:	movzx		esi, dl
0x7fffeafcc851:	movsxd		rax, esi
0x7fffeafcc854:	cmp		rax, 0
0x7fffeafcc858:	je		0x7fffeafcc892
0x7fffeafcc85e:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafcc862:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafcc866:	cmp		rax, qword ptr [rbp - 0x58]
0x7fffeafcc86a:	jne		0x7fffeafcc881
0x7fffeafcc870:	mov		rax, qword ptr [rbp - 0x68]
0x7fffeafcc874:	mov		rcx, qword ptr [rbp - 0x60]
0x7fffeafcc878:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafcc87c:	jmp		0x7fffeafcc88d
disassembling symbol '.LBB13_39':
textAddr: 0x7fffeafcc881, textSize: 12
0x7fffeafcc881:	mov		rax, qword ptr [rbp - 0x68]
0x7fffeafcc885:	mov		rcx, qword ptr [rbp - 0x60]
0x7fffeafcc889:	mov		qword ptr [rcx + 0x28], rax
disassembling symbol '.LBB13_40':
textAddr: 0x7fffeafcc88d, textSize: 5
0x7fffeafcc88d:	jmp		0x7fffeafcc897
disassembling symbol '.LBB13_41':
textAddr: 0x7fffeafcc892, textSize: 5
0x7fffeafcc892:	call		0x7fffeafc4c10
disassembling symbol '.LBB13_42':
textAddr: 0x7fffeafcc897, textSize: 5
0x7fffeafcc897:	jmp		0x7fffeafcc89c
disassembling symbol '.LBB13_43':
textAddr: 0x7fffeafcc89c, textSize: 154
0x7fffeafcc89c:	cmp		qword ptr [rbp - 0x68], 0
0x7fffeafcc8a1:	je		0x7fffeafcc9ba
0x7fffeafcc8a7:	mov		rax, qword ptr [rbp - 0x68]
0x7fffeafcc8ab:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcc8af:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcc8b3:	setae		dl
0x7fffeafcc8b6:	and		dl, 1
0x7fffeafcc8b9:	movzx		esi, dl
0x7fffeafcc8bc:	movsxd		rax, esi
0x7fffeafcc8bf:	cmp		rax, 0
0x7fffeafcc8c3:	je		0x7fffeafcc9b0
0x7fffeafcc8c9:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafcc8cd:	mov		rcx, qword ptr [rbp - 0x68]
0x7fffeafcc8d1:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafcc8d5:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafcc8d9:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafcc8dd:	mov		qword ptr [rbp - 0x90], rax
0x7fffeafcc8e4:	cmp		rax, 0
0x7fffeafcc8e8:	je		0x7fffeafcc940
0x7fffeafcc8ee:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafcc8f5:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcc8f9:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcc8fd:	setae		dl
0x7fffeafcc900:	and		dl, 1
0x7fffeafcc903:	movzx		esi, dl
0x7fffeafcc906:	movsxd		rax, esi
0x7fffeafcc909:	cmp		rax, 0
0x7fffeafcc90d:	je		0x7fffeafcc936
0x7fffeafcc913:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafcc91a:	mov		rcx, qword ptr [rbp - 0x68]
0x7fffeafcc91e:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafcc922:	mov		rax, qword ptr [rbp - 0x68]
0x7fffeafcc926:	mov		rcx, qword ptr [rbp - 0x90]
0x7fffeafcc92d:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafcc931:	jmp		0x7fffeafcc93b
disassembling symbol '.LBB13_48':
textAddr: 0x7fffeafcc936, textSize: 5
0x7fffeafcc936:	call		0x7fffeafc4c10
disassembling symbol '.LBB13_49':
textAddr: 0x7fffeafcc93b, textSize: 5
0x7fffeafcc93b:	jmp		0x7fffeafcc940
disassembling symbol '.LBB13_50':
textAddr: 0x7fffeafcc940, textSize: 97
0x7fffeafcc940:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafcc944:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafcc948:	mov		qword ptr [rbp - 0x98], rax
0x7fffeafcc94f:	cmp		rax, 0
0x7fffeafcc953:	je		0x7fffeafcc9ab
0x7fffeafcc959:	mov		rax, qword ptr [rbp - 0x98]
0x7fffeafcc960:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcc964:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcc968:	setae		dl
0x7fffeafcc96b:	and		dl, 1
0x7fffeafcc96e:	movzx		esi, dl
0x7fffeafcc971:	movsxd		rax, esi
0x7fffeafcc974:	cmp		rax, 0
0x7fffeafcc978:	je		0x7fffeafcc9a1
0x7fffeafcc97e:	mov		rax, qword ptr [rbp - 0x98]
0x7fffeafcc985:	mov		rcx, qword ptr [rbp - 0x68]
0x7fffeafcc989:	mov		qword ptr [rcx + 0x28], rax
0x7fffeafcc98d:	mov		rax, qword ptr [rbp - 0x68]
0x7fffeafcc991:	mov		rcx, qword ptr [rbp - 0x98]
0x7fffeafcc998:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafcc99c:	jmp		0x7fffeafcc9a6
disassembling symbol '.LBB13_53':
textAddr: 0x7fffeafcc9a1, textSize: 5
0x7fffeafcc9a1:	call		0x7fffeafc4c10
disassembling symbol '.LBB13_54':
textAddr: 0x7fffeafcc9a6, textSize: 5
0x7fffeafcc9a6:	jmp		0x7fffeafcc9ab
disassembling symbol '.LBB13_55':
textAddr: 0x7fffeafcc9ab, textSize: 5
0x7fffeafcc9ab:	jmp		0x7fffeafcc9b5
disassembling symbol '.LBB13_56':
textAddr: 0x7fffeafcc9b0, textSize: 5
0x7fffeafcc9b0:	call		0x7fffeafc4c10
disassembling symbol '.LBB13_57':
textAddr: 0x7fffeafcc9b5, textSize: 5
0x7fffeafcc9b5:	jmp		0x7fffeafcc9ba
disassembling symbol '.LBB13_58':
textAddr: 0x7fffeafcc9ba, textSize: 5
0x7fffeafcc9ba:	jmp		0x7fffeafcc9bf
disassembling symbol '.LBB13_59':
textAddr: 0x7fffeafcc9bf, textSize: 5
0x7fffeafcc9bf:	jmp		0x7fffeafcc9c4
disassembling symbol '.LBB13_60':
textAddr: 0x7fffeafcc9c4, textSize: 42
0x7fffeafcc9c4:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafcc9c8:	shr		rax, 8
0x7fffeafcc9cc:	mov		dword ptr [rbp - 0xa8], eax
0x7fffeafcc9d2:	cmp		dword ptr [rbp - 0xa8], 0
0x7fffeafcc9d9:	jne		0x7fffeafcc9ee
0x7fffeafcc9df:	mov		dword ptr [rbp - 0xa4], 0
0x7fffeafcc9e9:	jmp		0x7fffeafcca5c
disassembling symbol '.LBB13_62':
textAddr: 0x7fffeafcc9ee, textSize: 31
0x7fffeafcc9ee:	cmp		dword ptr [rbp - 0xa8], 0xffff
0x7fffeafcc9f8:	jbe		0x7fffeafcca0d
0x7fffeafcc9fe:	mov		dword ptr [rbp - 0xa4], 0x1f
0x7fffeafcca08:	jmp		0x7fffeafcca57
disassembling symbol '.LBB13_64':
textAddr: 0x7fffeafcca0d, textSize: 74
0x7fffeafcca0d:	mov		eax, dword ptr [rbp - 0xa8]
0x7fffeafcca13:	bsr		eax, eax
0x7fffeafcca16:	xor		eax, 0x1f
0x7fffeafcca19:	mov		ecx, 0x1f
0x7fffeafcca1e:	sub		ecx, eax
0x7fffeafcca20:	mov		dword ptr [rbp - 0xac], ecx
0x7fffeafcca26:	mov		eax, dword ptr [rbp - 0xac]
0x7fffeafcca2c:	shl		eax, 1
0x7fffeafcca2f:	mov		eax, eax
0x7fffeafcca31:	mov		edx, eax
0x7fffeafcca33:	mov		rsi, qword ptr [rbp - 0x50]
0x7fffeafcca37:	mov		eax, dword ptr [rbp - 0xac]
0x7fffeafcca3d:	add		eax, 7
0x7fffeafcca40:	mov		eax, eax
0x7fffeafcca42:	mov		ecx, eax
0x7fffeafcca44:	shr		rsi, cl
0x7fffeafcca47:	and		rsi, 1
0x7fffeafcca4e:	add		rdx, rsi
0x7fffeafcca51:	mov		dword ptr [rbp - 0xa4], edx
disassembling symbol '.LBB13_65':
textAddr: 0x7fffeafcca57, textSize: 5
0x7fffeafcca57:	jmp		0x7fffeafcca5c
disassembling symbol '.LBB13_66':
textAddr: 0x7fffeafcca5c, textSize: 191
0x7fffeafcca5c:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcca60:	add		rax, 0x258
0x7fffeafcca66:	mov		ecx, dword ptr [rbp - 0xa4]
0x7fffeafcca6c:	mov		edx, ecx
0x7fffeafcca6e:	shl		rdx, 3
0x7fffeafcca72:	add		rax, rdx
0x7fffeafcca75:	mov		qword ptr [rbp - 0xa0], rax
0x7fffeafcca7c:	mov		ecx, dword ptr [rbp - 0xa4]
0x7fffeafcca82:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafcca86:	mov		dword ptr [rax + 0x38], ecx
0x7fffeafcca89:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafcca8d:	mov		qword ptr [rax + 0x28], 0
0x7fffeafcca95:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafcca99:	mov		qword ptr [rax + 0x20], 0
0x7fffeafccaa1:	mov		rax, qword ptr [rbp - 8]
0x7fffeafccaa5:	mov		ecx, dword ptr [rax + 4]
0x7fffeafccaa8:	mov		esi, dword ptr [rbp - 0xa4]
0x7fffeafccaae:	mov		dword ptr [rbp - 0xe8], ecx
0x7fffeafccab4:	mov		ecx, esi
0x7fffeafccab6:	mov		esi, 1
0x7fffeafccabb:	shl		esi, cl
0x7fffeafccabd:	mov		edi, dword ptr [rbp - 0xe8]
0x7fffeafccac3:	and		edi, esi
0x7fffeafccac5:	cmp		edi, 0
0x7fffeafccac8:	jne		0x7fffeafccb1b
0x7fffeafccace:	mov		ecx, dword ptr [rbp - 0xa4]
0x7fffeafccad4:	mov		eax, 1
0x7fffeafccad9:	shl		eax, cl
0x7fffeafccadb:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafccadf:	or		eax, dword ptr [rdx + 4]
0x7fffeafccae2:	mov		dword ptr [rdx + 4], eax
0x7fffeafccae5:	mov		rdx, qword ptr [rbp - 0x58]
0x7fffeafccae9:	mov		rsi, qword ptr [rbp - 0xa0]
0x7fffeafccaf0:	mov		qword ptr [rsi], rdx
0x7fffeafccaf3:	mov		rdx, qword ptr [rbp - 0xa0]
0x7fffeafccafa:	mov		rsi, qword ptr [rbp - 0x58]
0x7fffeafccafe:	mov		qword ptr [rsi + 0x30], rdx
0x7fffeafccb02:	mov		rdx, qword ptr [rbp - 0x58]
0x7fffeafccb06:	mov		rsi, qword ptr [rbp - 0x58]
0x7fffeafccb0a:	mov		qword ptr [rsi + 0x18], rdx
0x7fffeafccb0e:	mov		rsi, qword ptr [rbp - 0x58]
0x7fffeafccb12:	mov		qword ptr [rsi + 0x10], rdx
0x7fffeafccb16:	jmp		0x7fffeafccd2e
disassembling symbol '.LBB13_68':
textAddr: 0x7fffeafccb1b, textSize: 57
0x7fffeafccb1b:	mov		rax, qword ptr [rbp - 0xa0]
0x7fffeafccb22:	mov		rax, qword ptr [rax]
0x7fffeafccb25:	mov		qword ptr [rbp - 0xb8], rax
0x7fffeafccb2c:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafccb30:	cmp		dword ptr [rbp - 0xa4], 0x1f
0x7fffeafccb37:	mov		qword ptr [rbp - 0xf0], rax
0x7fffeafccb3e:	jne		0x7fffeafccb54
0x7fffeafccb44:	xor		eax, eax
0x7fffeafccb46:	mov		ecx, eax
0x7fffeafccb48:	mov		qword ptr [rbp - 0xf8], rcx
0x7fffeafccb4f:	jmp		0x7fffeafccb76
disassembling symbol '.LBB13_70':
textAddr: 0x7fffeafccb54, textSize: 34
0x7fffeafccb54:	mov		eax, dword ptr [rbp - 0xa4]
0x7fffeafccb5a:	shr		eax, 1
0x7fffeafccb5d:	add		eax, 8
0x7fffeafccb60:	sub		eax, 2
0x7fffeafccb63:	mov		eax, eax
0x7fffeafccb65:	mov		ecx, eax
0x7fffeafccb67:	mov		edx, 0x3f
0x7fffeafccb6c:	sub		rdx, rcx
0x7fffeafccb6f:	mov		qword ptr [rbp - 0xf8], rdx
disassembling symbol '.LBB13_71':
textAddr: 0x7fffeafccb76, textSize: 27
0x7fffeafccb76:	mov		rax, qword ptr [rbp - 0xf8]
0x7fffeafccb7d:	mov		rcx, rax
0x7fffeafccb80:	mov		rax, qword ptr [rbp - 0xf0]
0x7fffeafccb87:	shl		rax, cl
0x7fffeafccb8a:	mov		qword ptr [rbp - 0xc0], rax
disassembling symbol '.LBB13_72':
textAddr: 0x7fffeafccb91, textSize: 129
0x7fffeafccb91:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafccb98:	mov		rax, qword ptr [rax + 8]
0x7fffeafccb9c:	and		rax, 0xfffffffffffffff8
0x7fffeafccba2:	cmp		rax, qword ptr [rbp - 0x50]
0x7fffeafccba6:	je		0x7fffeafccc77
0x7fffeafccbac:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafccbb3:	add		rax, 0x20
0x7fffeafccbb9:	mov		rcx, qword ptr [rbp - 0xc0]
0x7fffeafccbc0:	shr		rcx, 0x3f
0x7fffeafccbc4:	and		rcx, 1
0x7fffeafccbcb:	shl		rcx, 3
0x7fffeafccbcf:	add		rax, rcx
0x7fffeafccbd2:	mov		qword ptr [rbp - 0xc8], rax
0x7fffeafccbd9:	mov		rax, qword ptr [rbp - 0xc0]
0x7fffeafccbe0:	shl		rax, 1
0x7fffeafccbe4:	mov		qword ptr [rbp - 0xc0], rax
0x7fffeafccbeb:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafccbf2:	cmp		qword ptr [rax], 0
0x7fffeafccbf6:	je		0x7fffeafccc12
0x7fffeafccbfc:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafccc03:	mov		rax, qword ptr [rax]
0x7fffeafccc06:	mov		qword ptr [rbp - 0xb8], rax
0x7fffeafccc0d:	jmp		0x7fffeafccc72
disassembling symbol '.LBB13_75':
textAddr: 0x7fffeafccc12, textSize: 91
0x7fffeafccc12:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafccc19:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafccc1d:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafccc21:	setae		dl
0x7fffeafccc24:	and		dl, 1
0x7fffeafccc27:	movzx		esi, dl
0x7fffeafccc2a:	movsxd		rax, esi
0x7fffeafccc2d:	cmp		rax, 0
0x7fffeafccc31:	je		0x7fffeafccc6d
0x7fffeafccc37:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafccc3b:	mov		rcx, qword ptr [rbp - 0xc8]
0x7fffeafccc42:	mov		qword ptr [rcx], rax
0x7fffeafccc45:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafccc4c:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafccc50:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafccc54:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafccc58:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafccc5c:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafccc60:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafccc64:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafccc68:	jmp		0x7fffeafccd29
disassembling symbol '.LBB13_77':
textAddr: 0x7fffeafccc6d, textSize: 5
0x7fffeafccc6d:	call		0x7fffeafc4c10
disassembling symbol '.LBB13_78':
textAddr: 0x7fffeafccc72, textSize: 5
0x7fffeafccc72:	jmp		0x7fffeafccd24
disassembling symbol '.LBB13_79':
textAddr: 0x7fffeafccc77, textSize: 71
0x7fffeafccc77:	xor		eax, eax
0x7fffeafccc79:	mov		rcx, qword ptr [rbp - 0xb8]
0x7fffeafccc80:	mov		rcx, qword ptr [rcx + 0x10]
0x7fffeafccc84:	mov		qword ptr [rbp - 0xd0], rcx
0x7fffeafccc8b:	mov		rcx, qword ptr [rbp - 0xb8]
0x7fffeafccc92:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafccc96:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafccc9a:	mov		byte ptr [rbp - 0xf9], al
0x7fffeafccca0:	jb		0x7fffeafcccbe
0x7fffeafccca6:	mov		rax, qword ptr [rbp - 0xd0]
0x7fffeafcccad:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcccb1:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcccb5:	setae		dl
0x7fffeafcccb8:	mov		byte ptr [rbp - 0xf9], dl
disassembling symbol '.LBB13_81':
textAddr: 0x7fffeafcccbe, textSize: 97
0x7fffeafcccbe:	mov		al, byte ptr [rbp - 0xf9]
0x7fffeafcccc4:	and		al, 1
0x7fffeafcccc6:	movzx		ecx, al
0x7fffeafcccc9:	movsxd		rdx, ecx
0x7fffeafccccc:	cmp		rdx, 0
0x7fffeafcccd0:	je		0x7fffeafccd1f
0x7fffeafcccd6:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafcccda:	mov		rcx, qword ptr [rbp - 0xd0]
0x7fffeafccce1:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafccce5:	mov		rcx, qword ptr [rbp - 0xb8]
0x7fffeafcccec:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafcccf0:	mov		rax, qword ptr [rbp - 0xd0]
0x7fffeafcccf7:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafcccfb:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafcccff:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafccd06:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafccd0a:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafccd0e:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafccd12:	mov		qword ptr [rax + 0x30], 0
0x7fffeafccd1a:	jmp		0x7fffeafccd29
disassembling symbol '.LBB13_83':
textAddr: 0x7fffeafccd1f, textSize: 5
0x7fffeafccd1f:	call		0x7fffeafc4c10
disassembling symbol '.LBB13_84':
textAddr: 0x7fffeafccd24, textSize: 5
0x7fffeafccd24:	jmp		0x7fffeafccb91
disassembling symbol '.LBB13_85':
textAddr: 0x7fffeafccd29, textSize: 5
0x7fffeafccd29:	jmp		0x7fffeafccd2e
disassembling symbol '.LBB13_86':
textAddr: 0x7fffeafccd2e, textSize: 5
0x7fffeafccd2e:	jmp		0x7fffeafccd33
disassembling symbol '.LBB13_87':
textAddr: 0x7fffeafccd33, textSize: 5
0x7fffeafccd33:	jmp		0x7fffeafccd38
disassembling symbol '.LBB13_88':
textAddr: 0x7fffeafccd38, textSize: 21
0x7fffeafccd38:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafccd3c:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafccd40:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafccd44:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafccd48:	jmp		0x7fffeafcc4a8
disassembling symbol '.LBB13_89':
textAddr: 0x7fffeafccd4d, textSize: 30
0x7fffeafccd4d:	movsxd		rax, dword ptr [rbp - 0x14]
0x7fffeafccd51:	cmp		rax, -1
0x7fffeafccd55:	jbe		0x7fffeafccd6b
0x7fffeafccd5b:	movsxd		rax, dword ptr [rbp - 0x14]
0x7fffeafccd5f:	mov		qword ptr [rbp - 0x108], rax
0x7fffeafccd66:	jmp		0x7fffeafccd7e
disassembling symbol '.LBB13_91':
textAddr: 0x7fffeafccd6b, textSize: 19
0x7fffeafccd6b:	mov		rax, -1
0x7fffeafccd72:	mov		qword ptr [rbp - 0x108], rax
0x7fffeafccd79:	jmp		0x7fffeafccd7e
disassembling symbol '.LBB13_92':
textAddr: 0x7fffeafccd7e, textSize: 34
0x7fffeafccd7e:	mov		rax, qword ptr [rbp - 0x108]
0x7fffeafccd85:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafccd89:	mov		qword ptr [rcx + 0x38], rax
0x7fffeafccd8d:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafccd91:	add		rsp, 0x110
0x7fffeafccd98:	pop		rbp
0x7fffeafccd99:	ret		
0x7fffeafccd9a:	nop		word ptr [rax + rax]
disassembling symbol 'mspace_calloc':
textAddr: 0x7fffeafccda0, textSize: 208
0x7fffeafccda0:	push		rbp
0x7fffeafccda1:	mov		rbp, rsp
0x7fffeafccda4:	sub		rsp, 0x30
0x7fffeafccda8:	mov		qword ptr [rbp - 8], rdi
0x7fffeafccdac:	mov		qword ptr [rbp - 0x10], rsi
0x7fffeafccdb0:	mov		qword ptr [rbp - 0x18], rdx
0x7fffeafccdb4:	mov		qword ptr [rbp - 0x28], 0
0x7fffeafccdbc:	mov		rax, qword ptr [rbp - 8]
0x7fffeafccdc0:	mov		qword ptr [rbp - 0x30], rax
0x7fffeafccdc4:	cmp		qword ptr [rbp - 0x10], 0
0x7fffeafccdc9:	je		0x7fffeafcce17
0x7fffeafccdcf:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafccdd3:	imul		rax, qword ptr [rbp - 0x18]
0x7fffeafccdd8:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafccddc:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafccde0:	or		rax, qword ptr [rbp - 0x18]
0x7fffeafccde4:	and		rax, 0xffffffffffff0000
0x7fffeafccdea:	cmp		rax, 0
0x7fffeafccdee:	je		0x7fffeafcce12
0x7fffeafccdf4:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafccdf8:	xor		ecx, ecx
0x7fffeafccdfa:	mov		edx, ecx
0x7fffeafccdfc:	div		qword ptr [rbp - 0x10]
0x7fffeafcce00:	cmp		rax, qword ptr [rbp - 0x18]
0x7fffeafcce04:	je		0x7fffeafcce12
0x7fffeafcce0a:	mov		qword ptr [rbp - 0x28], -1
0x7fffeafcce12:	jmp		0x7fffeafcce17
0x7fffeafcce17:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcce1b:	mov		rsi, qword ptr [rbp - 0x28]
0x7fffeafcce1f:	mov		rdi, rax
0x7fffeafcce22:	call		0x7fffeafc8d00
0x7fffeafcce27:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafcce2b:	cmp		qword ptr [rbp - 0x20], 0
0x7fffeafcce30:	je		0x7fffeafcce5d
0x7fffeafcce36:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcce3a:	mov		rax, qword ptr [rax - 8]
0x7fffeafcce3e:	and		rax, 3
0x7fffeafcce44:	cmp		rax, 0
0x7fffeafcce48:	je		0x7fffeafcce5d
0x7fffeafcce4e:	xor		esi, esi
0x7fffeafcce50:	mov		rdi, qword ptr [rbp - 0x20]
0x7fffeafcce54:	mov		rdx, qword ptr [rbp - 0x28]
0x7fffeafcce58:	call		0x7fffeafd2a10
0x7fffeafcce5d:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcce61:	add		rsp, 0x30
0x7fffeafcce65:	pop		rbp
0x7fffeafcce66:	ret		
0x7fffeafcce67:	nop		word ptr [rax + rax]
disassembling symbol '.LBB14_4':
textAddr: 0x7fffeafcce12, textSize: 5
0x7fffeafcce12:	jmp		0x7fffeafcce17
disassembling symbol '.LBB14_5':
textAddr: 0x7fffeafcce17, textSize: 70
0x7fffeafcce17:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcce1b:	mov		rsi, qword ptr [rbp - 0x28]
0x7fffeafcce1f:	mov		rdi, rax
0x7fffeafcce22:	call		0x7fffeafc8d00
0x7fffeafcce27:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafcce2b:	cmp		qword ptr [rbp - 0x20], 0
0x7fffeafcce30:	je		0x7fffeafcce5d
0x7fffeafcce36:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcce3a:	mov		rax, qword ptr [rax - 8]
0x7fffeafcce3e:	and		rax, 3
0x7fffeafcce44:	cmp		rax, 0
0x7fffeafcce48:	je		0x7fffeafcce5d
0x7fffeafcce4e:	xor		esi, esi
0x7fffeafcce50:	mov		rdi, qword ptr [rbp - 0x20]
0x7fffeafcce54:	mov		rdx, qword ptr [rbp - 0x28]
0x7fffeafcce58:	call		0x7fffeafd2a10
disassembling symbol '.LBB14_8':
textAddr: 0x7fffeafcce5d, textSize: 19
0x7fffeafcce5d:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcce61:	add		rsp, 0x30
0x7fffeafcce65:	pop		rbp
0x7fffeafcce66:	ret		
0x7fffeafcce67:	nop		word ptr [rax + rax]
disassembling symbol 'mspace_realloc':
textAddr: 0x7fffeafcce70, textSize: 432
0x7fffeafcce70:	push		rbp
0x7fffeafcce71:	mov		rbp, rsp
0x7fffeafcce74:	sub		rsp, 0x70
0x7fffeafcce78:	mov		qword ptr [rbp - 8], rdi
0x7fffeafcce7c:	mov		qword ptr [rbp - 0x10], rsi
0x7fffeafcce80:	mov		qword ptr [rbp - 0x18], rdx
0x7fffeafcce84:	mov		qword ptr [rbp - 0x20], 0
0x7fffeafcce8c:	cmp		qword ptr [rbp - 0x10], 0
0x7fffeafcce91:	jne		0x7fffeafccead
0x7fffeafcce97:	mov		rdi, qword ptr [rbp - 8]
0x7fffeafcce9b:	mov		rsi, qword ptr [rbp - 0x18]
0x7fffeafcce9f:	call		0x7fffeafc8d00
0x7fffeafccea4:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafccea8:	jmp		0x7fffeafcd00c
0x7fffeafccead:	cmp		qword ptr [rbp - 0x18], -0x80
0x7fffeafcceb2:	jb		0x7fffeafccec8
0x7fffeafcceb8:	call		0x7fffeafc3cb0
0x7fffeafccebd:	mov		dword ptr [rax], 0xc
0x7fffeafccec3:	jmp		0x7fffeafcd007
0x7fffeafccec8:	cmp		qword ptr [rbp - 0x18], 0x17
0x7fffeafccecd:	jae		0x7fffeafccee1
0x7fffeafcced3:	mov		eax, 0x20
0x7fffeafcced8:	mov		qword ptr [rbp - 0x50], rax
0x7fffeafccedc:	jmp		0x7fffeafccefb
0x7fffeafccee1:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafccee5:	add		rax, 8
0x7fffeafcceeb:	add		rax, 0xf
0x7fffeafccef1:	and		rax, 0xfffffffffffffff0
0x7fffeafccef7:	mov		qword ptr [rbp - 0x50], rax
0x7fffeafccefb:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafcceff:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafccf03:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafccf07:	add		rax, -0x10
0x7fffeafccf0d:	mov		qword ptr [rbp - 0x30], rax
0x7fffeafccf11:	mov		rax, qword ptr [rbp - 8]
0x7fffeafccf15:	mov		qword ptr [rbp - 0x38], rax
0x7fffeafccf19:	mov		rdi, qword ptr [rbp - 0x38]
0x7fffeafccf1d:	mov		rsi, qword ptr [rbp - 0x30]
0x7fffeafccf21:	mov		rdx, qword ptr [rbp - 0x28]
0x7fffeafccf25:	mov		ecx, 1
0x7fffeafccf2a:	call		0x7fffeafcd020
0x7fffeafccf2f:	mov		qword ptr [rbp - 0x40], rax
0x7fffeafccf33:	cmp		qword ptr [rbp - 0x40], 0
0x7fffeafccf38:	je		0x7fffeafccf51
0x7fffeafccf3e:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafccf42:	add		rax, 0x10
0x7fffeafccf48:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafccf4c:	jmp		0x7fffeafcd002
0x7fffeafccf51:	mov		rax, qword ptr [rbp - 0x38]
0x7fffeafccf55:	mov		rsi, qword ptr [rbp - 0x18]
0x7fffeafccf59:	mov		rdi, rax
0x7fffeafccf5c:	call		0x7fffeafc8d00
0x7fffeafccf61:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafccf65:	cmp		qword ptr [rbp - 0x20], 0
0x7fffeafccf6a:	je		0x7fffeafccffd
0x7fffeafccf70:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafccf74:	mov		rax, qword ptr [rax + 8]
0x7fffeafccf78:	and		rax, 0xfffffffffffffff8
0x7fffeafccf7e:	mov		rcx, qword ptr [rbp - 0x30]
0x7fffeafccf82:	mov		rcx, qword ptr [rcx + 8]
0x7fffeafccf86:	and		rcx, 3
0x7fffeafccf8d:	cmp		rcx, 0
0x7fffeafccf91:	mov		ecx, 0x10
0x7fffeafccf96:	mov		edx, 8
0x7fffeafccf9b:	cmove		rdx, rcx
0x7fffeafccf9f:	sub		rax, rdx
0x7fffeafccfa2:	mov		qword ptr [rbp - 0x48], rax
0x7fffeafccfa6:	mov		rdi, qword ptr [rbp - 0x20]
0x7fffeafccfaa:	mov		rsi, qword ptr [rbp - 0x10]
0x7fffeafccfae:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafccfb2:	cmp		rax, qword ptr [rbp - 0x18]
0x7fffeafccfb6:	mov		qword ptr [rbp - 0x58], rdi
0x7fffeafccfba:	mov		qword ptr [rbp - 0x60], rsi
0x7fffeafccfbe:	jae		0x7fffeafccfd1
0x7fffeafccfc4:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafccfc8:	mov		qword ptr [rbp - 0x68], rax
0x7fffeafccfcc:	jmp		0x7fffeafccfd9
0x7fffeafccfd1:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafccfd5:	mov		qword ptr [rbp - 0x68], rax
0x7fffeafccfd9:	mov		rax, qword ptr [rbp - 0x68]
0x7fffeafccfdd:	mov		rdi, qword ptr [rbp - 0x58]
0x7fffeafccfe1:	mov		rsi, qword ptr [rbp - 0x60]
0x7fffeafccfe5:	mov		rdx, rax
0x7fffeafccfe8:	call		0x7fffeafd2590
0x7fffeafccfed:	mov		rax, qword ptr [rbp - 0x38]
0x7fffeafccff1:	mov		rsi, qword ptr [rbp - 0x10]
0x7fffeafccff5:	mov		rdi, rax
0x7fffeafccff8:	call		0x7fffeafcae10
0x7fffeafccffd:	jmp		0x7fffeafcd002
0x7fffeafcd002:	jmp		0x7fffeafcd007
0x7fffeafcd007:	jmp		0x7fffeafcd00c
0x7fffeafcd00c:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcd010:	add		rsp, 0x70
0x7fffeafcd014:	pop		rbp
0x7fffeafcd015:	ret		
0x7fffeafcd016:	nop		word ptr cs:[rax + rax]
disassembling symbol '.LBB15_2':
textAddr: 0x7fffeafccead, textSize: 27
0x7fffeafccead:	cmp		qword ptr [rbp - 0x18], -0x80
0x7fffeafcceb2:	jb		0x7fffeafccec8
0x7fffeafcceb8:	call		0x7fffeafc3cb0
0x7fffeafccebd:	mov		dword ptr [rax], 0xc
0x7fffeafccec3:	jmp		0x7fffeafcd007
disassembling symbol '.LBB15_4':
textAddr: 0x7fffeafccec8, textSize: 25
0x7fffeafccec8:	cmp		qword ptr [rbp - 0x18], 0x17
0x7fffeafccecd:	jae		0x7fffeafccee1
0x7fffeafcced3:	mov		eax, 0x20
0x7fffeafcced8:	mov		qword ptr [rbp - 0x50], rax
0x7fffeafccedc:	jmp		0x7fffeafccefb
disassembling symbol '.LBB15_6':
textAddr: 0x7fffeafccee1, textSize: 26
0x7fffeafccee1:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafccee5:	add		rax, 8
0x7fffeafcceeb:	add		rax, 0xf
0x7fffeafccef1:	and		rax, 0xfffffffffffffff0
0x7fffeafccef7:	mov		qword ptr [rbp - 0x50], rax
disassembling symbol '.LBB15_7':
textAddr: 0x7fffeafccefb, textSize: 86
0x7fffeafccefb:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafcceff:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafccf03:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafccf07:	add		rax, -0x10
0x7fffeafccf0d:	mov		qword ptr [rbp - 0x30], rax
0x7fffeafccf11:	mov		rax, qword ptr [rbp - 8]
0x7fffeafccf15:	mov		qword ptr [rbp - 0x38], rax
0x7fffeafccf19:	mov		rdi, qword ptr [rbp - 0x38]
0x7fffeafccf1d:	mov		rsi, qword ptr [rbp - 0x30]
0x7fffeafccf21:	mov		rdx, qword ptr [rbp - 0x28]
0x7fffeafccf25:	mov		ecx, 1
0x7fffeafccf2a:	call		0x7fffeafcd020
0x7fffeafccf2f:	mov		qword ptr [rbp - 0x40], rax
0x7fffeafccf33:	cmp		qword ptr [rbp - 0x40], 0
0x7fffeafccf38:	je		0x7fffeafccf51
0x7fffeafccf3e:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafccf42:	add		rax, 0x10
0x7fffeafccf48:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafccf4c:	jmp		0x7fffeafcd002
disassembling symbol '.LBB15_9':
textAddr: 0x7fffeafccf51, textSize: 128
0x7fffeafccf51:	mov		rax, qword ptr [rbp - 0x38]
0x7fffeafccf55:	mov		rsi, qword ptr [rbp - 0x18]
0x7fffeafccf59:	mov		rdi, rax
0x7fffeafccf5c:	call		0x7fffeafc8d00
0x7fffeafccf61:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafccf65:	cmp		qword ptr [rbp - 0x20], 0
0x7fffeafccf6a:	je		0x7fffeafccffd
0x7fffeafccf70:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafccf74:	mov		rax, qword ptr [rax + 8]
0x7fffeafccf78:	and		rax, 0xfffffffffffffff8
0x7fffeafccf7e:	mov		rcx, qword ptr [rbp - 0x30]
0x7fffeafccf82:	mov		rcx, qword ptr [rcx + 8]
0x7fffeafccf86:	and		rcx, 3
0x7fffeafccf8d:	cmp		rcx, 0
0x7fffeafccf91:	mov		ecx, 0x10
0x7fffeafccf96:	mov		edx, 8
0x7fffeafccf9b:	cmove		rdx, rcx
0x7fffeafccf9f:	sub		rax, rdx
0x7fffeafccfa2:	mov		qword ptr [rbp - 0x48], rax
0x7fffeafccfa6:	mov		rdi, qword ptr [rbp - 0x20]
0x7fffeafccfaa:	mov		rsi, qword ptr [rbp - 0x10]
0x7fffeafccfae:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafccfb2:	cmp		rax, qword ptr [rbp - 0x18]
0x7fffeafccfb6:	mov		qword ptr [rbp - 0x58], rdi
0x7fffeafccfba:	mov		qword ptr [rbp - 0x60], rsi
0x7fffeafccfbe:	jae		0x7fffeafccfd1
0x7fffeafccfc4:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafccfc8:	mov		qword ptr [rbp - 0x68], rax
0x7fffeafccfcc:	jmp		0x7fffeafccfd9
disassembling symbol '.LBB15_12':
textAddr: 0x7fffeafccfd1, textSize: 8
0x7fffeafccfd1:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafccfd5:	mov		qword ptr [rbp - 0x68], rax
disassembling symbol '.LBB15_13':
textAddr: 0x7fffeafccfd9, textSize: 36
0x7fffeafccfd9:	mov		rax, qword ptr [rbp - 0x68]
0x7fffeafccfdd:	mov		rdi, qword ptr [rbp - 0x58]
0x7fffeafccfe1:	mov		rsi, qword ptr [rbp - 0x60]
0x7fffeafccfe5:	mov		rdx, rax
0x7fffeafccfe8:	call		0x7fffeafd2590
0x7fffeafccfed:	mov		rax, qword ptr [rbp - 0x38]
0x7fffeafccff1:	mov		rsi, qword ptr [rbp - 0x10]
0x7fffeafccff5:	mov		rdi, rax
0x7fffeafccff8:	call		0x7fffeafcae10
disassembling symbol '.LBB15_14':
textAddr: 0x7fffeafccffd, textSize: 5
0x7fffeafccffd:	jmp		0x7fffeafcd002
disassembling symbol '.LBB15_15':
textAddr: 0x7fffeafcd002, textSize: 5
0x7fffeafcd002:	jmp		0x7fffeafcd007
disassembling symbol '.LBB15_16':
textAddr: 0x7fffeafcd007, textSize: 5
0x7fffeafcd007:	jmp		0x7fffeafcd00c
disassembling symbol '.LBB15_17':
textAddr: 0x7fffeafcd00c, textSize: 20
0x7fffeafcd00c:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcd010:	add		rsp, 0x70
0x7fffeafcd014:	pop		rbp
0x7fffeafcd015:	ret		
0x7fffeafcd016:	nop		word ptr cs:[rax + rax]
disassembling symbol 'try_realloc_chunk':
textAddr: 0x7fffeafcd020, textSize: 3024
0x7fffeafcd020:	push		rbp
0x7fffeafcd021:	mov		rbp, rsp
0x7fffeafcd024:	sub		rsp, 0x110
0x7fffeafcd02b:	xor		eax, eax
0x7fffeafcd02d:	mov		qword ptr [rbp - 8], rdi
0x7fffeafcd031:	mov		qword ptr [rbp - 0x10], rsi
0x7fffeafcd035:	mov		qword ptr [rbp - 0x18], rdx
0x7fffeafcd039:	mov		dword ptr [rbp - 0x1c], ecx
0x7fffeafcd03c:	mov		qword ptr [rbp - 0x28], 0
0x7fffeafcd044:	mov		rdx, qword ptr [rbp - 0x10]
0x7fffeafcd048:	mov		rdx, qword ptr [rdx + 8]
0x7fffeafcd04c:	and		rdx, 0xfffffffffffffff8
0x7fffeafcd053:	mov		qword ptr [rbp - 0x30], rdx
0x7fffeafcd057:	mov		rdx, qword ptr [rbp - 0x10]
0x7fffeafcd05b:	add		rdx, qword ptr [rbp - 0x30]
0x7fffeafcd05f:	mov		qword ptr [rbp - 0x38], rdx
0x7fffeafcd063:	mov		rdx, qword ptr [rbp - 0x10]
0x7fffeafcd067:	mov		rsi, qword ptr [rbp - 8]
0x7fffeafcd06b:	cmp		rdx, qword ptr [rsi + 0x18]
0x7fffeafcd06f:	mov		byte ptr [rbp - 0x109], al
0x7fffeafcd075:	jb		0x7fffeafcd0d0
0x7fffeafcd07b:	xor		eax, eax
0x7fffeafcd07d:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcd081:	mov		rcx, qword ptr [rcx + 8]
0x7fffeafcd085:	and		rcx, 3
0x7fffeafcd08c:	cmp		rcx, 1
0x7fffeafcd090:	mov		byte ptr [rbp - 0x109], al
0x7fffeafcd096:	je		0x7fffeafcd0d0
0x7fffeafcd09c:	xor		eax, eax
0x7fffeafcd09e:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcd0a2:	mov		rdx, qword ptr [rbp - 0x38]
0x7fffeafcd0a6:	cmp		rcx, rdx
0x7fffeafcd0a9:	mov		byte ptr [rbp - 0x109], al
0x7fffeafcd0af:	jae		0x7fffeafcd0d0
0x7fffeafcd0b5:	mov		rax, qword ptr [rbp - 0x38]
0x7fffeafcd0b9:	mov		rax, qword ptr [rax + 8]
0x7fffeafcd0bd:	and		rax, 1
0x7fffeafcd0c3:	cmp		rax, 0
0x7fffeafcd0c7:	setne		cl
0x7fffeafcd0ca:	mov		byte ptr [rbp - 0x109], cl
0x7fffeafcd0d0:	mov		al, byte ptr [rbp - 0x109]
0x7fffeafcd0d6:	and		al, 1
0x7fffeafcd0d8:	movzx		ecx, al
0x7fffeafcd0db:	movsxd		rdx, ecx
0x7fffeafcd0de:	cmp		rdx, 0
0x7fffeafcd0e2:	je		0x7fffeafcdbd6
0x7fffeafcd0e8:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcd0ec:	mov		rax, qword ptr [rax + 8]
0x7fffeafcd0f0:	and		rax, 3
0x7fffeafcd0f6:	cmp		rax, 0
0x7fffeafcd0fa:	jne		0x7fffeafcd11d
0x7fffeafcd100:	mov		rdi, qword ptr [rbp - 8]
0x7fffeafcd104:	mov		rsi, qword ptr [rbp - 0x10]
0x7fffeafcd108:	mov		rdx, qword ptr [rbp - 0x18]
0x7fffeafcd10c:	mov		ecx, dword ptr [rbp - 0x1c]
0x7fffeafcd10f:	call		0x7fffeafd0f50
0x7fffeafcd114:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafcd118:	jmp		0x7fffeafcdbd1
0x7fffeafcd11d:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcd121:	cmp		rax, qword ptr [rbp - 0x18]
0x7fffeafcd125:	jb		0x7fffeafcd1de
0x7fffeafcd12b:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcd12f:	sub		rax, qword ptr [rbp - 0x18]
0x7fffeafcd133:	mov		qword ptr [rbp - 0x40], rax
0x7fffeafcd137:	cmp		qword ptr [rbp - 0x40], 0x20
0x7fffeafcd13c:	jb		0x7fffeafcd1d1
0x7fffeafcd142:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcd146:	add		rax, qword ptr [rbp - 0x18]
0x7fffeafcd14a:	mov		qword ptr [rbp - 0x48], rax
0x7fffeafcd14e:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcd152:	mov		rax, qword ptr [rax + 8]
0x7fffeafcd156:	and		rax, 1
0x7fffeafcd15c:	or		rax, qword ptr [rbp - 0x18]
0x7fffeafcd160:	or		rax, 2
0x7fffeafcd166:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcd16a:	mov		qword ptr [rcx + 8], rax
0x7fffeafcd16e:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcd172:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafcd176:	mov		rdx, qword ptr [rax + rcx + 8]
0x7fffeafcd17b:	or		rdx, 1
0x7fffeafcd182:	mov		qword ptr [rax + rcx + 8], rdx
0x7fffeafcd187:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafcd18b:	mov		rax, qword ptr [rax + 8]
0x7fffeafcd18f:	and		rax, 1
0x7fffeafcd195:	or		rax, qword ptr [rbp - 0x40]
0x7fffeafcd199:	or		rax, 2
0x7fffeafcd19f:	mov		rcx, qword ptr [rbp - 0x48]
0x7fffeafcd1a3:	mov		qword ptr [rcx + 8], rax
0x7fffeafcd1a7:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafcd1ab:	mov		rcx, qword ptr [rbp - 0x40]
0x7fffeafcd1af:	mov		rdx, qword ptr [rax + rcx + 8]
0x7fffeafcd1b4:	or		rdx, 1
0x7fffeafcd1bb:	mov		qword ptr [rax + rcx + 8], rdx
0x7fffeafcd1c0:	mov		rdi, qword ptr [rbp - 8]
0x7fffeafcd1c4:	mov		rsi, qword ptr [rbp - 0x48]
0x7fffeafcd1c8:	mov		rdx, qword ptr [rbp - 0x40]
0x7fffeafcd1cc:	call		0x7fffeafd1110
0x7fffeafcd1d1:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcd1d5:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafcd1d9:	jmp		0x7fffeafcdbcc
0x7fffeafcd1de:	mov		rax, qword ptr [rbp - 0x38]
0x7fffeafcd1e2:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcd1e6:	cmp		rax, qword ptr [rcx + 0x28]
0x7fffeafcd1ea:	jne		0x7fffeafcd29e
0x7fffeafcd1f0:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcd1f4:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcd1f8:	add		rax, qword ptr [rcx + 0x10]
0x7fffeafcd1fc:	cmp		rax, qword ptr [rbp - 0x18]
0x7fffeafcd200:	jbe		0x7fffeafcd299
0x7fffeafcd206:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcd20a:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcd20e:	add		rax, qword ptr [rcx + 0x10]
0x7fffeafcd212:	mov		qword ptr [rbp - 0x50], rax
0x7fffeafcd216:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafcd21a:	sub		rax, qword ptr [rbp - 0x18]
0x7fffeafcd21e:	mov		qword ptr [rbp - 0x58], rax
0x7fffeafcd222:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcd226:	add		rax, qword ptr [rbp - 0x18]
0x7fffeafcd22a:	mov		qword ptr [rbp - 0x60], rax
0x7fffeafcd22e:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcd232:	mov		rax, qword ptr [rax + 8]
0x7fffeafcd236:	and		rax, 1
0x7fffeafcd23c:	or		rax, qword ptr [rbp - 0x18]
0x7fffeafcd240:	or		rax, 2
0x7fffeafcd246:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcd24a:	mov		qword ptr [rcx + 8], rax
0x7fffeafcd24e:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcd252:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafcd256:	mov		rdx, qword ptr [rax + rcx + 8]
0x7fffeafcd25b:	or		rdx, 1
0x7fffeafcd262:	mov		qword ptr [rax + rcx + 8], rdx
0x7fffeafcd267:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafcd26b:	or		rax, 1
0x7fffeafcd271:	mov		rcx, qword ptr [rbp - 0x60]
0x7fffeafcd275:	mov		qword ptr [rcx + 8], rax
0x7fffeafcd279:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafcd27d:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcd281:	mov		qword ptr [rcx + 0x28], rax
0x7fffeafcd285:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafcd289:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcd28d:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafcd291:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcd295:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafcd299:	jmp		0x7fffeafcdbc7
0x7fffeafcd29e:	mov		rax, qword ptr [rbp - 0x38]
0x7fffeafcd2a2:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcd2a6:	cmp		rax, qword ptr [rcx + 0x20]
0x7fffeafcd2aa:	jne		0x7fffeafcd3ff
0x7fffeafcd2b0:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcd2b4:	mov		rax, qword ptr [rax + 8]
0x7fffeafcd2b8:	mov		qword ptr [rbp - 0x68], rax
0x7fffeafcd2bc:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcd2c0:	add		rax, qword ptr [rbp - 0x68]
0x7fffeafcd2c4:	cmp		rax, qword ptr [rbp - 0x18]
0x7fffeafcd2c8:	jb		0x7fffeafcd3fa
0x7fffeafcd2ce:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcd2d2:	add		rax, qword ptr [rbp - 0x68]
0x7fffeafcd2d6:	sub		rax, qword ptr [rbp - 0x18]
0x7fffeafcd2da:	mov		qword ptr [rbp - 0x70], rax
0x7fffeafcd2de:	cmp		qword ptr [rbp - 0x70], 0x20
0x7fffeafcd2e3:	jb		0x7fffeafcd38c
0x7fffeafcd2e9:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcd2ed:	add		rax, qword ptr [rbp - 0x18]
0x7fffeafcd2f1:	mov		qword ptr [rbp - 0x78], rax
0x7fffeafcd2f5:	mov		rax, qword ptr [rbp - 0x78]
0x7fffeafcd2f9:	add		rax, qword ptr [rbp - 0x70]
0x7fffeafcd2fd:	mov		qword ptr [rbp - 0x80], rax
0x7fffeafcd301:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcd305:	mov		rax, qword ptr [rax + 8]
0x7fffeafcd309:	and		rax, 1
0x7fffeafcd30f:	or		rax, qword ptr [rbp - 0x18]
0x7fffeafcd313:	or		rax, 2
0x7fffeafcd319:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcd31d:	mov		qword ptr [rcx + 8], rax
0x7fffeafcd321:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcd325:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafcd329:	mov		rdx, qword ptr [rax + rcx + 8]
0x7fffeafcd32e:	or		rdx, 1
0x7fffeafcd335:	mov		qword ptr [rax + rcx + 8], rdx
0x7fffeafcd33a:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafcd33e:	or		rax, 1
0x7fffeafcd344:	mov		rcx, qword ptr [rbp - 0x78]
0x7fffeafcd348:	mov		qword ptr [rcx + 8], rax
0x7fffeafcd34c:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafcd350:	mov		rcx, qword ptr [rbp - 0x78]
0x7fffeafcd354:	mov		rdx, qword ptr [rbp - 0x70]
0x7fffeafcd358:	mov		qword ptr [rcx + rdx], rax
0x7fffeafcd35c:	mov		rax, qword ptr [rbp - 0x80]
0x7fffeafcd360:	mov		rcx, qword ptr [rax + 8]
0x7fffeafcd364:	and		rcx, 0xfffffffffffffffe
0x7fffeafcd36b:	mov		qword ptr [rax + 8], rcx
0x7fffeafcd36f:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafcd373:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcd377:	mov		qword ptr [rcx + 8], rax
0x7fffeafcd37b:	mov		rax, qword ptr [rbp - 0x78]
0x7fffeafcd37f:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcd383:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafcd387:	jmp		0x7fffeafcd3f2
0x7fffeafcd38c:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcd390:	add		rax, qword ptr [rbp - 0x68]
0x7fffeafcd394:	mov		qword ptr [rbp - 0x88], rax
0x7fffeafcd39b:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcd39f:	mov		rax, qword ptr [rax + 8]
0x7fffeafcd3a3:	and		rax, 1
0x7fffeafcd3a9:	or		rax, qword ptr [rbp - 0x88]
0x7fffeafcd3b0:	or		rax, 2
0x7fffeafcd3b6:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcd3ba:	mov		qword ptr [rcx + 8], rax
0x7fffeafcd3be:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcd3c2:	mov		rcx, qword ptr [rbp - 0x88]
0x7fffeafcd3c9:	mov		rdx, qword ptr [rax + rcx + 8]
0x7fffeafcd3ce:	or		rdx, 1
0x7fffeafcd3d5:	mov		qword ptr [rax + rcx + 8], rdx
0x7fffeafcd3da:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcd3de:	mov		qword ptr [rax + 8], 0
0x7fffeafcd3e6:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcd3ea:	mov		qword ptr [rax + 0x20], 0
0x7fffeafcd3f2:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcd3f6:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafcd3fa:	jmp		0x7fffeafcdbc2
0x7fffeafcd3ff:	mov		rax, qword ptr [rbp - 0x38]
0x7fffeafcd403:	mov		rax, qword ptr [rax + 8]
0x7fffeafcd407:	and		rax, 2
0x7fffeafcd40d:	cmp		rax, 0
0x7fffeafcd411:	jne		0x7fffeafcdbbd
0x7fffeafcd417:	mov		rax, qword ptr [rbp - 0x38]
0x7fffeafcd41b:	mov		rax, qword ptr [rax + 8]
0x7fffeafcd41f:	and		rax, 0xfffffffffffffff8
0x7fffeafcd425:	mov		qword ptr [rbp - 0x90], rax
0x7fffeafcd42c:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcd430:	add		rax, qword ptr [rbp - 0x90]
0x7fffeafcd437:	cmp		rax, qword ptr [rbp - 0x18]
0x7fffeafcd43b:	jb		0x7fffeafcdbb8
0x7fffeafcd441:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcd445:	add		rax, qword ptr [rbp - 0x90]
0x7fffeafcd44c:	sub		rax, qword ptr [rbp - 0x18]
0x7fffeafcd450:	mov		qword ptr [rbp - 0x98], rax
0x7fffeafcd457:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafcd45e:	shr		rax, 3
0x7fffeafcd462:	cmp		rax, 0x20
0x7fffeafcd466:	jae		0x7fffeafcd632
0x7fffeafcd46c:	mov		rax, qword ptr [rbp - 0x38]
0x7fffeafcd470:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafcd474:	mov		qword ptr [rbp - 0xa0], rax
0x7fffeafcd47b:	mov		rax, qword ptr [rbp - 0x38]
0x7fffeafcd47f:	mov		rax, qword ptr [rax + 0x18]
0x7fffeafcd483:	mov		qword ptr [rbp - 0xa8], rax
0x7fffeafcd48a:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafcd491:	shr		rax, 3
0x7fffeafcd495:	mov		dword ptr [rbp - 0xac], eax
0x7fffeafcd49b:	mov		rcx, qword ptr [rbp - 0xa0]
0x7fffeafcd4a2:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafcd4a6:	add		rdx, 0x48
0x7fffeafcd4ad:	mov		eax, dword ptr [rbp - 0xac]
0x7fffeafcd4b3:	shl		eax, 1
0x7fffeafcd4b6:	mov		eax, eax
0x7fffeafcd4b8:	mov		esi, eax
0x7fffeafcd4ba:	shl		rsi, 3
0x7fffeafcd4be:	add		rdx, rsi
0x7fffeafcd4c1:	cmp		rcx, rdx
0x7fffeafcd4c4:	mov		dil, 1
0x7fffeafcd4c7:	mov		byte ptr [rbp - 0x10a], dil
0x7fffeafcd4ce:	je		0x7fffeafcd515
0x7fffeafcd4d4:	xor		eax, eax
0x7fffeafcd4d6:	mov		rcx, qword ptr [rbp - 0xa0]
0x7fffeafcd4dd:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafcd4e1:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafcd4e5:	mov		byte ptr [rbp - 0x10b], al
0x7fffeafcd4eb:	jb		0x7fffeafcd509
0x7fffeafcd4f1:	mov		rax, qword ptr [rbp - 0xa0]
0x7fffeafcd4f8:	mov		rax, qword ptr [rax + 0x18]
0x7fffeafcd4fc:	cmp		rax, qword ptr [rbp - 0x38]
0x7fffeafcd500:	sete		cl
0x7fffeafcd503:	mov		byte ptr [rbp - 0x10b], cl
0x7fffeafcd509:	mov		al, byte ptr [rbp - 0x10b]
0x7fffeafcd50f:	mov		byte ptr [rbp - 0x10a], al
0x7fffeafcd515:	mov		al, byte ptr [rbp - 0x10a]
0x7fffeafcd51b:	and		al, 1
0x7fffeafcd51d:	movzx		ecx, al
0x7fffeafcd520:	movsxd		rdx, ecx
0x7fffeafcd523:	cmp		rdx, 0
0x7fffeafcd527:	je		0x7fffeafcd628
0x7fffeafcd52d:	mov		rax, qword ptr [rbp - 0xa8]
0x7fffeafcd534:	cmp		rax, qword ptr [rbp - 0xa0]
0x7fffeafcd53b:	jne		0x7fffeafcd55e
0x7fffeafcd541:	mov		ecx, dword ptr [rbp - 0xac]
0x7fffeafcd547:	mov		eax, 1
0x7fffeafcd54c:	shl		eax, cl
0x7fffeafcd54e:	xor		eax, 0xffffffff
0x7fffeafcd551:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafcd555:	and		eax, dword ptr [rdx]
0x7fffeafcd557:	mov		dword ptr [rdx], eax
0x7fffeafcd559:	jmp		0x7fffeafcd623
0x7fffeafcd55e:	mov		rax, qword ptr [rbp - 0xa8]
0x7fffeafcd565:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcd569:	add		rcx, 0x48
0x7fffeafcd570:	mov		edx, dword ptr [rbp - 0xac]
0x7fffeafcd576:	shl		edx, 1
0x7fffeafcd579:	mov		edx, edx
0x7fffeafcd57b:	mov		esi, edx
0x7fffeafcd57d:	shl		rsi, 3
0x7fffeafcd581:	add		rcx, rsi
0x7fffeafcd584:	cmp		rax, rcx
0x7fffeafcd587:	mov		dil, 1
0x7fffeafcd58a:	mov		byte ptr [rbp - 0x10c], dil
0x7fffeafcd591:	je		0x7fffeafcd5d8
0x7fffeafcd597:	xor		eax, eax
0x7fffeafcd599:	mov		rcx, qword ptr [rbp - 0xa8]
0x7fffeafcd5a0:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafcd5a4:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafcd5a8:	mov		byte ptr [rbp - 0x10d], al
0x7fffeafcd5ae:	jb		0x7fffeafcd5cc
0x7fffeafcd5b4:	mov		rax, qword ptr [rbp - 0xa8]
0x7fffeafcd5bb:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafcd5bf:	cmp		rax, qword ptr [rbp - 0x38]
0x7fffeafcd5c3:	sete		cl
0x7fffeafcd5c6:	mov		byte ptr [rbp - 0x10d], cl
0x7fffeafcd5cc:	mov		al, byte ptr [rbp - 0x10d]
0x7fffeafcd5d2:	mov		byte ptr [rbp - 0x10c], al
0x7fffeafcd5d8:	mov		al, byte ptr [rbp - 0x10c]
0x7fffeafcd5de:	and		al, 1
0x7fffeafcd5e0:	movzx		ecx, al
0x7fffeafcd5e3:	movsxd		rdx, ecx
0x7fffeafcd5e6:	cmp		rdx, 0
0x7fffeafcd5ea:	je		0x7fffeafcd619
0x7fffeafcd5f0:	mov		rax, qword ptr [rbp - 0xa8]
0x7fffeafcd5f7:	mov		rcx, qword ptr [rbp - 0xa0]
0x7fffeafcd5fe:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafcd602:	mov		rax, qword ptr [rbp - 0xa0]
0x7fffeafcd609:	mov		rcx, qword ptr [rbp - 0xa8]
0x7fffeafcd610:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafcd614:	jmp		0x7fffeafcd61e
0x7fffeafcd619:	call		0x7fffeafc4c10
0x7fffeafcd61e:	jmp		0x7fffeafcd623
0x7fffeafcd623:	jmp		0x7fffeafcd62d
0x7fffeafcd628:	call		0x7fffeafc4c10
0x7fffeafcd62d:	jmp		0x7fffeafcdaa5
0x7fffeafcd632:	mov		rax, qword ptr [rbp - 0x38]
0x7fffeafcd636:	mov		qword ptr [rbp - 0xb8], rax
0x7fffeafcd63d:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafcd644:	mov		rax, qword ptr [rax + 0x30]
0x7fffeafcd648:	mov		qword ptr [rbp - 0xc0], rax
0x7fffeafcd64f:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafcd656:	mov		rax, qword ptr [rax + 0x18]
0x7fffeafcd65a:	cmp		rax, qword ptr [rbp - 0xb8]
0x7fffeafcd661:	je		0x7fffeafcd72e
0x7fffeafcd667:	xor		eax, eax
0x7fffeafcd669:	mov		rcx, qword ptr [rbp - 0xb8]
0x7fffeafcd670:	mov		rcx, qword ptr [rcx + 0x10]
0x7fffeafcd674:	mov		qword ptr [rbp - 0xd0], rcx
0x7fffeafcd67b:	mov		rcx, qword ptr [rbp - 0xb8]
0x7fffeafcd682:	mov		rcx, qword ptr [rcx + 0x18]
0x7fffeafcd686:	mov		qword ptr [rbp - 0xc8], rcx
0x7fffeafcd68d:	mov		rcx, qword ptr [rbp - 0xd0]
0x7fffeafcd694:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafcd698:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafcd69c:	mov		byte ptr [rbp - 0x10e], al
0x7fffeafcd6a2:	jb		0x7fffeafcd6e3
0x7fffeafcd6a8:	xor		eax, eax
0x7fffeafcd6aa:	mov		rcx, qword ptr [rbp - 0xd0]
0x7fffeafcd6b1:	mov		rcx, qword ptr [rcx + 0x18]
0x7fffeafcd6b5:	cmp		rcx, qword ptr [rbp - 0xb8]
0x7fffeafcd6bc:	mov		byte ptr [rbp - 0x10e], al
0x7fffeafcd6c2:	jne		0x7fffeafcd6e3
0x7fffeafcd6c8:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafcd6cf:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafcd6d3:	cmp		rax, qword ptr [rbp - 0xb8]
0x7fffeafcd6da:	sete		cl
0x7fffeafcd6dd:	mov		byte ptr [rbp - 0x10e], cl
0x7fffeafcd6e3:	mov		al, byte ptr [rbp - 0x10e]
0x7fffeafcd6e9:	and		al, 1
0x7fffeafcd6eb:	movzx		ecx, al
0x7fffeafcd6ee:	movsxd		rdx, ecx
0x7fffeafcd6f1:	cmp		rdx, 0
0x7fffeafcd6f5:	je		0x7fffeafcd724
0x7fffeafcd6fb:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafcd702:	mov		rcx, qword ptr [rbp - 0xd0]
0x7fffeafcd709:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafcd70d:	mov		rax, qword ptr [rbp - 0xd0]
0x7fffeafcd714:	mov		rcx, qword ptr [rbp - 0xc8]
0x7fffeafcd71b:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafcd71f:	jmp		0x7fffeafcd729
0x7fffeafcd724:	call		0x7fffeafc4c10
0x7fffeafcd729:	jmp		0x7fffeafcd863
0x7fffeafcd72e:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafcd735:	mov		rcx, rax
0x7fffeafcd738:	add		rcx, 0x20
0x7fffeafcd73f:	add		rcx, 8
0x7fffeafcd746:	mov		qword ptr [rbp - 0xd8], rcx
0x7fffeafcd74d:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafcd751:	mov		qword ptr [rbp - 0xc8], rax
0x7fffeafcd758:	cmp		rax, 0
0x7fffeafcd75c:	jne		0x7fffeafcd78f
0x7fffeafcd762:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafcd769:	mov		rcx, rax
0x7fffeafcd76c:	add		rcx, 0x20
0x7fffeafcd773:	mov		qword ptr [rbp - 0xd8], rcx
0x7fffeafcd77a:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafcd77e:	mov		qword ptr [rbp - 0xc8], rax
0x7fffeafcd785:	cmp		rax, 0
0x7fffeafcd789:	je		0x7fffeafcd85e
0x7fffeafcd78f:	jmp		0x7fffeafcd794
0x7fffeafcd794:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafcd79b:	mov		rcx, rax
0x7fffeafcd79e:	add		rcx, 0x20
0x7fffeafcd7a5:	add		rcx, 8
0x7fffeafcd7ac:	mov		qword ptr [rbp - 0xe0], rcx
0x7fffeafcd7b3:	cmp		qword ptr [rax + 0x28], 0
0x7fffeafcd7b8:	mov		dl, 1
0x7fffeafcd7ba:	mov		byte ptr [rbp - 0x10f], dl
0x7fffeafcd7c0:	jne		0x7fffeafcd7ec
0x7fffeafcd7c6:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafcd7cd:	mov		rcx, rax
0x7fffeafcd7d0:	add		rcx, 0x20
0x7fffeafcd7d7:	mov		qword ptr [rbp - 0xe0], rcx
0x7fffeafcd7de:	cmp		qword ptr [rax + 0x20], 0
0x7fffeafcd7e3:	setne		dl
0x7fffeafcd7e6:	mov		byte ptr [rbp - 0x10f], dl
0x7fffeafcd7ec:	mov		al, byte ptr [rbp - 0x10f]
0x7fffeafcd7f2:	test		al, 1
0x7fffeafcd7f4:	jne		0x7fffeafcd7ff
0x7fffeafcd7fa:	jmp		0x7fffeafcd81c
0x7fffeafcd7ff:	mov		rax, qword ptr [rbp - 0xe0]
0x7fffeafcd806:	mov		qword ptr [rbp - 0xd8], rax
0x7fffeafcd80d:	mov		rax, qword ptr [rax]
0x7fffeafcd810:	mov		qword ptr [rbp - 0xc8], rax
0x7fffeafcd817:	jmp		0x7fffeafcd794
0x7fffeafcd81c:	mov		rax, qword ptr [rbp - 0xd8]
0x7fffeafcd823:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcd827:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcd82b:	setae		dl
0x7fffeafcd82e:	and		dl, 1
0x7fffeafcd831:	movzx		esi, dl
0x7fffeafcd834:	movsxd		rax, esi
0x7fffeafcd837:	cmp		rax, 0
0x7fffeafcd83b:	je		0x7fffeafcd854
0x7fffeafcd841:	mov		rax, qword ptr [rbp - 0xd8]
0x7fffeafcd848:	mov		qword ptr [rax], 0
0x7fffeafcd84f:	jmp		0x7fffeafcd859
0x7fffeafcd854:	call		0x7fffeafc4c10
0x7fffeafcd859:	jmp		0x7fffeafcd85e
0x7fffeafcd85e:	jmp		0x7fffeafcd863
0x7fffeafcd863:	cmp		qword ptr [rbp - 0xc0], 0
0x7fffeafcd86b:	je		0x7fffeafcdaa0
0x7fffeafcd871:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcd875:	add		rax, 0x258
0x7fffeafcd87b:	mov		rcx, qword ptr [rbp - 0xb8]
0x7fffeafcd882:	mov		edx, dword ptr [rcx + 0x38]
0x7fffeafcd885:	mov		ecx, edx
0x7fffeafcd887:	shl		rcx, 3
0x7fffeafcd88b:	add		rax, rcx
0x7fffeafcd88e:	mov		qword ptr [rbp - 0xe8], rax
0x7fffeafcd895:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafcd89c:	mov		rcx, qword ptr [rbp - 0xe8]
0x7fffeafcd8a3:	cmp		rax, qword ptr [rcx]
0x7fffeafcd8a6:	jne		0x7fffeafcd8ea
0x7fffeafcd8ac:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafcd8b3:	mov		rcx, qword ptr [rbp - 0xe8]
0x7fffeafcd8ba:	mov		qword ptr [rcx], rax
0x7fffeafcd8bd:	cmp		rax, 0
0x7fffeafcd8c1:	jne		0x7fffeafcd8e5
0x7fffeafcd8c7:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafcd8ce:	mov		ecx, dword ptr [rax + 0x38]
0x7fffeafcd8d1:	mov		edx, 1
0x7fffeafcd8d6:	shl		edx, cl
0x7fffeafcd8d8:	xor		edx, 0xffffffff
0x7fffeafcd8db:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcd8df:	and		edx, dword ptr [rax + 4]
0x7fffeafcd8e2:	mov		dword ptr [rax + 4], edx
0x7fffeafcd8e5:	jmp		0x7fffeafcd95f
0x7fffeafcd8ea:	mov		rax, qword ptr [rbp - 0xc0]
0x7fffeafcd8f1:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcd8f5:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcd8f9:	setae		dl
0x7fffeafcd8fc:	and		dl, 1
0x7fffeafcd8ff:	movzx		esi, dl
0x7fffeafcd902:	movsxd		rax, esi
0x7fffeafcd905:	cmp		rax, 0
0x7fffeafcd909:	je		0x7fffeafcd955
0x7fffeafcd90f:	mov		rax, qword ptr [rbp - 0xc0]
0x7fffeafcd916:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafcd91a:	cmp		rax, qword ptr [rbp - 0xb8]
0x7fffeafcd921:	jne		0x7fffeafcd93e
0x7fffeafcd927:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafcd92e:	mov		rcx, qword ptr [rbp - 0xc0]
0x7fffeafcd935:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafcd939:	jmp		0x7fffeafcd950
0x7fffeafcd93e:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafcd945:	mov		rcx, qword ptr [rbp - 0xc0]
0x7fffeafcd94c:	mov		qword ptr [rcx + 0x28], rax
0x7fffeafcd950:	jmp		0x7fffeafcd95a
0x7fffeafcd955:	call		0x7fffeafc4c10
0x7fffeafcd95a:	jmp		0x7fffeafcd95f
0x7fffeafcd95f:	cmp		qword ptr [rbp - 0xc8], 0
0x7fffeafcd967:	je		0x7fffeafcda9b
0x7fffeafcd96d:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafcd974:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcd978:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcd97c:	setae		dl
0x7fffeafcd97f:	and		dl, 1
0x7fffeafcd982:	movzx		esi, dl
0x7fffeafcd985:	movsxd		rax, esi
0x7fffeafcd988:	cmp		rax, 0
0x7fffeafcd98c:	je		0x7fffeafcda91
0x7fffeafcd992:	mov		rax, qword ptr [rbp - 0xc0]
0x7fffeafcd999:	mov		rcx, qword ptr [rbp - 0xc8]
0x7fffeafcd9a0:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafcd9a4:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafcd9ab:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafcd9af:	mov		qword ptr [rbp - 0xf0], rax
0x7fffeafcd9b6:	cmp		rax, 0
0x7fffeafcd9ba:	je		0x7fffeafcda18
0x7fffeafcd9c0:	mov		rax, qword ptr [rbp - 0xf0]
0x7fffeafcd9c7:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcd9cb:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcd9cf:	setae		dl
0x7fffeafcd9d2:	and		dl, 1
0x7fffeafcd9d5:	movzx		esi, dl
0x7fffeafcd9d8:	movsxd		rax, esi
0x7fffeafcd9db:	cmp		rax, 0
0x7fffeafcd9df:	je		0x7fffeafcda0e
0x7fffeafcd9e5:	mov		rax, qword ptr [rbp - 0xf0]
0x7fffeafcd9ec:	mov		rcx, qword ptr [rbp - 0xc8]
0x7fffeafcd9f3:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafcd9f7:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafcd9fe:	mov		rcx, qword ptr [rbp - 0xf0]
0x7fffeafcda05:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafcda09:	jmp		0x7fffeafcda13
0x7fffeafcda0e:	call		0x7fffeafc4c10
0x7fffeafcda13:	jmp		0x7fffeafcda18
0x7fffeafcda18:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafcda1f:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafcda23:	mov		qword ptr [rbp - 0xf8], rax
0x7fffeafcda2a:	cmp		rax, 0
0x7fffeafcda2e:	je		0x7fffeafcda8c
0x7fffeafcda34:	mov		rax, qword ptr [rbp - 0xf8]
0x7fffeafcda3b:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcda3f:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcda43:	setae		dl
0x7fffeafcda46:	and		dl, 1
0x7fffeafcda49:	movzx		esi, dl
0x7fffeafcda4c:	movsxd		rax, esi
0x7fffeafcda4f:	cmp		rax, 0
0x7fffeafcda53:	je		0x7fffeafcda82
0x7fffeafcda59:	mov		rax, qword ptr [rbp - 0xf8]
0x7fffeafcda60:	mov		rcx, qword ptr [rbp - 0xc8]
0x7fffeafcda67:	mov		qword ptr [rcx + 0x28], rax
0x7fffeafcda6b:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafcda72:	mov		rcx, qword ptr [rbp - 0xf8]
0x7fffeafcda79:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafcda7d:	jmp		0x7fffeafcda87
0x7fffeafcda82:	call		0x7fffeafc4c10
0x7fffeafcda87:	jmp		0x7fffeafcda8c
0x7fffeafcda8c:	jmp		0x7fffeafcda96
0x7fffeafcda91:	call		0x7fffeafc4c10
0x7fffeafcda96:	jmp		0x7fffeafcda9b
0x7fffeafcda9b:	jmp		0x7fffeafcdaa0
0x7fffeafcdaa0:	jmp		0x7fffeafcdaa5
0x7fffeafcdaa5:	cmp		qword ptr [rbp - 0x98], 0x20
0x7fffeafcdaad:	jae		0x7fffeafcdb09
0x7fffeafcdab3:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcdab7:	add		rax, qword ptr [rbp - 0x90]
0x7fffeafcdabe:	mov		qword ptr [rbp - 0x100], rax
0x7fffeafcdac5:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcdac9:	mov		rax, qword ptr [rax + 8]
0x7fffeafcdacd:	and		rax, 1
0x7fffeafcdad3:	or		rax, qword ptr [rbp - 0x100]
0x7fffeafcdada:	or		rax, 2
0x7fffeafcdae0:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcdae4:	mov		qword ptr [rcx + 8], rax
0x7fffeafcdae8:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcdaec:	mov		rcx, qword ptr [rbp - 0x100]
0x7fffeafcdaf3:	mov		rdx, qword ptr [rax + rcx + 8]
0x7fffeafcdaf8:	or		rdx, 1
0x7fffeafcdaff:	mov		qword ptr [rax + rcx + 8], rdx
0x7fffeafcdb04:	jmp		0x7fffeafcdbb0
0x7fffeafcdb09:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcdb0d:	add		rax, qword ptr [rbp - 0x18]
0x7fffeafcdb11:	mov		qword ptr [rbp - 0x108], rax
0x7fffeafcdb18:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcdb1c:	mov		rax, qword ptr [rax + 8]
0x7fffeafcdb20:	and		rax, 1
0x7fffeafcdb26:	or		rax, qword ptr [rbp - 0x18]
0x7fffeafcdb2a:	or		rax, 2
0x7fffeafcdb30:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcdb34:	mov		qword ptr [rcx + 8], rax
0x7fffeafcdb38:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcdb3c:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafcdb40:	mov		rdx, qword ptr [rax + rcx + 8]
0x7fffeafcdb45:	or		rdx, 1
0x7fffeafcdb4c:	mov		qword ptr [rax + rcx + 8], rdx
0x7fffeafcdb51:	mov		rax, qword ptr [rbp - 0x108]
0x7fffeafcdb58:	mov		rax, qword ptr [rax + 8]
0x7fffeafcdb5c:	and		rax, 1
0x7fffeafcdb62:	or		rax, qword ptr [rbp - 0x98]
0x7fffeafcdb69:	or		rax, 2
0x7fffeafcdb6f:	mov		rcx, qword ptr [rbp - 0x108]
0x7fffeafcdb76:	mov		qword ptr [rcx + 8], rax
0x7fffeafcdb7a:	mov		rax, qword ptr [rbp - 0x108]
0x7fffeafcdb81:	mov		rcx, qword ptr [rbp - 0x98]
0x7fffeafcdb88:	mov		rdx, qword ptr [rax + rcx + 8]
0x7fffeafcdb8d:	or		rdx, 1
0x7fffeafcdb94:	mov		qword ptr [rax + rcx + 8], rdx
0x7fffeafcdb99:	mov		rdi, qword ptr [rbp - 8]
0x7fffeafcdb9d:	mov		rsi, qword ptr [rbp - 0x108]
0x7fffeafcdba4:	mov		rdx, qword ptr [rbp - 0x98]
0x7fffeafcdbab:	call		0x7fffeafd1110
0x7fffeafcdbb0:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcdbb4:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafcdbb8:	jmp		0x7fffeafcdbbd
0x7fffeafcdbbd:	jmp		0x7fffeafcdbc2
0x7fffeafcdbc2:	jmp		0x7fffeafcdbc7
0x7fffeafcdbc7:	jmp		0x7fffeafcdbcc
0x7fffeafcdbcc:	jmp		0x7fffeafcdbd1
0x7fffeafcdbd1:	jmp		0x7fffeafcdbdb
0x7fffeafcdbd6:	call		0x7fffeafc4c10
0x7fffeafcdbdb:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcdbdf:	add		rsp, 0x110
0x7fffeafcdbe6:	pop		rbp
0x7fffeafcdbe7:	ret		
0x7fffeafcdbe8:	nop		dword ptr [rax + rax]
disassembling symbol '.LBB16_4':
textAddr: 0x7fffeafcd0d0, textSize: 77
0x7fffeafcd0d0:	mov		al, byte ptr [rbp - 0x109]
0x7fffeafcd0d6:	and		al, 1
0x7fffeafcd0d8:	movzx		ecx, al
0x7fffeafcd0db:	movsxd		rdx, ecx
0x7fffeafcd0de:	cmp		rdx, 0
0x7fffeafcd0e2:	je		0x7fffeafcdbd6
0x7fffeafcd0e8:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcd0ec:	mov		rax, qword ptr [rax + 8]
0x7fffeafcd0f0:	and		rax, 3
0x7fffeafcd0f6:	cmp		rax, 0
0x7fffeafcd0fa:	jne		0x7fffeafcd11d
0x7fffeafcd100:	mov		rdi, qword ptr [rbp - 8]
0x7fffeafcd104:	mov		rsi, qword ptr [rbp - 0x10]
0x7fffeafcd108:	mov		rdx, qword ptr [rbp - 0x18]
0x7fffeafcd10c:	mov		ecx, dword ptr [rbp - 0x1c]
0x7fffeafcd10f:	call		0x7fffeafd0f50
0x7fffeafcd114:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafcd118:	jmp		0x7fffeafcdbd1
disassembling symbol '.LBB16_7':
textAddr: 0x7fffeafcd11d, textSize: 180
0x7fffeafcd11d:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcd121:	cmp		rax, qword ptr [rbp - 0x18]
0x7fffeafcd125:	jb		0x7fffeafcd1de
0x7fffeafcd12b:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcd12f:	sub		rax, qword ptr [rbp - 0x18]
0x7fffeafcd133:	mov		qword ptr [rbp - 0x40], rax
0x7fffeafcd137:	cmp		qword ptr [rbp - 0x40], 0x20
0x7fffeafcd13c:	jb		0x7fffeafcd1d1
0x7fffeafcd142:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcd146:	add		rax, qword ptr [rbp - 0x18]
0x7fffeafcd14a:	mov		qword ptr [rbp - 0x48], rax
0x7fffeafcd14e:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcd152:	mov		rax, qword ptr [rax + 8]
0x7fffeafcd156:	and		rax, 1
0x7fffeafcd15c:	or		rax, qword ptr [rbp - 0x18]
0x7fffeafcd160:	or		rax, 2
0x7fffeafcd166:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcd16a:	mov		qword ptr [rcx + 8], rax
0x7fffeafcd16e:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcd172:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafcd176:	mov		rdx, qword ptr [rax + rcx + 8]
0x7fffeafcd17b:	or		rdx, 1
0x7fffeafcd182:	mov		qword ptr [rax + rcx + 8], rdx
0x7fffeafcd187:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafcd18b:	mov		rax, qword ptr [rax + 8]
0x7fffeafcd18f:	and		rax, 1
0x7fffeafcd195:	or		rax, qword ptr [rbp - 0x40]
0x7fffeafcd199:	or		rax, 2
0x7fffeafcd19f:	mov		rcx, qword ptr [rbp - 0x48]
0x7fffeafcd1a3:	mov		qword ptr [rcx + 8], rax
0x7fffeafcd1a7:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafcd1ab:	mov		rcx, qword ptr [rbp - 0x40]
0x7fffeafcd1af:	mov		rdx, qword ptr [rax + rcx + 8]
0x7fffeafcd1b4:	or		rdx, 1
0x7fffeafcd1bb:	mov		qword ptr [rax + rcx + 8], rdx
0x7fffeafcd1c0:	mov		rdi, qword ptr [rbp - 8]
0x7fffeafcd1c4:	mov		rsi, qword ptr [rbp - 0x48]
0x7fffeafcd1c8:	mov		rdx, qword ptr [rbp - 0x40]
0x7fffeafcd1cc:	call		0x7fffeafd1110
disassembling symbol '.LBB16_10':
textAddr: 0x7fffeafcd1d1, textSize: 13
0x7fffeafcd1d1:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcd1d5:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafcd1d9:	jmp		0x7fffeafcdbcc
disassembling symbol '.LBB16_11':
textAddr: 0x7fffeafcd1de, textSize: 187
0x7fffeafcd1de:	mov		rax, qword ptr [rbp - 0x38]
0x7fffeafcd1e2:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcd1e6:	cmp		rax, qword ptr [rcx + 0x28]
0x7fffeafcd1ea:	jne		0x7fffeafcd29e
0x7fffeafcd1f0:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcd1f4:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcd1f8:	add		rax, qword ptr [rcx + 0x10]
0x7fffeafcd1fc:	cmp		rax, qword ptr [rbp - 0x18]
0x7fffeafcd200:	jbe		0x7fffeafcd299
0x7fffeafcd206:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcd20a:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcd20e:	add		rax, qword ptr [rcx + 0x10]
0x7fffeafcd212:	mov		qword ptr [rbp - 0x50], rax
0x7fffeafcd216:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafcd21a:	sub		rax, qword ptr [rbp - 0x18]
0x7fffeafcd21e:	mov		qword ptr [rbp - 0x58], rax
0x7fffeafcd222:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcd226:	add		rax, qword ptr [rbp - 0x18]
0x7fffeafcd22a:	mov		qword ptr [rbp - 0x60], rax
0x7fffeafcd22e:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcd232:	mov		rax, qword ptr [rax + 8]
0x7fffeafcd236:	and		rax, 1
0x7fffeafcd23c:	or		rax, qword ptr [rbp - 0x18]
0x7fffeafcd240:	or		rax, 2
0x7fffeafcd246:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcd24a:	mov		qword ptr [rcx + 8], rax
0x7fffeafcd24e:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcd252:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafcd256:	mov		rdx, qword ptr [rax + rcx + 8]
0x7fffeafcd25b:	or		rdx, 1
0x7fffeafcd262:	mov		qword ptr [rax + rcx + 8], rdx
0x7fffeafcd267:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafcd26b:	or		rax, 1
0x7fffeafcd271:	mov		rcx, qword ptr [rbp - 0x60]
0x7fffeafcd275:	mov		qword ptr [rcx + 8], rax
0x7fffeafcd279:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafcd27d:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcd281:	mov		qword ptr [rcx + 0x28], rax
0x7fffeafcd285:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafcd289:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcd28d:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafcd291:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcd295:	mov		qword ptr [rbp - 0x28], rax
disassembling symbol '.LBB16_14':
textAddr: 0x7fffeafcd299, textSize: 5
0x7fffeafcd299:	jmp		0x7fffeafcdbc7
disassembling symbol '.LBB16_15':
textAddr: 0x7fffeafcd29e, textSize: 238
0x7fffeafcd29e:	mov		rax, qword ptr [rbp - 0x38]
0x7fffeafcd2a2:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcd2a6:	cmp		rax, qword ptr [rcx + 0x20]
0x7fffeafcd2aa:	jne		0x7fffeafcd3ff
0x7fffeafcd2b0:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcd2b4:	mov		rax, qword ptr [rax + 8]
0x7fffeafcd2b8:	mov		qword ptr [rbp - 0x68], rax
0x7fffeafcd2bc:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcd2c0:	add		rax, qword ptr [rbp - 0x68]
0x7fffeafcd2c4:	cmp		rax, qword ptr [rbp - 0x18]
0x7fffeafcd2c8:	jb		0x7fffeafcd3fa
0x7fffeafcd2ce:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcd2d2:	add		rax, qword ptr [rbp - 0x68]
0x7fffeafcd2d6:	sub		rax, qword ptr [rbp - 0x18]
0x7fffeafcd2da:	mov		qword ptr [rbp - 0x70], rax
0x7fffeafcd2de:	cmp		qword ptr [rbp - 0x70], 0x20
0x7fffeafcd2e3:	jb		0x7fffeafcd38c
0x7fffeafcd2e9:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcd2ed:	add		rax, qword ptr [rbp - 0x18]
0x7fffeafcd2f1:	mov		qword ptr [rbp - 0x78], rax
0x7fffeafcd2f5:	mov		rax, qword ptr [rbp - 0x78]
0x7fffeafcd2f9:	add		rax, qword ptr [rbp - 0x70]
0x7fffeafcd2fd:	mov		qword ptr [rbp - 0x80], rax
0x7fffeafcd301:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcd305:	mov		rax, qword ptr [rax + 8]
0x7fffeafcd309:	and		rax, 1
0x7fffeafcd30f:	or		rax, qword ptr [rbp - 0x18]
0x7fffeafcd313:	or		rax, 2
0x7fffeafcd319:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcd31d:	mov		qword ptr [rcx + 8], rax
0x7fffeafcd321:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcd325:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafcd329:	mov		rdx, qword ptr [rax + rcx + 8]
0x7fffeafcd32e:	or		rdx, 1
0x7fffeafcd335:	mov		qword ptr [rax + rcx + 8], rdx
0x7fffeafcd33a:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafcd33e:	or		rax, 1
0x7fffeafcd344:	mov		rcx, qword ptr [rbp - 0x78]
0x7fffeafcd348:	mov		qword ptr [rcx + 8], rax
0x7fffeafcd34c:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafcd350:	mov		rcx, qword ptr [rbp - 0x78]
0x7fffeafcd354:	mov		rdx, qword ptr [rbp - 0x70]
0x7fffeafcd358:	mov		qword ptr [rcx + rdx], rax
0x7fffeafcd35c:	mov		rax, qword ptr [rbp - 0x80]
0x7fffeafcd360:	mov		rcx, qword ptr [rax + 8]
0x7fffeafcd364:	and		rcx, 0xfffffffffffffffe
0x7fffeafcd36b:	mov		qword ptr [rax + 8], rcx
0x7fffeafcd36f:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafcd373:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcd377:	mov		qword ptr [rcx + 8], rax
0x7fffeafcd37b:	mov		rax, qword ptr [rbp - 0x78]
0x7fffeafcd37f:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcd383:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafcd387:	jmp		0x7fffeafcd3f2
disassembling symbol '.LBB16_19':
textAddr: 0x7fffeafcd38c, textSize: 102
0x7fffeafcd38c:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcd390:	add		rax, qword ptr [rbp - 0x68]
0x7fffeafcd394:	mov		qword ptr [rbp - 0x88], rax
0x7fffeafcd39b:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcd39f:	mov		rax, qword ptr [rax + 8]
0x7fffeafcd3a3:	and		rax, 1
0x7fffeafcd3a9:	or		rax, qword ptr [rbp - 0x88]
0x7fffeafcd3b0:	or		rax, 2
0x7fffeafcd3b6:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcd3ba:	mov		qword ptr [rcx + 8], rax
0x7fffeafcd3be:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcd3c2:	mov		rcx, qword ptr [rbp - 0x88]
0x7fffeafcd3c9:	mov		rdx, qword ptr [rax + rcx + 8]
0x7fffeafcd3ce:	or		rdx, 1
0x7fffeafcd3d5:	mov		qword ptr [rax + rcx + 8], rdx
0x7fffeafcd3da:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcd3de:	mov		qword ptr [rax + 8], 0
0x7fffeafcd3e6:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcd3ea:	mov		qword ptr [rax + 0x20], 0
disassembling symbol '.LBB16_20':
textAddr: 0x7fffeafcd3f2, textSize: 8
0x7fffeafcd3f2:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcd3f6:	mov		qword ptr [rbp - 0x28], rax
disassembling symbol '.LBB16_21':
textAddr: 0x7fffeafcd3fa, textSize: 5
0x7fffeafcd3fa:	jmp		0x7fffeafcdbc2
disassembling symbol '.LBB16_22':
textAddr: 0x7fffeafcd3ff, textSize: 266
0x7fffeafcd3ff:	mov		rax, qword ptr [rbp - 0x38]
0x7fffeafcd403:	mov		rax, qword ptr [rax + 8]
0x7fffeafcd407:	and		rax, 2
0x7fffeafcd40d:	cmp		rax, 0
0x7fffeafcd411:	jne		0x7fffeafcdbbd
0x7fffeafcd417:	mov		rax, qword ptr [rbp - 0x38]
0x7fffeafcd41b:	mov		rax, qword ptr [rax + 8]
0x7fffeafcd41f:	and		rax, 0xfffffffffffffff8
0x7fffeafcd425:	mov		qword ptr [rbp - 0x90], rax
0x7fffeafcd42c:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcd430:	add		rax, qword ptr [rbp - 0x90]
0x7fffeafcd437:	cmp		rax, qword ptr [rbp - 0x18]
0x7fffeafcd43b:	jb		0x7fffeafcdbb8
0x7fffeafcd441:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcd445:	add		rax, qword ptr [rbp - 0x90]
0x7fffeafcd44c:	sub		rax, qword ptr [rbp - 0x18]
0x7fffeafcd450:	mov		qword ptr [rbp - 0x98], rax
0x7fffeafcd457:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafcd45e:	shr		rax, 3
0x7fffeafcd462:	cmp		rax, 0x20
0x7fffeafcd466:	jae		0x7fffeafcd632
0x7fffeafcd46c:	mov		rax, qword ptr [rbp - 0x38]
0x7fffeafcd470:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafcd474:	mov		qword ptr [rbp - 0xa0], rax
0x7fffeafcd47b:	mov		rax, qword ptr [rbp - 0x38]
0x7fffeafcd47f:	mov		rax, qword ptr [rax + 0x18]
0x7fffeafcd483:	mov		qword ptr [rbp - 0xa8], rax
0x7fffeafcd48a:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafcd491:	shr		rax, 3
0x7fffeafcd495:	mov		dword ptr [rbp - 0xac], eax
0x7fffeafcd49b:	mov		rcx, qword ptr [rbp - 0xa0]
0x7fffeafcd4a2:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafcd4a6:	add		rdx, 0x48
0x7fffeafcd4ad:	mov		eax, dword ptr [rbp - 0xac]
0x7fffeafcd4b3:	shl		eax, 1
0x7fffeafcd4b6:	mov		eax, eax
0x7fffeafcd4b8:	mov		esi, eax
0x7fffeafcd4ba:	shl		rsi, 3
0x7fffeafcd4be:	add		rdx, rsi
0x7fffeafcd4c1:	cmp		rcx, rdx
0x7fffeafcd4c4:	mov		dil, 1
0x7fffeafcd4c7:	mov		byte ptr [rbp - 0x10a], dil
0x7fffeafcd4ce:	je		0x7fffeafcd515
0x7fffeafcd4d4:	xor		eax, eax
0x7fffeafcd4d6:	mov		rcx, qword ptr [rbp - 0xa0]
0x7fffeafcd4dd:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafcd4e1:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafcd4e5:	mov		byte ptr [rbp - 0x10b], al
0x7fffeafcd4eb:	jb		0x7fffeafcd509
0x7fffeafcd4f1:	mov		rax, qword ptr [rbp - 0xa0]
0x7fffeafcd4f8:	mov		rax, qword ptr [rax + 0x18]
0x7fffeafcd4fc:	cmp		rax, qword ptr [rbp - 0x38]
0x7fffeafcd500:	sete		cl
0x7fffeafcd503:	mov		byte ptr [rbp - 0x10b], cl
disassembling symbol '.LBB16_28':
textAddr: 0x7fffeafcd509, textSize: 12
0x7fffeafcd509:	mov		al, byte ptr [rbp - 0x10b]
0x7fffeafcd50f:	mov		byte ptr [rbp - 0x10a], al
disassembling symbol '.LBB16_29':
textAddr: 0x7fffeafcd515, textSize: 73
0x7fffeafcd515:	mov		al, byte ptr [rbp - 0x10a]
0x7fffeafcd51b:	and		al, 1
0x7fffeafcd51d:	movzx		ecx, al
0x7fffeafcd520:	movsxd		rdx, ecx
0x7fffeafcd523:	cmp		rdx, 0
0x7fffeafcd527:	je		0x7fffeafcd628
0x7fffeafcd52d:	mov		rax, qword ptr [rbp - 0xa8]
0x7fffeafcd534:	cmp		rax, qword ptr [rbp - 0xa0]
0x7fffeafcd53b:	jne		0x7fffeafcd55e
0x7fffeafcd541:	mov		ecx, dword ptr [rbp - 0xac]
0x7fffeafcd547:	mov		eax, 1
0x7fffeafcd54c:	shl		eax, cl
0x7fffeafcd54e:	xor		eax, 0xffffffff
0x7fffeafcd551:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafcd555:	and		eax, dword ptr [rdx]
0x7fffeafcd557:	mov		dword ptr [rdx], eax
0x7fffeafcd559:	jmp		0x7fffeafcd623
disassembling symbol '.LBB16_32':
textAddr: 0x7fffeafcd55e, textSize: 110
0x7fffeafcd55e:	mov		rax, qword ptr [rbp - 0xa8]
0x7fffeafcd565:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcd569:	add		rcx, 0x48
0x7fffeafcd570:	mov		edx, dword ptr [rbp - 0xac]
0x7fffeafcd576:	shl		edx, 1
0x7fffeafcd579:	mov		edx, edx
0x7fffeafcd57b:	mov		esi, edx
0x7fffeafcd57d:	shl		rsi, 3
0x7fffeafcd581:	add		rcx, rsi
0x7fffeafcd584:	cmp		rax, rcx
0x7fffeafcd587:	mov		dil, 1
0x7fffeafcd58a:	mov		byte ptr [rbp - 0x10c], dil
0x7fffeafcd591:	je		0x7fffeafcd5d8
0x7fffeafcd597:	xor		eax, eax
0x7fffeafcd599:	mov		rcx, qword ptr [rbp - 0xa8]
0x7fffeafcd5a0:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafcd5a4:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafcd5a8:	mov		byte ptr [rbp - 0x10d], al
0x7fffeafcd5ae:	jb		0x7fffeafcd5cc
0x7fffeafcd5b4:	mov		rax, qword ptr [rbp - 0xa8]
0x7fffeafcd5bb:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafcd5bf:	cmp		rax, qword ptr [rbp - 0x38]
0x7fffeafcd5c3:	sete		cl
0x7fffeafcd5c6:	mov		byte ptr [rbp - 0x10d], cl
disassembling symbol '.LBB16_35':
textAddr: 0x7fffeafcd5cc, textSize: 12
0x7fffeafcd5cc:	mov		al, byte ptr [rbp - 0x10d]
0x7fffeafcd5d2:	mov		byte ptr [rbp - 0x10c], al
disassembling symbol '.LBB16_36':
textAddr: 0x7fffeafcd5d8, textSize: 65
0x7fffeafcd5d8:	mov		al, byte ptr [rbp - 0x10c]
0x7fffeafcd5de:	and		al, 1
0x7fffeafcd5e0:	movzx		ecx, al
0x7fffeafcd5e3:	movsxd		rdx, ecx
0x7fffeafcd5e6:	cmp		rdx, 0
0x7fffeafcd5ea:	je		0x7fffeafcd619
0x7fffeafcd5f0:	mov		rax, qword ptr [rbp - 0xa8]
0x7fffeafcd5f7:	mov		rcx, qword ptr [rbp - 0xa0]
0x7fffeafcd5fe:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafcd602:	mov		rax, qword ptr [rbp - 0xa0]
0x7fffeafcd609:	mov		rcx, qword ptr [rbp - 0xa8]
0x7fffeafcd610:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafcd614:	jmp		0x7fffeafcd61e
disassembling symbol '.LBB16_38':
textAddr: 0x7fffeafcd619, textSize: 5
0x7fffeafcd619:	call		0x7fffeafc4c10
disassembling symbol '.LBB16_39':
textAddr: 0x7fffeafcd61e, textSize: 5
0x7fffeafcd61e:	jmp		0x7fffeafcd623
disassembling symbol '.LBB16_40':
textAddr: 0x7fffeafcd623, textSize: 5
0x7fffeafcd623:	jmp		0x7fffeafcd62d
disassembling symbol '.LBB16_41':
textAddr: 0x7fffeafcd628, textSize: 5
0x7fffeafcd628:	call		0x7fffeafc4c10
disassembling symbol '.LBB16_42':
textAddr: 0x7fffeafcd62d, textSize: 5
0x7fffeafcd62d:	jmp		0x7fffeafcdaa5
disassembling symbol '.LBB16_43':
textAddr: 0x7fffeafcd632, textSize: 177
0x7fffeafcd632:	mov		rax, qword ptr [rbp - 0x38]
0x7fffeafcd636:	mov		qword ptr [rbp - 0xb8], rax
0x7fffeafcd63d:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafcd644:	mov		rax, qword ptr [rax + 0x30]
0x7fffeafcd648:	mov		qword ptr [rbp - 0xc0], rax
0x7fffeafcd64f:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafcd656:	mov		rax, qword ptr [rax + 0x18]
0x7fffeafcd65a:	cmp		rax, qword ptr [rbp - 0xb8]
0x7fffeafcd661:	je		0x7fffeafcd72e
0x7fffeafcd667:	xor		eax, eax
0x7fffeafcd669:	mov		rcx, qword ptr [rbp - 0xb8]
0x7fffeafcd670:	mov		rcx, qword ptr [rcx + 0x10]
0x7fffeafcd674:	mov		qword ptr [rbp - 0xd0], rcx
0x7fffeafcd67b:	mov		rcx, qword ptr [rbp - 0xb8]
0x7fffeafcd682:	mov		rcx, qword ptr [rcx + 0x18]
0x7fffeafcd686:	mov		qword ptr [rbp - 0xc8], rcx
0x7fffeafcd68d:	mov		rcx, qword ptr [rbp - 0xd0]
0x7fffeafcd694:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafcd698:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafcd69c:	mov		byte ptr [rbp - 0x10e], al
0x7fffeafcd6a2:	jb		0x7fffeafcd6e3
0x7fffeafcd6a8:	xor		eax, eax
0x7fffeafcd6aa:	mov		rcx, qword ptr [rbp - 0xd0]
0x7fffeafcd6b1:	mov		rcx, qword ptr [rcx + 0x18]
0x7fffeafcd6b5:	cmp		rcx, qword ptr [rbp - 0xb8]
0x7fffeafcd6bc:	mov		byte ptr [rbp - 0x10e], al
0x7fffeafcd6c2:	jne		0x7fffeafcd6e3
0x7fffeafcd6c8:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafcd6cf:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafcd6d3:	cmp		rax, qword ptr [rbp - 0xb8]
0x7fffeafcd6da:	sete		cl
0x7fffeafcd6dd:	mov		byte ptr [rbp - 0x10e], cl
disassembling symbol '.LBB16_47':
textAddr: 0x7fffeafcd6e3, textSize: 65
0x7fffeafcd6e3:	mov		al, byte ptr [rbp - 0x10e]
0x7fffeafcd6e9:	and		al, 1
0x7fffeafcd6eb:	movzx		ecx, al
0x7fffeafcd6ee:	movsxd		rdx, ecx
0x7fffeafcd6f1:	cmp		rdx, 0
0x7fffeafcd6f5:	je		0x7fffeafcd724
0x7fffeafcd6fb:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafcd702:	mov		rcx, qword ptr [rbp - 0xd0]
0x7fffeafcd709:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafcd70d:	mov		rax, qword ptr [rbp - 0xd0]
0x7fffeafcd714:	mov		rcx, qword ptr [rbp - 0xc8]
0x7fffeafcd71b:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafcd71f:	jmp		0x7fffeafcd729
disassembling symbol '.LBB16_49':
textAddr: 0x7fffeafcd724, textSize: 5
0x7fffeafcd724:	call		0x7fffeafc4c10
disassembling symbol '.LBB16_50':
textAddr: 0x7fffeafcd729, textSize: 5
0x7fffeafcd729:	jmp		0x7fffeafcd863
disassembling symbol '.LBB16_51':
textAddr: 0x7fffeafcd72e, textSize: 97
0x7fffeafcd72e:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafcd735:	mov		rcx, rax
0x7fffeafcd738:	add		rcx, 0x20
0x7fffeafcd73f:	add		rcx, 8
0x7fffeafcd746:	mov		qword ptr [rbp - 0xd8], rcx
0x7fffeafcd74d:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafcd751:	mov		qword ptr [rbp - 0xc8], rax
0x7fffeafcd758:	cmp		rax, 0
0x7fffeafcd75c:	jne		0x7fffeafcd78f
0x7fffeafcd762:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafcd769:	mov		rcx, rax
0x7fffeafcd76c:	add		rcx, 0x20
0x7fffeafcd773:	mov		qword ptr [rbp - 0xd8], rcx
0x7fffeafcd77a:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafcd77e:	mov		qword ptr [rbp - 0xc8], rax
0x7fffeafcd785:	cmp		rax, 0
0x7fffeafcd789:	je		0x7fffeafcd85e
disassembling symbol '.LBB16_53':
textAddr: 0x7fffeafcd78f, textSize: 5
0x7fffeafcd78f:	jmp		0x7fffeafcd794
disassembling symbol '.LBB16_54':
textAddr: 0x7fffeafcd794, textSize: 88
0x7fffeafcd794:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafcd79b:	mov		rcx, rax
0x7fffeafcd79e:	add		rcx, 0x20
0x7fffeafcd7a5:	add		rcx, 8
0x7fffeafcd7ac:	mov		qword ptr [rbp - 0xe0], rcx
0x7fffeafcd7b3:	cmp		qword ptr [rax + 0x28], 0
0x7fffeafcd7b8:	mov		dl, 1
0x7fffeafcd7ba:	mov		byte ptr [rbp - 0x10f], dl
0x7fffeafcd7c0:	jne		0x7fffeafcd7ec
0x7fffeafcd7c6:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafcd7cd:	mov		rcx, rax
0x7fffeafcd7d0:	add		rcx, 0x20
0x7fffeafcd7d7:	mov		qword ptr [rbp - 0xe0], rcx
0x7fffeafcd7de:	cmp		qword ptr [rax + 0x20], 0
0x7fffeafcd7e3:	setne		dl
0x7fffeafcd7e6:	mov		byte ptr [rbp - 0x10f], dl
disassembling symbol '.LBB16_56':
textAddr: 0x7fffeafcd7ec, textSize: 19
0x7fffeafcd7ec:	mov		al, byte ptr [rbp - 0x10f]
0x7fffeafcd7f2:	test		al, 1
0x7fffeafcd7f4:	jne		0x7fffeafcd7ff
0x7fffeafcd7fa:	jmp		0x7fffeafcd81c
disassembling symbol '.LBB16_57':
textAddr: 0x7fffeafcd7ff, textSize: 29
0x7fffeafcd7ff:	mov		rax, qword ptr [rbp - 0xe0]
0x7fffeafcd806:	mov		qword ptr [rbp - 0xd8], rax
0x7fffeafcd80d:	mov		rax, qword ptr [rax]
0x7fffeafcd810:	mov		qword ptr [rbp - 0xc8], rax
0x7fffeafcd817:	jmp		0x7fffeafcd794
disassembling symbol '.LBB16_58':
textAddr: 0x7fffeafcd81c, textSize: 56
0x7fffeafcd81c:	mov		rax, qword ptr [rbp - 0xd8]
0x7fffeafcd823:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcd827:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcd82b:	setae		dl
0x7fffeafcd82e:	and		dl, 1
0x7fffeafcd831:	movzx		esi, dl
0x7fffeafcd834:	movsxd		rax, esi
0x7fffeafcd837:	cmp		rax, 0
0x7fffeafcd83b:	je		0x7fffeafcd854
0x7fffeafcd841:	mov		rax, qword ptr [rbp - 0xd8]
0x7fffeafcd848:	mov		qword ptr [rax], 0
0x7fffeafcd84f:	jmp		0x7fffeafcd859
disassembling symbol '.LBB16_60':
textAddr: 0x7fffeafcd854, textSize: 5
0x7fffeafcd854:	call		0x7fffeafc4c10
disassembling symbol '.LBB16_61':
textAddr: 0x7fffeafcd859, textSize: 5
0x7fffeafcd859:	jmp		0x7fffeafcd85e
disassembling symbol '.LBB16_62':
textAddr: 0x7fffeafcd85e, textSize: 5
0x7fffeafcd85e:	jmp		0x7fffeafcd863
disassembling symbol '.LBB16_63':
textAddr: 0x7fffeafcd863, textSize: 130
0x7fffeafcd863:	cmp		qword ptr [rbp - 0xc0], 0
0x7fffeafcd86b:	je		0x7fffeafcdaa0
0x7fffeafcd871:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcd875:	add		rax, 0x258
0x7fffeafcd87b:	mov		rcx, qword ptr [rbp - 0xb8]
0x7fffeafcd882:	mov		edx, dword ptr [rcx + 0x38]
0x7fffeafcd885:	mov		ecx, edx
0x7fffeafcd887:	shl		rcx, 3
0x7fffeafcd88b:	add		rax, rcx
0x7fffeafcd88e:	mov		qword ptr [rbp - 0xe8], rax
0x7fffeafcd895:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafcd89c:	mov		rcx, qword ptr [rbp - 0xe8]
0x7fffeafcd8a3:	cmp		rax, qword ptr [rcx]
0x7fffeafcd8a6:	jne		0x7fffeafcd8ea
0x7fffeafcd8ac:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafcd8b3:	mov		rcx, qword ptr [rbp - 0xe8]
0x7fffeafcd8ba:	mov		qword ptr [rcx], rax
0x7fffeafcd8bd:	cmp		rax, 0
0x7fffeafcd8c1:	jne		0x7fffeafcd8e5
0x7fffeafcd8c7:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafcd8ce:	mov		ecx, dword ptr [rax + 0x38]
0x7fffeafcd8d1:	mov		edx, 1
0x7fffeafcd8d6:	shl		edx, cl
0x7fffeafcd8d8:	xor		edx, 0xffffffff
0x7fffeafcd8db:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcd8df:	and		edx, dword ptr [rax + 4]
0x7fffeafcd8e2:	mov		dword ptr [rax + 4], edx
disassembling symbol '.LBB16_67':
textAddr: 0x7fffeafcd8e5, textSize: 5
0x7fffeafcd8e5:	jmp		0x7fffeafcd95f
disassembling symbol '.LBB16_68':
textAddr: 0x7fffeafcd8ea, textSize: 84
0x7fffeafcd8ea:	mov		rax, qword ptr [rbp - 0xc0]
0x7fffeafcd8f1:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcd8f5:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcd8f9:	setae		dl
0x7fffeafcd8fc:	and		dl, 1
0x7fffeafcd8ff:	movzx		esi, dl
0x7fffeafcd902:	movsxd		rax, esi
0x7fffeafcd905:	cmp		rax, 0
0x7fffeafcd909:	je		0x7fffeafcd955
0x7fffeafcd90f:	mov		rax, qword ptr [rbp - 0xc0]
0x7fffeafcd916:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafcd91a:	cmp		rax, qword ptr [rbp - 0xb8]
0x7fffeafcd921:	jne		0x7fffeafcd93e
0x7fffeafcd927:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafcd92e:	mov		rcx, qword ptr [rbp - 0xc0]
0x7fffeafcd935:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafcd939:	jmp		0x7fffeafcd950
disassembling symbol '.LBB16_71':
textAddr: 0x7fffeafcd93e, textSize: 18
0x7fffeafcd93e:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafcd945:	mov		rcx, qword ptr [rbp - 0xc0]
0x7fffeafcd94c:	mov		qword ptr [rcx + 0x28], rax
disassembling symbol '.LBB16_72':
textAddr: 0x7fffeafcd950, textSize: 5
0x7fffeafcd950:	jmp		0x7fffeafcd95a
disassembling symbol '.LBB16_73':
textAddr: 0x7fffeafcd955, textSize: 5
0x7fffeafcd955:	call		0x7fffeafc4c10
disassembling symbol '.LBB16_74':
textAddr: 0x7fffeafcd95a, textSize: 5
0x7fffeafcd95a:	jmp		0x7fffeafcd95f
disassembling symbol '.LBB16_75':
textAddr: 0x7fffeafcd95f, textSize: 175
0x7fffeafcd95f:	cmp		qword ptr [rbp - 0xc8], 0
0x7fffeafcd967:	je		0x7fffeafcda9b
0x7fffeafcd96d:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafcd974:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcd978:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcd97c:	setae		dl
0x7fffeafcd97f:	and		dl, 1
0x7fffeafcd982:	movzx		esi, dl
0x7fffeafcd985:	movsxd		rax, esi
0x7fffeafcd988:	cmp		rax, 0
0x7fffeafcd98c:	je		0x7fffeafcda91
0x7fffeafcd992:	mov		rax, qword ptr [rbp - 0xc0]
0x7fffeafcd999:	mov		rcx, qword ptr [rbp - 0xc8]
0x7fffeafcd9a0:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafcd9a4:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafcd9ab:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafcd9af:	mov		qword ptr [rbp - 0xf0], rax
0x7fffeafcd9b6:	cmp		rax, 0
0x7fffeafcd9ba:	je		0x7fffeafcda18
0x7fffeafcd9c0:	mov		rax, qword ptr [rbp - 0xf0]
0x7fffeafcd9c7:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcd9cb:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcd9cf:	setae		dl
0x7fffeafcd9d2:	and		dl, 1
0x7fffeafcd9d5:	movzx		esi, dl
0x7fffeafcd9d8:	movsxd		rax, esi
0x7fffeafcd9db:	cmp		rax, 0
0x7fffeafcd9df:	je		0x7fffeafcda0e
0x7fffeafcd9e5:	mov		rax, qword ptr [rbp - 0xf0]
0x7fffeafcd9ec:	mov		rcx, qword ptr [rbp - 0xc8]
0x7fffeafcd9f3:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafcd9f7:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafcd9fe:	mov		rcx, qword ptr [rbp - 0xf0]
0x7fffeafcda05:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafcda09:	jmp		0x7fffeafcda13
disassembling symbol '.LBB16_80':
textAddr: 0x7fffeafcda0e, textSize: 5
0x7fffeafcda0e:	call		0x7fffeafc4c10
disassembling symbol '.LBB16_81':
textAddr: 0x7fffeafcda13, textSize: 5
0x7fffeafcda13:	jmp		0x7fffeafcda18
disassembling symbol '.LBB16_82':
textAddr: 0x7fffeafcda18, textSize: 106
0x7fffeafcda18:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafcda1f:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafcda23:	mov		qword ptr [rbp - 0xf8], rax
0x7fffeafcda2a:	cmp		rax, 0
0x7fffeafcda2e:	je		0x7fffeafcda8c
0x7fffeafcda34:	mov		rax, qword ptr [rbp - 0xf8]
0x7fffeafcda3b:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcda3f:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcda43:	setae		dl
0x7fffeafcda46:	and		dl, 1
0x7fffeafcda49:	movzx		esi, dl
0x7fffeafcda4c:	movsxd		rax, esi
0x7fffeafcda4f:	cmp		rax, 0
0x7fffeafcda53:	je		0x7fffeafcda82
0x7fffeafcda59:	mov		rax, qword ptr [rbp - 0xf8]
0x7fffeafcda60:	mov		rcx, qword ptr [rbp - 0xc8]
0x7fffeafcda67:	mov		qword ptr [rcx + 0x28], rax
0x7fffeafcda6b:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafcda72:	mov		rcx, qword ptr [rbp - 0xf8]
0x7fffeafcda79:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafcda7d:	jmp		0x7fffeafcda87
disassembling symbol '.LBB16_85':
textAddr: 0x7fffeafcda82, textSize: 5
0x7fffeafcda82:	call		0x7fffeafc4c10
disassembling symbol '.LBB16_86':
textAddr: 0x7fffeafcda87, textSize: 5
0x7fffeafcda87:	jmp		0x7fffeafcda8c
disassembling symbol '.LBB16_87':
textAddr: 0x7fffeafcda8c, textSize: 5
0x7fffeafcda8c:	jmp		0x7fffeafcda96
disassembling symbol '.LBB16_88':
textAddr: 0x7fffeafcda91, textSize: 5
0x7fffeafcda91:	call		0x7fffeafc4c10
disassembling symbol '.LBB16_89':
textAddr: 0x7fffeafcda96, textSize: 5
0x7fffeafcda96:	jmp		0x7fffeafcda9b
disassembling symbol '.LBB16_90':
textAddr: 0x7fffeafcda9b, textSize: 5
0x7fffeafcda9b:	jmp		0x7fffeafcdaa0
disassembling symbol '.LBB16_91':
textAddr: 0x7fffeafcdaa0, textSize: 5
0x7fffeafcdaa0:	jmp		0x7fffeafcdaa5
disassembling symbol '.LBB16_92':
textAddr: 0x7fffeafcdaa5, textSize: 100
0x7fffeafcdaa5:	cmp		qword ptr [rbp - 0x98], 0x20
0x7fffeafcdaad:	jae		0x7fffeafcdb09
0x7fffeafcdab3:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcdab7:	add		rax, qword ptr [rbp - 0x90]
0x7fffeafcdabe:	mov		qword ptr [rbp - 0x100], rax
0x7fffeafcdac5:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcdac9:	mov		rax, qword ptr [rax + 8]
0x7fffeafcdacd:	and		rax, 1
0x7fffeafcdad3:	or		rax, qword ptr [rbp - 0x100]
0x7fffeafcdada:	or		rax, 2
0x7fffeafcdae0:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcdae4:	mov		qword ptr [rcx + 8], rax
0x7fffeafcdae8:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcdaec:	mov		rcx, qword ptr [rbp - 0x100]
0x7fffeafcdaf3:	mov		rdx, qword ptr [rax + rcx + 8]
0x7fffeafcdaf8:	or		rdx, 1
0x7fffeafcdaff:	mov		qword ptr [rax + rcx + 8], rdx
0x7fffeafcdb04:	jmp		0x7fffeafcdbb0
disassembling symbol '.LBB16_94':
textAddr: 0x7fffeafcdb09, textSize: 167
0x7fffeafcdb09:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcdb0d:	add		rax, qword ptr [rbp - 0x18]
0x7fffeafcdb11:	mov		qword ptr [rbp - 0x108], rax
0x7fffeafcdb18:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcdb1c:	mov		rax, qword ptr [rax + 8]
0x7fffeafcdb20:	and		rax, 1
0x7fffeafcdb26:	or		rax, qword ptr [rbp - 0x18]
0x7fffeafcdb2a:	or		rax, 2
0x7fffeafcdb30:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcdb34:	mov		qword ptr [rcx + 8], rax
0x7fffeafcdb38:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcdb3c:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafcdb40:	mov		rdx, qword ptr [rax + rcx + 8]
0x7fffeafcdb45:	or		rdx, 1
0x7fffeafcdb4c:	mov		qword ptr [rax + rcx + 8], rdx
0x7fffeafcdb51:	mov		rax, qword ptr [rbp - 0x108]
0x7fffeafcdb58:	mov		rax, qword ptr [rax + 8]
0x7fffeafcdb5c:	and		rax, 1
0x7fffeafcdb62:	or		rax, qword ptr [rbp - 0x98]
0x7fffeafcdb69:	or		rax, 2
0x7fffeafcdb6f:	mov		rcx, qword ptr [rbp - 0x108]
0x7fffeafcdb76:	mov		qword ptr [rcx + 8], rax
0x7fffeafcdb7a:	mov		rax, qword ptr [rbp - 0x108]
0x7fffeafcdb81:	mov		rcx, qword ptr [rbp - 0x98]
0x7fffeafcdb88:	mov		rdx, qword ptr [rax + rcx + 8]
0x7fffeafcdb8d:	or		rdx, 1
0x7fffeafcdb94:	mov		qword ptr [rax + rcx + 8], rdx
0x7fffeafcdb99:	mov		rdi, qword ptr [rbp - 8]
0x7fffeafcdb9d:	mov		rsi, qword ptr [rbp - 0x108]
0x7fffeafcdba4:	mov		rdx, qword ptr [rbp - 0x98]
0x7fffeafcdbab:	call		0x7fffeafd1110
disassembling symbol '.LBB16_95':
textAddr: 0x7fffeafcdbb0, textSize: 8
0x7fffeafcdbb0:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcdbb4:	mov		qword ptr [rbp - 0x28], rax
disassembling symbol '.LBB16_96':
textAddr: 0x7fffeafcdbb8, textSize: 5
0x7fffeafcdbb8:	jmp		0x7fffeafcdbbd
disassembling symbol '.LBB16_97':
textAddr: 0x7fffeafcdbbd, textSize: 5
0x7fffeafcdbbd:	jmp		0x7fffeafcdbc2
disassembling symbol '.LBB16_98':
textAddr: 0x7fffeafcdbc2, textSize: 5
0x7fffeafcdbc2:	jmp		0x7fffeafcdbc7
disassembling symbol '.LBB16_99':
textAddr: 0x7fffeafcdbc7, textSize: 5
0x7fffeafcdbc7:	jmp		0x7fffeafcdbcc
disassembling symbol '.LBB16_100':
textAddr: 0x7fffeafcdbcc, textSize: 5
0x7fffeafcdbcc:	jmp		0x7fffeafcdbd1
disassembling symbol '.LBB16_101':
textAddr: 0x7fffeafcdbd1, textSize: 5
0x7fffeafcdbd1:	jmp		0x7fffeafcdbdb
disassembling symbol '.LBB16_102':
textAddr: 0x7fffeafcdbd6, textSize: 5
0x7fffeafcdbd6:	call		0x7fffeafc4c10
disassembling symbol '.LBB16_103':
textAddr: 0x7fffeafcdbdb, textSize: 21
0x7fffeafcdbdb:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcdbdf:	add		rsp, 0x110
0x7fffeafcdbe6:	pop		rbp
0x7fffeafcdbe7:	ret		
0x7fffeafcdbe8:	nop		dword ptr [rax + rax]
disassembling symbol 'mspace_realloc_in_place':
textAddr: 0x7fffeafcdbf0, textSize: 224
0x7fffeafcdbf0:	push		rbp
0x7fffeafcdbf1:	mov		rbp, rsp
0x7fffeafcdbf4:	sub		rsp, 0x50
0x7fffeafcdbf8:	mov		qword ptr [rbp - 8], rdi
0x7fffeafcdbfc:	mov		qword ptr [rbp - 0x10], rsi
0x7fffeafcdc00:	mov		qword ptr [rbp - 0x18], rdx
0x7fffeafcdc04:	mov		qword ptr [rbp - 0x20], 0
0x7fffeafcdc0c:	cmp		qword ptr [rbp - 0x10], 0
0x7fffeafcdc11:	je		0x7fffeafcdcba
0x7fffeafcdc17:	cmp		qword ptr [rbp - 0x18], -0x80
0x7fffeafcdc1c:	jb		0x7fffeafcdc32
0x7fffeafcdc22:	call		0x7fffeafc3cb0
0x7fffeafcdc27:	mov		dword ptr [rax], 0xc
0x7fffeafcdc2d:	jmp		0x7fffeafcdcb5
0x7fffeafcdc32:	cmp		qword ptr [rbp - 0x18], 0x17
0x7fffeafcdc37:	jae		0x7fffeafcdc4b
0x7fffeafcdc3d:	mov		eax, 0x20
0x7fffeafcdc42:	mov		qword ptr [rbp - 0x48], rax
0x7fffeafcdc46:	jmp		0x7fffeafcdc65
0x7fffeafcdc4b:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcdc4f:	add		rax, 8
0x7fffeafcdc55:	add		rax, 0xf
0x7fffeafcdc5b:	and		rax, 0xfffffffffffffff0
0x7fffeafcdc61:	mov		qword ptr [rbp - 0x48], rax
0x7fffeafcdc65:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafcdc69:	xor		ecx, ecx
0x7fffeafcdc6b:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafcdc6f:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcdc73:	add		rax, -0x10
0x7fffeafcdc79:	mov		qword ptr [rbp - 0x30], rax
0x7fffeafcdc7d:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcdc81:	mov		qword ptr [rbp - 0x38], rax
0x7fffeafcdc85:	mov		rdi, qword ptr [rbp - 0x38]
0x7fffeafcdc89:	mov		rsi, qword ptr [rbp - 0x30]
0x7fffeafcdc8d:	mov		rdx, qword ptr [rbp - 0x28]
0x7fffeafcdc91:	call		0x7fffeafcd020
0x7fffeafcdc96:	mov		qword ptr [rbp - 0x40], rax
0x7fffeafcdc9a:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafcdc9e:	cmp		rax, qword ptr [rbp - 0x30]
0x7fffeafcdca2:	jne		0x7fffeafcdcb0
0x7fffeafcdca8:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcdcac:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafcdcb0:	jmp		0x7fffeafcdcb5
0x7fffeafcdcb5:	jmp		0x7fffeafcdcba
0x7fffeafcdcba:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcdcbe:	add		rsp, 0x50
0x7fffeafcdcc2:	pop		rbp
0x7fffeafcdcc3:	ret		
0x7fffeafcdcc4:	nop		word ptr cs:[rax + rax]
0x7fffeafcdcce:	nop		
disassembling symbol '.LBB17_3':
textAddr: 0x7fffeafcdc32, textSize: 25
0x7fffeafcdc32:	cmp		qword ptr [rbp - 0x18], 0x17
0x7fffeafcdc37:	jae		0x7fffeafcdc4b
0x7fffeafcdc3d:	mov		eax, 0x20
0x7fffeafcdc42:	mov		qword ptr [rbp - 0x48], rax
0x7fffeafcdc46:	jmp		0x7fffeafcdc65
disassembling symbol '.LBB17_5':
textAddr: 0x7fffeafcdc4b, textSize: 26
0x7fffeafcdc4b:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcdc4f:	add		rax, 8
0x7fffeafcdc55:	add		rax, 0xf
0x7fffeafcdc5b:	and		rax, 0xfffffffffffffff0
0x7fffeafcdc61:	mov		qword ptr [rbp - 0x48], rax
disassembling symbol '.LBB17_6':
textAddr: 0x7fffeafcdc65, textSize: 75
0x7fffeafcdc65:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafcdc69:	xor		ecx, ecx
0x7fffeafcdc6b:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafcdc6f:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcdc73:	add		rax, -0x10
0x7fffeafcdc79:	mov		qword ptr [rbp - 0x30], rax
0x7fffeafcdc7d:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcdc81:	mov		qword ptr [rbp - 0x38], rax
0x7fffeafcdc85:	mov		rdi, qword ptr [rbp - 0x38]
0x7fffeafcdc89:	mov		rsi, qword ptr [rbp - 0x30]
0x7fffeafcdc8d:	mov		rdx, qword ptr [rbp - 0x28]
0x7fffeafcdc91:	call		0x7fffeafcd020
0x7fffeafcdc96:	mov		qword ptr [rbp - 0x40], rax
0x7fffeafcdc9a:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafcdc9e:	cmp		rax, qword ptr [rbp - 0x30]
0x7fffeafcdca2:	jne		0x7fffeafcdcb0
0x7fffeafcdca8:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcdcac:	mov		qword ptr [rbp - 0x20], rax
disassembling symbol '.LBB17_8':
textAddr: 0x7fffeafcdcb0, textSize: 5
0x7fffeafcdcb0:	jmp		0x7fffeafcdcb5
disassembling symbol '.LBB17_9':
textAddr: 0x7fffeafcdcb5, textSize: 5
0x7fffeafcdcb5:	jmp		0x7fffeafcdcba
disassembling symbol '.LBB17_10':
textAddr: 0x7fffeafcdcba, textSize: 22
0x7fffeafcdcba:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcdcbe:	add		rsp, 0x50
0x7fffeafcdcc2:	pop		rbp
0x7fffeafcdcc3:	ret		
0x7fffeafcdcc4:	nop		word ptr cs:[rax + rax]
0x7fffeafcdcce:	nop		
disassembling symbol 'mspace_memalign':
textAddr: 0x7fffeafcdcd0, textSize: 96
0x7fffeafcdcd0:	push		rbp
0x7fffeafcdcd1:	mov		rbp, rsp
0x7fffeafcdcd4:	sub		rsp, 0x30
0x7fffeafcdcd8:	mov		qword ptr [rbp - 0x10], rdi
0x7fffeafcdcdc:	mov		qword ptr [rbp - 0x18], rsi
0x7fffeafcdce0:	mov		qword ptr [rbp - 0x20], rdx
0x7fffeafcdce4:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcdce8:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafcdcec:	cmp		qword ptr [rbp - 0x18], 0x10
0x7fffeafcdcf1:	ja		0x7fffeafcdd0d
0x7fffeafcdcf7:	mov		rdi, qword ptr [rbp - 0x10]
0x7fffeafcdcfb:	mov		rsi, qword ptr [rbp - 0x20]
0x7fffeafcdcff:	call		0x7fffeafc8d00
0x7fffeafcdd04:	mov		qword ptr [rbp - 8], rax
0x7fffeafcdd08:	jmp		0x7fffeafcdd22
0x7fffeafcdd0d:	mov		rdi, qword ptr [rbp - 0x28]
0x7fffeafcdd11:	mov		rsi, qword ptr [rbp - 0x18]
0x7fffeafcdd15:	mov		rdx, qword ptr [rbp - 0x20]
0x7fffeafcdd19:	call		0x7fffeafcdd30
0x7fffeafcdd1e:	mov		qword ptr [rbp - 8], rax
0x7fffeafcdd22:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcdd26:	add		rsp, 0x30
0x7fffeafcdd2a:	pop		rbp
0x7fffeafcdd2b:	ret		
0x7fffeafcdd2c:	nop		dword ptr [rax]
disassembling symbol '.LBB18_2':
textAddr: 0x7fffeafcdd0d, textSize: 21
0x7fffeafcdd0d:	mov		rdi, qword ptr [rbp - 0x28]
0x7fffeafcdd11:	mov		rsi, qword ptr [rbp - 0x18]
0x7fffeafcdd15:	mov		rdx, qword ptr [rbp - 0x20]
0x7fffeafcdd19:	call		0x7fffeafcdd30
0x7fffeafcdd1e:	mov		qword ptr [rbp - 8], rax
disassembling symbol '.LBB18_3':
textAddr: 0x7fffeafcdd22, textSize: 14
0x7fffeafcdd22:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcdd26:	add		rsp, 0x30
0x7fffeafcdd2a:	pop		rbp
0x7fffeafcdd2b:	ret		
0x7fffeafcdd2c:	nop		dword ptr [rax]
disassembling symbol 'internal_memalign':
textAddr: 0x7fffeafcdd30, textSize: 944
0x7fffeafcdd30:	push		rbp
0x7fffeafcdd31:	mov		rbp, rsp
0x7fffeafcdd34:	sub		rsp, 0x90
0x7fffeafcdd3b:	mov		qword ptr [rbp - 8], rdi
0x7fffeafcdd3f:	mov		qword ptr [rbp - 0x10], rsi
0x7fffeafcdd43:	mov		qword ptr [rbp - 0x18], rdx
0x7fffeafcdd47:	mov		qword ptr [rbp - 0x20], 0
0x7fffeafcdd4f:	cmp		qword ptr [rbp - 0x10], 0x20
0x7fffeafcdd54:	jae		0x7fffeafcdd62
0x7fffeafcdd5a:	mov		qword ptr [rbp - 0x10], 0x20
0x7fffeafcdd62:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcdd66:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcdd6a:	sub		rcx, 1
0x7fffeafcdd71:	and		rax, rcx
0x7fffeafcdd74:	cmp		rax, 0
0x7fffeafcdd78:	je		0x7fffeafcddad
0x7fffeafcdd7e:	mov		qword ptr [rbp - 0x28], 0x20
0x7fffeafcdd86:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcdd8a:	cmp		rax, qword ptr [rbp - 0x10]
0x7fffeafcdd8e:	jae		0x7fffeafcdda5
0x7fffeafcdd94:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcdd98:	shl		rax, 1
0x7fffeafcdd9c:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafcdda0:	jmp		0x7fffeafcdd86
0x7fffeafcdda5:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcdda9:	mov		qword ptr [rbp - 0x10], rax
0x7fffeafcddad:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcddb1:	mov		rcx, -0x80
0x7fffeafcddb8:	sub		rcx, qword ptr [rbp - 0x10]
0x7fffeafcddbc:	cmp		rax, rcx
0x7fffeafcddbf:	jb		0x7fffeafcdde0
0x7fffeafcddc5:	cmp		qword ptr [rbp - 8], 0
0x7fffeafcddca:	je		0x7fffeafcdddb
0x7fffeafcddd0:	call		0x7fffeafc3cb0
0x7fffeafcddd5:	mov		dword ptr [rax], 0xc
0x7fffeafcdddb:	jmp		0x7fffeafce0d1
0x7fffeafcdde0:	cmp		qword ptr [rbp - 0x18], 0x17
0x7fffeafcdde5:	jae		0x7fffeafcddfc
0x7fffeafcddeb:	mov		eax, 0x20
0x7fffeafcddf0:	mov		qword ptr [rbp - 0x88], rax
0x7fffeafcddf7:	jmp		0x7fffeafcde19
0x7fffeafcddfc:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcde00:	add		rax, 8
0x7fffeafcde06:	add		rax, 0xf
0x7fffeafcde0c:	and		rax, 0xfffffffffffffff0
0x7fffeafcde12:	mov		qword ptr [rbp - 0x88], rax
0x7fffeafcde19:	mov		rax, qword ptr [rbp - 0x88]
0x7fffeafcde20:	mov		qword ptr [rbp - 0x30], rax
0x7fffeafcde24:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcde28:	add		rax, qword ptr [rbp - 0x10]
0x7fffeafcde2c:	add		rax, 0x20
0x7fffeafcde32:	sub		rax, 8
0x7fffeafcde38:	mov		qword ptr [rbp - 0x38], rax
0x7fffeafcde3c:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcde40:	mov		rsi, qword ptr [rbp - 0x38]
0x7fffeafcde44:	mov		rdi, rax
0x7fffeafcde47:	call		0x7fffeafc8d00
0x7fffeafcde4c:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafcde50:	cmp		qword ptr [rbp - 0x20], 0
0x7fffeafcde55:	je		0x7fffeafce0cc
0x7fffeafcde5b:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcde5f:	add		rax, -0x10
0x7fffeafcde65:	mov		qword ptr [rbp - 0x40], rax
0x7fffeafcde69:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcde6d:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcde71:	sub		rcx, 1
0x7fffeafcde78:	and		rax, rcx
0x7fffeafcde7b:	cmp		rax, 0
0x7fffeafcde7f:	je		0x7fffeafcdfdc
0x7fffeafcde85:	xor		eax, eax
0x7fffeafcde87:	mov		ecx, eax
0x7fffeafcde89:	mov		rdx, qword ptr [rbp - 0x20]
0x7fffeafcde8d:	add		rdx, qword ptr [rbp - 0x10]
0x7fffeafcde91:	add		rdx, -1
0x7fffeafcde98:	sub		rcx, qword ptr [rbp - 0x10]
0x7fffeafcde9c:	and		rdx, rcx
0x7fffeafcde9f:	add		rdx, -0x10
0x7fffeafcdea6:	mov		qword ptr [rbp - 0x48], rdx
0x7fffeafcdeaa:	mov		rcx, qword ptr [rbp - 0x48]
0x7fffeafcdeae:	mov		rdx, qword ptr [rbp - 0x40]
0x7fffeafcdeb2:	sub		rcx, rdx
0x7fffeafcdeb5:	cmp		rcx, 0x20
0x7fffeafcdeb9:	jb		0x7fffeafcdecf
0x7fffeafcdebf:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafcdec3:	mov		qword ptr [rbp - 0x90], rax
0x7fffeafcdeca:	jmp		0x7fffeafcdede
0x7fffeafcdecf:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafcded3:	add		rax, qword ptr [rbp - 0x10]
0x7fffeafcded7:	mov		qword ptr [rbp - 0x90], rax
0x7fffeafcdede:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafcdee5:	mov		qword ptr [rbp - 0x50], rax
0x7fffeafcdee9:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafcdeed:	mov		qword ptr [rbp - 0x58], rax
0x7fffeafcdef1:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafcdef5:	mov		rcx, qword ptr [rbp - 0x40]
0x7fffeafcdef9:	sub		rax, rcx
0x7fffeafcdefc:	mov		qword ptr [rbp - 0x60], rax
0x7fffeafcdf00:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafcdf04:	mov		rax, qword ptr [rax + 8]
0x7fffeafcdf08:	and		rax, 0xfffffffffffffff8
0x7fffeafcdf0e:	sub		rax, qword ptr [rbp - 0x60]
0x7fffeafcdf12:	mov		qword ptr [rbp - 0x68], rax
0x7fffeafcdf16:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafcdf1a:	mov		rax, qword ptr [rax + 8]
0x7fffeafcdf1e:	and		rax, 3
0x7fffeafcdf24:	cmp		rax, 0
0x7fffeafcdf28:	jne		0x7fffeafcdf51
0x7fffeafcdf2e:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafcdf32:	mov		rax, qword ptr [rax]
0x7fffeafcdf35:	add		rax, qword ptr [rbp - 0x60]
0x7fffeafcdf39:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafcdf3d:	mov		qword ptr [rcx], rax
0x7fffeafcdf40:	mov		rax, qword ptr [rbp - 0x68]
0x7fffeafcdf44:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafcdf48:	mov		qword ptr [rcx + 8], rax
0x7fffeafcdf4c:	jmp		0x7fffeafcdfd4
0x7fffeafcdf51:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafcdf55:	mov		rax, qword ptr [rax + 8]
0x7fffeafcdf59:	and		rax, 1
0x7fffeafcdf5f:	or		rax, qword ptr [rbp - 0x68]
0x7fffeafcdf63:	or		rax, 2
0x7fffeafcdf69:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafcdf6d:	mov		qword ptr [rcx + 8], rax
0x7fffeafcdf71:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafcdf75:	mov		rcx, qword ptr [rbp - 0x68]
0x7fffeafcdf79:	mov		rdx, qword ptr [rax + rcx + 8]
0x7fffeafcdf7e:	or		rdx, 1
0x7fffeafcdf85:	mov		qword ptr [rax + rcx + 8], rdx
0x7fffeafcdf8a:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafcdf8e:	mov		rax, qword ptr [rax + 8]
0x7fffeafcdf92:	and		rax, 1
0x7fffeafcdf98:	or		rax, qword ptr [rbp - 0x60]
0x7fffeafcdf9c:	or		rax, 2
0x7fffeafcdfa2:	mov		rcx, qword ptr [rbp - 0x40]
0x7fffeafcdfa6:	mov		qword ptr [rcx + 8], rax
0x7fffeafcdfaa:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafcdfae:	mov		rcx, qword ptr [rbp - 0x60]
0x7fffeafcdfb2:	mov		rdx, qword ptr [rax + rcx + 8]
0x7fffeafcdfb7:	or		rdx, 1
0x7fffeafcdfbe:	mov		qword ptr [rax + rcx + 8], rdx
0x7fffeafcdfc3:	mov		rdi, qword ptr [rbp - 8]
0x7fffeafcdfc7:	mov		rsi, qword ptr [rbp - 0x40]
0x7fffeafcdfcb:	mov		rdx, qword ptr [rbp - 0x60]
0x7fffeafcdfcf:	call		0x7fffeafd1110
0x7fffeafcdfd4:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafcdfd8:	mov		qword ptr [rbp - 0x40], rax
0x7fffeafcdfdc:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafcdfe0:	mov		rax, qword ptr [rax + 8]
0x7fffeafcdfe4:	and		rax, 3
0x7fffeafcdfea:	cmp		rax, 0
0x7fffeafcdfee:	je		0x7fffeafce0be
0x7fffeafcdff4:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafcdff8:	mov		rax, qword ptr [rax + 8]
0x7fffeafcdffc:	and		rax, 0xfffffffffffffff8
0x7fffeafce002:	mov		qword ptr [rbp - 0x70], rax
0x7fffeafce006:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafce00a:	mov		rcx, qword ptr [rbp - 0x30]
0x7fffeafce00e:	add		rcx, 0x20
0x7fffeafce015:	cmp		rax, rcx
0x7fffeafce018:	jbe		0x7fffeafce0b9
0x7fffeafce01e:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafce022:	sub		rax, qword ptr [rbp - 0x30]
0x7fffeafce026:	mov		qword ptr [rbp - 0x78], rax
0x7fffeafce02a:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafce02e:	add		rax, qword ptr [rbp - 0x30]
0x7fffeafce032:	mov		qword ptr [rbp - 0x80], rax
0x7fffeafce036:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafce03a:	mov		rax, qword ptr [rax + 8]
0x7fffeafce03e:	and		rax, 1
0x7fffeafce044:	or		rax, qword ptr [rbp - 0x30]
0x7fffeafce048:	or		rax, 2
0x7fffeafce04e:	mov		rcx, qword ptr [rbp - 0x40]
0x7fffeafce052:	mov		qword ptr [rcx + 8], rax
0x7fffeafce056:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafce05a:	mov		rcx, qword ptr [rbp - 0x30]
0x7fffeafce05e:	mov		rdx, qword ptr [rax + rcx + 8]
0x7fffeafce063:	or		rdx, 1
0x7fffeafce06a:	mov		qword ptr [rax + rcx + 8], rdx
0x7fffeafce06f:	mov		rax, qword ptr [rbp - 0x80]
0x7fffeafce073:	mov		rax, qword ptr [rax + 8]
0x7fffeafce077:	and		rax, 1
0x7fffeafce07d:	or		rax, qword ptr [rbp - 0x78]
0x7fffeafce081:	or		rax, 2
0x7fffeafce087:	mov		rcx, qword ptr [rbp - 0x80]
0x7fffeafce08b:	mov		qword ptr [rcx + 8], rax
0x7fffeafce08f:	mov		rax, qword ptr [rbp - 0x80]
0x7fffeafce093:	mov		rcx, qword ptr [rbp - 0x78]
0x7fffeafce097:	mov		rdx, qword ptr [rax + rcx + 8]
0x7fffeafce09c:	or		rdx, 1
0x7fffeafce0a3:	mov		qword ptr [rax + rcx + 8], rdx
0x7fffeafce0a8:	mov		rdi, qword ptr [rbp - 8]
0x7fffeafce0ac:	mov		rsi, qword ptr [rbp - 0x80]
0x7fffeafce0b0:	mov		rdx, qword ptr [rbp - 0x78]
0x7fffeafce0b4:	call		0x7fffeafd1110
0x7fffeafce0b9:	jmp		0x7fffeafce0be
0x7fffeafce0be:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafce0c2:	add		rax, 0x10
0x7fffeafce0c8:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafce0cc:	jmp		0x7fffeafce0d1
0x7fffeafce0d1:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafce0d5:	add		rsp, 0x90
0x7fffeafce0dc:	pop		rbp
0x7fffeafce0dd:	ret		
0x7fffeafce0de:	nop		
disassembling symbol '.LBB19_2':
textAddr: 0x7fffeafcdd62, textSize: 36
0x7fffeafcdd62:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcdd66:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcdd6a:	sub		rcx, 1
0x7fffeafcdd71:	and		rax, rcx
0x7fffeafcdd74:	cmp		rax, 0
0x7fffeafcdd78:	je		0x7fffeafcddad
0x7fffeafcdd7e:	mov		qword ptr [rbp - 0x28], 0x20
disassembling symbol '.LBB19_4':
textAddr: 0x7fffeafcdd86, textSize: 31
0x7fffeafcdd86:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcdd8a:	cmp		rax, qword ptr [rbp - 0x10]
0x7fffeafcdd8e:	jae		0x7fffeafcdda5
0x7fffeafcdd94:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcdd98:	shl		rax, 1
0x7fffeafcdd9c:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafcdda0:	jmp		0x7fffeafcdd86
disassembling symbol '.LBB19_6':
textAddr: 0x7fffeafcdda5, textSize: 8
0x7fffeafcdda5:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcdda9:	mov		qword ptr [rbp - 0x10], rax
disassembling symbol '.LBB19_7':
textAddr: 0x7fffeafcddad, textSize: 46
0x7fffeafcddad:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcddb1:	mov		rcx, -0x80
0x7fffeafcddb8:	sub		rcx, qword ptr [rbp - 0x10]
0x7fffeafcddbc:	cmp		rax, rcx
0x7fffeafcddbf:	jb		0x7fffeafcdde0
0x7fffeafcddc5:	cmp		qword ptr [rbp - 8], 0
0x7fffeafcddca:	je		0x7fffeafcdddb
0x7fffeafcddd0:	call		0x7fffeafc3cb0
0x7fffeafcddd5:	mov		dword ptr [rax], 0xc
disassembling symbol '.LBB19_10':
textAddr: 0x7fffeafcdddb, textSize: 5
0x7fffeafcdddb:	jmp		0x7fffeafce0d1
disassembling symbol '.LBB19_11':
textAddr: 0x7fffeafcdde0, textSize: 28
0x7fffeafcdde0:	cmp		qword ptr [rbp - 0x18], 0x17
0x7fffeafcdde5:	jae		0x7fffeafcddfc
0x7fffeafcddeb:	mov		eax, 0x20
0x7fffeafcddf0:	mov		qword ptr [rbp - 0x88], rax
0x7fffeafcddf7:	jmp		0x7fffeafcde19
disassembling symbol '.LBB19_13':
textAddr: 0x7fffeafcddfc, textSize: 29
0x7fffeafcddfc:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcde00:	add		rax, 8
0x7fffeafcde06:	add		rax, 0xf
0x7fffeafcde0c:	and		rax, 0xfffffffffffffff0
0x7fffeafcde12:	mov		qword ptr [rbp - 0x88], rax
disassembling symbol '.LBB19_14':
textAddr: 0x7fffeafcde19, textSize: 182
0x7fffeafcde19:	mov		rax, qword ptr [rbp - 0x88]
0x7fffeafcde20:	mov		qword ptr [rbp - 0x30], rax
0x7fffeafcde24:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcde28:	add		rax, qword ptr [rbp - 0x10]
0x7fffeafcde2c:	add		rax, 0x20
0x7fffeafcde32:	sub		rax, 8
0x7fffeafcde38:	mov		qword ptr [rbp - 0x38], rax
0x7fffeafcde3c:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcde40:	mov		rsi, qword ptr [rbp - 0x38]
0x7fffeafcde44:	mov		rdi, rax
0x7fffeafcde47:	call		0x7fffeafc8d00
0x7fffeafcde4c:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafcde50:	cmp		qword ptr [rbp - 0x20], 0
0x7fffeafcde55:	je		0x7fffeafce0cc
0x7fffeafcde5b:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcde5f:	add		rax, -0x10
0x7fffeafcde65:	mov		qword ptr [rbp - 0x40], rax
0x7fffeafcde69:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcde6d:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcde71:	sub		rcx, 1
0x7fffeafcde78:	and		rax, rcx
0x7fffeafcde7b:	cmp		rax, 0
0x7fffeafcde7f:	je		0x7fffeafcdfdc
0x7fffeafcde85:	xor		eax, eax
0x7fffeafcde87:	mov		ecx, eax
0x7fffeafcde89:	mov		rdx, qword ptr [rbp - 0x20]
0x7fffeafcde8d:	add		rdx, qword ptr [rbp - 0x10]
0x7fffeafcde91:	add		rdx, -1
0x7fffeafcde98:	sub		rcx, qword ptr [rbp - 0x10]
0x7fffeafcde9c:	and		rdx, rcx
0x7fffeafcde9f:	add		rdx, -0x10
0x7fffeafcdea6:	mov		qword ptr [rbp - 0x48], rdx
0x7fffeafcdeaa:	mov		rcx, qword ptr [rbp - 0x48]
0x7fffeafcdeae:	mov		rdx, qword ptr [rbp - 0x40]
0x7fffeafcdeb2:	sub		rcx, rdx
0x7fffeafcdeb5:	cmp		rcx, 0x20
0x7fffeafcdeb9:	jb		0x7fffeafcdecf
0x7fffeafcdebf:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafcdec3:	mov		qword ptr [rbp - 0x90], rax
0x7fffeafcdeca:	jmp		0x7fffeafcdede
disassembling symbol '.LBB19_18':
textAddr: 0x7fffeafcdecf, textSize: 15
0x7fffeafcdecf:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafcded3:	add		rax, qword ptr [rbp - 0x10]
0x7fffeafcded7:	mov		qword ptr [rbp - 0x90], rax
disassembling symbol '.LBB19_19':
textAddr: 0x7fffeafcdede, textSize: 115
0x7fffeafcdede:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafcdee5:	mov		qword ptr [rbp - 0x50], rax
0x7fffeafcdee9:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafcdeed:	mov		qword ptr [rbp - 0x58], rax
0x7fffeafcdef1:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafcdef5:	mov		rcx, qword ptr [rbp - 0x40]
0x7fffeafcdef9:	sub		rax, rcx
0x7fffeafcdefc:	mov		qword ptr [rbp - 0x60], rax
0x7fffeafcdf00:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafcdf04:	mov		rax, qword ptr [rax + 8]
0x7fffeafcdf08:	and		rax, 0xfffffffffffffff8
0x7fffeafcdf0e:	sub		rax, qword ptr [rbp - 0x60]
0x7fffeafcdf12:	mov		qword ptr [rbp - 0x68], rax
0x7fffeafcdf16:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafcdf1a:	mov		rax, qword ptr [rax + 8]
0x7fffeafcdf1e:	and		rax, 3
0x7fffeafcdf24:	cmp		rax, 0
0x7fffeafcdf28:	jne		0x7fffeafcdf51
0x7fffeafcdf2e:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafcdf32:	mov		rax, qword ptr [rax]
0x7fffeafcdf35:	add		rax, qword ptr [rbp - 0x60]
0x7fffeafcdf39:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafcdf3d:	mov		qword ptr [rcx], rax
0x7fffeafcdf40:	mov		rax, qword ptr [rbp - 0x68]
0x7fffeafcdf44:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafcdf48:	mov		qword ptr [rcx + 8], rax
0x7fffeafcdf4c:	jmp		0x7fffeafcdfd4
disassembling symbol '.LBB19_21':
textAddr: 0x7fffeafcdf51, textSize: 131
0x7fffeafcdf51:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafcdf55:	mov		rax, qword ptr [rax + 8]
0x7fffeafcdf59:	and		rax, 1
0x7fffeafcdf5f:	or		rax, qword ptr [rbp - 0x68]
0x7fffeafcdf63:	or		rax, 2
0x7fffeafcdf69:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafcdf6d:	mov		qword ptr [rcx + 8], rax
0x7fffeafcdf71:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafcdf75:	mov		rcx, qword ptr [rbp - 0x68]
0x7fffeafcdf79:	mov		rdx, qword ptr [rax + rcx + 8]
0x7fffeafcdf7e:	or		rdx, 1
0x7fffeafcdf85:	mov		qword ptr [rax + rcx + 8], rdx
0x7fffeafcdf8a:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafcdf8e:	mov		rax, qword ptr [rax + 8]
0x7fffeafcdf92:	and		rax, 1
0x7fffeafcdf98:	or		rax, qword ptr [rbp - 0x60]
0x7fffeafcdf9c:	or		rax, 2
0x7fffeafcdfa2:	mov		rcx, qword ptr [rbp - 0x40]
0x7fffeafcdfa6:	mov		qword ptr [rcx + 8], rax
0x7fffeafcdfaa:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafcdfae:	mov		rcx, qword ptr [rbp - 0x60]
0x7fffeafcdfb2:	mov		rdx, qword ptr [rax + rcx + 8]
0x7fffeafcdfb7:	or		rdx, 1
0x7fffeafcdfbe:	mov		qword ptr [rax + rcx + 8], rdx
0x7fffeafcdfc3:	mov		rdi, qword ptr [rbp - 8]
0x7fffeafcdfc7:	mov		rsi, qword ptr [rbp - 0x40]
0x7fffeafcdfcb:	mov		rdx, qword ptr [rbp - 0x60]
0x7fffeafcdfcf:	call		0x7fffeafd1110
disassembling symbol '.LBB19_22':
textAddr: 0x7fffeafcdfd4, textSize: 8
0x7fffeafcdfd4:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafcdfd8:	mov		qword ptr [rbp - 0x40], rax
disassembling symbol '.LBB19_23':
textAddr: 0x7fffeafcdfdc, textSize: 221
0x7fffeafcdfdc:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafcdfe0:	mov		rax, qword ptr [rax + 8]
0x7fffeafcdfe4:	and		rax, 3
0x7fffeafcdfea:	cmp		rax, 0
0x7fffeafcdfee:	je		0x7fffeafce0be
0x7fffeafcdff4:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafcdff8:	mov		rax, qword ptr [rax + 8]
0x7fffeafcdffc:	and		rax, 0xfffffffffffffff8
0x7fffeafce002:	mov		qword ptr [rbp - 0x70], rax
0x7fffeafce006:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafce00a:	mov		rcx, qword ptr [rbp - 0x30]
0x7fffeafce00e:	add		rcx, 0x20
0x7fffeafce015:	cmp		rax, rcx
0x7fffeafce018:	jbe		0x7fffeafce0b9
0x7fffeafce01e:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafce022:	sub		rax, qword ptr [rbp - 0x30]
0x7fffeafce026:	mov		qword ptr [rbp - 0x78], rax
0x7fffeafce02a:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafce02e:	add		rax, qword ptr [rbp - 0x30]
0x7fffeafce032:	mov		qword ptr [rbp - 0x80], rax
0x7fffeafce036:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafce03a:	mov		rax, qword ptr [rax + 8]
0x7fffeafce03e:	and		rax, 1
0x7fffeafce044:	or		rax, qword ptr [rbp - 0x30]
0x7fffeafce048:	or		rax, 2
0x7fffeafce04e:	mov		rcx, qword ptr [rbp - 0x40]
0x7fffeafce052:	mov		qword ptr [rcx + 8], rax
0x7fffeafce056:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafce05a:	mov		rcx, qword ptr [rbp - 0x30]
0x7fffeafce05e:	mov		rdx, qword ptr [rax + rcx + 8]
0x7fffeafce063:	or		rdx, 1
0x7fffeafce06a:	mov		qword ptr [rax + rcx + 8], rdx
0x7fffeafce06f:	mov		rax, qword ptr [rbp - 0x80]
0x7fffeafce073:	mov		rax, qword ptr [rax + 8]
0x7fffeafce077:	and		rax, 1
0x7fffeafce07d:	or		rax, qword ptr [rbp - 0x78]
0x7fffeafce081:	or		rax, 2
0x7fffeafce087:	mov		rcx, qword ptr [rbp - 0x80]
0x7fffeafce08b:	mov		qword ptr [rcx + 8], rax
0x7fffeafce08f:	mov		rax, qword ptr [rbp - 0x80]
0x7fffeafce093:	mov		rcx, qword ptr [rbp - 0x78]
0x7fffeafce097:	mov		rdx, qword ptr [rax + rcx + 8]
0x7fffeafce09c:	or		rdx, 1
0x7fffeafce0a3:	mov		qword ptr [rax + rcx + 8], rdx
0x7fffeafce0a8:	mov		rdi, qword ptr [rbp - 8]
0x7fffeafce0ac:	mov		rsi, qword ptr [rbp - 0x80]
0x7fffeafce0b0:	mov		rdx, qword ptr [rbp - 0x78]
0x7fffeafce0b4:	call		0x7fffeafd1110
disassembling symbol '.LBB19_26':
textAddr: 0x7fffeafce0b9, textSize: 5
0x7fffeafce0b9:	jmp		0x7fffeafce0be
disassembling symbol '.LBB19_27':
textAddr: 0x7fffeafce0be, textSize: 14
0x7fffeafce0be:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafce0c2:	add		rax, 0x10
0x7fffeafce0c8:	mov		qword ptr [rbp - 0x20], rax
disassembling symbol '.LBB19_28':
textAddr: 0x7fffeafce0cc, textSize: 5
0x7fffeafce0cc:	jmp		0x7fffeafce0d1
disassembling symbol '.LBB19_29':
textAddr: 0x7fffeafce0d1, textSize: 15
0x7fffeafce0d1:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafce0d5:	add		rsp, 0x90
0x7fffeafce0dc:	pop		rbp
0x7fffeafce0dd:	ret		
0x7fffeafce0de:	nop		
disassembling symbol 'mspace_independent_calloc':
textAddr: 0x7fffeafce0e0, textSize: 80
0x7fffeafce0e0:	push		rbp
0x7fffeafce0e1:	mov		rbp, rsp
0x7fffeafce0e4:	sub		rsp, 0x30
0x7fffeafce0e8:	mov		qword ptr [rbp - 8], rdi
0x7fffeafce0ec:	mov		qword ptr [rbp - 0x10], rsi
0x7fffeafce0f0:	mov		qword ptr [rbp - 0x18], rdx
0x7fffeafce0f4:	mov		qword ptr [rbp - 0x20], rcx
0x7fffeafce0f8:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafce0fc:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafce100:	mov		rax, qword ptr [rbp - 8]
0x7fffeafce104:	mov		qword ptr [rbp - 0x30], rax
0x7fffeafce108:	mov		rdi, qword ptr [rbp - 0x30]
0x7fffeafce10c:	mov		rsi, qword ptr [rbp - 0x10]
0x7fffeafce110:	mov		r8, qword ptr [rbp - 0x20]
0x7fffeafce114:	lea		rdx, [rbp - 0x28]
0x7fffeafce118:	mov		ecx, 3
0x7fffeafce11d:	call		0x7fffeafce130
0x7fffeafce122:	add		rsp, 0x30
0x7fffeafce126:	pop		rbp
0x7fffeafce127:	ret		
0x7fffeafce128:	nop		dword ptr [rax + rax]
disassembling symbol 'ialloc':
textAddr: 0x7fffeafce130, textSize: 1120
0x7fffeafce130:	push		rbp
0x7fffeafce131:	mov		rbp, rsp
0x7fffeafce134:	sub		rsp, 0xc0
0x7fffeafce13b:	mov		qword ptr [rbp - 0x10], rdi
0x7fffeafce13f:	mov		qword ptr [rbp - 0x18], rsi
0x7fffeafce143:	mov		qword ptr [rbp - 0x20], rdx
0x7fffeafce147:	mov		dword ptr [rbp - 0x24], ecx
0x7fffeafce14a:	mov		qword ptr [rbp - 0x30], r8
0x7fffeafce14e:	cmp		qword ptr [rip + 0x2c1ccd2], 0
0x7fffeafce156:	mov		al, 1
0x7fffeafce158:	mov		byte ptr [rbp - 0x91], al
0x7fffeafce15e:	jne		0x7fffeafce175
0x7fffeafce164:	call		0x7fffeafc8870
0x7fffeafce169:	cmp		eax, 0
0x7fffeafce16c:	setne		cl
0x7fffeafce16f:	mov		byte ptr [rbp - 0x91], cl
0x7fffeafce175:	mov		al, byte ptr [rbp - 0x91]
0x7fffeafce17b:	cmp		qword ptr [rbp - 0x30], 0
0x7fffeafce180:	je		0x7fffeafce1b3
0x7fffeafce186:	cmp		qword ptr [rbp - 0x18], 0
0x7fffeafce18b:	jne		0x7fffeafce19e
0x7fffeafce191:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafce195:	mov		qword ptr [rbp - 8], rax
0x7fffeafce199:	jmp		0x7fffeafce583
0x7fffeafce19e:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafce1a2:	mov		qword ptr [rbp - 0x68], rax
0x7fffeafce1a6:	mov		qword ptr [rbp - 0x48], 0
0x7fffeafce1ae:	jmp		0x7fffeafce22e
0x7fffeafce1b3:	cmp		qword ptr [rbp - 0x18], 0
0x7fffeafce1b8:	jne		0x7fffeafce1d7
0x7fffeafce1be:	xor		eax, eax
0x7fffeafce1c0:	mov		esi, eax
0x7fffeafce1c2:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafce1c6:	mov		rdi, rcx
0x7fffeafce1c9:	call		0x7fffeafc8d00
0x7fffeafce1ce:	mov		qword ptr [rbp - 8], rax
0x7fffeafce1d2:	jmp		0x7fffeafce583
0x7fffeafce1d7:	mov		qword ptr [rbp - 0x68], 0
0x7fffeafce1df:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafce1e3:	shl		rax, 3
0x7fffeafce1e7:	cmp		rax, 0x17
0x7fffeafce1eb:	jae		0x7fffeafce202
0x7fffeafce1f1:	mov		eax, 0x20
0x7fffeafce1f6:	mov		qword ptr [rbp - 0xa0], rax
0x7fffeafce1fd:	jmp		0x7fffeafce223
0x7fffeafce202:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafce206:	shl		rax, 3
0x7fffeafce20a:	add		rax, 8
0x7fffeafce210:	add		rax, 0xf
0x7fffeafce216:	and		rax, 0xfffffffffffffff0
0x7fffeafce21c:	mov		qword ptr [rbp - 0xa0], rax
0x7fffeafce223:	mov		rax, qword ptr [rbp - 0xa0]
0x7fffeafce22a:	mov		qword ptr [rbp - 0x48], rax
0x7fffeafce22e:	mov		eax, dword ptr [rbp - 0x24]
0x7fffeafce231:	and		eax, 1
0x7fffeafce234:	cmp		eax, 0
0x7fffeafce237:	je		0x7fffeafce299
0x7fffeafce23d:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafce241:	cmp		qword ptr [rax], 0x17
0x7fffeafce245:	jae		0x7fffeafce25c
0x7fffeafce24b:	mov		eax, 0x20
0x7fffeafce250:	mov		qword ptr [rbp - 0xa8], rax
0x7fffeafce257:	jmp		0x7fffeafce27c
0x7fffeafce25c:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafce260:	mov		rax, qword ptr [rax]
0x7fffeafce263:	add		rax, 8
0x7fffeafce269:	add		rax, 0xf
0x7fffeafce26f:	and		rax, 0xfffffffffffffff0
0x7fffeafce275:	mov		qword ptr [rbp - 0xa8], rax
0x7fffeafce27c:	mov		rax, qword ptr [rbp - 0xa8]
0x7fffeafce283:	mov		qword ptr [rbp - 0x38], rax
0x7fffeafce287:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafce28b:	imul		rax, qword ptr [rbp - 0x38]
0x7fffeafce290:	mov		qword ptr [rbp - 0x40], rax
0x7fffeafce294:	jmp		0x7fffeafce341
0x7fffeafce299:	mov		qword ptr [rbp - 0x38], 0
0x7fffeafce2a1:	mov		qword ptr [rbp - 0x40], 0
0x7fffeafce2a9:	mov		qword ptr [rbp - 0x88], 0
0x7fffeafce2b4:	mov		rax, qword ptr [rbp - 0x88]
0x7fffeafce2bb:	cmp		rax, qword ptr [rbp - 0x18]
0x7fffeafce2bf:	je		0x7fffeafce33c
0x7fffeafce2c5:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafce2c9:	mov		rcx, qword ptr [rbp - 0x88]
0x7fffeafce2d0:	cmp		qword ptr [rax + rcx*8], 0x17
0x7fffeafce2d5:	jae		0x7fffeafce2ec
0x7fffeafce2db:	mov		eax, 0x20
0x7fffeafce2e0:	mov		qword ptr [rbp - 0xb0], rax
0x7fffeafce2e7:	jmp		0x7fffeafce314
0x7fffeafce2ec:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafce2f0:	mov		rcx, qword ptr [rbp - 0x88]
0x7fffeafce2f7:	mov		rax, qword ptr [rax + rcx*8]
0x7fffeafce2fb:	add		rax, 8
0x7fffeafce301:	add		rax, 0xf
0x7fffeafce307:	and		rax, 0xfffffffffffffff0
0x7fffeafce30d:	mov		qword ptr [rbp - 0xb0], rax
0x7fffeafce314:	mov		rax, qword ptr [rbp - 0xb0]
0x7fffeafce31b:	add		rax, qword ptr [rbp - 0x40]
0x7fffeafce31f:	mov		qword ptr [rbp - 0x40], rax
0x7fffeafce323:	mov		rax, qword ptr [rbp - 0x88]
0x7fffeafce32a:	add		rax, 1
0x7fffeafce330:	mov		qword ptr [rbp - 0x88], rax
0x7fffeafce337:	jmp		0x7fffeafce2b4
0x7fffeafce33c:	jmp		0x7fffeafce341
0x7fffeafce341:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafce345:	add		rax, qword ptr [rbp - 0x48]
0x7fffeafce349:	mov		qword ptr [rbp - 0x80], rax
0x7fffeafce34d:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafce351:	mov		ecx, dword ptr [rax + 0x370]
0x7fffeafce357:	mov		eax, ecx
0x7fffeafce359:	and		rax, 0
0x7fffeafce35f:	mov		dword ptr [rbp - 0x74], eax
0x7fffeafce362:	mov		rdx, qword ptr [rbp - 0x10]
0x7fffeafce366:	mov		rsi, qword ptr [rbp - 0x80]
0x7fffeafce36a:	sub		rsi, 8
0x7fffeafce371:	mov		rdi, rdx
0x7fffeafce374:	call		0x7fffeafc8d00
0x7fffeafce379:	mov		qword ptr [rbp - 0x50], rax
0x7fffeafce37d:	cmp		dword ptr [rbp - 0x74], 0
0x7fffeafce381:	je		0x7fffeafce399
0x7fffeafce387:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafce38b:	mov		ecx, dword ptr [rax + 0x370]
0x7fffeafce391:	mov		edx, ecx
0x7fffeafce393:	mov		dword ptr [rax + 0x370], edx
0x7fffeafce399:	cmp		qword ptr [rbp - 0x50], 0
0x7fffeafce39e:	jne		0x7fffeafce3b1
0x7fffeafce3a4:	mov		qword ptr [rbp - 8], 0
0x7fffeafce3ac:	jmp		0x7fffeafce583
0x7fffeafce3b1:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafce3b5:	add		rax, -0x10
0x7fffeafce3bb:	mov		qword ptr [rbp - 0x58], rax
0x7fffeafce3bf:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafce3c3:	mov		rax, qword ptr [rax + 8]
0x7fffeafce3c7:	and		rax, 0xfffffffffffffff8
0x7fffeafce3cd:	mov		qword ptr [rbp - 0x60], rax
0x7fffeafce3d1:	mov		ecx, dword ptr [rbp - 0x24]
0x7fffeafce3d4:	and		ecx, 2
0x7fffeafce3d7:	cmp		ecx, 0
0x7fffeafce3da:	je		0x7fffeafce400
0x7fffeafce3e0:	xor		esi, esi
0x7fffeafce3e2:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafce3e6:	mov		rcx, qword ptr [rbp - 0x60]
0x7fffeafce3ea:	sub		rcx, 8
0x7fffeafce3f1:	sub		rcx, qword ptr [rbp - 0x48]
0x7fffeafce3f5:	mov		rdi, rax
0x7fffeafce3f8:	mov		rdx, rcx
0x7fffeafce3fb:	call		0x7fffeafd2a10
0x7fffeafce400:	cmp		qword ptr [rbp - 0x68], 0
0x7fffeafce405:	jne		0x7fffeafce457
0x7fffeafce40b:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafce40f:	add		rax, qword ptr [rbp - 0x40]
0x7fffeafce413:	mov		qword ptr [rbp - 0x70], rax
0x7fffeafce417:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafce41b:	sub		rax, qword ptr [rbp - 0x40]
0x7fffeafce41f:	mov		qword ptr [rbp - 0x90], rax
0x7fffeafce426:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafce42a:	add		rax, 0x10
0x7fffeafce430:	mov		qword ptr [rbp - 0x68], rax
0x7fffeafce434:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafce43b:	or		rax, 1
0x7fffeafce441:	or		rax, 2
0x7fffeafce447:	mov		rcx, qword ptr [rbp - 0x70]
0x7fffeafce44b:	mov		qword ptr [rcx + 8], rax
0x7fffeafce44f:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafce453:	mov		qword ptr [rbp - 0x60], rax
0x7fffeafce457:	mov		qword ptr [rbp - 0x88], 0
0x7fffeafce462:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafce466:	add		rax, 0x10
0x7fffeafce46c:	mov		rcx, qword ptr [rbp - 0x68]
0x7fffeafce470:	mov		rdx, qword ptr [rbp - 0x88]
0x7fffeafce477:	mov		qword ptr [rcx + rdx*8], rax
0x7fffeafce47b:	mov		rax, qword ptr [rbp - 0x88]
0x7fffeafce482:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafce486:	sub		rcx, 1
0x7fffeafce48d:	cmp		rax, rcx
0x7fffeafce490:	je		0x7fffeafce540
0x7fffeafce496:	cmp		qword ptr [rbp - 0x38], 0
0x7fffeafce49b:	je		0x7fffeafce4ae
0x7fffeafce4a1:	mov		rax, qword ptr [rbp - 0x38]
0x7fffeafce4a5:	mov		qword ptr [rbp - 0x80], rax
0x7fffeafce4a9:	jmp		0x7fffeafce508
0x7fffeafce4ae:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafce4b2:	mov		rcx, qword ptr [rbp - 0x88]
0x7fffeafce4b9:	cmp		qword ptr [rax + rcx*8], 0x17
0x7fffeafce4be:	jae		0x7fffeafce4d5
0x7fffeafce4c4:	mov		eax, 0x20
0x7fffeafce4c9:	mov		qword ptr [rbp - 0xb8], rax
0x7fffeafce4d0:	jmp		0x7fffeafce4fd
0x7fffeafce4d5:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafce4d9:	mov		rcx, qword ptr [rbp - 0x88]
0x7fffeafce4e0:	mov		rax, qword ptr [rax + rcx*8]
0x7fffeafce4e4:	add		rax, 8
0x7fffeafce4ea:	add		rax, 0xf
0x7fffeafce4f0:	and		rax, 0xfffffffffffffff0
0x7fffeafce4f6:	mov		qword ptr [rbp - 0xb8], rax
0x7fffeafce4fd:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafce504:	mov		qword ptr [rbp - 0x80], rax
0x7fffeafce508:	mov		rax, qword ptr [rbp - 0x80]
0x7fffeafce50c:	mov		rcx, qword ptr [rbp - 0x60]
0x7fffeafce510:	sub		rcx, rax
0x7fffeafce513:	mov		qword ptr [rbp - 0x60], rcx
0x7fffeafce517:	mov		rax, qword ptr [rbp - 0x80]
0x7fffeafce51b:	or		rax, 1
0x7fffeafce521:	or		rax, 2
0x7fffeafce527:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafce52b:	mov		qword ptr [rcx + 8], rax
0x7fffeafce52f:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafce533:	add		rax, qword ptr [rbp - 0x80]
0x7fffeafce537:	mov		qword ptr [rbp - 0x58], rax
0x7fffeafce53b:	jmp		0x7fffeafce55d
0x7fffeafce540:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafce544:	or		rax, 1
0x7fffeafce54a:	or		rax, 2
0x7fffeafce550:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafce554:	mov		qword ptr [rcx + 8], rax
0x7fffeafce558:	jmp		0x7fffeafce57b
0x7fffeafce55d:	jmp		0x7fffeafce562
0x7fffeafce562:	mov		rax, qword ptr [rbp - 0x88]
0x7fffeafce569:	add		rax, 1
0x7fffeafce56f:	mov		qword ptr [rbp - 0x88], rax
0x7fffeafce576:	jmp		0x7fffeafce462
0x7fffeafce57b:	mov		rax, qword ptr [rbp - 0x68]
0x7fffeafce57f:	mov		qword ptr [rbp - 8], rax
0x7fffeafce583:	mov		rax, qword ptr [rbp - 8]
0x7fffeafce587:	add		rsp, 0xc0
0x7fffeafce58e:	pop		rbp
0x7fffeafce58f:	ret		
disassembling symbol '.LBB21_2':
textAddr: 0x7fffeafce175, textSize: 41
0x7fffeafce175:	mov		al, byte ptr [rbp - 0x91]
0x7fffeafce17b:	cmp		qword ptr [rbp - 0x30], 0
0x7fffeafce180:	je		0x7fffeafce1b3
0x7fffeafce186:	cmp		qword ptr [rbp - 0x18], 0
0x7fffeafce18b:	jne		0x7fffeafce19e
0x7fffeafce191:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafce195:	mov		qword ptr [rbp - 8], rax
0x7fffeafce199:	jmp		0x7fffeafce583
disassembling symbol '.LBB21_5':
textAddr: 0x7fffeafce19e, textSize: 21
0x7fffeafce19e:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafce1a2:	mov		qword ptr [rbp - 0x68], rax
0x7fffeafce1a6:	mov		qword ptr [rbp - 0x48], 0
0x7fffeafce1ae:	jmp		0x7fffeafce22e
disassembling symbol '.LBB21_6':
textAddr: 0x7fffeafce1b3, textSize: 36
0x7fffeafce1b3:	cmp		qword ptr [rbp - 0x18], 0
0x7fffeafce1b8:	jne		0x7fffeafce1d7
0x7fffeafce1be:	xor		eax, eax
0x7fffeafce1c0:	mov		esi, eax
0x7fffeafce1c2:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafce1c6:	mov		rdi, rcx
0x7fffeafce1c9:	call		0x7fffeafc8d00
0x7fffeafce1ce:	mov		qword ptr [rbp - 8], rax
0x7fffeafce1d2:	jmp		0x7fffeafce583
disassembling symbol '.LBB21_8':
textAddr: 0x7fffeafce1d7, textSize: 43
0x7fffeafce1d7:	mov		qword ptr [rbp - 0x68], 0
0x7fffeafce1df:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafce1e3:	shl		rax, 3
0x7fffeafce1e7:	cmp		rax, 0x17
0x7fffeafce1eb:	jae		0x7fffeafce202
0x7fffeafce1f1:	mov		eax, 0x20
0x7fffeafce1f6:	mov		qword ptr [rbp - 0xa0], rax
0x7fffeafce1fd:	jmp		0x7fffeafce223
disassembling symbol '.LBB21_10':
textAddr: 0x7fffeafce202, textSize: 33
0x7fffeafce202:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafce206:	shl		rax, 3
0x7fffeafce20a:	add		rax, 8
0x7fffeafce210:	add		rax, 0xf
0x7fffeafce216:	and		rax, 0xfffffffffffffff0
0x7fffeafce21c:	mov		qword ptr [rbp - 0xa0], rax
disassembling symbol '.LBB21_11':
textAddr: 0x7fffeafce223, textSize: 11
0x7fffeafce223:	mov		rax, qword ptr [rbp - 0xa0]
0x7fffeafce22a:	mov		qword ptr [rbp - 0x48], rax
disassembling symbol '.LBB21_12':
textAddr: 0x7fffeafce22e, textSize: 46
0x7fffeafce22e:	mov		eax, dword ptr [rbp - 0x24]
0x7fffeafce231:	and		eax, 1
0x7fffeafce234:	cmp		eax, 0
0x7fffeafce237:	je		0x7fffeafce299
0x7fffeafce23d:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafce241:	cmp		qword ptr [rax], 0x17
0x7fffeafce245:	jae		0x7fffeafce25c
0x7fffeafce24b:	mov		eax, 0x20
0x7fffeafce250:	mov		qword ptr [rbp - 0xa8], rax
0x7fffeafce257:	jmp		0x7fffeafce27c
disassembling symbol '.LBB21_15':
textAddr: 0x7fffeafce25c, textSize: 32
0x7fffeafce25c:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafce260:	mov		rax, qword ptr [rax]
0x7fffeafce263:	add		rax, 8
0x7fffeafce269:	add		rax, 0xf
0x7fffeafce26f:	and		rax, 0xfffffffffffffff0
0x7fffeafce275:	mov		qword ptr [rbp - 0xa8], rax
disassembling symbol '.LBB21_16':
textAddr: 0x7fffeafce27c, textSize: 29
0x7fffeafce27c:	mov		rax, qword ptr [rbp - 0xa8]
0x7fffeafce283:	mov		qword ptr [rbp - 0x38], rax
0x7fffeafce287:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafce28b:	imul		rax, qword ptr [rbp - 0x38]
0x7fffeafce290:	mov		qword ptr [rbp - 0x40], rax
0x7fffeafce294:	jmp		0x7fffeafce341
disassembling symbol '.LBB21_17':
textAddr: 0x7fffeafce299, textSize: 27
0x7fffeafce299:	mov		qword ptr [rbp - 0x38], 0
0x7fffeafce2a1:	mov		qword ptr [rbp - 0x40], 0
0x7fffeafce2a9:	mov		qword ptr [rbp - 0x88], 0
disassembling symbol '.LBB21_18':
textAddr: 0x7fffeafce2b4, textSize: 56
0x7fffeafce2b4:	mov		rax, qword ptr [rbp - 0x88]
0x7fffeafce2bb:	cmp		rax, qword ptr [rbp - 0x18]
0x7fffeafce2bf:	je		0x7fffeafce33c
0x7fffeafce2c5:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafce2c9:	mov		rcx, qword ptr [rbp - 0x88]
0x7fffeafce2d0:	cmp		qword ptr [rax + rcx*8], 0x17
0x7fffeafce2d5:	jae		0x7fffeafce2ec
0x7fffeafce2db:	mov		eax, 0x20
0x7fffeafce2e0:	mov		qword ptr [rbp - 0xb0], rax
0x7fffeafce2e7:	jmp		0x7fffeafce314
disassembling symbol '.LBB21_21':
textAddr: 0x7fffeafce2ec, textSize: 40
0x7fffeafce2ec:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafce2f0:	mov		rcx, qword ptr [rbp - 0x88]
0x7fffeafce2f7:	mov		rax, qword ptr [rax + rcx*8]
0x7fffeafce2fb:	add		rax, 8
0x7fffeafce301:	add		rax, 0xf
0x7fffeafce307:	and		rax, 0xfffffffffffffff0
0x7fffeafce30d:	mov		qword ptr [rbp - 0xb0], rax
disassembling symbol '.LBB21_22':
textAddr: 0x7fffeafce314, textSize: 40
0x7fffeafce314:	mov		rax, qword ptr [rbp - 0xb0]
0x7fffeafce31b:	add		rax, qword ptr [rbp - 0x40]
0x7fffeafce31f:	mov		qword ptr [rbp - 0x40], rax
0x7fffeafce323:	mov		rax, qword ptr [rbp - 0x88]
0x7fffeafce32a:	add		rax, 1
0x7fffeafce330:	mov		qword ptr [rbp - 0x88], rax
0x7fffeafce337:	jmp		0x7fffeafce2b4
disassembling symbol '.LBB21_24':
textAddr: 0x7fffeafce33c, textSize: 5
0x7fffeafce33c:	jmp		0x7fffeafce341
disassembling symbol '.LBB21_25':
textAddr: 0x7fffeafce341, textSize: 88
0x7fffeafce341:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafce345:	add		rax, qword ptr [rbp - 0x48]
0x7fffeafce349:	mov		qword ptr [rbp - 0x80], rax
0x7fffeafce34d:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafce351:	mov		ecx, dword ptr [rax + 0x370]
0x7fffeafce357:	mov		eax, ecx
0x7fffeafce359:	and		rax, 0
0x7fffeafce35f:	mov		dword ptr [rbp - 0x74], eax
0x7fffeafce362:	mov		rdx, qword ptr [rbp - 0x10]
0x7fffeafce366:	mov		rsi, qword ptr [rbp - 0x80]
0x7fffeafce36a:	sub		rsi, 8
0x7fffeafce371:	mov		rdi, rdx
0x7fffeafce374:	call		0x7fffeafc8d00
0x7fffeafce379:	mov		qword ptr [rbp - 0x50], rax
0x7fffeafce37d:	cmp		dword ptr [rbp - 0x74], 0
0x7fffeafce381:	je		0x7fffeafce399
0x7fffeafce387:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafce38b:	mov		ecx, dword ptr [rax + 0x370]
0x7fffeafce391:	mov		edx, ecx
0x7fffeafce393:	mov		dword ptr [rax + 0x370], edx
disassembling symbol '.LBB21_27':
textAddr: 0x7fffeafce399, textSize: 24
0x7fffeafce399:	cmp		qword ptr [rbp - 0x50], 0
0x7fffeafce39e:	jne		0x7fffeafce3b1
0x7fffeafce3a4:	mov		qword ptr [rbp - 8], 0
0x7fffeafce3ac:	jmp		0x7fffeafce583
disassembling symbol '.LBB21_29':
textAddr: 0x7fffeafce3b1, textSize: 79
0x7fffeafce3b1:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafce3b5:	add		rax, -0x10
0x7fffeafce3bb:	mov		qword ptr [rbp - 0x58], rax
0x7fffeafce3bf:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafce3c3:	mov		rax, qword ptr [rax + 8]
0x7fffeafce3c7:	and		rax, 0xfffffffffffffff8
0x7fffeafce3cd:	mov		qword ptr [rbp - 0x60], rax
0x7fffeafce3d1:	mov		ecx, dword ptr [rbp - 0x24]
0x7fffeafce3d4:	and		ecx, 2
0x7fffeafce3d7:	cmp		ecx, 0
0x7fffeafce3da:	je		0x7fffeafce400
0x7fffeafce3e0:	xor		esi, esi
0x7fffeafce3e2:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafce3e6:	mov		rcx, qword ptr [rbp - 0x60]
0x7fffeafce3ea:	sub		rcx, 8
0x7fffeafce3f1:	sub		rcx, qword ptr [rbp - 0x48]
0x7fffeafce3f5:	mov		rdi, rax
0x7fffeafce3f8:	mov		rdx, rcx
0x7fffeafce3fb:	call		0x7fffeafd2a10
disassembling symbol '.LBB21_31':
textAddr: 0x7fffeafce400, textSize: 87
0x7fffeafce400:	cmp		qword ptr [rbp - 0x68], 0
0x7fffeafce405:	jne		0x7fffeafce457
0x7fffeafce40b:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafce40f:	add		rax, qword ptr [rbp - 0x40]
0x7fffeafce413:	mov		qword ptr [rbp - 0x70], rax
0x7fffeafce417:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafce41b:	sub		rax, qword ptr [rbp - 0x40]
0x7fffeafce41f:	mov		qword ptr [rbp - 0x90], rax
0x7fffeafce426:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafce42a:	add		rax, 0x10
0x7fffeafce430:	mov		qword ptr [rbp - 0x68], rax
0x7fffeafce434:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafce43b:	or		rax, 1
0x7fffeafce441:	or		rax, 2
0x7fffeafce447:	mov		rcx, qword ptr [rbp - 0x70]
0x7fffeafce44b:	mov		qword ptr [rcx + 8], rax
0x7fffeafce44f:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafce453:	mov		qword ptr [rbp - 0x60], rax
disassembling symbol '.LBB21_33':
textAddr: 0x7fffeafce457, textSize: 11
0x7fffeafce457:	mov		qword ptr [rbp - 0x88], 0
disassembling symbol '.LBB21_34':
textAddr: 0x7fffeafce462, textSize: 76
0x7fffeafce462:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafce466:	add		rax, 0x10
0x7fffeafce46c:	mov		rcx, qword ptr [rbp - 0x68]
0x7fffeafce470:	mov		rdx, qword ptr [rbp - 0x88]
0x7fffeafce477:	mov		qword ptr [rcx + rdx*8], rax
0x7fffeafce47b:	mov		rax, qword ptr [rbp - 0x88]
0x7fffeafce482:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafce486:	sub		rcx, 1
0x7fffeafce48d:	cmp		rax, rcx
0x7fffeafce490:	je		0x7fffeafce540
0x7fffeafce496:	cmp		qword ptr [rbp - 0x38], 0
0x7fffeafce49b:	je		0x7fffeafce4ae
0x7fffeafce4a1:	mov		rax, qword ptr [rbp - 0x38]
0x7fffeafce4a5:	mov		qword ptr [rbp - 0x80], rax
0x7fffeafce4a9:	jmp		0x7fffeafce508
disassembling symbol '.LBB21_37':
textAddr: 0x7fffeafce4ae, textSize: 39
0x7fffeafce4ae:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafce4b2:	mov		rcx, qword ptr [rbp - 0x88]
0x7fffeafce4b9:	cmp		qword ptr [rax + rcx*8], 0x17
0x7fffeafce4be:	jae		0x7fffeafce4d5
0x7fffeafce4c4:	mov		eax, 0x20
0x7fffeafce4c9:	mov		qword ptr [rbp - 0xb8], rax
0x7fffeafce4d0:	jmp		0x7fffeafce4fd
disassembling symbol '.LBB21_39':
textAddr: 0x7fffeafce4d5, textSize: 40
0x7fffeafce4d5:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafce4d9:	mov		rcx, qword ptr [rbp - 0x88]
0x7fffeafce4e0:	mov		rax, qword ptr [rax + rcx*8]
0x7fffeafce4e4:	add		rax, 8
0x7fffeafce4ea:	add		rax, 0xf
0x7fffeafce4f0:	and		rax, 0xfffffffffffffff0
0x7fffeafce4f6:	mov		qword ptr [rbp - 0xb8], rax
disassembling symbol '.LBB21_40':
textAddr: 0x7fffeafce4fd, textSize: 11
0x7fffeafce4fd:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafce504:	mov		qword ptr [rbp - 0x80], rax
disassembling symbol '.LBB21_41':
textAddr: 0x7fffeafce508, textSize: 56
0x7fffeafce508:	mov		rax, qword ptr [rbp - 0x80]
0x7fffeafce50c:	mov		rcx, qword ptr [rbp - 0x60]
0x7fffeafce510:	sub		rcx, rax
0x7fffeafce513:	mov		qword ptr [rbp - 0x60], rcx
0x7fffeafce517:	mov		rax, qword ptr [rbp - 0x80]
0x7fffeafce51b:	or		rax, 1
0x7fffeafce521:	or		rax, 2
0x7fffeafce527:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafce52b:	mov		qword ptr [rcx + 8], rax
0x7fffeafce52f:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafce533:	add		rax, qword ptr [rbp - 0x80]
0x7fffeafce537:	mov		qword ptr [rbp - 0x58], rax
0x7fffeafce53b:	jmp		0x7fffeafce55d
disassembling symbol '.LBB21_42':
textAddr: 0x7fffeafce540, textSize: 29
0x7fffeafce540:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafce544:	or		rax, 1
0x7fffeafce54a:	or		rax, 2
0x7fffeafce550:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafce554:	mov		qword ptr [rcx + 8], rax
0x7fffeafce558:	jmp		0x7fffeafce57b
disassembling symbol '.LBB21_43':
textAddr: 0x7fffeafce55d, textSize: 5
0x7fffeafce55d:	jmp		0x7fffeafce562
disassembling symbol '.LBB21_44':
textAddr: 0x7fffeafce562, textSize: 25
0x7fffeafce562:	mov		rax, qword ptr [rbp - 0x88]
0x7fffeafce569:	add		rax, 1
0x7fffeafce56f:	mov		qword ptr [rbp - 0x88], rax
0x7fffeafce576:	jmp		0x7fffeafce462
disassembling symbol '.LBB21_45':
textAddr: 0x7fffeafce57b, textSize: 8
0x7fffeafce57b:	mov		rax, qword ptr [rbp - 0x68]
0x7fffeafce57f:	mov		qword ptr [rbp - 8], rax
disassembling symbol '.LBB21_46':
textAddr: 0x7fffeafce583, textSize: 13
0x7fffeafce583:	mov		rax, qword ptr [rbp - 8]
0x7fffeafce587:	add		rsp, 0xc0
0x7fffeafce58e:	pop		rbp
0x7fffeafce58f:	ret		
disassembling symbol 'mspace_independent_comalloc':
textAddr: 0x7fffeafce590, textSize: 64
0x7fffeafce590:	push		rbp
0x7fffeafce591:	mov		rbp, rsp
0x7fffeafce594:	sub		rsp, 0x30
0x7fffeafce598:	xor		eax, eax
0x7fffeafce59a:	mov		qword ptr [rbp - 8], rdi
0x7fffeafce59e:	mov		qword ptr [rbp - 0x10], rsi
0x7fffeafce5a2:	mov		qword ptr [rbp - 0x18], rdx
0x7fffeafce5a6:	mov		qword ptr [rbp - 0x20], rcx
0x7fffeafce5aa:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafce5ae:	mov		qword ptr [rbp - 0x28], rcx
0x7fffeafce5b2:	mov		rdi, qword ptr [rbp - 0x28]
0x7fffeafce5b6:	mov		rsi, qword ptr [rbp - 0x10]
0x7fffeafce5ba:	mov		rdx, qword ptr [rbp - 0x18]
0x7fffeafce5be:	mov		r8, qword ptr [rbp - 0x20]
0x7fffeafce5c2:	mov		ecx, eax
0x7fffeafce5c4:	call		0x7fffeafce130
0x7fffeafce5c9:	add		rsp, 0x30
0x7fffeafce5cd:	pop		rbp
0x7fffeafce5ce:	ret		
0x7fffeafce5cf:	nop		
disassembling symbol 'mspace_bulk_free':
textAddr: 0x7fffeafce5d0, textSize: 48
0x7fffeafce5d0:	push		rbp
0x7fffeafce5d1:	mov		rbp, rsp
0x7fffeafce5d4:	sub		rsp, 0x20
0x7fffeafce5d8:	mov		qword ptr [rbp - 8], rdi
0x7fffeafce5dc:	mov		qword ptr [rbp - 0x10], rsi
0x7fffeafce5e0:	mov		qword ptr [rbp - 0x18], rdx
0x7fffeafce5e4:	mov		rax, qword ptr [rbp - 8]
0x7fffeafce5e8:	mov		rsi, qword ptr [rbp - 0x10]
0x7fffeafce5ec:	mov		rdx, qword ptr [rbp - 0x18]
0x7fffeafce5f0:	mov		rdi, rax
0x7fffeafce5f3:	call		0x7fffeafce600
0x7fffeafce5f8:	add		rsp, 0x20
0x7fffeafce5fc:	pop		rbp
0x7fffeafce5fd:	ret		
0x7fffeafce5fe:	nop		
disassembling symbol 'internal_bulk_free':
textAddr: 0x7fffeafce600, textSize: 496
0x7fffeafce600:	push		rbp
0x7fffeafce601:	mov		rbp, rsp
0x7fffeafce604:	sub		rsp, 0x70
0x7fffeafce608:	mov		qword ptr [rbp - 8], rdi
0x7fffeafce60c:	mov		qword ptr [rbp - 0x10], rsi
0x7fffeafce610:	mov		qword ptr [rbp - 0x18], rdx
0x7fffeafce614:	mov		qword ptr [rbp - 0x20], 0
0x7fffeafce61c:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafce620:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafce624:	shl		rcx, 3
0x7fffeafce628:	add		rax, rcx
0x7fffeafce62b:	mov		qword ptr [rbp - 0x30], rax
0x7fffeafce62f:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafce633:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafce637:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafce63b:	cmp		rax, qword ptr [rbp - 0x30]
0x7fffeafce63f:	je		0x7fffeafce7ba
0x7fffeafce645:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafce649:	mov		rax, qword ptr [rax]
0x7fffeafce64c:	mov		qword ptr [rbp - 0x38], rax
0x7fffeafce650:	cmp		qword ptr [rbp - 0x38], 0
0x7fffeafce655:	je		0x7fffeafce7a2
0x7fffeafce65b:	xor		eax, eax
0x7fffeafce65d:	mov		rcx, qword ptr [rbp - 0x38]
0x7fffeafce661:	add		rcx, -0x10
0x7fffeafce668:	mov		qword ptr [rbp - 0x40], rcx
0x7fffeafce66c:	mov		rcx, qword ptr [rbp - 0x40]
0x7fffeafce670:	mov		rcx, qword ptr [rcx + 8]
0x7fffeafce674:	and		rcx, 0xfffffffffffffff8
0x7fffeafce67b:	mov		qword ptr [rbp - 0x48], rcx
0x7fffeafce67f:	mov		rcx, qword ptr [rbp - 0x28]
0x7fffeafce683:	mov		qword ptr [rcx], 0
0x7fffeafce68a:	mov		rcx, qword ptr [rbp - 0x40]
0x7fffeafce68e:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafce692:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafce696:	mov		byte ptr [rbp - 0x61], al
0x7fffeafce699:	jb		0x7fffeafce6b7
0x7fffeafce69f:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafce6a3:	mov		rax, qword ptr [rax + 8]
0x7fffeafce6a7:	and		rax, 3
0x7fffeafce6ad:	cmp		rax, 1
0x7fffeafce6b1:	setne		cl
0x7fffeafce6b4:	mov		byte ptr [rbp - 0x61], cl
0x7fffeafce6b7:	mov		al, byte ptr [rbp - 0x61]
0x7fffeafce6ba:	and		al, 1
0x7fffeafce6bc:	movzx		ecx, al
0x7fffeafce6bf:	movsxd		rdx, ecx
0x7fffeafce6c2:	cmp		rdx, 0
0x7fffeafce6c6:	je		0x7fffeafce798
0x7fffeafce6cc:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafce6d0:	add		rax, 8
0x7fffeafce6d6:	mov		qword ptr [rbp - 0x50], rax
0x7fffeafce6da:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafce6de:	mov		rcx, qword ptr [rbp - 0x40]
0x7fffeafce6e2:	mov		rcx, qword ptr [rcx + 8]
0x7fffeafce6e6:	and		rcx, 0xfffffffffffffff8
0x7fffeafce6ed:	add		rax, rcx
0x7fffeafce6f0:	mov		qword ptr [rbp - 0x58], rax
0x7fffeafce6f4:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafce6f8:	cmp		rax, qword ptr [rbp - 0x30]
0x7fffeafce6fc:	je		0x7fffeafce782
0x7fffeafce702:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafce706:	mov		rax, qword ptr [rax]
0x7fffeafce709:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafce70d:	add		rcx, 0x10
0x7fffeafce714:	cmp		rax, rcx
0x7fffeafce717:	jne		0x7fffeafce782
0x7fffeafce71d:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafce721:	mov		rax, qword ptr [rax + 8]
0x7fffeafce725:	and		rax, 0xfffffffffffffff8
0x7fffeafce72b:	add		rax, qword ptr [rbp - 0x48]
0x7fffeafce72f:	mov		qword ptr [rbp - 0x60], rax
0x7fffeafce733:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafce737:	mov		rax, qword ptr [rax + 8]
0x7fffeafce73b:	and		rax, 1
0x7fffeafce741:	or		rax, qword ptr [rbp - 0x60]
0x7fffeafce745:	or		rax, 2
0x7fffeafce74b:	mov		rcx, qword ptr [rbp - 0x40]
0x7fffeafce74f:	mov		qword ptr [rcx + 8], rax
0x7fffeafce753:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafce757:	mov		rcx, qword ptr [rbp - 0x60]
0x7fffeafce75b:	mov		rdx, qword ptr [rax + rcx + 8]
0x7fffeafce760:	or		rdx, 1
0x7fffeafce767:	mov		qword ptr [rax + rcx + 8], rdx
0x7fffeafce76c:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafce770:	add		rax, 0x10
0x7fffeafce776:	mov		rcx, qword ptr [rbp - 0x50]
0x7fffeafce77a:	mov		qword ptr [rcx], rax
0x7fffeafce77d:	jmp		0x7fffeafce793
0x7fffeafce782:	mov		rdi, qword ptr [rbp - 8]
0x7fffeafce786:	mov		rsi, qword ptr [rbp - 0x40]
0x7fffeafce78a:	mov		rdx, qword ptr [rbp - 0x48]
0x7fffeafce78e:	call		0x7fffeafd1110
0x7fffeafce793:	jmp		0x7fffeafce79d
0x7fffeafce798:	call		0x7fffeafc4c10
0x7fffeafce79d:	jmp		0x7fffeafce7a2
0x7fffeafce7a2:	jmp		0x7fffeafce7a7
0x7fffeafce7a7:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafce7ab:	add		rax, 8
0x7fffeafce7b1:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafce7b5:	jmp		0x7fffeafce637
0x7fffeafce7ba:	mov		rax, qword ptr [rbp - 8]
0x7fffeafce7be:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafce7c2:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafce7c6:	cmp		rax, qword ptr [rcx + 0x30]
0x7fffeafce7ca:	jbe		0x7fffeafce7dd
0x7fffeafce7d0:	xor		eax, eax
0x7fffeafce7d2:	mov		esi, eax
0x7fffeafce7d4:	mov		rdi, qword ptr [rbp - 8]
0x7fffeafce7d8:	call		0x7fffeafcc2c0
0x7fffeafce7dd:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafce7e1:	add		rsp, 0x70
0x7fffeafce7e5:	pop		rbp
0x7fffeafce7e6:	ret		
0x7fffeafce7e7:	nop		word ptr [rax + rax]
disassembling symbol '.LBB24_1':
textAddr: 0x7fffeafce637, textSize: 128
0x7fffeafce637:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafce63b:	cmp		rax, qword ptr [rbp - 0x30]
0x7fffeafce63f:	je		0x7fffeafce7ba
0x7fffeafce645:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafce649:	mov		rax, qword ptr [rax]
0x7fffeafce64c:	mov		qword ptr [rbp - 0x38], rax
0x7fffeafce650:	cmp		qword ptr [rbp - 0x38], 0
0x7fffeafce655:	je		0x7fffeafce7a2
0x7fffeafce65b:	xor		eax, eax
0x7fffeafce65d:	mov		rcx, qword ptr [rbp - 0x38]
0x7fffeafce661:	add		rcx, -0x10
0x7fffeafce668:	mov		qword ptr [rbp - 0x40], rcx
0x7fffeafce66c:	mov		rcx, qword ptr [rbp - 0x40]
0x7fffeafce670:	mov		rcx, qword ptr [rcx + 8]
0x7fffeafce674:	and		rcx, 0xfffffffffffffff8
0x7fffeafce67b:	mov		qword ptr [rbp - 0x48], rcx
0x7fffeafce67f:	mov		rcx, qword ptr [rbp - 0x28]
0x7fffeafce683:	mov		qword ptr [rcx], 0
0x7fffeafce68a:	mov		rcx, qword ptr [rbp - 0x40]
0x7fffeafce68e:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafce692:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafce696:	mov		byte ptr [rbp - 0x61], al
0x7fffeafce699:	jb		0x7fffeafce6b7
0x7fffeafce69f:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafce6a3:	mov		rax, qword ptr [rax + 8]
0x7fffeafce6a7:	and		rax, 3
0x7fffeafce6ad:	cmp		rax, 1
0x7fffeafce6b1:	setne		cl
0x7fffeafce6b4:	mov		byte ptr [rbp - 0x61], cl
disassembling symbol '.LBB24_5':
textAddr: 0x7fffeafce6b7, textSize: 203
0x7fffeafce6b7:	mov		al, byte ptr [rbp - 0x61]
0x7fffeafce6ba:	and		al, 1
0x7fffeafce6bc:	movzx		ecx, al
0x7fffeafce6bf:	movsxd		rdx, ecx
0x7fffeafce6c2:	cmp		rdx, 0
0x7fffeafce6c6:	je		0x7fffeafce798
0x7fffeafce6cc:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafce6d0:	add		rax, 8
0x7fffeafce6d6:	mov		qword ptr [rbp - 0x50], rax
0x7fffeafce6da:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafce6de:	mov		rcx, qword ptr [rbp - 0x40]
0x7fffeafce6e2:	mov		rcx, qword ptr [rcx + 8]
0x7fffeafce6e6:	and		rcx, 0xfffffffffffffff8
0x7fffeafce6ed:	add		rax, rcx
0x7fffeafce6f0:	mov		qword ptr [rbp - 0x58], rax
0x7fffeafce6f4:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafce6f8:	cmp		rax, qword ptr [rbp - 0x30]
0x7fffeafce6fc:	je		0x7fffeafce782
0x7fffeafce702:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafce706:	mov		rax, qword ptr [rax]
0x7fffeafce709:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafce70d:	add		rcx, 0x10
0x7fffeafce714:	cmp		rax, rcx
0x7fffeafce717:	jne		0x7fffeafce782
0x7fffeafce71d:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafce721:	mov		rax, qword ptr [rax + 8]
0x7fffeafce725:	and		rax, 0xfffffffffffffff8
0x7fffeafce72b:	add		rax, qword ptr [rbp - 0x48]
0x7fffeafce72f:	mov		qword ptr [rbp - 0x60], rax
0x7fffeafce733:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafce737:	mov		rax, qword ptr [rax + 8]
0x7fffeafce73b:	and		rax, 1
0x7fffeafce741:	or		rax, qword ptr [rbp - 0x60]
0x7fffeafce745:	or		rax, 2
0x7fffeafce74b:	mov		rcx, qword ptr [rbp - 0x40]
0x7fffeafce74f:	mov		qword ptr [rcx + 8], rax
0x7fffeafce753:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafce757:	mov		rcx, qword ptr [rbp - 0x60]
0x7fffeafce75b:	mov		rdx, qword ptr [rax + rcx + 8]
0x7fffeafce760:	or		rdx, 1
0x7fffeafce767:	mov		qword ptr [rax + rcx + 8], rdx
0x7fffeafce76c:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafce770:	add		rax, 0x10
0x7fffeafce776:	mov		rcx, qword ptr [rbp - 0x50]
0x7fffeafce77a:	mov		qword ptr [rcx], rax
0x7fffeafce77d:	jmp		0x7fffeafce793
disassembling symbol '.LBB24_9':
textAddr: 0x7fffeafce782, textSize: 17
0x7fffeafce782:	mov		rdi, qword ptr [rbp - 8]
0x7fffeafce786:	mov		rsi, qword ptr [rbp - 0x40]
0x7fffeafce78a:	mov		rdx, qword ptr [rbp - 0x48]
0x7fffeafce78e:	call		0x7fffeafd1110
disassembling symbol '.LBB24_10':
textAddr: 0x7fffeafce793, textSize: 5
0x7fffeafce793:	jmp		0x7fffeafce79d
disassembling symbol '.LBB24_11':
textAddr: 0x7fffeafce798, textSize: 5
0x7fffeafce798:	call		0x7fffeafc4c10
disassembling symbol '.LBB24_12':
textAddr: 0x7fffeafce79d, textSize: 5
0x7fffeafce79d:	jmp		0x7fffeafce7a2
disassembling symbol '.LBB24_13':
textAddr: 0x7fffeafce7a2, textSize: 5
0x7fffeafce7a2:	jmp		0x7fffeafce7a7
disassembling symbol '.LBB24_14':
textAddr: 0x7fffeafce7a7, textSize: 19
0x7fffeafce7a7:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafce7ab:	add		rax, 8
0x7fffeafce7b1:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafce7b5:	jmp		0x7fffeafce637
disassembling symbol '.LBB24_15':
textAddr: 0x7fffeafce7ba, textSize: 35
0x7fffeafce7ba:	mov		rax, qword ptr [rbp - 8]
0x7fffeafce7be:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafce7c2:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafce7c6:	cmp		rax, qword ptr [rcx + 0x30]
0x7fffeafce7ca:	jbe		0x7fffeafce7dd
0x7fffeafce7d0:	xor		eax, eax
0x7fffeafce7d2:	mov		esi, eax
0x7fffeafce7d4:	mov		rdi, qword ptr [rbp - 8]
0x7fffeafce7d8:	call		0x7fffeafcc2c0
disassembling symbol '.LBB24_17':
textAddr: 0x7fffeafce7dd, textSize: 19
0x7fffeafce7dd:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafce7e1:	add		rsp, 0x70
0x7fffeafce7e5:	pop		rbp
0x7fffeafce7e6:	ret		
0x7fffeafce7e7:	nop		word ptr [rax + rax]
disassembling symbol 'mspace_trim':
textAddr: 0x7fffeafce7f0, textSize: 64
0x7fffeafce7f0:	push		rbp
0x7fffeafce7f1:	mov		rbp, rsp
0x7fffeafce7f4:	sub		rsp, 0x20
0x7fffeafce7f8:	mov		qword ptr [rbp - 8], rdi
0x7fffeafce7fc:	mov		qword ptr [rbp - 0x10], rsi
0x7fffeafce800:	mov		dword ptr [rbp - 0x14], 0
0x7fffeafce807:	mov		rax, qword ptr [rbp - 8]
0x7fffeafce80b:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafce80f:	mov		rdi, qword ptr [rbp - 0x20]
0x7fffeafce813:	mov		rsi, qword ptr [rbp - 0x10]
0x7fffeafce817:	call		0x7fffeafcc2c0
0x7fffeafce81c:	mov		dword ptr [rbp - 0x14], eax
0x7fffeafce81f:	mov		eax, dword ptr [rbp - 0x14]
0x7fffeafce822:	add		rsp, 0x20
0x7fffeafce826:	pop		rbp
0x7fffeafce827:	ret		
0x7fffeafce828:	nop		dword ptr [rax + rax]
disassembling symbol 'mspace_malloc_stats':
textAddr: 0x7fffeafce830, textSize: 48
0x7fffeafce830:	push		rbp
0x7fffeafce831:	mov		rbp, rsp
0x7fffeafce834:	sub		rsp, 0x10
0x7fffeafce838:	mov		qword ptr [rbp - 8], rdi
0x7fffeafce83c:	mov		rax, qword ptr [rbp - 8]
0x7fffeafce840:	mov		qword ptr [rbp - 0x10], rax
0x7fffeafce844:	mov		rdi, qword ptr [rbp - 0x10]
0x7fffeafce848:	call		0x7fffeafce860
0x7fffeafce84d:	add		rsp, 0x10
0x7fffeafce851:	pop		rbp
0x7fffeafce852:	ret		
0x7fffeafce853:	nop		word ptr cs:[rax + rax]
0x7fffeafce85d:	nop		dword ptr [rax]
disassembling symbol 'internal_malloc_stats':
textAddr: 0x7fffeafce860, textSize: 592
0x7fffeafce860:	push		rbp
0x7fffeafce861:	mov		rbp, rsp
0x7fffeafce864:	sub		rsp, 0x60
0x7fffeafce868:	mov		qword ptr [rbp - 8], rdi
0x7fffeafce86c:	cmp		qword ptr [rip + 0x2c1c5b4], 0
0x7fffeafce874:	mov		al, 1
0x7fffeafce876:	mov		byte ptr [rbp - 0x31], al
0x7fffeafce879:	jne		0x7fffeafce88d
0x7fffeafce87f:	call		0x7fffeafc8870
0x7fffeafce884:	cmp		eax, 0
0x7fffeafce887:	setne		cl
0x7fffeafce88a:	mov		byte ptr [rbp - 0x31], cl
0x7fffeafce88d:	mov		al, byte ptr [rbp - 0x31]
0x7fffeafce890:	mov		qword ptr [rbp - 0x10], 0
0x7fffeafce898:	mov		qword ptr [rbp - 0x18], 0
0x7fffeafce8a0:	mov		qword ptr [rbp - 0x20], 0
0x7fffeafce8a8:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafce8ac:	cmp		qword ptr [rcx + 0x28], 0
0x7fffeafce8b1:	je		0x7fffeafcea47
0x7fffeafce8b7:	mov		rax, qword ptr [rbp - 8]
0x7fffeafce8bb:	add		rax, 0x378
0x7fffeafce8c1:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafce8c5:	mov		rax, qword ptr [rbp - 8]
0x7fffeafce8c9:	mov		rax, qword ptr [rax + 0x360]
0x7fffeafce8d0:	mov		qword ptr [rbp - 0x10], rax
0x7fffeafce8d4:	mov		rax, qword ptr [rbp - 8]
0x7fffeafce8d8:	mov		rax, qword ptr [rax + 0x358]
0x7fffeafce8df:	mov		qword ptr [rbp - 0x18], rax
0x7fffeafce8e3:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafce8e7:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafce8eb:	mov		rcx, qword ptr [rcx + 0x10]
0x7fffeafce8ef:	add		rcx, 0x50
0x7fffeafce8f6:	sub		rax, rcx
0x7fffeafce8f9:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafce8fd:	cmp		qword ptr [rbp - 0x28], 0
0x7fffeafce902:	je		0x7fffeafcea42
0x7fffeafce908:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafce90c:	mov		rax, qword ptr [rax]
0x7fffeafce90f:	mov		rcx, qword ptr [rbp - 0x28]
0x7fffeafce913:	mov		rcx, qword ptr [rcx]
0x7fffeafce916:	add		rcx, 0x10
0x7fffeafce91d:	and		rcx, 0xf
0x7fffeafce924:	cmp		rcx, 0
0x7fffeafce928:	mov		qword ptr [rbp - 0x40], rax
0x7fffeafce92c:	jne		0x7fffeafce93f
0x7fffeafce932:	xor		eax, eax
0x7fffeafce934:	mov		ecx, eax
0x7fffeafce936:	mov		qword ptr [rbp - 0x48], rcx
0x7fffeafce93a:	jmp		0x7fffeafce965
0x7fffeafce93f:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafce943:	mov		rax, qword ptr [rax]
0x7fffeafce946:	add		rax, 0x10
0x7fffeafce94c:	and		rax, 0xf
0x7fffeafce952:	mov		ecx, 0x10
0x7fffeafce957:	sub		rcx, rax
0x7fffeafce95a:	and		rcx, 0xf
0x7fffeafce961:	mov		qword ptr [rbp - 0x48], rcx
0x7fffeafce965:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafce969:	mov		rcx, qword ptr [rbp - 0x40]
0x7fffeafce96d:	add		rcx, rax
0x7fffeafce970:	mov		qword ptr [rbp - 0x30], rcx
0x7fffeafce974:	xor		eax, eax
0x7fffeafce976:	mov		rcx, qword ptr [rbp - 0x30]
0x7fffeafce97a:	mov		rdx, qword ptr [rbp - 0x28]
0x7fffeafce97e:	cmp		rcx, qword ptr [rdx]
0x7fffeafce981:	mov		byte ptr [rbp - 0x49], al
0x7fffeafce984:	jb		0x7fffeafce9d1
0x7fffeafce98a:	xor		eax, eax
0x7fffeafce98c:	mov		rcx, qword ptr [rbp - 0x30]
0x7fffeafce990:	mov		rdx, qword ptr [rbp - 0x28]
0x7fffeafce994:	mov		rdx, qword ptr [rdx]
0x7fffeafce997:	mov		rsi, qword ptr [rbp - 0x28]
0x7fffeafce99b:	add		rdx, qword ptr [rsi + 8]
0x7fffeafce99f:	cmp		rcx, rdx
0x7fffeafce9a2:	mov		byte ptr [rbp - 0x49], al
0x7fffeafce9a5:	jae		0x7fffeafce9d1
0x7fffeafce9ab:	xor		eax, eax
0x7fffeafce9ad:	mov		rcx, qword ptr [rbp - 0x30]
0x7fffeafce9b1:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafce9b5:	cmp		rcx, qword ptr [rdx + 0x28]
0x7fffeafce9b9:	mov		byte ptr [rbp - 0x49], al
0x7fffeafce9bc:	je		0x7fffeafce9d1
0x7fffeafce9c2:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafce9c6:	cmp		qword ptr [rax + 8], 0xb
0x7fffeafce9cb:	setne		cl
0x7fffeafce9ce:	mov		byte ptr [rbp - 0x49], cl
0x7fffeafce9d1:	mov		al, byte ptr [rbp - 0x49]
0x7fffeafce9d4:	test		al, 1
0x7fffeafce9d6:	jne		0x7fffeafce9e1
0x7fffeafce9dc:	jmp		0x7fffeafcea31
0x7fffeafce9e1:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafce9e5:	mov		rax, qword ptr [rax + 8]
0x7fffeafce9e9:	and		rax, 3
0x7fffeafce9ef:	cmp		rax, 1
0x7fffeafce9f3:	jne		0x7fffeafcea12
0x7fffeafce9f9:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafce9fd:	mov		rax, qword ptr [rax + 8]
0x7fffeafcea01:	and		rax, 0xfffffffffffffff8
0x7fffeafcea07:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcea0b:	sub		rcx, rax
0x7fffeafcea0e:	mov		qword ptr [rbp - 0x20], rcx
0x7fffeafcea12:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcea16:	mov		rcx, qword ptr [rbp - 0x30]
0x7fffeafcea1a:	mov		rcx, qword ptr [rcx + 8]
0x7fffeafcea1e:	and		rcx, 0xfffffffffffffff8
0x7fffeafcea25:	add		rax, rcx
0x7fffeafcea28:	mov		qword ptr [rbp - 0x30], rax
0x7fffeafcea2c:	jmp		0x7fffeafce974
0x7fffeafcea31:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcea35:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafcea39:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafcea3d:	jmp		0x7fffeafce8fd
0x7fffeafcea42:	jmp		0x7fffeafcea47
0x7fffeafcea47:	mov		rax, qword ptr [rip - 0x1ff089e]
0x7fffeafcea4e:	mov		rdi, qword ptr [rax]
0x7fffeafcea51:	mov		rdx, qword ptr [rbp - 0x10]
0x7fffeafcea55:	lea		rsi, [rip + 0x2c1d4ab]
0x7fffeafcea5c:	mov		al, 0
0x7fffeafcea5e:	call		0x7fffeafc81c0
0x7fffeafcea63:	mov		rcx, qword ptr [rip - 0x1ff08ba]
0x7fffeafcea6a:	mov		rdi, qword ptr [rcx]
0x7fffeafcea6d:	mov		rdx, qword ptr [rbp - 0x18]
0x7fffeafcea71:	lea		rsi, [rip + 0x2c1d4a9]
0x7fffeafcea78:	mov		dword ptr [rbp - 0x50], eax
0x7fffeafcea7b:	mov		al, 0
0x7fffeafcea7d:	call		0x7fffeafc81c0
0x7fffeafcea82:	mov		rcx, qword ptr [rip - 0x1ff08d9]
0x7fffeafcea89:	mov		rdi, qword ptr [rcx]
0x7fffeafcea8c:	mov		rdx, qword ptr [rbp - 0x20]
0x7fffeafcea90:	lea		rsi, [rip + 0x2c1d4a4]
0x7fffeafcea97:	mov		dword ptr [rbp - 0x54], eax
0x7fffeafcea9a:	mov		al, 0
0x7fffeafcea9c:	call		0x7fffeafc81c0
0x7fffeafceaa1:	add		rsp, 0x60
0x7fffeafceaa5:	pop		rbp
0x7fffeafceaa6:	ret		
0x7fffeafceaa7:	nop		word ptr [rax + rax]
disassembling symbol '.LBB27_2':
textAddr: 0x7fffeafce88d, textSize: 112
0x7fffeafce88d:	mov		al, byte ptr [rbp - 0x31]
0x7fffeafce890:	mov		qword ptr [rbp - 0x10], 0
0x7fffeafce898:	mov		qword ptr [rbp - 0x18], 0
0x7fffeafce8a0:	mov		qword ptr [rbp - 0x20], 0
0x7fffeafce8a8:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafce8ac:	cmp		qword ptr [rcx + 0x28], 0
0x7fffeafce8b1:	je		0x7fffeafcea47
0x7fffeafce8b7:	mov		rax, qword ptr [rbp - 8]
0x7fffeafce8bb:	add		rax, 0x378
0x7fffeafce8c1:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafce8c5:	mov		rax, qword ptr [rbp - 8]
0x7fffeafce8c9:	mov		rax, qword ptr [rax + 0x360]
0x7fffeafce8d0:	mov		qword ptr [rbp - 0x10], rax
0x7fffeafce8d4:	mov		rax, qword ptr [rbp - 8]
0x7fffeafce8d8:	mov		rax, qword ptr [rax + 0x358]
0x7fffeafce8df:	mov		qword ptr [rbp - 0x18], rax
0x7fffeafce8e3:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafce8e7:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafce8eb:	mov		rcx, qword ptr [rcx + 0x10]
0x7fffeafce8ef:	add		rcx, 0x50
0x7fffeafce8f6:	sub		rax, rcx
0x7fffeafce8f9:	mov		qword ptr [rbp - 0x20], rax
disassembling symbol '.LBB27_4':
textAddr: 0x7fffeafce8fd, textSize: 66
0x7fffeafce8fd:	cmp		qword ptr [rbp - 0x28], 0
0x7fffeafce902:	je		0x7fffeafcea42
0x7fffeafce908:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafce90c:	mov		rax, qword ptr [rax]
0x7fffeafce90f:	mov		rcx, qword ptr [rbp - 0x28]
0x7fffeafce913:	mov		rcx, qword ptr [rcx]
0x7fffeafce916:	add		rcx, 0x10
0x7fffeafce91d:	and		rcx, 0xf
0x7fffeafce924:	cmp		rcx, 0
0x7fffeafce928:	mov		qword ptr [rbp - 0x40], rax
0x7fffeafce92c:	jne		0x7fffeafce93f
0x7fffeafce932:	xor		eax, eax
0x7fffeafce934:	mov		ecx, eax
0x7fffeafce936:	mov		qword ptr [rbp - 0x48], rcx
0x7fffeafce93a:	jmp		0x7fffeafce965
disassembling symbol '.LBB27_7':
textAddr: 0x7fffeafce93f, textSize: 38
0x7fffeafce93f:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafce943:	mov		rax, qword ptr [rax]
0x7fffeafce946:	add		rax, 0x10
0x7fffeafce94c:	and		rax, 0xf
0x7fffeafce952:	mov		ecx, 0x10
0x7fffeafce957:	sub		rcx, rax
0x7fffeafce95a:	and		rcx, 0xf
0x7fffeafce961:	mov		qword ptr [rbp - 0x48], rcx
disassembling symbol '.LBB27_8':
textAddr: 0x7fffeafce965, textSize: 15
0x7fffeafce965:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafce969:	mov		rcx, qword ptr [rbp - 0x40]
0x7fffeafce96d:	add		rcx, rax
0x7fffeafce970:	mov		qword ptr [rbp - 0x30], rcx
disassembling symbol '.LBB27_9':
textAddr: 0x7fffeafce974, textSize: 93
0x7fffeafce974:	xor		eax, eax
0x7fffeafce976:	mov		rcx, qword ptr [rbp - 0x30]
0x7fffeafce97a:	mov		rdx, qword ptr [rbp - 0x28]
0x7fffeafce97e:	cmp		rcx, qword ptr [rdx]
0x7fffeafce981:	mov		byte ptr [rbp - 0x49], al
0x7fffeafce984:	jb		0x7fffeafce9d1
0x7fffeafce98a:	xor		eax, eax
0x7fffeafce98c:	mov		rcx, qword ptr [rbp - 0x30]
0x7fffeafce990:	mov		rdx, qword ptr [rbp - 0x28]
0x7fffeafce994:	mov		rdx, qword ptr [rdx]
0x7fffeafce997:	mov		rsi, qword ptr [rbp - 0x28]
0x7fffeafce99b:	add		rdx, qword ptr [rsi + 8]
0x7fffeafce99f:	cmp		rcx, rdx
0x7fffeafce9a2:	mov		byte ptr [rbp - 0x49], al
0x7fffeafce9a5:	jae		0x7fffeafce9d1
0x7fffeafce9ab:	xor		eax, eax
0x7fffeafce9ad:	mov		rcx, qword ptr [rbp - 0x30]
0x7fffeafce9b1:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafce9b5:	cmp		rcx, qword ptr [rdx + 0x28]
0x7fffeafce9b9:	mov		byte ptr [rbp - 0x49], al
0x7fffeafce9bc:	je		0x7fffeafce9d1
0x7fffeafce9c2:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafce9c6:	cmp		qword ptr [rax + 8], 0xb
0x7fffeafce9cb:	setne		cl
0x7fffeafce9ce:	mov		byte ptr [rbp - 0x49], cl
disassembling symbol '.LBB27_13':
textAddr: 0x7fffeafce9d1, textSize: 16
0x7fffeafce9d1:	mov		al, byte ptr [rbp - 0x49]
0x7fffeafce9d4:	test		al, 1
0x7fffeafce9d6:	jne		0x7fffeafce9e1
0x7fffeafce9dc:	jmp		0x7fffeafcea31
disassembling symbol '.LBB27_14':
textAddr: 0x7fffeafce9e1, textSize: 49
0x7fffeafce9e1:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafce9e5:	mov		rax, qword ptr [rax + 8]
0x7fffeafce9e9:	and		rax, 3
0x7fffeafce9ef:	cmp		rax, 1
0x7fffeafce9f3:	jne		0x7fffeafcea12
0x7fffeafce9f9:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafce9fd:	mov		rax, qword ptr [rax + 8]
0x7fffeafcea01:	and		rax, 0xfffffffffffffff8
0x7fffeafcea07:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcea0b:	sub		rcx, rax
0x7fffeafcea0e:	mov		qword ptr [rbp - 0x20], rcx
disassembling symbol '.LBB27_16':
textAddr: 0x7fffeafcea12, textSize: 31
0x7fffeafcea12:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcea16:	mov		rcx, qword ptr [rbp - 0x30]
0x7fffeafcea1a:	mov		rcx, qword ptr [rcx + 8]
0x7fffeafcea1e:	and		rcx, 0xfffffffffffffff8
0x7fffeafcea25:	add		rax, rcx
0x7fffeafcea28:	mov		qword ptr [rbp - 0x30], rax
0x7fffeafcea2c:	jmp		0x7fffeafce974
disassembling symbol '.LBB27_17':
textAddr: 0x7fffeafcea31, textSize: 17
0x7fffeafcea31:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcea35:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafcea39:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafcea3d:	jmp		0x7fffeafce8fd
disassembling symbol '.LBB27_18':
textAddr: 0x7fffeafcea42, textSize: 5
0x7fffeafcea42:	jmp		0x7fffeafcea47
disassembling symbol '.LBB27_19':
textAddr: 0x7fffeafcea47, textSize: 105
0x7fffeafcea47:	mov		rax, qword ptr [rip - 0x1ff089e]
0x7fffeafcea4e:	mov		rdi, qword ptr [rax]
0x7fffeafcea51:	mov		rdx, qword ptr [rbp - 0x10]
0x7fffeafcea55:	lea		rsi, [rip + 0x2c1d4ab]
0x7fffeafcea5c:	mov		al, 0
0x7fffeafcea5e:	call		0x7fffeafc81c0
0x7fffeafcea63:	mov		rcx, qword ptr [rip - 0x1ff08ba]
0x7fffeafcea6a:	mov		rdi, qword ptr [rcx]
0x7fffeafcea6d:	mov		rdx, qword ptr [rbp - 0x18]
0x7fffeafcea71:	lea		rsi, [rip + 0x2c1d4a9]
0x7fffeafcea78:	mov		dword ptr [rbp - 0x50], eax
0x7fffeafcea7b:	mov		al, 0
0x7fffeafcea7d:	call		0x7fffeafc81c0
0x7fffeafcea82:	mov		rcx, qword ptr [rip - 0x1ff08d9]
0x7fffeafcea89:	mov		rdi, qword ptr [rcx]
0x7fffeafcea8c:	mov		rdx, qword ptr [rbp - 0x20]
0x7fffeafcea90:	lea		rsi, [rip + 0x2c1d4a4]
0x7fffeafcea97:	mov		dword ptr [rbp - 0x54], eax
0x7fffeafcea9a:	mov		al, 0
0x7fffeafcea9c:	call		0x7fffeafc81c0
0x7fffeafceaa1:	add		rsp, 0x60
0x7fffeafceaa5:	pop		rbp
0x7fffeafceaa6:	ret		
0x7fffeafceaa7:	nop		word ptr [rax + rax]
disassembling symbol 'mspace_footprint':
textAddr: 0x7fffeafceab0, textSize: 48
0x7fffeafceab0:	push		rbp
0x7fffeafceab1:	mov		rbp, rsp
0x7fffeafceab4:	mov		qword ptr [rbp - 8], rdi
0x7fffeafceab8:	mov		qword ptr [rbp - 0x10], 0
0x7fffeafceac0:	mov		rax, qword ptr [rbp - 8]
0x7fffeafceac4:	mov		qword ptr [rbp - 0x18], rax
0x7fffeafceac8:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafceacc:	mov		rax, qword ptr [rax + 0x358]
0x7fffeafcead3:	mov		qword ptr [rbp - 0x10], rax
0x7fffeafcead7:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafceadb:	pop		rbp
0x7fffeafceadc:	ret		
0x7fffeafceadd:	nop		dword ptr [rax]
disassembling symbol 'mspace_max_footprint':
textAddr: 0x7fffeafceae0, textSize: 48
0x7fffeafceae0:	push		rbp
0x7fffeafceae1:	mov		rbp, rsp
0x7fffeafceae4:	mov		qword ptr [rbp - 8], rdi
0x7fffeafceae8:	mov		qword ptr [rbp - 0x10], 0
0x7fffeafceaf0:	mov		rax, qword ptr [rbp - 8]
0x7fffeafceaf4:	mov		qword ptr [rbp - 0x18], rax
0x7fffeafceaf8:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafceafc:	mov		rax, qword ptr [rax + 0x360]
0x7fffeafceb03:	mov		qword ptr [rbp - 0x10], rax
0x7fffeafceb07:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafceb0b:	pop		rbp
0x7fffeafceb0c:	ret		
0x7fffeafceb0d:	nop		dword ptr [rax]
disassembling symbol 'mspace_footprint_limit':
textAddr: 0x7fffeafceb10, textSize: 96
0x7fffeafceb10:	push		rbp
0x7fffeafceb11:	mov		rbp, rsp
0x7fffeafceb14:	mov		qword ptr [rbp - 8], rdi
0x7fffeafceb18:	mov		qword ptr [rbp - 0x10], 0
0x7fffeafceb20:	mov		rax, qword ptr [rbp - 8]
0x7fffeafceb24:	mov		qword ptr [rbp - 0x18], rax
0x7fffeafceb28:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafceb2c:	mov		rax, qword ptr [rax + 0x368]
0x7fffeafceb33:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafceb37:	cmp		qword ptr [rbp - 0x20], 0
0x7fffeafceb3c:	jne		0x7fffeafceb52
0x7fffeafceb42:	mov		rax, -1
0x7fffeafceb49:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafceb4d:	jmp		0x7fffeafceb5a
0x7fffeafceb52:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafceb56:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafceb5a:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafceb5e:	mov		qword ptr [rbp - 0x10], rax
0x7fffeafceb62:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafceb66:	pop		rbp
0x7fffeafceb67:	ret		
0x7fffeafceb68:	nop		dword ptr [rax + rax]
disassembling symbol '.LBB30_2':
textAddr: 0x7fffeafceb52, textSize: 8
0x7fffeafceb52:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafceb56:	mov		qword ptr [rbp - 0x28], rax
disassembling symbol '.LBB30_3':
textAddr: 0x7fffeafceb5a, textSize: 22
0x7fffeafceb5a:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafceb5e:	mov		qword ptr [rbp - 0x10], rax
0x7fffeafceb62:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafceb66:	pop		rbp
0x7fffeafceb67:	ret		
0x7fffeafceb68:	nop		dword ptr [rax + rax]
disassembling symbol 'mspace_set_footprint_limit':
textAddr: 0x7fffeafceb70, textSize: 192
0x7fffeafceb70:	push		rbp
0x7fffeafceb71:	mov		rbp, rsp
0x7fffeafceb74:	mov		qword ptr [rbp - 8], rdi
0x7fffeafceb78:	mov		qword ptr [rbp - 0x10], rsi
0x7fffeafceb7c:	mov		qword ptr [rbp - 0x18], 0
0x7fffeafceb84:	mov		rax, qword ptr [rbp - 8]
0x7fffeafceb88:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafceb8c:	cmp		qword ptr [rbp - 0x10], 0
0x7fffeafceb91:	jne		0x7fffeafcebc6
0x7fffeafceb97:	mov		rax, qword ptr [rip + 0x2c1c29a]
0x7fffeafceb9e:	sub		rax, 1
0x7fffeafceba4:	add		rax, 1
0x7fffeafcebaa:	mov		rcx, qword ptr [rip + 0x2c1c287]
0x7fffeafcebb1:	sub		rcx, 1
0x7fffeafcebb8:	xor		rcx, 0xffffffffffffffff
0x7fffeafcebbf:	and		rax, rcx
0x7fffeafcebc2:	mov		qword ptr [rbp - 0x18], rax
0x7fffeafcebc6:	cmp		qword ptr [rbp - 0x10], -1
0x7fffeafcebcb:	jne		0x7fffeafcebde
0x7fffeafcebd1:	mov		qword ptr [rbp - 0x18], 0
0x7fffeafcebd9:	jmp		0x7fffeafcec0f
0x7fffeafcebde:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcebe2:	mov		rcx, qword ptr [rip + 0x2c1c24f]
0x7fffeafcebe9:	sub		rcx, 1
0x7fffeafcebf0:	add		rax, rcx
0x7fffeafcebf3:	mov		rcx, qword ptr [rip + 0x2c1c23e]
0x7fffeafcebfa:	sub		rcx, 1
0x7fffeafcec01:	xor		rcx, 0xffffffffffffffff
0x7fffeafcec08:	and		rax, rcx
0x7fffeafcec0b:	mov		qword ptr [rbp - 0x18], rax
0x7fffeafcec0f:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcec13:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcec17:	mov		qword ptr [rcx + 0x368], rax
0x7fffeafcec1e:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcec22:	pop		rbp
0x7fffeafcec23:	ret		
0x7fffeafcec24:	nop		word ptr cs:[rax + rax]
0x7fffeafcec2e:	nop		
disassembling symbol '.LBB31_2':
textAddr: 0x7fffeafcebc6, textSize: 24
0x7fffeafcebc6:	cmp		qword ptr [rbp - 0x10], -1
0x7fffeafcebcb:	jne		0x7fffeafcebde
0x7fffeafcebd1:	mov		qword ptr [rbp - 0x18], 0
0x7fffeafcebd9:	jmp		0x7fffeafcec0f
disassembling symbol '.LBB31_4':
textAddr: 0x7fffeafcebde, textSize: 49
0x7fffeafcebde:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcebe2:	mov		rcx, qword ptr [rip + 0x2c1c24f]
0x7fffeafcebe9:	sub		rcx, 1
0x7fffeafcebf0:	add		rax, rcx
0x7fffeafcebf3:	mov		rcx, qword ptr [rip + 0x2c1c23e]
0x7fffeafcebfa:	sub		rcx, 1
0x7fffeafcec01:	xor		rcx, 0xffffffffffffffff
0x7fffeafcec08:	and		rax, rcx
0x7fffeafcec0b:	mov		qword ptr [rbp - 0x18], rax
disassembling symbol '.LBB31_5':
textAddr: 0x7fffeafcec0f, textSize: 33
0x7fffeafcec0f:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcec13:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafcec17:	mov		qword ptr [rcx + 0x368], rax
0x7fffeafcec1e:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcec22:	pop		rbp
0x7fffeafcec23:	ret		
0x7fffeafcec24:	nop		word ptr cs:[rax + rax]
0x7fffeafcec2e:	nop		
disassembling symbol 'mspace_mallinfo':
textAddr: 0x7fffeafcec30, textSize: 48
0x7fffeafcec30:	push		rbp
0x7fffeafcec31:	mov		rbp, rsp
0x7fffeafcec34:	sub		rsp, 0x20
0x7fffeafcec38:	mov		rax, rdi
0x7fffeafcec3b:	mov		qword ptr [rbp - 8], rsi
0x7fffeafcec3f:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcec43:	mov		qword ptr [rbp - 0x10], rcx
0x7fffeafcec47:	mov		rsi, qword ptr [rbp - 0x10]
0x7fffeafcec4b:	mov		qword ptr [rbp - 0x18], rax
0x7fffeafcec4f:	call		0x7fffeafcec60
0x7fffeafcec54:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcec58:	add		rsp, 0x20
0x7fffeafcec5c:	pop		rbp
0x7fffeafcec5d:	ret		
0x7fffeafcec5e:	nop		
disassembling symbol 'internal_mallinfo':
textAddr: 0x7fffeafcec60, textSize: 608
0x7fffeafcec60:	push		rbp
0x7fffeafcec61:	mov		rbp, rsp
0x7fffeafcec64:	sub		rsp, 0x70
0x7fffeafcec68:	mov		rax, rdi
0x7fffeafcec6b:	xor		ecx, ecx
0x7fffeafcec6d:	mov		qword ptr [rbp - 8], rsi
0x7fffeafcec71:	mov		rdx, rdi
0x7fffeafcec74:	mov		qword ptr [rbp - 0x40], rdi
0x7fffeafcec78:	mov		rdi, rdx
0x7fffeafcec7b:	mov		esi, ecx
0x7fffeafcec7d:	mov		edx, 0x50
0x7fffeafcec82:	mov		qword ptr [rbp - 0x48], rax
0x7fffeafcec86:	call		0x7fffeafd2a10
0x7fffeafcec8b:	cmp		qword ptr [rip + 0x2c1c195], 0
0x7fffeafcec93:	mov		r8b, 1
0x7fffeafcec96:	mov		byte ptr [rbp - 0x49], r8b
0x7fffeafcec9a:	jne		0x7fffeafcecae
0x7fffeafceca0:	call		0x7fffeafc8870
0x7fffeafceca5:	cmp		eax, 0
0x7fffeafceca8:	setne		cl
0x7fffeafcecab:	mov		byte ptr [rbp - 0x49], cl
0x7fffeafcecae:	mov		al, byte ptr [rbp - 0x49]
0x7fffeafcecb1:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcecb5:	cmp		qword ptr [rcx + 0x28], 0
0x7fffeafcecba:	je		0x7fffeafceeb0
0x7fffeafcecc0:	mov		qword ptr [rbp - 0x10], 1
0x7fffeafcecc8:	mov		rax, qword ptr [rbp - 8]
0x7fffeafceccc:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafcecd0:	add		rax, 0x50
0x7fffeafcecd6:	mov		qword ptr [rbp - 0x18], rax
0x7fffeafcecda:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcecde:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafcece2:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcece6:	add		rax, 0x378
0x7fffeafcecec:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafcecf0:	cmp		qword ptr [rbp - 0x28], 0
0x7fffeafcecf5:	je		0x7fffeafcee54
0x7fffeafcecfb:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcecff:	mov		rax, qword ptr [rax]
0x7fffeafced02:	mov		rcx, qword ptr [rbp - 0x28]
0x7fffeafced06:	mov		rcx, qword ptr [rcx]
0x7fffeafced09:	add		rcx, 0x10
0x7fffeafced10:	and		rcx, 0xf
0x7fffeafced17:	cmp		rcx, 0
0x7fffeafced1b:	mov		qword ptr [rbp - 0x58], rax
0x7fffeafced1f:	jne		0x7fffeafced32
0x7fffeafced25:	xor		eax, eax
0x7fffeafced27:	mov		ecx, eax
0x7fffeafced29:	mov		qword ptr [rbp - 0x60], rcx
0x7fffeafced2d:	jmp		0x7fffeafced58
0x7fffeafced32:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafced36:	mov		rax, qword ptr [rax]
0x7fffeafced39:	add		rax, 0x10
0x7fffeafced3f:	and		rax, 0xf
0x7fffeafced45:	mov		ecx, 0x10
0x7fffeafced4a:	sub		rcx, rax
0x7fffeafced4d:	and		rcx, 0xf
0x7fffeafced54:	mov		qword ptr [rbp - 0x60], rcx
0x7fffeafced58:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafced5c:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafced60:	add		rcx, rax
0x7fffeafced63:	mov		qword ptr [rbp - 0x30], rcx
0x7fffeafced67:	xor		eax, eax
0x7fffeafced69:	mov		rcx, qword ptr [rbp - 0x30]
0x7fffeafced6d:	mov		rdx, qword ptr [rbp - 0x28]
0x7fffeafced71:	cmp		rcx, qword ptr [rdx]
0x7fffeafced74:	mov		byte ptr [rbp - 0x61], al
0x7fffeafced77:	jb		0x7fffeafcedc4
0x7fffeafced7d:	xor		eax, eax
0x7fffeafced7f:	mov		rcx, qword ptr [rbp - 0x30]
0x7fffeafced83:	mov		rdx, qword ptr [rbp - 0x28]
0x7fffeafced87:	mov		rdx, qword ptr [rdx]
0x7fffeafced8a:	mov		rsi, qword ptr [rbp - 0x28]
0x7fffeafced8e:	add		rdx, qword ptr [rsi + 8]
0x7fffeafced92:	cmp		rcx, rdx
0x7fffeafced95:	mov		byte ptr [rbp - 0x61], al
0x7fffeafced98:	jae		0x7fffeafcedc4
0x7fffeafced9e:	xor		eax, eax
0x7fffeafceda0:	mov		rcx, qword ptr [rbp - 0x30]
0x7fffeafceda4:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafceda8:	cmp		rcx, qword ptr [rdx + 0x28]
0x7fffeafcedac:	mov		byte ptr [rbp - 0x61], al
0x7fffeafcedaf:	je		0x7fffeafcedc4
0x7fffeafcedb5:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcedb9:	cmp		qword ptr [rax + 8], 0xb
0x7fffeafcedbe:	setne		cl
0x7fffeafcedc1:	mov		byte ptr [rbp - 0x61], cl
0x7fffeafcedc4:	mov		al, byte ptr [rbp - 0x61]
0x7fffeafcedc7:	test		al, 1
0x7fffeafcedc9:	jne		0x7fffeafcedd4
0x7fffeafcedcf:	jmp		0x7fffeafcee43
0x7fffeafcedd4:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcedd8:	mov		rax, qword ptr [rax + 8]
0x7fffeafceddc:	and		rax, 0xfffffffffffffff8
0x7fffeafcede2:	mov		qword ptr [rbp - 0x38], rax
0x7fffeafcede6:	mov		rax, qword ptr [rbp - 0x38]
0x7fffeafcedea:	add		rax, qword ptr [rbp - 0x20]
0x7fffeafcedee:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafcedf2:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcedf6:	mov		rax, qword ptr [rax + 8]
0x7fffeafcedfa:	and		rax, 3
0x7fffeafcee00:	cmp		rax, 1
0x7fffeafcee04:	jne		0x7fffeafcee24
0x7fffeafcee0a:	mov		rax, qword ptr [rbp - 0x38]
0x7fffeafcee0e:	add		rax, qword ptr [rbp - 0x18]
0x7fffeafcee12:	mov		qword ptr [rbp - 0x18], rax
0x7fffeafcee16:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcee1a:	add		rax, 1
0x7fffeafcee20:	mov		qword ptr [rbp - 0x10], rax
0x7fffeafcee24:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcee28:	mov		rcx, qword ptr [rbp - 0x30]
0x7fffeafcee2c:	mov		rcx, qword ptr [rcx + 8]
0x7fffeafcee30:	and		rcx, 0xfffffffffffffff8
0x7fffeafcee37:	add		rax, rcx
0x7fffeafcee3a:	mov		qword ptr [rbp - 0x30], rax
0x7fffeafcee3e:	jmp		0x7fffeafced67
0x7fffeafcee43:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcee47:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafcee4b:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafcee4f:	jmp		0x7fffeafcecf0
0x7fffeafcee54:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcee58:	mov		rcx, qword ptr [rbp - 0x40]
0x7fffeafcee5c:	mov		qword ptr [rcx], rax
0x7fffeafcee5f:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcee63:	mov		qword ptr [rcx + 8], rax
0x7fffeafcee67:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcee6b:	mov		rax, qword ptr [rax + 0x358]
0x7fffeafcee72:	sub		rax, qword ptr [rbp - 0x20]
0x7fffeafcee76:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafcee7a:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcee7e:	mov		rax, qword ptr [rax + 0x360]
0x7fffeafcee85:	mov		qword ptr [rcx + 0x28], rax
0x7fffeafcee89:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcee8d:	mov		rax, qword ptr [rax + 0x358]
0x7fffeafcee94:	sub		rax, qword ptr [rbp - 0x18]
0x7fffeafcee98:	mov		qword ptr [rcx + 0x38], rax
0x7fffeafcee9c:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafceea0:	mov		qword ptr [rcx + 0x40], rax
0x7fffeafceea4:	mov		rax, qword ptr [rbp - 8]
0x7fffeafceea8:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafceeac:	mov		qword ptr [rcx + 0x48], rax
0x7fffeafceeb0:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafceeb4:	add		rsp, 0x70
0x7fffeafceeb8:	pop		rbp
0x7fffeafceeb9:	ret		
0x7fffeafceeba:	nop		word ptr [rax + rax]
disassembling symbol '.LBB33_2':
textAddr: 0x7fffeafcecae, textSize: 66
0x7fffeafcecae:	mov		al, byte ptr [rbp - 0x49]
0x7fffeafcecb1:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcecb5:	cmp		qword ptr [rcx + 0x28], 0
0x7fffeafcecba:	je		0x7fffeafceeb0
0x7fffeafcecc0:	mov		qword ptr [rbp - 0x10], 1
0x7fffeafcecc8:	mov		rax, qword ptr [rbp - 8]
0x7fffeafceccc:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafcecd0:	add		rax, 0x50
0x7fffeafcecd6:	mov		qword ptr [rbp - 0x18], rax
0x7fffeafcecda:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcecde:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafcece2:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcece6:	add		rax, 0x378
0x7fffeafcecec:	mov		qword ptr [rbp - 0x28], rax
disassembling symbol '.LBB33_4':
textAddr: 0x7fffeafcecf0, textSize: 66
0x7fffeafcecf0:	cmp		qword ptr [rbp - 0x28], 0
0x7fffeafcecf5:	je		0x7fffeafcee54
0x7fffeafcecfb:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcecff:	mov		rax, qword ptr [rax]
0x7fffeafced02:	mov		rcx, qword ptr [rbp - 0x28]
0x7fffeafced06:	mov		rcx, qword ptr [rcx]
0x7fffeafced09:	add		rcx, 0x10
0x7fffeafced10:	and		rcx, 0xf
0x7fffeafced17:	cmp		rcx, 0
0x7fffeafced1b:	mov		qword ptr [rbp - 0x58], rax
0x7fffeafced1f:	jne		0x7fffeafced32
0x7fffeafced25:	xor		eax, eax
0x7fffeafced27:	mov		ecx, eax
0x7fffeafced29:	mov		qword ptr [rbp - 0x60], rcx
0x7fffeafced2d:	jmp		0x7fffeafced58
disassembling symbol '.LBB33_7':
textAddr: 0x7fffeafced32, textSize: 38
0x7fffeafced32:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafced36:	mov		rax, qword ptr [rax]
0x7fffeafced39:	add		rax, 0x10
0x7fffeafced3f:	and		rax, 0xf
0x7fffeafced45:	mov		ecx, 0x10
0x7fffeafced4a:	sub		rcx, rax
0x7fffeafced4d:	and		rcx, 0xf
0x7fffeafced54:	mov		qword ptr [rbp - 0x60], rcx
disassembling symbol '.LBB33_8':
textAddr: 0x7fffeafced58, textSize: 15
0x7fffeafced58:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafced5c:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafced60:	add		rcx, rax
0x7fffeafced63:	mov		qword ptr [rbp - 0x30], rcx
disassembling symbol '.LBB33_9':
textAddr: 0x7fffeafced67, textSize: 93
0x7fffeafced67:	xor		eax, eax
0x7fffeafced69:	mov		rcx, qword ptr [rbp - 0x30]
0x7fffeafced6d:	mov		rdx, qword ptr [rbp - 0x28]
0x7fffeafced71:	cmp		rcx, qword ptr [rdx]
0x7fffeafced74:	mov		byte ptr [rbp - 0x61], al
0x7fffeafced77:	jb		0x7fffeafcedc4
0x7fffeafced7d:	xor		eax, eax
0x7fffeafced7f:	mov		rcx, qword ptr [rbp - 0x30]
0x7fffeafced83:	mov		rdx, qword ptr [rbp - 0x28]
0x7fffeafced87:	mov		rdx, qword ptr [rdx]
0x7fffeafced8a:	mov		rsi, qword ptr [rbp - 0x28]
0x7fffeafced8e:	add		rdx, qword ptr [rsi + 8]
0x7fffeafced92:	cmp		rcx, rdx
0x7fffeafced95:	mov		byte ptr [rbp - 0x61], al
0x7fffeafced98:	jae		0x7fffeafcedc4
0x7fffeafced9e:	xor		eax, eax
0x7fffeafceda0:	mov		rcx, qword ptr [rbp - 0x30]
0x7fffeafceda4:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafceda8:	cmp		rcx, qword ptr [rdx + 0x28]
0x7fffeafcedac:	mov		byte ptr [rbp - 0x61], al
0x7fffeafcedaf:	je		0x7fffeafcedc4
0x7fffeafcedb5:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcedb9:	cmp		qword ptr [rax + 8], 0xb
0x7fffeafcedbe:	setne		cl
0x7fffeafcedc1:	mov		byte ptr [rbp - 0x61], cl
disassembling symbol '.LBB33_13':
textAddr: 0x7fffeafcedc4, textSize: 16
0x7fffeafcedc4:	mov		al, byte ptr [rbp - 0x61]
0x7fffeafcedc7:	test		al, 1
0x7fffeafcedc9:	jne		0x7fffeafcedd4
0x7fffeafcedcf:	jmp		0x7fffeafcee43
disassembling symbol '.LBB33_14':
textAddr: 0x7fffeafcedd4, textSize: 80
0x7fffeafcedd4:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcedd8:	mov		rax, qword ptr [rax + 8]
0x7fffeafceddc:	and		rax, 0xfffffffffffffff8
0x7fffeafcede2:	mov		qword ptr [rbp - 0x38], rax
0x7fffeafcede6:	mov		rax, qword ptr [rbp - 0x38]
0x7fffeafcedea:	add		rax, qword ptr [rbp - 0x20]
0x7fffeafcedee:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafcedf2:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcedf6:	mov		rax, qword ptr [rax + 8]
0x7fffeafcedfa:	and		rax, 3
0x7fffeafcee00:	cmp		rax, 1
0x7fffeafcee04:	jne		0x7fffeafcee24
0x7fffeafcee0a:	mov		rax, qword ptr [rbp - 0x38]
0x7fffeafcee0e:	add		rax, qword ptr [rbp - 0x18]
0x7fffeafcee12:	mov		qword ptr [rbp - 0x18], rax
0x7fffeafcee16:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcee1a:	add		rax, 1
0x7fffeafcee20:	mov		qword ptr [rbp - 0x10], rax
disassembling symbol '.LBB33_16':
textAddr: 0x7fffeafcee24, textSize: 31
0x7fffeafcee24:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcee28:	mov		rcx, qword ptr [rbp - 0x30]
0x7fffeafcee2c:	mov		rcx, qword ptr [rcx + 8]
0x7fffeafcee30:	and		rcx, 0xfffffffffffffff8
0x7fffeafcee37:	add		rax, rcx
0x7fffeafcee3a:	mov		qword ptr [rbp - 0x30], rax
0x7fffeafcee3e:	jmp		0x7fffeafced67
disassembling symbol '.LBB33_17':
textAddr: 0x7fffeafcee43, textSize: 17
0x7fffeafcee43:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcee47:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafcee4b:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafcee4f:	jmp		0x7fffeafcecf0
disassembling symbol '.LBB33_18':
textAddr: 0x7fffeafcee54, textSize: 92
0x7fffeafcee54:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcee58:	mov		rcx, qword ptr [rbp - 0x40]
0x7fffeafcee5c:	mov		qword ptr [rcx], rax
0x7fffeafcee5f:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcee63:	mov		qword ptr [rcx + 8], rax
0x7fffeafcee67:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcee6b:	mov		rax, qword ptr [rax + 0x358]
0x7fffeafcee72:	sub		rax, qword ptr [rbp - 0x20]
0x7fffeafcee76:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafcee7a:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcee7e:	mov		rax, qword ptr [rax + 0x360]
0x7fffeafcee85:	mov		qword ptr [rcx + 0x28], rax
0x7fffeafcee89:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcee8d:	mov		rax, qword ptr [rax + 0x358]
0x7fffeafcee94:	sub		rax, qword ptr [rbp - 0x18]
0x7fffeafcee98:	mov		qword ptr [rcx + 0x38], rax
0x7fffeafcee9c:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafceea0:	mov		qword ptr [rcx + 0x40], rax
0x7fffeafceea4:	mov		rax, qword ptr [rbp - 8]
0x7fffeafceea8:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafceeac:	mov		qword ptr [rcx + 0x48], rax
disassembling symbol '.LBB33_19':
textAddr: 0x7fffeafceeb0, textSize: 16
0x7fffeafceeb0:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafceeb4:	add		rsp, 0x70
0x7fffeafceeb8:	pop		rbp
0x7fffeafceeb9:	ret		
0x7fffeafceeba:	nop		word ptr [rax + rax]
disassembling symbol 'mspace_usable_size':
textAddr: 0x7fffeafceec0, textSize: 144
0x7fffeafceec0:	push		rbp
0x7fffeafceec1:	mov		rbp, rsp
0x7fffeafceec4:	mov		qword ptr [rbp - 0x10], rdi
0x7fffeafceec8:	cmp		qword ptr [rbp - 0x10], 0
0x7fffeafceecd:	je		0x7fffeafcef39
0x7fffeafceed3:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafceed7:	add		rax, -0x10
0x7fffeafceedd:	mov		qword ptr [rbp - 0x18], rax
0x7fffeafceee1:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafceee5:	mov		rax, qword ptr [rax + 8]
0x7fffeafceee9:	and		rax, 3
0x7fffeafceeef:	cmp		rax, 1
0x7fffeafceef3:	je		0x7fffeafcef34
0x7fffeafceef9:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafceefd:	mov		rax, qword ptr [rax + 8]
0x7fffeafcef01:	and		rax, 0xfffffffffffffff8
0x7fffeafcef07:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafcef0b:	mov		rcx, qword ptr [rcx + 8]
0x7fffeafcef0f:	and		rcx, 3
0x7fffeafcef16:	cmp		rcx, 0
0x7fffeafcef1a:	mov		ecx, 0x10
0x7fffeafcef1f:	mov		edx, 8
0x7fffeafcef24:	cmove		rdx, rcx
0x7fffeafcef28:	sub		rax, rdx
0x7fffeafcef2b:	mov		qword ptr [rbp - 8], rax
0x7fffeafcef2f:	jmp		0x7fffeafcef41
0x7fffeafcef34:	jmp		0x7fffeafcef39
0x7fffeafcef39:	mov		qword ptr [rbp - 8], 0
0x7fffeafcef41:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcef45:	pop		rbp
0x7fffeafcef46:	ret		
0x7fffeafcef47:	nop		word ptr [rax + rax]
disassembling symbol '.LBB34_3':
textAddr: 0x7fffeafcef34, textSize: 5
0x7fffeafcef34:	jmp		0x7fffeafcef39
disassembling symbol '.LBB34_4':
textAddr: 0x7fffeafcef39, textSize: 8
0x7fffeafcef39:	mov		qword ptr [rbp - 8], 0
disassembling symbol '.LBB34_5':
textAddr: 0x7fffeafcef41, textSize: 15
0x7fffeafcef41:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcef45:	pop		rbp
0x7fffeafcef46:	ret		
0x7fffeafcef47:	nop		word ptr [rax + rax]
disassembling symbol 'mspace_mallopt':
textAddr: 0x7fffeafcef50, textSize: 32
0x7fffeafcef50:	push		rbp
0x7fffeafcef51:	mov		rbp, rsp
0x7fffeafcef54:	sub		rsp, 0x10
0x7fffeafcef58:	mov		dword ptr [rbp - 4], edi
0x7fffeafcef5b:	mov		dword ptr [rbp - 8], esi
0x7fffeafcef5e:	mov		edi, dword ptr [rbp - 4]
0x7fffeafcef61:	mov		esi, dword ptr [rbp - 8]
0x7fffeafcef64:	call		0x7fffeafcef70
0x7fffeafcef69:	add		rsp, 0x10
0x7fffeafcef6d:	pop		rbp
0x7fffeafcef6e:	ret		
0x7fffeafcef6f:	nop		
disassembling symbol 'change_mparam':
textAddr: 0x7fffeafcef70, textSize: 304
0x7fffeafcef70:	push		rbp
0x7fffeafcef71:	mov		rbp, rsp
0x7fffeafcef74:	sub		rsp, 0x30
0x7fffeafcef78:	mov		dword ptr [rbp - 8], edi
0x7fffeafcef7b:	mov		dword ptr [rbp - 0xc], esi
0x7fffeafcef7e:	cmp		qword ptr [rip + 0x2c1bea2], 0
0x7fffeafcef86:	mov		al, 1
0x7fffeafcef88:	mov		byte ptr [rbp - 0x19], al
0x7fffeafcef8b:	jne		0x7fffeafcef9f
0x7fffeafcef91:	call		0x7fffeafc8870
0x7fffeafcef96:	cmp		eax, 0
0x7fffeafcef99:	setne		cl
0x7fffeafcef9c:	mov		byte ptr [rbp - 0x19], cl
0x7fffeafcef9f:	mov		al, byte ptr [rbp - 0x19]
0x7fffeafcefa2:	cmp		dword ptr [rbp - 0xc], -1
0x7fffeafcefa6:	jne		0x7fffeafcefbc
0x7fffeafcefac:	mov		rax, -1
0x7fffeafcefb3:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafcefb7:	jmp		0x7fffeafcefc4
0x7fffeafcefbc:	movsxd		rax, dword ptr [rbp - 0xc]
0x7fffeafcefc0:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafcefc4:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcefc8:	mov		qword ptr [rbp - 0x18], rax
0x7fffeafcefcc:	mov		ecx, dword ptr [rbp - 8]
0x7fffeafcefcf:	mov		edx, ecx
0x7fffeafcefd1:	sub		edx, -3
0x7fffeafcefd4:	mov		dword ptr [rbp - 0x2c], ecx
0x7fffeafcefd7:	je		0x7fffeafcf06b
0x7fffeafcefdd:	jmp		0x7fffeafcefe2
0x7fffeafcefe2:	mov		eax, dword ptr [rbp - 0x2c]
0x7fffeafcefe5:	sub		eax, -2
0x7fffeafcefe8:	je		0x7fffeafcf01b
0x7fffeafcefee:	jmp		0x7fffeafceff3
0x7fffeafceff3:	mov		eax, dword ptr [rbp - 0x2c]
0x7fffeafceff6:	sub		eax, -1
0x7fffeafceff9:	jne		0x7fffeafcf082
0x7fffeafcefff:	jmp		0x7fffeafcf004
0x7fffeafcf004:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcf008:	mov		qword ptr [rip + 0x2c1be39], rax
0x7fffeafcf00f:	mov		dword ptr [rbp - 4], 1
0x7fffeafcf016:	jmp		0x7fffeafcf089
0x7fffeafcf01b:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcf01f:	cmp		rax, qword ptr [rip + 0x2c1be0a]
0x7fffeafcf026:	jb		0x7fffeafcf05f
0x7fffeafcf02c:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcf030:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafcf034:	sub		rcx, 1
0x7fffeafcf03b:	and		rax, rcx
0x7fffeafcf03e:	cmp		rax, 0
0x7fffeafcf042:	jne		0x7fffeafcf05f
0x7fffeafcf048:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcf04c:	mov		qword ptr [rip + 0x2c1bde5], rax
0x7fffeafcf053:	mov		dword ptr [rbp - 4], 1
0x7fffeafcf05a:	jmp		0x7fffeafcf089
0x7fffeafcf05f:	mov		dword ptr [rbp - 4], 0
0x7fffeafcf066:	jmp		0x7fffeafcf089
0x7fffeafcf06b:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcf06f:	mov		qword ptr [rip + 0x2c1bdca], rax
0x7fffeafcf076:	mov		dword ptr [rbp - 4], 1
0x7fffeafcf07d:	jmp		0x7fffeafcf089
0x7fffeafcf082:	mov		dword ptr [rbp - 4], 0
0x7fffeafcf089:	mov		eax, dword ptr [rbp - 4]
0x7fffeafcf08c:	add		rsp, 0x30
0x7fffeafcf090:	pop		rbp
0x7fffeafcf091:	ret		
0x7fffeafcf092:	nop		word ptr cs:[rax + rax]
0x7fffeafcf09c:	nop		dword ptr [rax]
disassembling symbol '.LBB36_2':
textAddr: 0x7fffeafcef9f, textSize: 29
0x7fffeafcef9f:	mov		al, byte ptr [rbp - 0x19]
0x7fffeafcefa2:	cmp		dword ptr [rbp - 0xc], -1
0x7fffeafcefa6:	jne		0x7fffeafcefbc
0x7fffeafcefac:	mov		rax, -1
0x7fffeafcefb3:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafcefb7:	jmp		0x7fffeafcefc4
disassembling symbol '.LBB36_4':
textAddr: 0x7fffeafcefbc, textSize: 8
0x7fffeafcefbc:	movsxd		rax, dword ptr [rbp - 0xc]
0x7fffeafcefc0:	mov		qword ptr [rbp - 0x28], rax
disassembling symbol '.LBB36_5':
textAddr: 0x7fffeafcefc4, textSize: 30
0x7fffeafcefc4:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcefc8:	mov		qword ptr [rbp - 0x18], rax
0x7fffeafcefcc:	mov		ecx, dword ptr [rbp - 8]
0x7fffeafcefcf:	mov		edx, ecx
0x7fffeafcefd1:	sub		edx, -3
0x7fffeafcefd4:	mov		dword ptr [rbp - 0x2c], ecx
0x7fffeafcefd7:	je		0x7fffeafcf06b
0x7fffeafcefdd:	jmp		0x7fffeafcefe2
disassembling symbol '.LBB36_14':
textAddr: 0x7fffeafcefe2, textSize: 17
0x7fffeafcefe2:	mov		eax, dword ptr [rbp - 0x2c]
0x7fffeafcefe5:	sub		eax, -2
0x7fffeafcefe8:	je		0x7fffeafcf01b
0x7fffeafcefee:	jmp		0x7fffeafceff3
disassembling symbol '.LBB36_15':
textAddr: 0x7fffeafceff3, textSize: 17
0x7fffeafceff3:	mov		eax, dword ptr [rbp - 0x2c]
0x7fffeafceff6:	sub		eax, -1
0x7fffeafceff9:	jne		0x7fffeafcf082
0x7fffeafcefff:	jmp		0x7fffeafcf004
disassembling symbol '.LBB36_6':
textAddr: 0x7fffeafcf004, textSize: 23
0x7fffeafcf004:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcf008:	mov		qword ptr [rip + 0x2c1be39], rax
0x7fffeafcf00f:	mov		dword ptr [rbp - 4], 1
0x7fffeafcf016:	jmp		0x7fffeafcf089
disassembling symbol '.LBB36_7':
textAddr: 0x7fffeafcf01b, textSize: 68
0x7fffeafcf01b:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcf01f:	cmp		rax, qword ptr [rip + 0x2c1be0a]
0x7fffeafcf026:	jb		0x7fffeafcf05f
0x7fffeafcf02c:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcf030:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafcf034:	sub		rcx, 1
0x7fffeafcf03b:	and		rax, rcx
0x7fffeafcf03e:	cmp		rax, 0
0x7fffeafcf042:	jne		0x7fffeafcf05f
0x7fffeafcf048:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcf04c:	mov		qword ptr [rip + 0x2c1bde5], rax
0x7fffeafcf053:	mov		dword ptr [rbp - 4], 1
0x7fffeafcf05a:	jmp		0x7fffeafcf089
disassembling symbol '.LBB36_10':
textAddr: 0x7fffeafcf05f, textSize: 12
0x7fffeafcf05f:	mov		dword ptr [rbp - 4], 0
0x7fffeafcf066:	jmp		0x7fffeafcf089
disassembling symbol '.LBB36_11':
textAddr: 0x7fffeafcf06b, textSize: 23
0x7fffeafcf06b:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcf06f:	mov		qword ptr [rip + 0x2c1bdca], rax
0x7fffeafcf076:	mov		dword ptr [rbp - 4], 1
0x7fffeafcf07d:	jmp		0x7fffeafcf089
disassembling symbol '.LBB36_12':
textAddr: 0x7fffeafcf082, textSize: 7
0x7fffeafcf082:	mov		dword ptr [rbp - 4], 0
disassembling symbol '.LBB36_13':
textAddr: 0x7fffeafcf089, textSize: 23
0x7fffeafcf089:	mov		eax, dword ptr [rbp - 4]
0x7fffeafcf08c:	add		rsp, 0x30
0x7fffeafcf090:	pop		rbp
0x7fffeafcf091:	ret		
0x7fffeafcf092:	nop		word ptr cs:[rax + rax]
0x7fffeafcf09c:	nop		dword ptr [rax]
disassembling symbol '_malloc_init':
textAddr: 0x7fffeafcf0a0, textSize: 96
0x7fffeafcf0a0:	push		rbp
0x7fffeafcf0a1:	mov		rbp, rsp
0x7fffeafcf0a4:	sub		rsp, 0x10
0x7fffeafcf0a8:	mov		byte ptr [rbp - 1], 0
0x7fffeafcf0ac:	movzx		eax, byte ptr [rbp - 1]
0x7fffeafcf0b0:	cmp		eax, 8
0x7fffeafcf0b3:	jge		0x7fffeafcf0f4
0x7fffeafcf0b9:	xor		edx, edx
0x7fffeafcf0bb:	movzx		eax, byte ptr [rbp - 1]
0x7fffeafcf0bf:	mov		ecx, eax
0x7fffeafcf0c1:	lea		rsi, [rip + 0x2c1be48]
0x7fffeafcf0c8:	mov		rdi, qword ptr [rsi + rcx*8]
0x7fffeafcf0cc:	mov		esi, 0x100000
0x7fffeafcf0d1:	call		0x7fffeafc8af0
0x7fffeafcf0d6:	movzx		edx, byte ptr [rbp - 1]
0x7fffeafcf0da:	mov		ecx, edx
0x7fffeafcf0dc:	lea		rsi, [rip + 0x2c1bd05]
0x7fffeafcf0e3:	mov		qword ptr [rsi + rcx*8], rax
0x7fffeafcf0e7:	mov		al, byte ptr [rbp - 1]
0x7fffeafcf0ea:	add		al, 1
0x7fffeafcf0ec:	mov		byte ptr [rbp - 1], al
0x7fffeafcf0ef:	jmp		0x7fffeafcf0ac
0x7fffeafcf0f4:	add		rsp, 0x10
0x7fffeafcf0f8:	pop		rbp
0x7fffeafcf0f9:	ret		
0x7fffeafcf0fa:	nop		word ptr [rax + rax]
disassembling symbol '.LBB37_1':
textAddr: 0x7fffeafcf0ac, textSize: 72
0x7fffeafcf0ac:	movzx		eax, byte ptr [rbp - 1]
0x7fffeafcf0b0:	cmp		eax, 8
0x7fffeafcf0b3:	jge		0x7fffeafcf0f4
0x7fffeafcf0b9:	xor		edx, edx
0x7fffeafcf0bb:	movzx		eax, byte ptr [rbp - 1]
0x7fffeafcf0bf:	mov		ecx, eax
0x7fffeafcf0c1:	lea		rsi, [rip + 0x2c1be48]
0x7fffeafcf0c8:	mov		rdi, qword ptr [rsi + rcx*8]
0x7fffeafcf0cc:	mov		esi, 0x100000
0x7fffeafcf0d1:	call		0x7fffeafc8af0
0x7fffeafcf0d6:	movzx		edx, byte ptr [rbp - 1]
0x7fffeafcf0da:	mov		ecx, edx
0x7fffeafcf0dc:	lea		rsi, [rip + 0x2c1bd05]
0x7fffeafcf0e3:	mov		qword ptr [rsi + rcx*8], rax
0x7fffeafcf0e7:	mov		al, byte ptr [rbp - 1]
0x7fffeafcf0ea:	add		al, 1
0x7fffeafcf0ec:	mov		byte ptr [rbp - 1], al
0x7fffeafcf0ef:	jmp		0x7fffeafcf0ac
disassembling symbol '.LBB37_4':
textAddr: 0x7fffeafcf0f4, textSize: 12
0x7fffeafcf0f4:	add		rsp, 0x10
0x7fffeafcf0f8:	pop		rbp
0x7fffeafcf0f9:	ret		
0x7fffeafcf0fa:	nop		word ptr [rax + rax]
disassembling symbol 'malloc':
textAddr: 0x7fffeafcf100, textSize: 272
0x7fffeafcf100:	push		rbp
0x7fffeafcf101:	mov		rbp, rsp
0x7fffeafcf104:	sub		rsp, 0x20
0x7fffeafcf108:	mov		qword ptr [rbp - 8], rdi
0x7fffeafcf10c:	mov		qword ptr [rbp - 0x10], 0
0x7fffeafcf114:	cmp		qword ptr [rip + 0x2c1bccc], 0
0x7fffeafcf11c:	jne		0x7fffeafcf127
0x7fffeafcf122:	call		0x7fffeafcf0a0
0x7fffeafcf127:	call		0x7fffeafd4110
0x7fffeafcf12c:	cdq		
0x7fffeafcf12d:	mov		ecx, 0x128
0x7fffeafcf132:	idiv		ecx
0x7fffeafcf134:	mov		byte ptr [rbp - 0x11], dl
0x7fffeafcf137:	movzx		ecx, byte ptr [rbp - 0x11]
0x7fffeafcf13b:	mov		eax, ecx
0x7fffeafcf13d:	cdq		
0x7fffeafcf13e:	mov		ecx, 8
0x7fffeafcf143:	idiv		ecx
0x7fffeafcf145:	mov		byte ptr [rbp - 0x12], dl
0x7fffeafcf148:	movzx		esi, byte ptr [rbp - 0x11]
0x7fffeafcf14c:	mov		eax, esi
0x7fffeafcf14e:	cdq		
0x7fffeafcf14f:	mov		esi, 0x25
0x7fffeafcf154:	idiv		esi
0x7fffeafcf156:	mov		byte ptr [rbp - 0x13], dl
0x7fffeafcf159:	movzx		esi, byte ptr [rbp - 0x11]
0x7fffeafcf15d:	mov		eax, esi
0x7fffeafcf15f:	cdq		
0x7fffeafcf160:	idiv		ecx
0x7fffeafcf162:	mov		byte ptr [rbp - 0x11], dl
0x7fffeafcf165:	movzx		ecx, byte ptr [rbp - 0x11]
0x7fffeafcf169:	cmp		ecx, 7
0x7fffeafcf16c:	jne		0x7fffeafcf17c
0x7fffeafcf172:	xor		eax, eax
0x7fffeafcf174:	mov		dword ptr [rbp - 0x18], eax
0x7fffeafcf177:	jmp		0x7fffeafcf186
0x7fffeafcf17c:	movzx		eax, byte ptr [rbp - 0x11]
0x7fffeafcf180:	add		eax, 1
0x7fffeafcf183:	mov		dword ptr [rbp - 0x18], eax
0x7fffeafcf186:	mov		eax, dword ptr [rbp - 0x18]
0x7fffeafcf189:	mov		byte ptr [rbp - 0x11], al
0x7fffeafcf18c:	xor		eax, eax
0x7fffeafcf18e:	movzx		ecx, byte ptr [rbp - 0x11]
0x7fffeafcf192:	movzx		edx, byte ptr [rbp - 0x12]
0x7fffeafcf196:	cmp		ecx, edx
0x7fffeafcf198:	mov		byte ptr [rbp - 0x19], al
0x7fffeafcf19b:	je		0x7fffeafcf1ae
0x7fffeafcf1a1:	cmp		qword ptr [rbp - 0x10], 0
0x7fffeafcf1a6:	setne		al
0x7fffeafcf1a9:	xor		al, 0xff
0x7fffeafcf1ab:	mov		byte ptr [rbp - 0x19], al
0x7fffeafcf1ae:	mov		al, byte ptr [rbp - 0x19]
0x7fffeafcf1b1:	test		al, 1
0x7fffeafcf1b3:	jne		0x7fffeafcf1be
0x7fffeafcf1b9:	jmp		0x7fffeafcf1ff
0x7fffeafcf1be:	movzx		eax, byte ptr [rbp - 0x11]
0x7fffeafcf1c2:	mov		ecx, eax
0x7fffeafcf1c4:	lea		rdx, [rip + 0x2c1bc1d]
0x7fffeafcf1cb:	mov		rdi, qword ptr [rdx + rcx*8]
0x7fffeafcf1cf:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcf1d3:	movzx		eax, byte ptr [rbp - 0x13]
0x7fffeafcf1d7:	mov		edx, eax
0x7fffeafcf1d9:	add		rcx, rdx
0x7fffeafcf1dc:	mov		rsi, rcx
0x7fffeafcf1df:	call		0x7fffeafc8d00
0x7fffeafcf1e4:	mov		qword ptr [rbp - 0x10], rax
0x7fffeafcf1e8:	movzx		eax, byte ptr [rbp - 0x11]
0x7fffeafcf1ec:	add		eax, 1
0x7fffeafcf1ef:	cdq		
0x7fffeafcf1f0:	mov		ecx, 8
0x7fffeafcf1f5:	idiv		ecx
0x7fffeafcf1f7:	mov		byte ptr [rbp - 0x11], dl
0x7fffeafcf1fa:	jmp		0x7fffeafcf18c
0x7fffeafcf1ff:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcf203:	add		rsp, 0x20
0x7fffeafcf207:	pop		rbp
0x7fffeafcf208:	ret		
0x7fffeafcf209:	nop		dword ptr [rax]
disassembling symbol '.LBB38_2':
textAddr: 0x7fffeafcf127, textSize: 85
0x7fffeafcf127:	call		0x7fffeafd4110
0x7fffeafcf12c:	cdq		
0x7fffeafcf12d:	mov		ecx, 0x128
0x7fffeafcf132:	idiv		ecx
0x7fffeafcf134:	mov		byte ptr [rbp - 0x11], dl
0x7fffeafcf137:	movzx		ecx, byte ptr [rbp - 0x11]
0x7fffeafcf13b:	mov		eax, ecx
0x7fffeafcf13d:	cdq		
0x7fffeafcf13e:	mov		ecx, 8
0x7fffeafcf143:	idiv		ecx
0x7fffeafcf145:	mov		byte ptr [rbp - 0x12], dl
0x7fffeafcf148:	movzx		esi, byte ptr [rbp - 0x11]
0x7fffeafcf14c:	mov		eax, esi
0x7fffeafcf14e:	cdq		
0x7fffeafcf14f:	mov		esi, 0x25
0x7fffeafcf154:	idiv		esi
0x7fffeafcf156:	mov		byte ptr [rbp - 0x13], dl
0x7fffeafcf159:	movzx		esi, byte ptr [rbp - 0x11]
0x7fffeafcf15d:	mov		eax, esi
0x7fffeafcf15f:	cdq		
0x7fffeafcf160:	idiv		ecx
0x7fffeafcf162:	mov		byte ptr [rbp - 0x11], dl
0x7fffeafcf165:	movzx		ecx, byte ptr [rbp - 0x11]
0x7fffeafcf169:	cmp		ecx, 7
0x7fffeafcf16c:	jne		0x7fffeafcf17c
0x7fffeafcf172:	xor		eax, eax
0x7fffeafcf174:	mov		dword ptr [rbp - 0x18], eax
0x7fffeafcf177:	jmp		0x7fffeafcf186
disassembling symbol '.LBB38_4':
textAddr: 0x7fffeafcf17c, textSize: 10
0x7fffeafcf17c:	movzx		eax, byte ptr [rbp - 0x11]
0x7fffeafcf180:	add		eax, 1
0x7fffeafcf183:	mov		dword ptr [rbp - 0x18], eax
disassembling symbol '.LBB38_5':
textAddr: 0x7fffeafcf186, textSize: 6
0x7fffeafcf186:	mov		eax, dword ptr [rbp - 0x18]
0x7fffeafcf189:	mov		byte ptr [rbp - 0x11], al
disassembling symbol '.LBB38_6':
textAddr: 0x7fffeafcf18c, textSize: 34
0x7fffeafcf18c:	xor		eax, eax
0x7fffeafcf18e:	movzx		ecx, byte ptr [rbp - 0x11]
0x7fffeafcf192:	movzx		edx, byte ptr [rbp - 0x12]
0x7fffeafcf196:	cmp		ecx, edx
0x7fffeafcf198:	mov		byte ptr [rbp - 0x19], al
0x7fffeafcf19b:	je		0x7fffeafcf1ae
0x7fffeafcf1a1:	cmp		qword ptr [rbp - 0x10], 0
0x7fffeafcf1a6:	setne		al
0x7fffeafcf1a9:	xor		al, 0xff
0x7fffeafcf1ab:	mov		byte ptr [rbp - 0x19], al
disassembling symbol '.LBB38_8':
textAddr: 0x7fffeafcf1ae, textSize: 16
0x7fffeafcf1ae:	mov		al, byte ptr [rbp - 0x19]
0x7fffeafcf1b1:	test		al, 1
0x7fffeafcf1b3:	jne		0x7fffeafcf1be
0x7fffeafcf1b9:	jmp		0x7fffeafcf1ff
disassembling symbol '.LBB38_9':
textAddr: 0x7fffeafcf1be, textSize: 65
0x7fffeafcf1be:	movzx		eax, byte ptr [rbp - 0x11]
0x7fffeafcf1c2:	mov		ecx, eax
0x7fffeafcf1c4:	lea		rdx, [rip + 0x2c1bc1d]
0x7fffeafcf1cb:	mov		rdi, qword ptr [rdx + rcx*8]
0x7fffeafcf1cf:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcf1d3:	movzx		eax, byte ptr [rbp - 0x13]
0x7fffeafcf1d7:	mov		edx, eax
0x7fffeafcf1d9:	add		rcx, rdx
0x7fffeafcf1dc:	mov		rsi, rcx
0x7fffeafcf1df:	call		0x7fffeafc8d00
0x7fffeafcf1e4:	mov		qword ptr [rbp - 0x10], rax
0x7fffeafcf1e8:	movzx		eax, byte ptr [rbp - 0x11]
0x7fffeafcf1ec:	add		eax, 1
0x7fffeafcf1ef:	cdq		
0x7fffeafcf1f0:	mov		ecx, 8
0x7fffeafcf1f5:	idiv		ecx
0x7fffeafcf1f7:	mov		byte ptr [rbp - 0x11], dl
0x7fffeafcf1fa:	jmp		0x7fffeafcf18c
disassembling symbol '.LBB38_11':
textAddr: 0x7fffeafcf1ff, textSize: 17
0x7fffeafcf1ff:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcf203:	add		rsp, 0x20
0x7fffeafcf207:	pop		rbp
0x7fffeafcf208:	ret		
0x7fffeafcf209:	nop		dword ptr [rax]
disassembling symbol 'free':
textAddr: 0x7fffeafcf210, textSize: 176
0x7fffeafcf210:	push		rbp
0x7fffeafcf211:	mov		rbp, rsp
0x7fffeafcf214:	sub		rsp, 0x10
0x7fffeafcf218:	mov		qword ptr [rbp - 8], rdi
0x7fffeafcf21c:	cmp		qword ptr [rip + 0x2c1bbc4], 0
0x7fffeafcf224:	jne		0x7fffeafcf22f
0x7fffeafcf22a:	jmp		0x7fffeafcf2b4
0x7fffeafcf22f:	mov		byte ptr [rbp - 9], 0
0x7fffeafcf233:	movzx		eax, byte ptr [rbp - 9]
0x7fffeafcf237:	cmp		eax, 8
0x7fffeafcf23a:	jge		0x7fffeafcf2b4
0x7fffeafcf240:	movzx		eax, byte ptr [rbp - 9]
0x7fffeafcf244:	mov		ecx, eax
0x7fffeafcf246:	lea		rdx, [rip + 0x2c1bcc3]
0x7fffeafcf24d:	mov		rcx, qword ptr [rdx + rcx*8]
0x7fffeafcf251:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafcf255:	cmp		rcx, rdx
0x7fffeafcf258:	ja		0x7fffeafcf2a2
0x7fffeafcf25e:	movzx		eax, byte ptr [rbp - 9]
0x7fffeafcf262:	mov		ecx, eax
0x7fffeafcf264:	lea		rdx, [rip + 0x2c1bca5]
0x7fffeafcf26b:	mov		rcx, qword ptr [rdx + rcx*8]
0x7fffeafcf26f:	add		rcx, 0x100000
0x7fffeafcf276:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafcf27a:	cmp		rcx, rdx
0x7fffeafcf27d:	jbe		0x7fffeafcf2a2
0x7fffeafcf283:	movzx		eax, byte ptr [rbp - 9]
0x7fffeafcf287:	mov		ecx, eax
0x7fffeafcf289:	lea		rdx, [rip + 0x2c1bb58]
0x7fffeafcf290:	mov		rdi, qword ptr [rdx + rcx*8]
0x7fffeafcf294:	mov		rsi, qword ptr [rbp - 8]
0x7fffeafcf298:	call		0x7fffeafcae10
0x7fffeafcf29d:	jmp		0x7fffeafcf2b4
0x7fffeafcf2a2:	jmp		0x7fffeafcf2a7
0x7fffeafcf2a7:	mov		al, byte ptr [rbp - 9]
0x7fffeafcf2aa:	add		al, 1
0x7fffeafcf2ac:	mov		byte ptr [rbp - 9], al
0x7fffeafcf2af:	jmp		0x7fffeafcf233
0x7fffeafcf2b4:	add		rsp, 0x10
0x7fffeafcf2b8:	pop		rbp
0x7fffeafcf2b9:	ret		
0x7fffeafcf2ba:	nop		word ptr [rax + rax]
disassembling symbol '.LBB39_2':
textAddr: 0x7fffeafcf22f, textSize: 4
0x7fffeafcf22f:	mov		byte ptr [rbp - 9], 0
disassembling symbol '.LBB39_3':
textAddr: 0x7fffeafcf233, textSize: 111
0x7fffeafcf233:	movzx		eax, byte ptr [rbp - 9]
0x7fffeafcf237:	cmp		eax, 8
0x7fffeafcf23a:	jge		0x7fffeafcf2b4
0x7fffeafcf240:	movzx		eax, byte ptr [rbp - 9]
0x7fffeafcf244:	mov		ecx, eax
0x7fffeafcf246:	lea		rdx, [rip + 0x2c1bcc3]
0x7fffeafcf24d:	mov		rcx, qword ptr [rdx + rcx*8]
0x7fffeafcf251:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafcf255:	cmp		rcx, rdx
0x7fffeafcf258:	ja		0x7fffeafcf2a2
0x7fffeafcf25e:	movzx		eax, byte ptr [rbp - 9]
0x7fffeafcf262:	mov		ecx, eax
0x7fffeafcf264:	lea		rdx, [rip + 0x2c1bca5]
0x7fffeafcf26b:	mov		rcx, qword ptr [rdx + rcx*8]
0x7fffeafcf26f:	add		rcx, 0x100000
0x7fffeafcf276:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafcf27a:	cmp		rcx, rdx
0x7fffeafcf27d:	jbe		0x7fffeafcf2a2
0x7fffeafcf283:	movzx		eax, byte ptr [rbp - 9]
0x7fffeafcf287:	mov		ecx, eax
0x7fffeafcf289:	lea		rdx, [rip + 0x2c1bb58]
0x7fffeafcf290:	mov		rdi, qword ptr [rdx + rcx*8]
0x7fffeafcf294:	mov		rsi, qword ptr [rbp - 8]
0x7fffeafcf298:	call		0x7fffeafcae10
0x7fffeafcf29d:	jmp		0x7fffeafcf2b4
disassembling symbol '.LBB39_7':
textAddr: 0x7fffeafcf2a2, textSize: 5
0x7fffeafcf2a2:	jmp		0x7fffeafcf2a7
disassembling symbol '.LBB39_8':
textAddr: 0x7fffeafcf2a7, textSize: 13
0x7fffeafcf2a7:	mov		al, byte ptr [rbp - 9]
0x7fffeafcf2aa:	add		al, 1
0x7fffeafcf2ac:	mov		byte ptr [rbp - 9], al
0x7fffeafcf2af:	jmp		0x7fffeafcf233
disassembling symbol '.LBB39_9':
textAddr: 0x7fffeafcf2b4, textSize: 12
0x7fffeafcf2b4:	add		rsp, 0x10
0x7fffeafcf2b8:	pop		rbp
0x7fffeafcf2b9:	ret		
0x7fffeafcf2ba:	nop		word ptr [rax + rax]
disassembling symbol 'calloc':
textAddr: 0x7fffeafcf2c0, textSize: 256
0x7fffeafcf2c0:	push		rbp
0x7fffeafcf2c1:	mov		rbp, rsp
0x7fffeafcf2c4:	sub		rsp, 0x30
0x7fffeafcf2c8:	mov		qword ptr [rbp - 8], rdi
0x7fffeafcf2cc:	mov		qword ptr [rbp - 0x10], rsi
0x7fffeafcf2d0:	mov		qword ptr [rbp - 0x18], 0
0x7fffeafcf2d8:	cmp		qword ptr [rip + 0x2c1bb08], 0
0x7fffeafcf2e0:	jne		0x7fffeafcf2eb
0x7fffeafcf2e6:	call		0x7fffeafcf0a0
0x7fffeafcf2eb:	call		0x7fffeafd4110
0x7fffeafcf2f0:	cdq		
0x7fffeafcf2f1:	mov		ecx, 0x128
0x7fffeafcf2f6:	idiv		ecx
0x7fffeafcf2f8:	mov		byte ptr [rbp - 0x19], dl
0x7fffeafcf2fb:	movzx		ecx, byte ptr [rbp - 0x19]
0x7fffeafcf2ff:	mov		eax, ecx
0x7fffeafcf301:	cdq		
0x7fffeafcf302:	mov		ecx, 8
0x7fffeafcf307:	idiv		ecx
0x7fffeafcf309:	mov		byte ptr [rbp - 0x1a], dl
0x7fffeafcf30c:	movzx		esi, byte ptr [rbp - 0x19]
0x7fffeafcf310:	mov		eax, esi
0x7fffeafcf312:	cdq		
0x7fffeafcf313:	idiv		ecx
0x7fffeafcf315:	mov		byte ptr [rbp - 0x19], dl
0x7fffeafcf318:	movzx		ecx, byte ptr [rbp - 0x19]
0x7fffeafcf31c:	cmp		ecx, 7
0x7fffeafcf31f:	jne		0x7fffeafcf32f
0x7fffeafcf325:	xor		eax, eax
0x7fffeafcf327:	mov		dword ptr [rbp - 0x20], eax
0x7fffeafcf32a:	jmp		0x7fffeafcf339
0x7fffeafcf32f:	movzx		eax, byte ptr [rbp - 0x19]
0x7fffeafcf333:	add		eax, 1
0x7fffeafcf336:	mov		dword ptr [rbp - 0x20], eax
0x7fffeafcf339:	mov		eax, dword ptr [rbp - 0x20]
0x7fffeafcf33c:	mov		byte ptr [rbp - 0x19], al
0x7fffeafcf33f:	xor		eax, eax
0x7fffeafcf341:	movzx		ecx, byte ptr [rbp - 0x19]
0x7fffeafcf345:	movzx		edx, byte ptr [rbp - 0x1a]
0x7fffeafcf349:	cmp		ecx, edx
0x7fffeafcf34b:	mov		byte ptr [rbp - 0x21], al
0x7fffeafcf34e:	je		0x7fffeafcf361
0x7fffeafcf354:	cmp		qword ptr [rbp - 0x18], 0
0x7fffeafcf359:	setne		al
0x7fffeafcf35c:	xor		al, 0xff
0x7fffeafcf35e:	mov		byte ptr [rbp - 0x21], al
0x7fffeafcf361:	mov		al, byte ptr [rbp - 0x21]
0x7fffeafcf364:	test		al, 1
0x7fffeafcf366:	jne		0x7fffeafcf371
0x7fffeafcf36c:	jmp		0x7fffeafcf3aa
0x7fffeafcf371:	movzx		eax, byte ptr [rbp - 0x19]
0x7fffeafcf375:	mov		ecx, eax
0x7fffeafcf377:	lea		rdx, [rip + 0x2c1ba6a]
0x7fffeafcf37e:	mov		rdi, qword ptr [rdx + rcx*8]
0x7fffeafcf382:	mov		rsi, qword ptr [rbp - 8]
0x7fffeafcf386:	mov		rdx, qword ptr [rbp - 0x10]
0x7fffeafcf38a:	call		0x7fffeafccda0
0x7fffeafcf38f:	mov		qword ptr [rbp - 0x18], rax
0x7fffeafcf393:	movzx		eax, byte ptr [rbp - 0x19]
0x7fffeafcf397:	add		eax, 1
0x7fffeafcf39a:	cdq		
0x7fffeafcf39b:	mov		ecx, 8
0x7fffeafcf3a0:	idiv		ecx
0x7fffeafcf3a2:	mov		byte ptr [rbp - 0x19], dl
0x7fffeafcf3a5:	jmp		0x7fffeafcf33f
0x7fffeafcf3aa:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcf3ae:	add		rsp, 0x30
0x7fffeafcf3b2:	pop		rbp
0x7fffeafcf3b3:	ret		
0x7fffeafcf3b4:	nop		word ptr cs:[rax + rax]
0x7fffeafcf3be:	nop		
disassembling symbol '.LBB40_2':
textAddr: 0x7fffeafcf2eb, textSize: 68
0x7fffeafcf2eb:	call		0x7fffeafd4110
0x7fffeafcf2f0:	cdq		
0x7fffeafcf2f1:	mov		ecx, 0x128
0x7fffeafcf2f6:	idiv		ecx
0x7fffeafcf2f8:	mov		byte ptr [rbp - 0x19], dl
0x7fffeafcf2fb:	movzx		ecx, byte ptr [rbp - 0x19]
0x7fffeafcf2ff:	mov		eax, ecx
0x7fffeafcf301:	cdq		
0x7fffeafcf302:	mov		ecx, 8
0x7fffeafcf307:	idiv		ecx
0x7fffeafcf309:	mov		byte ptr [rbp - 0x1a], dl
0x7fffeafcf30c:	movzx		esi, byte ptr [rbp - 0x19]
0x7fffeafcf310:	mov		eax, esi
0x7fffeafcf312:	cdq		
0x7fffeafcf313:	idiv		ecx
0x7fffeafcf315:	mov		byte ptr [rbp - 0x19], dl
0x7fffeafcf318:	movzx		ecx, byte ptr [rbp - 0x19]
0x7fffeafcf31c:	cmp		ecx, 7
0x7fffeafcf31f:	jne		0x7fffeafcf32f
0x7fffeafcf325:	xor		eax, eax
0x7fffeafcf327:	mov		dword ptr [rbp - 0x20], eax
0x7fffeafcf32a:	jmp		0x7fffeafcf339
disassembling symbol '.LBB40_4':
textAddr: 0x7fffeafcf32f, textSize: 10
0x7fffeafcf32f:	movzx		eax, byte ptr [rbp - 0x19]
0x7fffeafcf333:	add		eax, 1
0x7fffeafcf336:	mov		dword ptr [rbp - 0x20], eax
disassembling symbol '.LBB40_5':
textAddr: 0x7fffeafcf339, textSize: 6
0x7fffeafcf339:	mov		eax, dword ptr [rbp - 0x20]
0x7fffeafcf33c:	mov		byte ptr [rbp - 0x19], al
disassembling symbol '.LBB40_6':
textAddr: 0x7fffeafcf33f, textSize: 34
0x7fffeafcf33f:	xor		eax, eax
0x7fffeafcf341:	movzx		ecx, byte ptr [rbp - 0x19]
0x7fffeafcf345:	movzx		edx, byte ptr [rbp - 0x1a]
0x7fffeafcf349:	cmp		ecx, edx
0x7fffeafcf34b:	mov		byte ptr [rbp - 0x21], al
0x7fffeafcf34e:	je		0x7fffeafcf361
0x7fffeafcf354:	cmp		qword ptr [rbp - 0x18], 0
0x7fffeafcf359:	setne		al
0x7fffeafcf35c:	xor		al, 0xff
0x7fffeafcf35e:	mov		byte ptr [rbp - 0x21], al
disassembling symbol '.LBB40_8':
textAddr: 0x7fffeafcf361, textSize: 16
0x7fffeafcf361:	mov		al, byte ptr [rbp - 0x21]
0x7fffeafcf364:	test		al, 1
0x7fffeafcf366:	jne		0x7fffeafcf371
0x7fffeafcf36c:	jmp		0x7fffeafcf3aa
disassembling symbol '.LBB40_9':
textAddr: 0x7fffeafcf371, textSize: 57
0x7fffeafcf371:	movzx		eax, byte ptr [rbp - 0x19]
0x7fffeafcf375:	mov		ecx, eax
0x7fffeafcf377:	lea		rdx, [rip + 0x2c1ba6a]
0x7fffeafcf37e:	mov		rdi, qword ptr [rdx + rcx*8]
0x7fffeafcf382:	mov		rsi, qword ptr [rbp - 8]
0x7fffeafcf386:	mov		rdx, qword ptr [rbp - 0x10]
0x7fffeafcf38a:	call		0x7fffeafccda0
0x7fffeafcf38f:	mov		qword ptr [rbp - 0x18], rax
0x7fffeafcf393:	movzx		eax, byte ptr [rbp - 0x19]
0x7fffeafcf397:	add		eax, 1
0x7fffeafcf39a:	cdq		
0x7fffeafcf39b:	mov		ecx, 8
0x7fffeafcf3a0:	idiv		ecx
0x7fffeafcf3a2:	mov		byte ptr [rbp - 0x19], dl
0x7fffeafcf3a5:	jmp		0x7fffeafcf33f
disassembling symbol '.LBB40_11':
textAddr: 0x7fffeafcf3aa, textSize: 22
0x7fffeafcf3aa:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcf3ae:	add		rsp, 0x30
0x7fffeafcf3b2:	pop		rbp
0x7fffeafcf3b3:	ret		
0x7fffeafcf3b4:	nop		word ptr cs:[rax + rax]
0x7fffeafcf3be:	nop		
disassembling symbol 'realloc':
textAddr: 0x7fffeafcf3c0, textSize: 224
0x7fffeafcf3c0:	push		rbp
0x7fffeafcf3c1:	mov		rbp, rsp
0x7fffeafcf3c4:	sub		rsp, 0x20
0x7fffeafcf3c8:	mov		qword ptr [rbp - 0x10], rdi
0x7fffeafcf3cc:	mov		qword ptr [rbp - 0x18], rsi
0x7fffeafcf3d0:	cmp		qword ptr [rip + 0x2c1ba10], 0
0x7fffeafcf3d8:	jne		0x7fffeafcf3e3
0x7fffeafcf3de:	call		0x7fffeafcf0a0
0x7fffeafcf3e3:	cmp		qword ptr [rbp - 0x10], 0
0x7fffeafcf3e8:	jne		0x7fffeafcf400
0x7fffeafcf3ee:	mov		rdi, qword ptr [rbp - 0x18]
0x7fffeafcf3f2:	call		0x7fffeafcf100
0x7fffeafcf3f7:	mov		qword ptr [rbp - 8], rax
0x7fffeafcf3fb:	jmp		0x7fffeafcf495
0x7fffeafcf400:	mov		byte ptr [rbp - 0x19], 0
0x7fffeafcf404:	movzx		eax, byte ptr [rbp - 0x19]
0x7fffeafcf408:	cmp		eax, 8
0x7fffeafcf40b:	jge		0x7fffeafcf48d
0x7fffeafcf411:	movzx		eax, byte ptr [rbp - 0x19]
0x7fffeafcf415:	mov		ecx, eax
0x7fffeafcf417:	lea		rdx, [rip + 0x2c1baf2]
0x7fffeafcf41e:	mov		rcx, qword ptr [rdx + rcx*8]
0x7fffeafcf422:	mov		rdx, qword ptr [rbp - 0x10]
0x7fffeafcf426:	cmp		rcx, rdx
0x7fffeafcf429:	ja		0x7fffeafcf47b
0x7fffeafcf42f:	movzx		eax, byte ptr [rbp - 0x19]
0x7fffeafcf433:	mov		ecx, eax
0x7fffeafcf435:	lea		rdx, [rip + 0x2c1bad4]
0x7fffeafcf43c:	mov		rcx, qword ptr [rdx + rcx*8]
0x7fffeafcf440:	add		rcx, 0x100000
0x7fffeafcf447:	mov		rdx, qword ptr [rbp - 0x10]
0x7fffeafcf44b:	cmp		rcx, rdx
0x7fffeafcf44e:	jbe		0x7fffeafcf47b
0x7fffeafcf454:	movzx		eax, byte ptr [rbp - 0x19]
0x7fffeafcf458:	mov		ecx, eax
0x7fffeafcf45a:	lea		rdx, [rip + 0x2c1b987]
0x7fffeafcf461:	mov		rdi, qword ptr [rdx + rcx*8]
0x7fffeafcf465:	mov		rsi, qword ptr [rbp - 0x10]
0x7fffeafcf469:	mov		rdx, qword ptr [rbp - 0x18]
0x7fffeafcf46d:	call		0x7fffeafcce70
0x7fffeafcf472:	mov		qword ptr [rbp - 8], rax
0x7fffeafcf476:	jmp		0x7fffeafcf495
0x7fffeafcf47b:	jmp		0x7fffeafcf480
0x7fffeafcf480:	mov		al, byte ptr [rbp - 0x19]
0x7fffeafcf483:	add		al, 1
0x7fffeafcf485:	mov		byte ptr [rbp - 0x19], al
0x7fffeafcf488:	jmp		0x7fffeafcf404
0x7fffeafcf48d:	mov		qword ptr [rbp - 8], 0
0x7fffeafcf495:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcf499:	add		rsp, 0x20
0x7fffeafcf49d:	pop		rbp
0x7fffeafcf49e:	ret		
0x7fffeafcf49f:	nop		
disassembling symbol '.LBB41_2':
textAddr: 0x7fffeafcf3e3, textSize: 29
0x7fffeafcf3e3:	cmp		qword ptr [rbp - 0x10], 0
0x7fffeafcf3e8:	jne		0x7fffeafcf400
0x7fffeafcf3ee:	mov		rdi, qword ptr [rbp - 0x18]
0x7fffeafcf3f2:	call		0x7fffeafcf100
0x7fffeafcf3f7:	mov		qword ptr [rbp - 8], rax
0x7fffeafcf3fb:	jmp		0x7fffeafcf495
disassembling symbol '.LBB41_4':
textAddr: 0x7fffeafcf400, textSize: 4
0x7fffeafcf400:	mov		byte ptr [rbp - 0x19], 0
disassembling symbol '.LBB41_5':
textAddr: 0x7fffeafcf404, textSize: 119
0x7fffeafcf404:	movzx		eax, byte ptr [rbp - 0x19]
0x7fffeafcf408:	cmp		eax, 8
0x7fffeafcf40b:	jge		0x7fffeafcf48d
0x7fffeafcf411:	movzx		eax, byte ptr [rbp - 0x19]
0x7fffeafcf415:	mov		ecx, eax
0x7fffeafcf417:	lea		rdx, [rip + 0x2c1baf2]
0x7fffeafcf41e:	mov		rcx, qword ptr [rdx + rcx*8]
0x7fffeafcf422:	mov		rdx, qword ptr [rbp - 0x10]
0x7fffeafcf426:	cmp		rcx, rdx
0x7fffeafcf429:	ja		0x7fffeafcf47b
0x7fffeafcf42f:	movzx		eax, byte ptr [rbp - 0x19]
0x7fffeafcf433:	mov		ecx, eax
0x7fffeafcf435:	lea		rdx, [rip + 0x2c1bad4]
0x7fffeafcf43c:	mov		rcx, qword ptr [rdx + rcx*8]
0x7fffeafcf440:	add		rcx, 0x100000
0x7fffeafcf447:	mov		rdx, qword ptr [rbp - 0x10]
0x7fffeafcf44b:	cmp		rcx, rdx
0x7fffeafcf44e:	jbe		0x7fffeafcf47b
0x7fffeafcf454:	movzx		eax, byte ptr [rbp - 0x19]
0x7fffeafcf458:	mov		ecx, eax
0x7fffeafcf45a:	lea		rdx, [rip + 0x2c1b987]
0x7fffeafcf461:	mov		rdi, qword ptr [rdx + rcx*8]
0x7fffeafcf465:	mov		rsi, qword ptr [rbp - 0x10]
0x7fffeafcf469:	mov		rdx, qword ptr [rbp - 0x18]
0x7fffeafcf46d:	call		0x7fffeafcce70
0x7fffeafcf472:	mov		qword ptr [rbp - 8], rax
0x7fffeafcf476:	jmp		0x7fffeafcf495
disassembling symbol '.LBB41_9':
textAddr: 0x7fffeafcf47b, textSize: 5
0x7fffeafcf47b:	jmp		0x7fffeafcf480
disassembling symbol '.LBB41_10':
textAddr: 0x7fffeafcf480, textSize: 13
0x7fffeafcf480:	mov		al, byte ptr [rbp - 0x19]
0x7fffeafcf483:	add		al, 1
0x7fffeafcf485:	mov		byte ptr [rbp - 0x19], al
0x7fffeafcf488:	jmp		0x7fffeafcf404
disassembling symbol '.LBB41_11':
textAddr: 0x7fffeafcf48d, textSize: 8
0x7fffeafcf48d:	mov		qword ptr [rbp - 8], 0
disassembling symbol '.LBB41_12':
textAddr: 0x7fffeafcf495, textSize: 11
0x7fffeafcf495:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcf499:	add		rsp, 0x20
0x7fffeafcf49d:	pop		rbp
0x7fffeafcf49e:	ret		
0x7fffeafcf49f:	nop		
disassembling symbol '__memalign':
textAddr: 0x7fffeafcf4a0, textSize: 288
0x7fffeafcf4a0:	push		rbp
0x7fffeafcf4a1:	mov		rbp, rsp
0x7fffeafcf4a4:	sub		rsp, 0x30
0x7fffeafcf4a8:	mov		qword ptr [rbp - 8], rdi
0x7fffeafcf4ac:	mov		qword ptr [rbp - 0x10], rsi
0x7fffeafcf4b0:	mov		qword ptr [rbp - 0x18], 0
0x7fffeafcf4b8:	cmp		qword ptr [rip + 0x2c1b928], 0
0x7fffeafcf4c0:	jne		0x7fffeafcf4cb
0x7fffeafcf4c6:	call		0x7fffeafcf0a0
0x7fffeafcf4cb:	call		0x7fffeafd4110
0x7fffeafcf4d0:	cdq		
0x7fffeafcf4d1:	mov		ecx, 0x128
0x7fffeafcf4d6:	idiv		ecx
0x7fffeafcf4d8:	mov		byte ptr [rbp - 0x19], dl
0x7fffeafcf4db:	movzx		ecx, byte ptr [rbp - 0x19]
0x7fffeafcf4df:	mov		eax, ecx
0x7fffeafcf4e1:	cdq		
0x7fffeafcf4e2:	mov		ecx, 8
0x7fffeafcf4e7:	idiv		ecx
0x7fffeafcf4e9:	mov		byte ptr [rbp - 0x1a], dl
0x7fffeafcf4ec:	movzx		esi, byte ptr [rbp - 0x19]
0x7fffeafcf4f0:	mov		eax, esi
0x7fffeafcf4f2:	cdq		
0x7fffeafcf4f3:	mov		esi, 0x25
0x7fffeafcf4f8:	idiv		esi
0x7fffeafcf4fa:	mov		byte ptr [rbp - 0x1b], dl
0x7fffeafcf4fd:	movzx		esi, byte ptr [rbp - 0x19]
0x7fffeafcf501:	mov		eax, esi
0x7fffeafcf503:	cdq		
0x7fffeafcf504:	idiv		ecx
0x7fffeafcf506:	mov		byte ptr [rbp - 0x19], dl
0x7fffeafcf509:	movzx		ecx, byte ptr [rbp - 0x19]
0x7fffeafcf50d:	cmp		ecx, 7
0x7fffeafcf510:	jne		0x7fffeafcf520
0x7fffeafcf516:	xor		eax, eax
0x7fffeafcf518:	mov		dword ptr [rbp - 0x20], eax
0x7fffeafcf51b:	jmp		0x7fffeafcf52a
0x7fffeafcf520:	movzx		eax, byte ptr [rbp - 0x19]
0x7fffeafcf524:	add		eax, 1
0x7fffeafcf527:	mov		dword ptr [rbp - 0x20], eax
0x7fffeafcf52a:	mov		eax, dword ptr [rbp - 0x20]
0x7fffeafcf52d:	mov		byte ptr [rbp - 0x19], al
0x7fffeafcf530:	xor		eax, eax
0x7fffeafcf532:	movzx		ecx, byte ptr [rbp - 0x19]
0x7fffeafcf536:	movzx		edx, byte ptr [rbp - 0x1a]
0x7fffeafcf53a:	cmp		ecx, edx
0x7fffeafcf53c:	mov		byte ptr [rbp - 0x21], al
0x7fffeafcf53f:	je		0x7fffeafcf552
0x7fffeafcf545:	cmp		qword ptr [rbp - 0x18], 0
0x7fffeafcf54a:	setne		al
0x7fffeafcf54d:	xor		al, 0xff
0x7fffeafcf54f:	mov		byte ptr [rbp - 0x21], al
0x7fffeafcf552:	mov		al, byte ptr [rbp - 0x21]
0x7fffeafcf555:	test		al, 1
0x7fffeafcf557:	jne		0x7fffeafcf562
0x7fffeafcf55d:	jmp		0x7fffeafcf5a7
0x7fffeafcf562:	movzx		eax, byte ptr [rbp - 0x19]
0x7fffeafcf566:	mov		ecx, eax
0x7fffeafcf568:	lea		rdx, [rip + 0x2c1b879]
0x7fffeafcf56f:	mov		rdi, qword ptr [rdx + rcx*8]
0x7fffeafcf573:	mov		rsi, qword ptr [rbp - 8]
0x7fffeafcf577:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcf57b:	movzx		eax, byte ptr [rbp - 0x1b]
0x7fffeafcf57f:	mov		edx, eax
0x7fffeafcf581:	add		rcx, rdx
0x7fffeafcf584:	mov		rdx, rcx
0x7fffeafcf587:	call		0x7fffeafcdcd0
0x7fffeafcf58c:	mov		qword ptr [rbp - 0x18], rax
0x7fffeafcf590:	movzx		eax, byte ptr [rbp - 0x19]
0x7fffeafcf594:	add		eax, 1
0x7fffeafcf597:	cdq		
0x7fffeafcf598:	mov		ecx, 8
0x7fffeafcf59d:	idiv		ecx
0x7fffeafcf59f:	mov		byte ptr [rbp - 0x19], dl
0x7fffeafcf5a2:	jmp		0x7fffeafcf530
0x7fffeafcf5a7:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcf5ab:	add		rsp, 0x30
0x7fffeafcf5af:	pop		rbp
0x7fffeafcf5b0:	ret		
0x7fffeafcf5b1:	nop		word ptr cs:[rax + rax]
0x7fffeafcf5bb:	nop		dword ptr [rax + rax]
disassembling symbol '.LBB42_2':
textAddr: 0x7fffeafcf4cb, textSize: 85
0x7fffeafcf4cb:	call		0x7fffeafd4110
0x7fffeafcf4d0:	cdq		
0x7fffeafcf4d1:	mov		ecx, 0x128
0x7fffeafcf4d6:	idiv		ecx
0x7fffeafcf4d8:	mov		byte ptr [rbp - 0x19], dl
0x7fffeafcf4db:	movzx		ecx, byte ptr [rbp - 0x19]
0x7fffeafcf4df:	mov		eax, ecx
0x7fffeafcf4e1:	cdq		
0x7fffeafcf4e2:	mov		ecx, 8
0x7fffeafcf4e7:	idiv		ecx
0x7fffeafcf4e9:	mov		byte ptr [rbp - 0x1a], dl
0x7fffeafcf4ec:	movzx		esi, byte ptr [rbp - 0x19]
0x7fffeafcf4f0:	mov		eax, esi
0x7fffeafcf4f2:	cdq		
0x7fffeafcf4f3:	mov		esi, 0x25
0x7fffeafcf4f8:	idiv		esi
0x7fffeafcf4fa:	mov		byte ptr [rbp - 0x1b], dl
0x7fffeafcf4fd:	movzx		esi, byte ptr [rbp - 0x19]
0x7fffeafcf501:	mov		eax, esi
0x7fffeafcf503:	cdq		
0x7fffeafcf504:	idiv		ecx
0x7fffeafcf506:	mov		byte ptr [rbp - 0x19], dl
0x7fffeafcf509:	movzx		ecx, byte ptr [rbp - 0x19]
0x7fffeafcf50d:	cmp		ecx, 7
0x7fffeafcf510:	jne		0x7fffeafcf520
0x7fffeafcf516:	xor		eax, eax
0x7fffeafcf518:	mov		dword ptr [rbp - 0x20], eax
0x7fffeafcf51b:	jmp		0x7fffeafcf52a
disassembling symbol '.LBB42_4':
textAddr: 0x7fffeafcf520, textSize: 10
0x7fffeafcf520:	movzx		eax, byte ptr [rbp - 0x19]
0x7fffeafcf524:	add		eax, 1
0x7fffeafcf527:	mov		dword ptr [rbp - 0x20], eax
disassembling symbol '.LBB42_5':
textAddr: 0x7fffeafcf52a, textSize: 6
0x7fffeafcf52a:	mov		eax, dword ptr [rbp - 0x20]
0x7fffeafcf52d:	mov		byte ptr [rbp - 0x19], al
disassembling symbol '.LBB42_6':
textAddr: 0x7fffeafcf530, textSize: 34
0x7fffeafcf530:	xor		eax, eax
0x7fffeafcf532:	movzx		ecx, byte ptr [rbp - 0x19]
0x7fffeafcf536:	movzx		edx, byte ptr [rbp - 0x1a]
0x7fffeafcf53a:	cmp		ecx, edx
0x7fffeafcf53c:	mov		byte ptr [rbp - 0x21], al
0x7fffeafcf53f:	je		0x7fffeafcf552
0x7fffeafcf545:	cmp		qword ptr [rbp - 0x18], 0
0x7fffeafcf54a:	setne		al
0x7fffeafcf54d:	xor		al, 0xff
0x7fffeafcf54f:	mov		byte ptr [rbp - 0x21], al
disassembling symbol '.LBB42_8':
textAddr: 0x7fffeafcf552, textSize: 16
0x7fffeafcf552:	mov		al, byte ptr [rbp - 0x21]
0x7fffeafcf555:	test		al, 1
0x7fffeafcf557:	jne		0x7fffeafcf562
0x7fffeafcf55d:	jmp		0x7fffeafcf5a7
disassembling symbol '.LBB42_9':
textAddr: 0x7fffeafcf562, textSize: 69
0x7fffeafcf562:	movzx		eax, byte ptr [rbp - 0x19]
0x7fffeafcf566:	mov		ecx, eax
0x7fffeafcf568:	lea		rdx, [rip + 0x2c1b879]
0x7fffeafcf56f:	mov		rdi, qword ptr [rdx + rcx*8]
0x7fffeafcf573:	mov		rsi, qword ptr [rbp - 8]
0x7fffeafcf577:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcf57b:	movzx		eax, byte ptr [rbp - 0x1b]
0x7fffeafcf57f:	mov		edx, eax
0x7fffeafcf581:	add		rcx, rdx
0x7fffeafcf584:	mov		rdx, rcx
0x7fffeafcf587:	call		0x7fffeafcdcd0
0x7fffeafcf58c:	mov		qword ptr [rbp - 0x18], rax
0x7fffeafcf590:	movzx		eax, byte ptr [rbp - 0x19]
0x7fffeafcf594:	add		eax, 1
0x7fffeafcf597:	cdq		
0x7fffeafcf598:	mov		ecx, 8
0x7fffeafcf59d:	idiv		ecx
0x7fffeafcf59f:	mov		byte ptr [rbp - 0x19], dl
0x7fffeafcf5a2:	jmp		0x7fffeafcf530
disassembling symbol '.LBB42_11':
textAddr: 0x7fffeafcf5a7, textSize: 25
0x7fffeafcf5a7:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcf5ab:	add		rsp, 0x30
0x7fffeafcf5af:	pop		rbp
0x7fffeafcf5b0:	ret		
0x7fffeafcf5b1:	nop		word ptr cs:[rax + rax]
0x7fffeafcf5bb:	nop		dword ptr [rax + rax]
disassembling symbol 'malloc_usable_size':
textAddr: 0x7fffeafcf5c0, textSize: 48
0x7fffeafcf5c0:	push		rbp
0x7fffeafcf5c1:	mov		rbp, rsp
0x7fffeafcf5c4:	sub		rsp, 0x10
0x7fffeafcf5c8:	mov		qword ptr [rbp - 8], rdi
0x7fffeafcf5cc:	cmp		qword ptr [rip + 0x2c1b814], 0
0x7fffeafcf5d4:	jne		0x7fffeafcf5df
0x7fffeafcf5da:	call		0x7fffeafcf0a0
0x7fffeafcf5df:	mov		rdi, qword ptr [rbp - 8]
0x7fffeafcf5e3:	call		0x7fffeafceec0
0x7fffeafcf5e8:	add		rsp, 0x10
0x7fffeafcf5ec:	pop		rbp
0x7fffeafcf5ed:	ret		
0x7fffeafcf5ee:	nop		
disassembling symbol '.LBB43_2':
textAddr: 0x7fffeafcf5df, textSize: 17
0x7fffeafcf5df:	mov		rdi, qword ptr [rbp - 8]
0x7fffeafcf5e3:	call		0x7fffeafceec0
0x7fffeafcf5e8:	add		rsp, 0x10
0x7fffeafcf5ec:	pop		rbp
0x7fffeafcf5ed:	ret		
0x7fffeafcf5ee:	nop		
disassembling symbol 'posix_memalign':
textAddr: 0x7fffeafcf5f0, textSize: 160
0x7fffeafcf5f0:	push		rbp
0x7fffeafcf5f1:	mov		rbp, rsp
0x7fffeafcf5f4:	sub		rsp, 0x20
0x7fffeafcf5f8:	mov		qword ptr [rbp - 0x10], rdi
0x7fffeafcf5fc:	mov		qword ptr [rbp - 0x18], rsi
0x7fffeafcf600:	mov		qword ptr [rbp - 0x20], rdx
0x7fffeafcf604:	cmp		qword ptr [rbp - 0x18], 8
0x7fffeafcf609:	jae		0x7fffeafcf61b
0x7fffeafcf60f:	mov		dword ptr [rbp - 4], 0x16
0x7fffeafcf616:	jmp		0x7fffeafcf67a
0x7fffeafcf61b:	cmp		qword ptr [rbp - 0x10], 0
0x7fffeafcf620:	jne		0x7fffeafcf632
0x7fffeafcf626:	mov		dword ptr [rbp - 4], 1
0x7fffeafcf62d:	jmp		0x7fffeafcf67a
0x7fffeafcf632:	cmp		qword ptr [rip + 0x2c1b7ae], 0
0x7fffeafcf63a:	jne		0x7fffeafcf645
0x7fffeafcf640:	call		0x7fffeafcf0a0
0x7fffeafcf645:	mov		rdi, qword ptr [rbp - 0x18]
0x7fffeafcf649:	mov		rsi, qword ptr [rbp - 0x20]
0x7fffeafcf64d:	call		0x7fffeafcf4a0
0x7fffeafcf652:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcf656:	mov		qword ptr [rcx], rax
0x7fffeafcf659:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcf65d:	cmp		qword ptr [rax], 0
0x7fffeafcf661:	jne		0x7fffeafcf673
0x7fffeafcf667:	mov		dword ptr [rbp - 4], 1
0x7fffeafcf66e:	jmp		0x7fffeafcf67a
0x7fffeafcf673:	mov		dword ptr [rbp - 4], 0
0x7fffeafcf67a:	mov		eax, dword ptr [rbp - 4]
0x7fffeafcf67d:	add		rsp, 0x20
0x7fffeafcf681:	pop		rbp
0x7fffeafcf682:	ret		
0x7fffeafcf683:	nop		word ptr cs:[rax + rax]
0x7fffeafcf68d:	nop		dword ptr [rax]
disassembling symbol '.LBB44_2':
textAddr: 0x7fffeafcf61b, textSize: 23
0x7fffeafcf61b:	cmp		qword ptr [rbp - 0x10], 0
0x7fffeafcf620:	jne		0x7fffeafcf632
0x7fffeafcf626:	mov		dword ptr [rbp - 4], 1
0x7fffeafcf62d:	jmp		0x7fffeafcf67a
disassembling symbol '.LBB44_4':
textAddr: 0x7fffeafcf632, textSize: 19
0x7fffeafcf632:	cmp		qword ptr [rip + 0x2c1b7ae], 0
0x7fffeafcf63a:	jne		0x7fffeafcf645
0x7fffeafcf640:	call		0x7fffeafcf0a0
disassembling symbol '.LBB44_6':
textAddr: 0x7fffeafcf645, textSize: 46
0x7fffeafcf645:	mov		rdi, qword ptr [rbp - 0x18]
0x7fffeafcf649:	mov		rsi, qword ptr [rbp - 0x20]
0x7fffeafcf64d:	call		0x7fffeafcf4a0
0x7fffeafcf652:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcf656:	mov		qword ptr [rcx], rax
0x7fffeafcf659:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcf65d:	cmp		qword ptr [rax], 0
0x7fffeafcf661:	jne		0x7fffeafcf673
0x7fffeafcf667:	mov		dword ptr [rbp - 4], 1
0x7fffeafcf66e:	jmp		0x7fffeafcf67a
disassembling symbol '.LBB44_8':
textAddr: 0x7fffeafcf673, textSize: 7
0x7fffeafcf673:	mov		dword ptr [rbp - 4], 0
disassembling symbol '.LBB44_9':
textAddr: 0x7fffeafcf67a, textSize: 22
0x7fffeafcf67a:	mov		eax, dword ptr [rbp - 4]
0x7fffeafcf67d:	add		rsp, 0x20
0x7fffeafcf681:	pop		rbp
0x7fffeafcf682:	ret		
0x7fffeafcf683:	nop		word ptr cs:[rax + rax]
0x7fffeafcf68d:	nop		dword ptr [rax]
disassembling symbol 'init_bins':
textAddr: 0x7fffeafcf690, textSize: 96
0x7fffeafcf690:	push		rbp
0x7fffeafcf691:	mov		rbp, rsp
0x7fffeafcf694:	mov		qword ptr [rbp - 8], rdi
0x7fffeafcf698:	mov		dword ptr [rbp - 0xc], 0
0x7fffeafcf69f:	cmp		dword ptr [rbp - 0xc], 0x20
0x7fffeafcf6a3:	jae		0x7fffeafcf6ea
0x7fffeafcf6a9:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcf6ad:	add		rax, 0x48
0x7fffeafcf6b3:	mov		ecx, dword ptr [rbp - 0xc]
0x7fffeafcf6b6:	shl		ecx, 1
0x7fffeafcf6b9:	mov		ecx, ecx
0x7fffeafcf6bb:	mov		edx, ecx
0x7fffeafcf6bd:	shl		rdx, 3
0x7fffeafcf6c1:	add		rax, rdx
0x7fffeafcf6c4:	mov		qword ptr [rbp - 0x18], rax
0x7fffeafcf6c8:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcf6cc:	mov		rdx, qword ptr [rbp - 0x18]
0x7fffeafcf6d0:	mov		qword ptr [rdx + 0x18], rax
0x7fffeafcf6d4:	mov		rdx, qword ptr [rbp - 0x18]
0x7fffeafcf6d8:	mov		qword ptr [rdx + 0x10], rax
0x7fffeafcf6dc:	mov		eax, dword ptr [rbp - 0xc]
0x7fffeafcf6df:	add		eax, 1
0x7fffeafcf6e2:	mov		dword ptr [rbp - 0xc], eax
0x7fffeafcf6e5:	jmp		0x7fffeafcf69f
0x7fffeafcf6ea:	pop		rbp
0x7fffeafcf6eb:	ret		
0x7fffeafcf6ec:	nop		dword ptr [rax]
disassembling symbol '.LBB45_1':
textAddr: 0x7fffeafcf69f, textSize: 75
0x7fffeafcf69f:	cmp		dword ptr [rbp - 0xc], 0x20
0x7fffeafcf6a3:	jae		0x7fffeafcf6ea
0x7fffeafcf6a9:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcf6ad:	add		rax, 0x48
0x7fffeafcf6b3:	mov		ecx, dword ptr [rbp - 0xc]
0x7fffeafcf6b6:	shl		ecx, 1
0x7fffeafcf6b9:	mov		ecx, ecx
0x7fffeafcf6bb:	mov		edx, ecx
0x7fffeafcf6bd:	shl		rdx, 3
0x7fffeafcf6c1:	add		rax, rdx
0x7fffeafcf6c4:	mov		qword ptr [rbp - 0x18], rax
0x7fffeafcf6c8:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcf6cc:	mov		rdx, qword ptr [rbp - 0x18]
0x7fffeafcf6d0:	mov		qword ptr [rdx + 0x18], rax
0x7fffeafcf6d4:	mov		rdx, qword ptr [rbp - 0x18]
0x7fffeafcf6d8:	mov		qword ptr [rdx + 0x10], rax
0x7fffeafcf6dc:	mov		eax, dword ptr [rbp - 0xc]
0x7fffeafcf6df:	add		eax, 1
0x7fffeafcf6e2:	mov		dword ptr [rbp - 0xc], eax
0x7fffeafcf6e5:	jmp		0x7fffeafcf69f
disassembling symbol '.LBB45_4':
textAddr: 0x7fffeafcf6ea, textSize: 6
0x7fffeafcf6ea:	pop		rbp
0x7fffeafcf6eb:	ret		
0x7fffeafcf6ec:	nop		dword ptr [rax]
disassembling symbol 'init_top':
textAddr: 0x7fffeafcf6f0, textSize: 208
0x7fffeafcf6f0:	push		rbp
0x7fffeafcf6f1:	mov		rbp, rsp
0x7fffeafcf6f4:	mov		qword ptr [rbp - 8], rdi
0x7fffeafcf6f8:	mov		qword ptr [rbp - 0x10], rsi
0x7fffeafcf6fc:	mov		qword ptr [rbp - 0x18], rdx
0x7fffeafcf700:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcf704:	add		rax, 0x10
0x7fffeafcf70a:	and		rax, 0xf
0x7fffeafcf710:	cmp		rax, 0
0x7fffeafcf714:	jne		0x7fffeafcf727
0x7fffeafcf71a:	xor		eax, eax
0x7fffeafcf71c:	mov		ecx, eax
0x7fffeafcf71e:	mov		qword ptr [rbp - 0x28], rcx
0x7fffeafcf722:	jmp		0x7fffeafcf74a
0x7fffeafcf727:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcf72b:	add		rax, 0x10
0x7fffeafcf731:	and		rax, 0xf
0x7fffeafcf737:	mov		ecx, 0x10
0x7fffeafcf73c:	sub		rcx, rax
0x7fffeafcf73f:	and		rcx, 0xf
0x7fffeafcf746:	mov		qword ptr [rbp - 0x28], rcx
0x7fffeafcf74a:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcf74e:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafcf752:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcf756:	add		rax, qword ptr [rbp - 0x20]
0x7fffeafcf75a:	mov		qword ptr [rbp - 0x10], rax
0x7fffeafcf75e:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcf762:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafcf766:	sub		rcx, rax
0x7fffeafcf769:	mov		qword ptr [rbp - 0x18], rcx
0x7fffeafcf76d:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcf771:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcf775:	mov		qword ptr [rcx + 0x28], rax
0x7fffeafcf779:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcf77d:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcf781:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafcf785:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcf789:	or		rax, 1
0x7fffeafcf78f:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcf793:	mov		qword ptr [rcx + 8], rax
0x7fffeafcf797:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcf79b:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafcf79f:	mov		qword ptr [rax + rcx + 8], 0x50
0x7fffeafcf7a8:	mov		rax, qword ptr [rip + 0x2c1b699]
0x7fffeafcf7af:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcf7b3:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafcf7b7:	pop		rbp
0x7fffeafcf7b8:	ret		
0x7fffeafcf7b9:	nop		dword ptr [rax]
disassembling symbol '.LBB46_2':
textAddr: 0x7fffeafcf727, textSize: 35
0x7fffeafcf727:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcf72b:	add		rax, 0x10
0x7fffeafcf731:	and		rax, 0xf
0x7fffeafcf737:	mov		ecx, 0x10
0x7fffeafcf73c:	sub		rcx, rax
0x7fffeafcf73f:	and		rcx, 0xf
0x7fffeafcf746:	mov		qword ptr [rbp - 0x28], rcx
disassembling symbol '.LBB46_3':
textAddr: 0x7fffeafcf74a, textSize: 118
0x7fffeafcf74a:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcf74e:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafcf752:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcf756:	add		rax, qword ptr [rbp - 0x20]
0x7fffeafcf75a:	mov		qword ptr [rbp - 0x10], rax
0x7fffeafcf75e:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcf762:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafcf766:	sub		rcx, rax
0x7fffeafcf769:	mov		qword ptr [rbp - 0x18], rcx
0x7fffeafcf76d:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcf771:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcf775:	mov		qword ptr [rcx + 0x28], rax
0x7fffeafcf779:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcf77d:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcf781:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafcf785:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcf789:	or		rax, 1
0x7fffeafcf78f:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcf793:	mov		qword ptr [rcx + 8], rax
0x7fffeafcf797:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcf79b:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafcf79f:	mov		qword ptr [rax + rcx + 8], 0x50
0x7fffeafcf7a8:	mov		rax, qword ptr [rip + 0x2c1b699]
0x7fffeafcf7af:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcf7b3:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafcf7b7:	pop		rbp
0x7fffeafcf7b8:	ret		
0x7fffeafcf7b9:	nop		dword ptr [rax]
disassembling symbol 'mmap_alloc':
textAddr: 0x7fffeafcf7c0, textSize: 528
0x7fffeafcf7c0:	push		rbp
0x7fffeafcf7c1:	mov		rbp, rsp
0x7fffeafcf7c4:	mov		qword ptr [rbp - 0x10], rdi
0x7fffeafcf7c8:	mov		qword ptr [rbp - 0x18], rsi
0x7fffeafcf7cc:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcf7d0:	add		rax, 0x30
0x7fffeafcf7d6:	add		rax, 0xf
0x7fffeafcf7dc:	mov		rcx, qword ptr [rip + 0x2c1b64d]
0x7fffeafcf7e3:	sub		rcx, 1
0x7fffeafcf7ea:	add		rax, rcx
0x7fffeafcf7ed:	mov		rcx, qword ptr [rip + 0x2c1b63c]
0x7fffeafcf7f4:	sub		rcx, 1
0x7fffeafcf7fb:	xor		rcx, 0xffffffffffffffff
0x7fffeafcf802:	and		rax, rcx
0x7fffeafcf805:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafcf809:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcf80d:	cmp		qword ptr [rax + 0x368], 0
0x7fffeafcf815:	je		0x7fffeafcf86a
0x7fffeafcf81b:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcf81f:	mov		rax, qword ptr [rax + 0x358]
0x7fffeafcf826:	add		rax, qword ptr [rbp - 0x20]
0x7fffeafcf82a:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafcf82e:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcf832:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcf836:	cmp		rax, qword ptr [rcx + 0x358]
0x7fffeafcf83d:	jbe		0x7fffeafcf858
0x7fffeafcf843:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcf847:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcf84b:	cmp		rax, qword ptr [rcx + 0x368]
0x7fffeafcf852:	jbe		0x7fffeafcf865
0x7fffeafcf858:	mov		qword ptr [rbp - 8], 0
0x7fffeafcf860:	jmp		0x7fffeafcf9c0
0x7fffeafcf865:	jmp		0x7fffeafcf86a
0x7fffeafcf86a:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcf86e:	cmp		rax, qword ptr [rbp - 0x18]
0x7fffeafcf872:	jbe		0x7fffeafcf9b8
0x7fffeafcf878:	mov		rax, -1
0x7fffeafcf87f:	mov		qword ptr [rbp - 0x30], rax
0x7fffeafcf883:	cmp		qword ptr [rbp - 0x30], rax
0x7fffeafcf887:	je		0x7fffeafcf9b3
0x7fffeafcf88d:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcf891:	add		rax, 0x10
0x7fffeafcf897:	and		rax, 0xf
0x7fffeafcf89d:	cmp		rax, 0
0x7fffeafcf8a1:	jne		0x7fffeafcf8b4
0x7fffeafcf8a7:	xor		eax, eax
0x7fffeafcf8a9:	mov		ecx, eax
0x7fffeafcf8ab:	mov		qword ptr [rbp - 0x50], rcx
0x7fffeafcf8af:	jmp		0x7fffeafcf8d7
0x7fffeafcf8b4:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcf8b8:	add		rax, 0x10
0x7fffeafcf8be:	and		rax, 0xf
0x7fffeafcf8c4:	mov		ecx, 0x10
0x7fffeafcf8c9:	sub		rcx, rax
0x7fffeafcf8cc:	and		rcx, 0xf
0x7fffeafcf8d3:	mov		qword ptr [rbp - 0x50], rcx
0x7fffeafcf8d7:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafcf8db:	mov		qword ptr [rbp - 0x38], rax
0x7fffeafcf8df:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcf8e3:	sub		rax, qword ptr [rbp - 0x38]
0x7fffeafcf8e7:	sub		rax, 0x20
0x7fffeafcf8ed:	mov		qword ptr [rbp - 0x40], rax
0x7fffeafcf8f1:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcf8f5:	add		rax, qword ptr [rbp - 0x38]
0x7fffeafcf8f9:	mov		qword ptr [rbp - 0x48], rax
0x7fffeafcf8fd:	mov		rax, qword ptr [rbp - 0x38]
0x7fffeafcf901:	mov		rcx, qword ptr [rbp - 0x48]
0x7fffeafcf905:	mov		qword ptr [rcx], rax
0x7fffeafcf908:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafcf90c:	mov		rcx, qword ptr [rbp - 0x48]
0x7fffeafcf910:	mov		qword ptr [rcx + 8], rax
0x7fffeafcf914:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafcf918:	mov		rcx, qword ptr [rbp - 0x40]
0x7fffeafcf91c:	mov		qword ptr [rax + rcx + 8], 0xb
0x7fffeafcf925:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafcf929:	mov		rcx, qword ptr [rbp - 0x40]
0x7fffeafcf92d:	mov		qword ptr [rax + rcx + 0x10], 0
0x7fffeafcf936:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcf93a:	cmp		qword ptr [rax + 0x18], 0
0x7fffeafcf93f:	je		0x7fffeafcf957
0x7fffeafcf945:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcf949:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcf94d:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcf951:	jae		0x7fffeafcf963
0x7fffeafcf957:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcf95b:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcf95f:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafcf963:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcf967:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcf96b:	add		rax, qword ptr [rcx + 0x358]
0x7fffeafcf972:	mov		qword ptr [rcx + 0x358], rax
0x7fffeafcf979:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcf97d:	cmp		rax, qword ptr [rcx + 0x360]
0x7fffeafcf984:	jbe		0x7fffeafcf9a0
0x7fffeafcf98a:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcf98e:	mov		rax, qword ptr [rax + 0x358]
0x7fffeafcf995:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcf999:	mov		qword ptr [rcx + 0x360], rax
0x7fffeafcf9a0:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafcf9a4:	add		rax, 0x10
0x7fffeafcf9aa:	mov		qword ptr [rbp - 8], rax
0x7fffeafcf9ae:	jmp		0x7fffeafcf9c0
0x7fffeafcf9b3:	jmp		0x7fffeafcf9b8
0x7fffeafcf9b8:	mov		qword ptr [rbp - 8], 0
0x7fffeafcf9c0:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcf9c4:	pop		rbp
0x7fffeafcf9c5:	ret		
0x7fffeafcf9c6:	nop		word ptr cs:[rax + rax]
disassembling symbol '.LBB47_3':
textAddr: 0x7fffeafcf858, textSize: 13
0x7fffeafcf858:	mov		qword ptr [rbp - 8], 0
0x7fffeafcf860:	jmp		0x7fffeafcf9c0
disassembling symbol '.LBB47_4':
textAddr: 0x7fffeafcf865, textSize: 5
0x7fffeafcf865:	jmp		0x7fffeafcf86a
disassembling symbol '.LBB47_5':
textAddr: 0x7fffeafcf86a, textSize: 74
0x7fffeafcf86a:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcf86e:	cmp		rax, qword ptr [rbp - 0x18]
0x7fffeafcf872:	jbe		0x7fffeafcf9b8
0x7fffeafcf878:	mov		rax, -1
0x7fffeafcf87f:	mov		qword ptr [rbp - 0x30], rax
0x7fffeafcf883:	cmp		qword ptr [rbp - 0x30], rax
0x7fffeafcf887:	je		0x7fffeafcf9b3
0x7fffeafcf88d:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcf891:	add		rax, 0x10
0x7fffeafcf897:	and		rax, 0xf
0x7fffeafcf89d:	cmp		rax, 0
0x7fffeafcf8a1:	jne		0x7fffeafcf8b4
0x7fffeafcf8a7:	xor		eax, eax
0x7fffeafcf8a9:	mov		ecx, eax
0x7fffeafcf8ab:	mov		qword ptr [rbp - 0x50], rcx
0x7fffeafcf8af:	jmp		0x7fffeafcf8d7
disassembling symbol '.LBB47_9':
textAddr: 0x7fffeafcf8b4, textSize: 35
0x7fffeafcf8b4:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcf8b8:	add		rax, 0x10
0x7fffeafcf8be:	and		rax, 0xf
0x7fffeafcf8c4:	mov		ecx, 0x10
0x7fffeafcf8c9:	sub		rcx, rax
0x7fffeafcf8cc:	and		rcx, 0xf
0x7fffeafcf8d3:	mov		qword ptr [rbp - 0x50], rcx
disassembling symbol '.LBB47_10':
textAddr: 0x7fffeafcf8d7, textSize: 128
0x7fffeafcf8d7:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafcf8db:	mov		qword ptr [rbp - 0x38], rax
0x7fffeafcf8df:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcf8e3:	sub		rax, qword ptr [rbp - 0x38]
0x7fffeafcf8e7:	sub		rax, 0x20
0x7fffeafcf8ed:	mov		qword ptr [rbp - 0x40], rax
0x7fffeafcf8f1:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcf8f5:	add		rax, qword ptr [rbp - 0x38]
0x7fffeafcf8f9:	mov		qword ptr [rbp - 0x48], rax
0x7fffeafcf8fd:	mov		rax, qword ptr [rbp - 0x38]
0x7fffeafcf901:	mov		rcx, qword ptr [rbp - 0x48]
0x7fffeafcf905:	mov		qword ptr [rcx], rax
0x7fffeafcf908:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafcf90c:	mov		rcx, qword ptr [rbp - 0x48]
0x7fffeafcf910:	mov		qword ptr [rcx + 8], rax
0x7fffeafcf914:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafcf918:	mov		rcx, qword ptr [rbp - 0x40]
0x7fffeafcf91c:	mov		qword ptr [rax + rcx + 8], 0xb
0x7fffeafcf925:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafcf929:	mov		rcx, qword ptr [rbp - 0x40]
0x7fffeafcf92d:	mov		qword ptr [rax + rcx + 0x10], 0
0x7fffeafcf936:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcf93a:	cmp		qword ptr [rax + 0x18], 0
0x7fffeafcf93f:	je		0x7fffeafcf957
0x7fffeafcf945:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcf949:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcf94d:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcf951:	jae		0x7fffeafcf963
disassembling symbol '.LBB47_12':
textAddr: 0x7fffeafcf957, textSize: 12
0x7fffeafcf957:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcf95b:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcf95f:	mov		qword ptr [rcx + 0x18], rax
disassembling symbol '.LBB47_13':
textAddr: 0x7fffeafcf963, textSize: 61
0x7fffeafcf963:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcf967:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcf96b:	add		rax, qword ptr [rcx + 0x358]
0x7fffeafcf972:	mov		qword ptr [rcx + 0x358], rax
0x7fffeafcf979:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcf97d:	cmp		rax, qword ptr [rcx + 0x360]
0x7fffeafcf984:	jbe		0x7fffeafcf9a0
0x7fffeafcf98a:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcf98e:	mov		rax, qword ptr [rax + 0x358]
0x7fffeafcf995:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcf999:	mov		qword ptr [rcx + 0x360], rax
disassembling symbol '.LBB47_15':
textAddr: 0x7fffeafcf9a0, textSize: 19
0x7fffeafcf9a0:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafcf9a4:	add		rax, 0x10
0x7fffeafcf9aa:	mov		qword ptr [rbp - 8], rax
0x7fffeafcf9ae:	jmp		0x7fffeafcf9c0
disassembling symbol '.LBB47_16':
textAddr: 0x7fffeafcf9b3, textSize: 5
0x7fffeafcf9b3:	jmp		0x7fffeafcf9b8
disassembling symbol '.LBB47_17':
textAddr: 0x7fffeafcf9b8, textSize: 8
0x7fffeafcf9b8:	mov		qword ptr [rbp - 8], 0
disassembling symbol '.LBB47_18':
textAddr: 0x7fffeafcf9c0, textSize: 16
0x7fffeafcf9c0:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcf9c4:	pop		rbp
0x7fffeafcf9c5:	ret		
0x7fffeafcf9c6:	nop		word ptr cs:[rax + rax]
disassembling symbol 'prepend_alloc':
textAddr: 0x7fffeafcf9d0, textSize: 3360
0x7fffeafcf9d0:	push		rbp
0x7fffeafcf9d1:	mov		rbp, rsp
0x7fffeafcf9d4:	sub		rsp, 0x160
0x7fffeafcf9db:	mov		qword ptr [rbp - 8], rdi
0x7fffeafcf9df:	mov		qword ptr [rbp - 0x10], rsi
0x7fffeafcf9e3:	mov		qword ptr [rbp - 0x18], rdx
0x7fffeafcf9e7:	mov		qword ptr [rbp - 0x20], rcx
0x7fffeafcf9eb:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcf9ef:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafcf9f3:	add		rcx, 0x10
0x7fffeafcf9fa:	and		rcx, 0xf
0x7fffeafcfa01:	cmp		rcx, 0
0x7fffeafcfa05:	mov		qword ptr [rbp - 0x120], rax
0x7fffeafcfa0c:	jne		0x7fffeafcfa22
0x7fffeafcfa12:	xor		eax, eax
0x7fffeafcfa14:	mov		ecx, eax
0x7fffeafcfa16:	mov		qword ptr [rbp - 0x128], rcx
0x7fffeafcfa1d:	jmp		0x7fffeafcfa48
0x7fffeafcfa22:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcfa26:	add		rax, 0x10
0x7fffeafcfa2c:	and		rax, 0xf
0x7fffeafcfa32:	mov		ecx, 0x10
0x7fffeafcfa37:	sub		rcx, rax
0x7fffeafcfa3a:	and		rcx, 0xf
0x7fffeafcfa41:	mov		qword ptr [rbp - 0x128], rcx
0x7fffeafcfa48:	mov		rax, qword ptr [rbp - 0x128]
0x7fffeafcfa4f:	mov		rcx, qword ptr [rbp - 0x120]
0x7fffeafcfa56:	add		rcx, rax
0x7fffeafcfa59:	mov		qword ptr [rbp - 0x28], rcx
0x7fffeafcfa5d:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcfa61:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafcfa65:	add		rcx, 0x10
0x7fffeafcfa6c:	and		rcx, 0xf
0x7fffeafcfa73:	cmp		rcx, 0
0x7fffeafcfa77:	mov		qword ptr [rbp - 0x130], rax
0x7fffeafcfa7e:	jne		0x7fffeafcfa94
0x7fffeafcfa84:	xor		eax, eax
0x7fffeafcfa86:	mov		ecx, eax
0x7fffeafcfa88:	mov		qword ptr [rbp - 0x138], rcx
0x7fffeafcfa8f:	jmp		0x7fffeafcfaba
0x7fffeafcfa94:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcfa98:	add		rax, 0x10
0x7fffeafcfa9e:	and		rax, 0xf
0x7fffeafcfaa4:	mov		ecx, 0x10
0x7fffeafcfaa9:	sub		rcx, rax
0x7fffeafcfaac:	and		rcx, 0xf
0x7fffeafcfab3:	mov		qword ptr [rbp - 0x138], rcx
0x7fffeafcfaba:	mov		rax, qword ptr [rbp - 0x138]
0x7fffeafcfac1:	mov		rcx, qword ptr [rbp - 0x130]
0x7fffeafcfac8:	add		rcx, rax
0x7fffeafcfacb:	mov		qword ptr [rbp - 0x30], rcx
0x7fffeafcfacf:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcfad3:	mov		rcx, qword ptr [rbp - 0x28]
0x7fffeafcfad7:	sub		rax, rcx
0x7fffeafcfada:	mov		qword ptr [rbp - 0x38], rax
0x7fffeafcfade:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcfae2:	add		rax, qword ptr [rbp - 0x20]
0x7fffeafcfae6:	mov		qword ptr [rbp - 0x40], rax
0x7fffeafcfaea:	mov		rax, qword ptr [rbp - 0x38]
0x7fffeafcfaee:	sub		rax, qword ptr [rbp - 0x20]
0x7fffeafcfaf2:	mov		qword ptr [rbp - 0x48], rax
0x7fffeafcfaf6:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcfafa:	or		rax, 1
0x7fffeafcfb00:	or		rax, 2
0x7fffeafcfb06:	mov		rcx, qword ptr [rbp - 0x28]
0x7fffeafcfb0a:	mov		qword ptr [rcx + 8], rax
0x7fffeafcfb0e:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcfb12:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcfb16:	cmp		rax, qword ptr [rcx + 0x28]
0x7fffeafcfb1a:	jne		0x7fffeafcfb57
0x7fffeafcfb20:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafcfb24:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcfb28:	add		rax, qword ptr [rcx + 0x10]
0x7fffeafcfb2c:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafcfb30:	mov		qword ptr [rbp - 0x50], rax
0x7fffeafcfb34:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafcfb38:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcfb3c:	mov		qword ptr [rcx + 0x28], rax
0x7fffeafcfb40:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafcfb44:	or		rax, 1
0x7fffeafcfb4a:	mov		rcx, qword ptr [rbp - 0x40]
0x7fffeafcfb4e:	mov		qword ptr [rcx + 8], rax
0x7fffeafcfb52:	jmp		0x7fffeafd06d7
0x7fffeafcfb57:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcfb5b:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcfb5f:	cmp		rax, qword ptr [rcx + 0x20]
0x7fffeafcfb63:	jne		0x7fffeafcfbb0
0x7fffeafcfb69:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafcfb6d:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcfb71:	add		rax, qword ptr [rcx + 8]
0x7fffeafcfb75:	mov		qword ptr [rcx + 8], rax
0x7fffeafcfb79:	mov		qword ptr [rbp - 0x58], rax
0x7fffeafcfb7d:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafcfb81:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcfb85:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafcfb89:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafcfb8d:	or		rax, 1
0x7fffeafcfb93:	mov		rcx, qword ptr [rbp - 0x40]
0x7fffeafcfb97:	mov		qword ptr [rcx + 8], rax
0x7fffeafcfb9b:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafcfb9f:	mov		rcx, qword ptr [rbp - 0x40]
0x7fffeafcfba3:	mov		rdx, qword ptr [rbp - 0x58]
0x7fffeafcfba7:	mov		qword ptr [rcx + rdx], rax
0x7fffeafcfbab:	jmp		0x7fffeafd06d2
0x7fffeafcfbb0:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcfbb4:	mov		rax, qword ptr [rax + 8]
0x7fffeafcfbb8:	and		rax, 3
0x7fffeafcfbbe:	cmp		rax, 1
0x7fffeafcfbc2:	jne		0x7fffeafd01d4
0x7fffeafcfbc8:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcfbcc:	mov		rax, qword ptr [rax + 8]
0x7fffeafcfbd0:	and		rax, 0xfffffffffffffff8
0x7fffeafcfbd6:	mov		qword ptr [rbp - 0x60], rax
0x7fffeafcfbda:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafcfbde:	shr		rax, 3
0x7fffeafcfbe2:	cmp		rax, 0x20
0x7fffeafcfbe6:	jae		0x7fffeafcfd79
0x7fffeafcfbec:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcfbf0:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafcfbf4:	mov		qword ptr [rbp - 0x68], rax
0x7fffeafcfbf8:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcfbfc:	mov		rax, qword ptr [rax + 0x18]
0x7fffeafcfc00:	mov		qword ptr [rbp - 0x70], rax
0x7fffeafcfc04:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafcfc08:	shr		rax, 3
0x7fffeafcfc0c:	mov		dword ptr [rbp - 0x74], eax
0x7fffeafcfc0f:	mov		rcx, qword ptr [rbp - 0x68]
0x7fffeafcfc13:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafcfc17:	add		rdx, 0x48
0x7fffeafcfc1e:	mov		eax, dword ptr [rbp - 0x74]
0x7fffeafcfc21:	shl		eax, 1
0x7fffeafcfc24:	mov		eax, eax
0x7fffeafcfc26:	mov		esi, eax
0x7fffeafcfc28:	shl		rsi, 3
0x7fffeafcfc2c:	add		rdx, rsi
0x7fffeafcfc2f:	cmp		rcx, rdx
0x7fffeafcfc32:	mov		dil, 1
0x7fffeafcfc35:	mov		byte ptr [rbp - 0x139], dil
0x7fffeafcfc3c:	je		0x7fffeafcfc7d
0x7fffeafcfc42:	xor		eax, eax
0x7fffeafcfc44:	mov		rcx, qword ptr [rbp - 0x68]
0x7fffeafcfc48:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafcfc4c:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafcfc50:	mov		byte ptr [rbp - 0x13a], al
0x7fffeafcfc56:	jb		0x7fffeafcfc71
0x7fffeafcfc5c:	mov		rax, qword ptr [rbp - 0x68]
0x7fffeafcfc60:	mov		rax, qword ptr [rax + 0x18]
0x7fffeafcfc64:	cmp		rax, qword ptr [rbp - 0x30]
0x7fffeafcfc68:	sete		cl
0x7fffeafcfc6b:	mov		byte ptr [rbp - 0x13a], cl
0x7fffeafcfc71:	mov		al, byte ptr [rbp - 0x13a]
0x7fffeafcfc77:	mov		byte ptr [rbp - 0x139], al
0x7fffeafcfc7d:	mov		al, byte ptr [rbp - 0x139]
0x7fffeafcfc83:	and		al, 1
0x7fffeafcfc85:	movzx		ecx, al
0x7fffeafcfc88:	movsxd		rdx, ecx
0x7fffeafcfc8b:	cmp		rdx, 0
0x7fffeafcfc8f:	je		0x7fffeafcfd6f
0x7fffeafcfc95:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafcfc99:	cmp		rax, qword ptr [rbp - 0x68]
0x7fffeafcfc9d:	jne		0x7fffeafcfcbd
0x7fffeafcfca3:	mov		ecx, dword ptr [rbp - 0x74]
0x7fffeafcfca6:	mov		eax, 1
0x7fffeafcfcab:	shl		eax, cl
0x7fffeafcfcad:	xor		eax, 0xffffffff
0x7fffeafcfcb0:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafcfcb4:	and		eax, dword ptr [rdx]
0x7fffeafcfcb6:	mov		dword ptr [rdx], eax
0x7fffeafcfcb8:	jmp		0x7fffeafcfd6a
0x7fffeafcfcbd:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafcfcc1:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcfcc5:	add		rcx, 0x48
0x7fffeafcfccc:	mov		edx, dword ptr [rbp - 0x74]
0x7fffeafcfccf:	shl		edx, 1
0x7fffeafcfcd2:	mov		edx, edx
0x7fffeafcfcd4:	mov		esi, edx
0x7fffeafcfcd6:	shl		rsi, 3
0x7fffeafcfcda:	add		rcx, rsi
0x7fffeafcfcdd:	cmp		rax, rcx
0x7fffeafcfce0:	mov		dil, 1
0x7fffeafcfce3:	mov		byte ptr [rbp - 0x13b], dil
0x7fffeafcfcea:	je		0x7fffeafcfd2b
0x7fffeafcfcf0:	xor		eax, eax
0x7fffeafcfcf2:	mov		rcx, qword ptr [rbp - 0x70]
0x7fffeafcfcf6:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafcfcfa:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafcfcfe:	mov		byte ptr [rbp - 0x13c], al
0x7fffeafcfd04:	jb		0x7fffeafcfd1f
0x7fffeafcfd0a:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafcfd0e:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafcfd12:	cmp		rax, qword ptr [rbp - 0x30]
0x7fffeafcfd16:	sete		cl
0x7fffeafcfd19:	mov		byte ptr [rbp - 0x13c], cl
0x7fffeafcfd1f:	mov		al, byte ptr [rbp - 0x13c]
0x7fffeafcfd25:	mov		byte ptr [rbp - 0x13b], al
0x7fffeafcfd2b:	mov		al, byte ptr [rbp - 0x13b]
0x7fffeafcfd31:	and		al, 1
0x7fffeafcfd33:	movzx		ecx, al
0x7fffeafcfd36:	movsxd		rdx, ecx
0x7fffeafcfd39:	cmp		rdx, 0
0x7fffeafcfd3d:	je		0x7fffeafcfd60
0x7fffeafcfd43:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafcfd47:	mov		rcx, qword ptr [rbp - 0x68]
0x7fffeafcfd4b:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafcfd4f:	mov		rax, qword ptr [rbp - 0x68]
0x7fffeafcfd53:	mov		rcx, qword ptr [rbp - 0x70]
0x7fffeafcfd57:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafcfd5b:	jmp		0x7fffeafcfd65
0x7fffeafcfd60:	call		0x7fffeafc4c10
0x7fffeafcfd65:	jmp		0x7fffeafcfd6a
0x7fffeafcfd6a:	jmp		0x7fffeafcfd74
0x7fffeafcfd6f:	call		0x7fffeafc4c10
0x7fffeafcfd74:	jmp		0x7fffeafd01bc
0x7fffeafcfd79:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcfd7d:	mov		qword ptr [rbp - 0x80], rax
0x7fffeafcfd81:	mov		rax, qword ptr [rbp - 0x80]
0x7fffeafcfd85:	mov		rax, qword ptr [rax + 0x30]
0x7fffeafcfd89:	mov		qword ptr [rbp - 0x88], rax
0x7fffeafcfd90:	mov		rax, qword ptr [rbp - 0x80]
0x7fffeafcfd94:	mov		rax, qword ptr [rax + 0x18]
0x7fffeafcfd98:	cmp		rax, qword ptr [rbp - 0x80]
0x7fffeafcfd9c:	je		0x7fffeafcfe5d
0x7fffeafcfda2:	xor		eax, eax
0x7fffeafcfda4:	mov		rcx, qword ptr [rbp - 0x80]
0x7fffeafcfda8:	mov		rcx, qword ptr [rcx + 0x10]
0x7fffeafcfdac:	mov		qword ptr [rbp - 0x98], rcx
0x7fffeafcfdb3:	mov		rcx, qword ptr [rbp - 0x80]
0x7fffeafcfdb7:	mov		rcx, qword ptr [rcx + 0x18]
0x7fffeafcfdbb:	mov		qword ptr [rbp - 0x90], rcx
0x7fffeafcfdc2:	mov		rcx, qword ptr [rbp - 0x98]
0x7fffeafcfdc9:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafcfdcd:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafcfdd1:	mov		byte ptr [rbp - 0x13d], al
0x7fffeafcfdd7:	jb		0x7fffeafcfe12
0x7fffeafcfddd:	xor		eax, eax
0x7fffeafcfddf:	mov		rcx, qword ptr [rbp - 0x98]
0x7fffeafcfde6:	mov		rcx, qword ptr [rcx + 0x18]
0x7fffeafcfdea:	cmp		rcx, qword ptr [rbp - 0x80]
0x7fffeafcfdee:	mov		byte ptr [rbp - 0x13d], al
0x7fffeafcfdf4:	jne		0x7fffeafcfe12
0x7fffeafcfdfa:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafcfe01:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafcfe05:	cmp		rax, qword ptr [rbp - 0x80]
0x7fffeafcfe09:	sete		cl
0x7fffeafcfe0c:	mov		byte ptr [rbp - 0x13d], cl
0x7fffeafcfe12:	mov		al, byte ptr [rbp - 0x13d]
0x7fffeafcfe18:	and		al, 1
0x7fffeafcfe1a:	movzx		ecx, al
0x7fffeafcfe1d:	movsxd		rdx, ecx
0x7fffeafcfe20:	cmp		rdx, 0
0x7fffeafcfe24:	je		0x7fffeafcfe53
0x7fffeafcfe2a:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafcfe31:	mov		rcx, qword ptr [rbp - 0x98]
0x7fffeafcfe38:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafcfe3c:	mov		rax, qword ptr [rbp - 0x98]
0x7fffeafcfe43:	mov		rcx, qword ptr [rbp - 0x90]
0x7fffeafcfe4a:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafcfe4e:	jmp		0x7fffeafcfe58
0x7fffeafcfe53:	call		0x7fffeafc4c10
0x7fffeafcfe58:	jmp		0x7fffeafcff8c
0x7fffeafcfe5d:	mov		rax, qword ptr [rbp - 0x80]
0x7fffeafcfe61:	mov		rcx, rax
0x7fffeafcfe64:	add		rcx, 0x20
0x7fffeafcfe6b:	add		rcx, 8
0x7fffeafcfe72:	mov		qword ptr [rbp - 0xa0], rcx
0x7fffeafcfe79:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafcfe7d:	mov		qword ptr [rbp - 0x90], rax
0x7fffeafcfe84:	cmp		rax, 0
0x7fffeafcfe88:	jne		0x7fffeafcfeb8
0x7fffeafcfe8e:	mov		rax, qword ptr [rbp - 0x80]
0x7fffeafcfe92:	mov		rcx, rax
0x7fffeafcfe95:	add		rcx, 0x20
0x7fffeafcfe9c:	mov		qword ptr [rbp - 0xa0], rcx
0x7fffeafcfea3:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafcfea7:	mov		qword ptr [rbp - 0x90], rax
0x7fffeafcfeae:	cmp		rax, 0
0x7fffeafcfeb2:	je		0x7fffeafcff87
0x7fffeafcfeb8:	jmp		0x7fffeafcfebd
0x7fffeafcfebd:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafcfec4:	mov		rcx, rax
0x7fffeafcfec7:	add		rcx, 0x20
0x7fffeafcfece:	add		rcx, 8
0x7fffeafcfed5:	mov		qword ptr [rbp - 0xa8], rcx
0x7fffeafcfedc:	cmp		qword ptr [rax + 0x28], 0
0x7fffeafcfee1:	mov		dl, 1
0x7fffeafcfee3:	mov		byte ptr [rbp - 0x13e], dl
0x7fffeafcfee9:	jne		0x7fffeafcff15
0x7fffeafcfeef:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafcfef6:	mov		rcx, rax
0x7fffeafcfef9:	add		rcx, 0x20
0x7fffeafcff00:	mov		qword ptr [rbp - 0xa8], rcx
0x7fffeafcff07:	cmp		qword ptr [rax + 0x20], 0
0x7fffeafcff0c:	setne		dl
0x7fffeafcff0f:	mov		byte ptr [rbp - 0x13e], dl
0x7fffeafcff15:	mov		al, byte ptr [rbp - 0x13e]
0x7fffeafcff1b:	test		al, 1
0x7fffeafcff1d:	jne		0x7fffeafcff28
0x7fffeafcff23:	jmp		0x7fffeafcff45
0x7fffeafcff28:	mov		rax, qword ptr [rbp - 0xa8]
0x7fffeafcff2f:	mov		qword ptr [rbp - 0xa0], rax
0x7fffeafcff36:	mov		rax, qword ptr [rax]
0x7fffeafcff39:	mov		qword ptr [rbp - 0x90], rax
0x7fffeafcff40:	jmp		0x7fffeafcfebd
0x7fffeafcff45:	mov		rax, qword ptr [rbp - 0xa0]
0x7fffeafcff4c:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcff50:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcff54:	setae		dl
0x7fffeafcff57:	and		dl, 1
0x7fffeafcff5a:	movzx		esi, dl
0x7fffeafcff5d:	movsxd		rax, esi
0x7fffeafcff60:	cmp		rax, 0
0x7fffeafcff64:	je		0x7fffeafcff7d
0x7fffeafcff6a:	mov		rax, qword ptr [rbp - 0xa0]
0x7fffeafcff71:	mov		qword ptr [rax], 0
0x7fffeafcff78:	jmp		0x7fffeafcff82
0x7fffeafcff7d:	call		0x7fffeafc4c10
0x7fffeafcff82:	jmp		0x7fffeafcff87
0x7fffeafcff87:	jmp		0x7fffeafcff8c
0x7fffeafcff8c:	cmp		qword ptr [rbp - 0x88], 0
0x7fffeafcff94:	je		0x7fffeafd01b7
0x7fffeafcff9a:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcff9e:	add		rax, 0x258
0x7fffeafcffa4:	mov		rcx, qword ptr [rbp - 0x80]
0x7fffeafcffa8:	mov		edx, dword ptr [rcx + 0x38]
0x7fffeafcffab:	mov		ecx, edx
0x7fffeafcffad:	shl		rcx, 3
0x7fffeafcffb1:	add		rax, rcx
0x7fffeafcffb4:	mov		qword ptr [rbp - 0xb0], rax
0x7fffeafcffbb:	mov		rax, qword ptr [rbp - 0x80]
0x7fffeafcffbf:	mov		rcx, qword ptr [rbp - 0xb0]
0x7fffeafcffc6:	cmp		rax, qword ptr [rcx]
0x7fffeafcffc9:	jne		0x7fffeafd000a
0x7fffeafcffcf:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafcffd6:	mov		rcx, qword ptr [rbp - 0xb0]
0x7fffeafcffdd:	mov		qword ptr [rcx], rax
0x7fffeafcffe0:	cmp		rax, 0
0x7fffeafcffe4:	jne		0x7fffeafd0005
0x7fffeafcffea:	mov		rax, qword ptr [rbp - 0x80]
0x7fffeafcffee:	mov		ecx, dword ptr [rax + 0x38]
0x7fffeafcfff1:	mov		edx, 1
0x7fffeafcfff6:	shl		edx, cl
0x7fffeafcfff8:	xor		edx, 0xffffffff
0x7fffeafcfffb:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcffff:	and		edx, dword ptr [rax + 4]
0x7fffeafd0002:	mov		dword ptr [rax + 4], edx
0x7fffeafd0005:	jmp		0x7fffeafd007c
0x7fffeafd000a:	mov		rax, qword ptr [rbp - 0x88]
0x7fffeafd0011:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd0015:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafd0019:	setae		dl
0x7fffeafd001c:	and		dl, 1
0x7fffeafd001f:	movzx		esi, dl
0x7fffeafd0022:	movsxd		rax, esi
0x7fffeafd0025:	cmp		rax, 0
0x7fffeafd0029:	je		0x7fffeafd0072
0x7fffeafd002f:	mov		rax, qword ptr [rbp - 0x88]
0x7fffeafd0036:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafd003a:	cmp		rax, qword ptr [rbp - 0x80]
0x7fffeafd003e:	jne		0x7fffeafd005b
0x7fffeafd0044:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafd004b:	mov		rcx, qword ptr [rbp - 0x88]
0x7fffeafd0052:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafd0056:	jmp		0x7fffeafd006d
0x7fffeafd005b:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafd0062:	mov		rcx, qword ptr [rbp - 0x88]
0x7fffeafd0069:	mov		qword ptr [rcx + 0x28], rax
0x7fffeafd006d:	jmp		0x7fffeafd0077
0x7fffeafd0072:	call		0x7fffeafc4c10
0x7fffeafd0077:	jmp		0x7fffeafd007c
0x7fffeafd007c:	cmp		qword ptr [rbp - 0x90], 0
0x7fffeafd0084:	je		0x7fffeafd01b2
0x7fffeafd008a:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafd0091:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd0095:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafd0099:	setae		dl
0x7fffeafd009c:	and		dl, 1
0x7fffeafd009f:	movzx		esi, dl
0x7fffeafd00a2:	movsxd		rax, esi
0x7fffeafd00a5:	cmp		rax, 0
0x7fffeafd00a9:	je		0x7fffeafd01a8
0x7fffeafd00af:	mov		rax, qword ptr [rbp - 0x88]
0x7fffeafd00b6:	mov		rcx, qword ptr [rbp - 0x90]
0x7fffeafd00bd:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafd00c1:	mov		rax, qword ptr [rbp - 0x80]
0x7fffeafd00c5:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafd00c9:	mov		qword ptr [rbp - 0xb8], rax
0x7fffeafd00d0:	cmp		rax, 0
0x7fffeafd00d4:	je		0x7fffeafd0132
0x7fffeafd00da:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafd00e1:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd00e5:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafd00e9:	setae		dl
0x7fffeafd00ec:	and		dl, 1
0x7fffeafd00ef:	movzx		esi, dl
0x7fffeafd00f2:	movsxd		rax, esi
0x7fffeafd00f5:	cmp		rax, 0
0x7fffeafd00f9:	je		0x7fffeafd0128
0x7fffeafd00ff:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafd0106:	mov		rcx, qword ptr [rbp - 0x90]
0x7fffeafd010d:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafd0111:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafd0118:	mov		rcx, qword ptr [rbp - 0xb8]
0x7fffeafd011f:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafd0123:	jmp		0x7fffeafd012d
0x7fffeafd0128:	call		0x7fffeafc4c10
0x7fffeafd012d:	jmp		0x7fffeafd0132
0x7fffeafd0132:	mov		rax, qword ptr [rbp - 0x80]
0x7fffeafd0136:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafd013a:	mov		qword ptr [rbp - 0xc0], rax
0x7fffeafd0141:	cmp		rax, 0
0x7fffeafd0145:	je		0x7fffeafd01a3
0x7fffeafd014b:	mov		rax, qword ptr [rbp - 0xc0]
0x7fffeafd0152:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd0156:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafd015a:	setae		dl
0x7fffeafd015d:	and		dl, 1
0x7fffeafd0160:	movzx		esi, dl
0x7fffeafd0163:	movsxd		rax, esi
0x7fffeafd0166:	cmp		rax, 0
0x7fffeafd016a:	je		0x7fffeafd0199
0x7fffeafd0170:	mov		rax, qword ptr [rbp - 0xc0]
0x7fffeafd0177:	mov		rcx, qword ptr [rbp - 0x90]
0x7fffeafd017e:	mov		qword ptr [rcx + 0x28], rax
0x7fffeafd0182:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafd0189:	mov		rcx, qword ptr [rbp - 0xc0]
0x7fffeafd0190:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafd0194:	jmp		0x7fffeafd019e
0x7fffeafd0199:	call		0x7fffeafc4c10
0x7fffeafd019e:	jmp		0x7fffeafd01a3
0x7fffeafd01a3:	jmp		0x7fffeafd01ad
0x7fffeafd01a8:	call		0x7fffeafc4c10
0x7fffeafd01ad:	jmp		0x7fffeafd01b2
0x7fffeafd01b2:	jmp		0x7fffeafd01b7
0x7fffeafd01b7:	jmp		0x7fffeafd01bc
0x7fffeafd01bc:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafd01c0:	add		rax, qword ptr [rbp - 0x60]
0x7fffeafd01c4:	mov		qword ptr [rbp - 0x30], rax
0x7fffeafd01c8:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafd01cc:	add		rax, qword ptr [rbp - 0x48]
0x7fffeafd01d0:	mov		qword ptr [rbp - 0x48], rax
0x7fffeafd01d4:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafd01d8:	mov		rcx, qword ptr [rax + 8]
0x7fffeafd01dc:	and		rcx, 0xfffffffffffffffe
0x7fffeafd01e3:	mov		qword ptr [rax + 8], rcx
0x7fffeafd01e7:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafd01eb:	or		rax, 1
0x7fffeafd01f1:	mov		rcx, qword ptr [rbp - 0x40]
0x7fffeafd01f5:	mov		qword ptr [rcx + 8], rax
0x7fffeafd01f9:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafd01fd:	mov		rcx, qword ptr [rbp - 0x40]
0x7fffeafd0201:	mov		rdx, qword ptr [rbp - 0x48]
0x7fffeafd0205:	mov		qword ptr [rcx + rdx], rax
0x7fffeafd0209:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafd020d:	shr		rax, 3
0x7fffeafd0211:	cmp		rax, 0x20
0x7fffeafd0215:	jae		0x7fffeafd0320
0x7fffeafd021b:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafd021f:	shr		rax, 3
0x7fffeafd0223:	mov		dword ptr [rbp - 0xc4], eax
0x7fffeafd0229:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd022d:	add		rcx, 0x48
0x7fffeafd0234:	mov		eax, dword ptr [rbp - 0xc4]
0x7fffeafd023a:	shl		eax, 1
0x7fffeafd023d:	mov		eax, eax
0x7fffeafd023f:	mov		edx, eax
0x7fffeafd0241:	shl		rdx, 3
0x7fffeafd0245:	add		rcx, rdx
0x7fffeafd0248:	mov		qword ptr [rbp - 0xd0], rcx
0x7fffeafd024f:	mov		rcx, qword ptr [rbp - 0xd0]
0x7fffeafd0256:	mov		qword ptr [rbp - 0xd8], rcx
0x7fffeafd025d:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd0261:	mov		eax, dword ptr [rcx]
0x7fffeafd0263:	mov		ecx, dword ptr [rbp - 0xc4]
0x7fffeafd0269:	mov		esi, 1
0x7fffeafd026e:	shl		esi, cl
0x7fffeafd0270:	and		eax, esi
0x7fffeafd0272:	cmp		eax, 0
0x7fffeafd0275:	jne		0x7fffeafd0295
0x7fffeafd027b:	mov		ecx, dword ptr [rbp - 0xc4]
0x7fffeafd0281:	mov		eax, 1
0x7fffeafd0286:	shl		eax, cl
0x7fffeafd0288:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafd028c:	or		eax, dword ptr [rdx]
0x7fffeafd028e:	mov		dword ptr [rdx], eax
0x7fffeafd0290:	jmp		0x7fffeafd02df
0x7fffeafd0295:	mov		rax, qword ptr [rbp - 0xd0]
0x7fffeafd029c:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafd02a0:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd02a4:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafd02a8:	setae		dl
0x7fffeafd02ab:	and		dl, 1
0x7fffeafd02ae:	movzx		esi, dl
0x7fffeafd02b1:	movsxd		rax, esi
0x7fffeafd02b4:	cmp		rax, 0
0x7fffeafd02b8:	je		0x7fffeafd02d5
0x7fffeafd02be:	mov		rax, qword ptr [rbp - 0xd0]
0x7fffeafd02c5:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafd02c9:	mov		qword ptr [rbp - 0xd8], rax
0x7fffeafd02d0:	jmp		0x7fffeafd02da
0x7fffeafd02d5:	call		0x7fffeafc4c10
0x7fffeafd02da:	jmp		0x7fffeafd02df
0x7fffeafd02df:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafd02e3:	mov		rcx, qword ptr [rbp - 0xd0]
0x7fffeafd02ea:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafd02ee:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafd02f2:	mov		rcx, qword ptr [rbp - 0xd8]
0x7fffeafd02f9:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafd02fd:	mov		rax, qword ptr [rbp - 0xd8]
0x7fffeafd0304:	mov		rcx, qword ptr [rbp - 0x40]
0x7fffeafd0308:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafd030c:	mov		rax, qword ptr [rbp - 0xd0]
0x7fffeafd0313:	mov		rcx, qword ptr [rbp - 0x40]
0x7fffeafd0317:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafd031b:	jmp		0x7fffeafd06cd
0x7fffeafd0320:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafd0324:	mov		qword ptr [rbp - 0xe0], rax
0x7fffeafd032b:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafd032f:	shr		rax, 8
0x7fffeafd0333:	mov		dword ptr [rbp - 0xf0], eax
0x7fffeafd0339:	cmp		dword ptr [rbp - 0xf0], 0
0x7fffeafd0340:	jne		0x7fffeafd0355
0x7fffeafd0346:	mov		dword ptr [rbp - 0xec], 0
0x7fffeafd0350:	jmp		0x7fffeafd03c3
0x7fffeafd0355:	cmp		dword ptr [rbp - 0xf0], 0xffff
0x7fffeafd035f:	jbe		0x7fffeafd0374
0x7fffeafd0365:	mov		dword ptr [rbp - 0xec], 0x1f
0x7fffeafd036f:	jmp		0x7fffeafd03be
0x7fffeafd0374:	mov		eax, dword ptr [rbp - 0xf0]
0x7fffeafd037a:	bsr		eax, eax
0x7fffeafd037d:	xor		eax, 0x1f
0x7fffeafd0380:	mov		ecx, 0x1f
0x7fffeafd0385:	sub		ecx, eax
0x7fffeafd0387:	mov		dword ptr [rbp - 0xf4], ecx
0x7fffeafd038d:	mov		eax, dword ptr [rbp - 0xf4]
0x7fffeafd0393:	shl		eax, 1
0x7fffeafd0396:	mov		eax, eax
0x7fffeafd0398:	mov		edx, eax
0x7fffeafd039a:	mov		rsi, qword ptr [rbp - 0x48]
0x7fffeafd039e:	mov		eax, dword ptr [rbp - 0xf4]
0x7fffeafd03a4:	add		eax, 7
0x7fffeafd03a7:	mov		eax, eax
0x7fffeafd03a9:	mov		ecx, eax
0x7fffeafd03ab:	shr		rsi, cl
0x7fffeafd03ae:	and		rsi, 1
0x7fffeafd03b5:	add		rdx, rsi
0x7fffeafd03b8:	mov		dword ptr [rbp - 0xec], edx
0x7fffeafd03be:	jmp		0x7fffeafd03c3
0x7fffeafd03c3:	mov		rax, qword ptr [rbp - 8]
0x7fffeafd03c7:	add		rax, 0x258
0x7fffeafd03cd:	mov		ecx, dword ptr [rbp - 0xec]
0x7fffeafd03d3:	mov		edx, ecx
0x7fffeafd03d5:	shl		rdx, 3
0x7fffeafd03d9:	add		rax, rdx
0x7fffeafd03dc:	mov		qword ptr [rbp - 0xe8], rax
0x7fffeafd03e3:	mov		ecx, dword ptr [rbp - 0xec]
0x7fffeafd03e9:	mov		rax, qword ptr [rbp - 0xe0]
0x7fffeafd03f0:	mov		dword ptr [rax + 0x38], ecx
0x7fffeafd03f3:	mov		rax, qword ptr [rbp - 0xe0]
0x7fffeafd03fa:	mov		qword ptr [rax + 0x28], 0
0x7fffeafd0402:	mov		rax, qword ptr [rbp - 0xe0]
0x7fffeafd0409:	mov		qword ptr [rax + 0x20], 0
0x7fffeafd0411:	mov		rax, qword ptr [rbp - 8]
0x7fffeafd0415:	mov		ecx, dword ptr [rax + 4]
0x7fffeafd0418:	mov		esi, dword ptr [rbp - 0xec]
0x7fffeafd041e:	mov		dword ptr [rbp - 0x144], ecx
0x7fffeafd0424:	mov		ecx, esi
0x7fffeafd0426:	mov		esi, 1
0x7fffeafd042b:	shl		esi, cl
0x7fffeafd042d:	mov		edi, dword ptr [rbp - 0x144]
0x7fffeafd0433:	and		edi, esi
0x7fffeafd0435:	cmp		edi, 0
0x7fffeafd0438:	jne		0x7fffeafd049a
0x7fffeafd043e:	mov		ecx, dword ptr [rbp - 0xec]
0x7fffeafd0444:	mov		eax, 1
0x7fffeafd0449:	shl		eax, cl
0x7fffeafd044b:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafd044f:	or		eax, dword ptr [rdx + 4]
0x7fffeafd0452:	mov		dword ptr [rdx + 4], eax
0x7fffeafd0455:	mov		rdx, qword ptr [rbp - 0xe0]
0x7fffeafd045c:	mov		rsi, qword ptr [rbp - 0xe8]
0x7fffeafd0463:	mov		qword ptr [rsi], rdx
0x7fffeafd0466:	mov		rdx, qword ptr [rbp - 0xe8]
0x7fffeafd046d:	mov		rsi, qword ptr [rbp - 0xe0]
0x7fffeafd0474:	mov		qword ptr [rsi + 0x30], rdx
0x7fffeafd0478:	mov		rdx, qword ptr [rbp - 0xe0]
0x7fffeafd047f:	mov		rsi, qword ptr [rbp - 0xe0]
0x7fffeafd0486:	mov		qword ptr [rsi + 0x18], rdx
0x7fffeafd048a:	mov		rsi, qword ptr [rbp - 0xe0]
0x7fffeafd0491:	mov		qword ptr [rsi + 0x10], rdx
0x7fffeafd0495:	jmp		0x7fffeafd06c8
0x7fffeafd049a:	mov		rax, qword ptr [rbp - 0xe8]
0x7fffeafd04a1:	mov		rax, qword ptr [rax]
0x7fffeafd04a4:	mov		qword ptr [rbp - 0x100], rax
0x7fffeafd04ab:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafd04af:	cmp		dword ptr [rbp - 0xec], 0x1f
0x7fffeafd04b6:	mov		qword ptr [rbp - 0x150], rax
0x7fffeafd04bd:	jne		0x7fffeafd04d3
0x7fffeafd04c3:	xor		eax, eax
0x7fffeafd04c5:	mov		ecx, eax
0x7fffeafd04c7:	mov		qword ptr [rbp - 0x158], rcx
0x7fffeafd04ce:	jmp		0x7fffeafd04f5
0x7fffeafd04d3:	mov		eax, dword ptr [rbp - 0xec]
0x7fffeafd04d9:	shr		eax, 1
0x7fffeafd04dc:	add		eax, 8
0x7fffeafd04df:	sub		eax, 2
0x7fffeafd04e2:	mov		eax, eax
0x7fffeafd04e4:	mov		ecx, eax
0x7fffeafd04e6:	mov		edx, 0x3f
0x7fffeafd04eb:	sub		rdx, rcx
0x7fffeafd04ee:	mov		qword ptr [rbp - 0x158], rdx
0x7fffeafd04f5:	mov		rax, qword ptr [rbp - 0x158]
0x7fffeafd04fc:	mov		rcx, rax
0x7fffeafd04ff:	mov		rax, qword ptr [rbp - 0x150]
0x7fffeafd0506:	shl		rax, cl
0x7fffeafd0509:	mov		qword ptr [rbp - 0x108], rax
0x7fffeafd0510:	mov		rax, qword ptr [rbp - 0x100]
0x7fffeafd0517:	mov		rax, qword ptr [rax + 8]
0x7fffeafd051b:	and		rax, 0xfffffffffffffff8
0x7fffeafd0521:	cmp		rax, qword ptr [rbp - 0x48]
0x7fffeafd0525:	je		0x7fffeafd0605
0x7fffeafd052b:	mov		rax, qword ptr [rbp - 0x100]
0x7fffeafd0532:	add		rax, 0x20
0x7fffeafd0538:	mov		rcx, qword ptr [rbp - 0x108]
0x7fffeafd053f:	shr		rcx, 0x3f
0x7fffeafd0543:	and		rcx, 1
0x7fffeafd054a:	shl		rcx, 3
0x7fffeafd054e:	add		rax, rcx
0x7fffeafd0551:	mov		qword ptr [rbp - 0x110], rax
0x7fffeafd0558:	mov		rax, qword ptr [rbp - 0x108]
0x7fffeafd055f:	shl		rax, 1
0x7fffeafd0563:	mov		qword ptr [rbp - 0x108], rax
0x7fffeafd056a:	mov		rax, qword ptr [rbp - 0x110]
0x7fffeafd0571:	cmp		qword ptr [rax], 0
0x7fffeafd0575:	je		0x7fffeafd0591
0x7fffeafd057b:	mov		rax, qword ptr [rbp - 0x110]
0x7fffeafd0582:	mov		rax, qword ptr [rax]
0x7fffeafd0585:	mov		qword ptr [rbp - 0x100], rax
0x7fffeafd058c:	jmp		0x7fffeafd0600
0x7fffeafd0591:	mov		rax, qword ptr [rbp - 0x110]
0x7fffeafd0598:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd059c:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafd05a0:	setae		dl
0x7fffeafd05a3:	and		dl, 1
0x7fffeafd05a6:	movzx		esi, dl
0x7fffeafd05a9:	movsxd		rax, esi
0x7fffeafd05ac:	cmp		rax, 0
0x7fffeafd05b0:	je		0x7fffeafd05fb
0x7fffeafd05b6:	mov		rax, qword ptr [rbp - 0xe0]
0x7fffeafd05bd:	mov		rcx, qword ptr [rbp - 0x110]
0x7fffeafd05c4:	mov		qword ptr [rcx], rax
0x7fffeafd05c7:	mov		rax, qword ptr [rbp - 0x100]
0x7fffeafd05ce:	mov		rcx, qword ptr [rbp - 0xe0]
0x7fffeafd05d5:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafd05d9:	mov		rax, qword ptr [rbp - 0xe0]
0x7fffeafd05e0:	mov		rcx, qword ptr [rbp - 0xe0]
0x7fffeafd05e7:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafd05eb:	mov		rcx, qword ptr [rbp - 0xe0]
0x7fffeafd05f2:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafd05f6:	jmp		0x7fffeafd06c3
0x7fffeafd05fb:	call		0x7fffeafc4c10
0x7fffeafd0600:	jmp		0x7fffeafd06be
0x7fffeafd0605:	xor		eax, eax
0x7fffeafd0607:	mov		rcx, qword ptr [rbp - 0x100]
0x7fffeafd060e:	mov		rcx, qword ptr [rcx + 0x10]
0x7fffeafd0612:	mov		qword ptr [rbp - 0x118], rcx
0x7fffeafd0619:	mov		rcx, qword ptr [rbp - 0x100]
0x7fffeafd0620:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafd0624:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafd0628:	mov		byte ptr [rbp - 0x159], al
0x7fffeafd062e:	jb		0x7fffeafd064c
0x7fffeafd0634:	mov		rax, qword ptr [rbp - 0x118]
0x7fffeafd063b:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd063f:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafd0643:	setae		dl
0x7fffeafd0646:	mov		byte ptr [rbp - 0x159], dl
0x7fffeafd064c:	mov		al, byte ptr [rbp - 0x159]
0x7fffeafd0652:	and		al, 1
0x7fffeafd0654:	movzx		ecx, al
0x7fffeafd0657:	movsxd		rdx, ecx
0x7fffeafd065a:	cmp		rdx, 0
0x7fffeafd065e:	je		0x7fffeafd06b9
0x7fffeafd0664:	mov		rax, qword ptr [rbp - 0xe0]
0x7fffeafd066b:	mov		rcx, qword ptr [rbp - 0x118]
0x7fffeafd0672:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafd0676:	mov		rcx, qword ptr [rbp - 0x100]
0x7fffeafd067d:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafd0681:	mov		rax, qword ptr [rbp - 0x118]
0x7fffeafd0688:	mov		rcx, qword ptr [rbp - 0xe0]
0x7fffeafd068f:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafd0693:	mov		rax, qword ptr [rbp - 0x100]
0x7fffeafd069a:	mov		rcx, qword ptr [rbp - 0xe0]
0x7fffeafd06a1:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafd06a5:	mov		rax, qword ptr [rbp - 0xe0]
0x7fffeafd06ac:	mov		qword ptr [rax + 0x30], 0
0x7fffeafd06b4:	jmp		0x7fffeafd06c3
0x7fffeafd06b9:	call		0x7fffeafc4c10
0x7fffeafd06be:	jmp		0x7fffeafd0510
0x7fffeafd06c3:	jmp		0x7fffeafd06c8
0x7fffeafd06c8:	jmp		0x7fffeafd06cd
0x7fffeafd06cd:	jmp		0x7fffeafd06d2
0x7fffeafd06d2:	jmp		0x7fffeafd06d7
0x7fffeafd06d7:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafd06db:	add		rax, 0x10
0x7fffeafd06e1:	add		rsp, 0x160
0x7fffeafd06e8:	pop		rbp
0x7fffeafd06e9:	ret		
0x7fffeafd06ea:	nop		word ptr [rax + rax]
disassembling symbol '.LBB48_2':
textAddr: 0x7fffeafcfa22, textSize: 38
0x7fffeafcfa22:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafcfa26:	add		rax, 0x10
0x7fffeafcfa2c:	and		rax, 0xf
0x7fffeafcfa32:	mov		ecx, 0x10
0x7fffeafcfa37:	sub		rcx, rax
0x7fffeafcfa3a:	and		rcx, 0xf
0x7fffeafcfa41:	mov		qword ptr [rbp - 0x128], rcx
disassembling symbol '.LBB48_3':
textAddr: 0x7fffeafcfa48, textSize: 76
0x7fffeafcfa48:	mov		rax, qword ptr [rbp - 0x128]
0x7fffeafcfa4f:	mov		rcx, qword ptr [rbp - 0x120]
0x7fffeafcfa56:	add		rcx, rax
0x7fffeafcfa59:	mov		qword ptr [rbp - 0x28], rcx
0x7fffeafcfa5d:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcfa61:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafcfa65:	add		rcx, 0x10
0x7fffeafcfa6c:	and		rcx, 0xf
0x7fffeafcfa73:	cmp		rcx, 0
0x7fffeafcfa77:	mov		qword ptr [rbp - 0x130], rax
0x7fffeafcfa7e:	jne		0x7fffeafcfa94
0x7fffeafcfa84:	xor		eax, eax
0x7fffeafcfa86:	mov		ecx, eax
0x7fffeafcfa88:	mov		qword ptr [rbp - 0x138], rcx
0x7fffeafcfa8f:	jmp		0x7fffeafcfaba
disassembling symbol '.LBB48_5':
textAddr: 0x7fffeafcfa94, textSize: 38
0x7fffeafcfa94:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafcfa98:	add		rax, 0x10
0x7fffeafcfa9e:	and		rax, 0xf
0x7fffeafcfaa4:	mov		ecx, 0x10
0x7fffeafcfaa9:	sub		rcx, rax
0x7fffeafcfaac:	and		rcx, 0xf
0x7fffeafcfab3:	mov		qword ptr [rbp - 0x138], rcx
disassembling symbol '.LBB48_6':
textAddr: 0x7fffeafcfaba, textSize: 157
0x7fffeafcfaba:	mov		rax, qword ptr [rbp - 0x138]
0x7fffeafcfac1:	mov		rcx, qword ptr [rbp - 0x130]
0x7fffeafcfac8:	add		rcx, rax
0x7fffeafcfacb:	mov		qword ptr [rbp - 0x30], rcx
0x7fffeafcfacf:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcfad3:	mov		rcx, qword ptr [rbp - 0x28]
0x7fffeafcfad7:	sub		rax, rcx
0x7fffeafcfada:	mov		qword ptr [rbp - 0x38], rax
0x7fffeafcfade:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafcfae2:	add		rax, qword ptr [rbp - 0x20]
0x7fffeafcfae6:	mov		qword ptr [rbp - 0x40], rax
0x7fffeafcfaea:	mov		rax, qword ptr [rbp - 0x38]
0x7fffeafcfaee:	sub		rax, qword ptr [rbp - 0x20]
0x7fffeafcfaf2:	mov		qword ptr [rbp - 0x48], rax
0x7fffeafcfaf6:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafcfafa:	or		rax, 1
0x7fffeafcfb00:	or		rax, 2
0x7fffeafcfb06:	mov		rcx, qword ptr [rbp - 0x28]
0x7fffeafcfb0a:	mov		qword ptr [rcx + 8], rax
0x7fffeafcfb0e:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcfb12:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcfb16:	cmp		rax, qword ptr [rcx + 0x28]
0x7fffeafcfb1a:	jne		0x7fffeafcfb57
0x7fffeafcfb20:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafcfb24:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcfb28:	add		rax, qword ptr [rcx + 0x10]
0x7fffeafcfb2c:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafcfb30:	mov		qword ptr [rbp - 0x50], rax
0x7fffeafcfb34:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafcfb38:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcfb3c:	mov		qword ptr [rcx + 0x28], rax
0x7fffeafcfb40:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafcfb44:	or		rax, 1
0x7fffeafcfb4a:	mov		rcx, qword ptr [rbp - 0x40]
0x7fffeafcfb4e:	mov		qword ptr [rcx + 8], rax
0x7fffeafcfb52:	jmp		0x7fffeafd06d7
disassembling symbol '.LBB48_8':
textAddr: 0x7fffeafcfb57, textSize: 89
0x7fffeafcfb57:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcfb5b:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcfb5f:	cmp		rax, qword ptr [rcx + 0x20]
0x7fffeafcfb63:	jne		0x7fffeafcfbb0
0x7fffeafcfb69:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafcfb6d:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcfb71:	add		rax, qword ptr [rcx + 8]
0x7fffeafcfb75:	mov		qword ptr [rcx + 8], rax
0x7fffeafcfb79:	mov		qword ptr [rbp - 0x58], rax
0x7fffeafcfb7d:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafcfb81:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcfb85:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafcfb89:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafcfb8d:	or		rax, 1
0x7fffeafcfb93:	mov		rcx, qword ptr [rbp - 0x40]
0x7fffeafcfb97:	mov		qword ptr [rcx + 8], rax
0x7fffeafcfb9b:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafcfb9f:	mov		rcx, qword ptr [rbp - 0x40]
0x7fffeafcfba3:	mov		rdx, qword ptr [rbp - 0x58]
0x7fffeafcfba7:	mov		qword ptr [rcx + rdx], rax
0x7fffeafcfbab:	jmp		0x7fffeafd06d2
disassembling symbol '.LBB48_10':
textAddr: 0x7fffeafcfbb0, textSize: 193
0x7fffeafcfbb0:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcfbb4:	mov		rax, qword ptr [rax + 8]
0x7fffeafcfbb8:	and		rax, 3
0x7fffeafcfbbe:	cmp		rax, 1
0x7fffeafcfbc2:	jne		0x7fffeafd01d4
0x7fffeafcfbc8:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcfbcc:	mov		rax, qword ptr [rax + 8]
0x7fffeafcfbd0:	and		rax, 0xfffffffffffffff8
0x7fffeafcfbd6:	mov		qword ptr [rbp - 0x60], rax
0x7fffeafcfbda:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafcfbde:	shr		rax, 3
0x7fffeafcfbe2:	cmp		rax, 0x20
0x7fffeafcfbe6:	jae		0x7fffeafcfd79
0x7fffeafcfbec:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcfbf0:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafcfbf4:	mov		qword ptr [rbp - 0x68], rax
0x7fffeafcfbf8:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcfbfc:	mov		rax, qword ptr [rax + 0x18]
0x7fffeafcfc00:	mov		qword ptr [rbp - 0x70], rax
0x7fffeafcfc04:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafcfc08:	shr		rax, 3
0x7fffeafcfc0c:	mov		dword ptr [rbp - 0x74], eax
0x7fffeafcfc0f:	mov		rcx, qword ptr [rbp - 0x68]
0x7fffeafcfc13:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafcfc17:	add		rdx, 0x48
0x7fffeafcfc1e:	mov		eax, dword ptr [rbp - 0x74]
0x7fffeafcfc21:	shl		eax, 1
0x7fffeafcfc24:	mov		eax, eax
0x7fffeafcfc26:	mov		esi, eax
0x7fffeafcfc28:	shl		rsi, 3
0x7fffeafcfc2c:	add		rdx, rsi
0x7fffeafcfc2f:	cmp		rcx, rdx
0x7fffeafcfc32:	mov		dil, 1
0x7fffeafcfc35:	mov		byte ptr [rbp - 0x139], dil
0x7fffeafcfc3c:	je		0x7fffeafcfc7d
0x7fffeafcfc42:	xor		eax, eax
0x7fffeafcfc44:	mov		rcx, qword ptr [rbp - 0x68]
0x7fffeafcfc48:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafcfc4c:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafcfc50:	mov		byte ptr [rbp - 0x13a], al
0x7fffeafcfc56:	jb		0x7fffeafcfc71
0x7fffeafcfc5c:	mov		rax, qword ptr [rbp - 0x68]
0x7fffeafcfc60:	mov		rax, qword ptr [rax + 0x18]
0x7fffeafcfc64:	cmp		rax, qword ptr [rbp - 0x30]
0x7fffeafcfc68:	sete		cl
0x7fffeafcfc6b:	mov		byte ptr [rbp - 0x13a], cl
disassembling symbol '.LBB48_15':
textAddr: 0x7fffeafcfc71, textSize: 12
0x7fffeafcfc71:	mov		al, byte ptr [rbp - 0x13a]
0x7fffeafcfc77:	mov		byte ptr [rbp - 0x139], al
disassembling symbol '.LBB48_16':
textAddr: 0x7fffeafcfc7d, textSize: 64
0x7fffeafcfc7d:	mov		al, byte ptr [rbp - 0x139]
0x7fffeafcfc83:	and		al, 1
0x7fffeafcfc85:	movzx		ecx, al
0x7fffeafcfc88:	movsxd		rdx, ecx
0x7fffeafcfc8b:	cmp		rdx, 0
0x7fffeafcfc8f:	je		0x7fffeafcfd6f
0x7fffeafcfc95:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafcfc99:	cmp		rax, qword ptr [rbp - 0x68]
0x7fffeafcfc9d:	jne		0x7fffeafcfcbd
0x7fffeafcfca3:	mov		ecx, dword ptr [rbp - 0x74]
0x7fffeafcfca6:	mov		eax, 1
0x7fffeafcfcab:	shl		eax, cl
0x7fffeafcfcad:	xor		eax, 0xffffffff
0x7fffeafcfcb0:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafcfcb4:	and		eax, dword ptr [rdx]
0x7fffeafcfcb6:	mov		dword ptr [rdx], eax
0x7fffeafcfcb8:	jmp		0x7fffeafcfd6a
disassembling symbol '.LBB48_19':
textAddr: 0x7fffeafcfcbd, textSize: 98
0x7fffeafcfcbd:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafcfcc1:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcfcc5:	add		rcx, 0x48
0x7fffeafcfccc:	mov		edx, dword ptr [rbp - 0x74]
0x7fffeafcfccf:	shl		edx, 1
0x7fffeafcfcd2:	mov		edx, edx
0x7fffeafcfcd4:	mov		esi, edx
0x7fffeafcfcd6:	shl		rsi, 3
0x7fffeafcfcda:	add		rcx, rsi
0x7fffeafcfcdd:	cmp		rax, rcx
0x7fffeafcfce0:	mov		dil, 1
0x7fffeafcfce3:	mov		byte ptr [rbp - 0x13b], dil
0x7fffeafcfcea:	je		0x7fffeafcfd2b
0x7fffeafcfcf0:	xor		eax, eax
0x7fffeafcfcf2:	mov		rcx, qword ptr [rbp - 0x70]
0x7fffeafcfcf6:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafcfcfa:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafcfcfe:	mov		byte ptr [rbp - 0x13c], al
0x7fffeafcfd04:	jb		0x7fffeafcfd1f
0x7fffeafcfd0a:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafcfd0e:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafcfd12:	cmp		rax, qword ptr [rbp - 0x30]
0x7fffeafcfd16:	sete		cl
0x7fffeafcfd19:	mov		byte ptr [rbp - 0x13c], cl
disassembling symbol '.LBB48_22':
textAddr: 0x7fffeafcfd1f, textSize: 12
0x7fffeafcfd1f:	mov		al, byte ptr [rbp - 0x13c]
0x7fffeafcfd25:	mov		byte ptr [rbp - 0x13b], al
disassembling symbol '.LBB48_23':
textAddr: 0x7fffeafcfd2b, textSize: 53
0x7fffeafcfd2b:	mov		al, byte ptr [rbp - 0x13b]
0x7fffeafcfd31:	and		al, 1
0x7fffeafcfd33:	movzx		ecx, al
0x7fffeafcfd36:	movsxd		rdx, ecx
0x7fffeafcfd39:	cmp		rdx, 0
0x7fffeafcfd3d:	je		0x7fffeafcfd60
0x7fffeafcfd43:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafcfd47:	mov		rcx, qword ptr [rbp - 0x68]
0x7fffeafcfd4b:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafcfd4f:	mov		rax, qword ptr [rbp - 0x68]
0x7fffeafcfd53:	mov		rcx, qword ptr [rbp - 0x70]
0x7fffeafcfd57:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafcfd5b:	jmp		0x7fffeafcfd65
disassembling symbol '.LBB48_25':
textAddr: 0x7fffeafcfd60, textSize: 5
0x7fffeafcfd60:	call		0x7fffeafc4c10
disassembling symbol '.LBB48_26':
textAddr: 0x7fffeafcfd65, textSize: 5
0x7fffeafcfd65:	jmp		0x7fffeafcfd6a
disassembling symbol '.LBB48_27':
textAddr: 0x7fffeafcfd6a, textSize: 5
0x7fffeafcfd6a:	jmp		0x7fffeafcfd74
disassembling symbol '.LBB48_28':
textAddr: 0x7fffeafcfd6f, textSize: 5
0x7fffeafcfd6f:	call		0x7fffeafc4c10
disassembling symbol '.LBB48_29':
textAddr: 0x7fffeafcfd74, textSize: 5
0x7fffeafcfd74:	jmp		0x7fffeafd01bc
disassembling symbol '.LBB48_30':
textAddr: 0x7fffeafcfd79, textSize: 153
0x7fffeafcfd79:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafcfd7d:	mov		qword ptr [rbp - 0x80], rax
0x7fffeafcfd81:	mov		rax, qword ptr [rbp - 0x80]
0x7fffeafcfd85:	mov		rax, qword ptr [rax + 0x30]
0x7fffeafcfd89:	mov		qword ptr [rbp - 0x88], rax
0x7fffeafcfd90:	mov		rax, qword ptr [rbp - 0x80]
0x7fffeafcfd94:	mov		rax, qword ptr [rax + 0x18]
0x7fffeafcfd98:	cmp		rax, qword ptr [rbp - 0x80]
0x7fffeafcfd9c:	je		0x7fffeafcfe5d
0x7fffeafcfda2:	xor		eax, eax
0x7fffeafcfda4:	mov		rcx, qword ptr [rbp - 0x80]
0x7fffeafcfda8:	mov		rcx, qword ptr [rcx + 0x10]
0x7fffeafcfdac:	mov		qword ptr [rbp - 0x98], rcx
0x7fffeafcfdb3:	mov		rcx, qword ptr [rbp - 0x80]
0x7fffeafcfdb7:	mov		rcx, qword ptr [rcx + 0x18]
0x7fffeafcfdbb:	mov		qword ptr [rbp - 0x90], rcx
0x7fffeafcfdc2:	mov		rcx, qword ptr [rbp - 0x98]
0x7fffeafcfdc9:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafcfdcd:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafcfdd1:	mov		byte ptr [rbp - 0x13d], al
0x7fffeafcfdd7:	jb		0x7fffeafcfe12
0x7fffeafcfddd:	xor		eax, eax
0x7fffeafcfddf:	mov		rcx, qword ptr [rbp - 0x98]
0x7fffeafcfde6:	mov		rcx, qword ptr [rcx + 0x18]
0x7fffeafcfdea:	cmp		rcx, qword ptr [rbp - 0x80]
0x7fffeafcfdee:	mov		byte ptr [rbp - 0x13d], al
0x7fffeafcfdf4:	jne		0x7fffeafcfe12
0x7fffeafcfdfa:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafcfe01:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafcfe05:	cmp		rax, qword ptr [rbp - 0x80]
0x7fffeafcfe09:	sete		cl
0x7fffeafcfe0c:	mov		byte ptr [rbp - 0x13d], cl
disassembling symbol '.LBB48_34':
textAddr: 0x7fffeafcfe12, textSize: 65
0x7fffeafcfe12:	mov		al, byte ptr [rbp - 0x13d]
0x7fffeafcfe18:	and		al, 1
0x7fffeafcfe1a:	movzx		ecx, al
0x7fffeafcfe1d:	movsxd		rdx, ecx
0x7fffeafcfe20:	cmp		rdx, 0
0x7fffeafcfe24:	je		0x7fffeafcfe53
0x7fffeafcfe2a:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafcfe31:	mov		rcx, qword ptr [rbp - 0x98]
0x7fffeafcfe38:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafcfe3c:	mov		rax, qword ptr [rbp - 0x98]
0x7fffeafcfe43:	mov		rcx, qword ptr [rbp - 0x90]
0x7fffeafcfe4a:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafcfe4e:	jmp		0x7fffeafcfe58
disassembling symbol '.LBB48_36':
textAddr: 0x7fffeafcfe53, textSize: 5
0x7fffeafcfe53:	call		0x7fffeafc4c10
disassembling symbol '.LBB48_37':
textAddr: 0x7fffeafcfe58, textSize: 5
0x7fffeafcfe58:	jmp		0x7fffeafcff8c
disassembling symbol '.LBB48_38':
textAddr: 0x7fffeafcfe5d, textSize: 91
0x7fffeafcfe5d:	mov		rax, qword ptr [rbp - 0x80]
0x7fffeafcfe61:	mov		rcx, rax
0x7fffeafcfe64:	add		rcx, 0x20
0x7fffeafcfe6b:	add		rcx, 8
0x7fffeafcfe72:	mov		qword ptr [rbp - 0xa0], rcx
0x7fffeafcfe79:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafcfe7d:	mov		qword ptr [rbp - 0x90], rax
0x7fffeafcfe84:	cmp		rax, 0
0x7fffeafcfe88:	jne		0x7fffeafcfeb8
0x7fffeafcfe8e:	mov		rax, qword ptr [rbp - 0x80]
0x7fffeafcfe92:	mov		rcx, rax
0x7fffeafcfe95:	add		rcx, 0x20
0x7fffeafcfe9c:	mov		qword ptr [rbp - 0xa0], rcx
0x7fffeafcfea3:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafcfea7:	mov		qword ptr [rbp - 0x90], rax
0x7fffeafcfeae:	cmp		rax, 0
0x7fffeafcfeb2:	je		0x7fffeafcff87
disassembling symbol '.LBB48_40':
textAddr: 0x7fffeafcfeb8, textSize: 5
0x7fffeafcfeb8:	jmp		0x7fffeafcfebd
disassembling symbol '.LBB48_41':
textAddr: 0x7fffeafcfebd, textSize: 88
0x7fffeafcfebd:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafcfec4:	mov		rcx, rax
0x7fffeafcfec7:	add		rcx, 0x20
0x7fffeafcfece:	add		rcx, 8
0x7fffeafcfed5:	mov		qword ptr [rbp - 0xa8], rcx
0x7fffeafcfedc:	cmp		qword ptr [rax + 0x28], 0
0x7fffeafcfee1:	mov		dl, 1
0x7fffeafcfee3:	mov		byte ptr [rbp - 0x13e], dl
0x7fffeafcfee9:	jne		0x7fffeafcff15
0x7fffeafcfeef:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafcfef6:	mov		rcx, rax
0x7fffeafcfef9:	add		rcx, 0x20
0x7fffeafcff00:	mov		qword ptr [rbp - 0xa8], rcx
0x7fffeafcff07:	cmp		qword ptr [rax + 0x20], 0
0x7fffeafcff0c:	setne		dl
0x7fffeafcff0f:	mov		byte ptr [rbp - 0x13e], dl
disassembling symbol '.LBB48_43':
textAddr: 0x7fffeafcff15, textSize: 19
0x7fffeafcff15:	mov		al, byte ptr [rbp - 0x13e]
0x7fffeafcff1b:	test		al, 1
0x7fffeafcff1d:	jne		0x7fffeafcff28
0x7fffeafcff23:	jmp		0x7fffeafcff45
disassembling symbol '.LBB48_44':
textAddr: 0x7fffeafcff28, textSize: 29
0x7fffeafcff28:	mov		rax, qword ptr [rbp - 0xa8]
0x7fffeafcff2f:	mov		qword ptr [rbp - 0xa0], rax
0x7fffeafcff36:	mov		rax, qword ptr [rax]
0x7fffeafcff39:	mov		qword ptr [rbp - 0x90], rax
0x7fffeafcff40:	jmp		0x7fffeafcfebd
disassembling symbol '.LBB48_45':
textAddr: 0x7fffeafcff45, textSize: 56
0x7fffeafcff45:	mov		rax, qword ptr [rbp - 0xa0]
0x7fffeafcff4c:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafcff50:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafcff54:	setae		dl
0x7fffeafcff57:	and		dl, 1
0x7fffeafcff5a:	movzx		esi, dl
0x7fffeafcff5d:	movsxd		rax, esi
0x7fffeafcff60:	cmp		rax, 0
0x7fffeafcff64:	je		0x7fffeafcff7d
0x7fffeafcff6a:	mov		rax, qword ptr [rbp - 0xa0]
0x7fffeafcff71:	mov		qword ptr [rax], 0
0x7fffeafcff78:	jmp		0x7fffeafcff82
disassembling symbol '.LBB48_47':
textAddr: 0x7fffeafcff7d, textSize: 5
0x7fffeafcff7d:	call		0x7fffeafc4c10
disassembling symbol '.LBB48_48':
textAddr: 0x7fffeafcff82, textSize: 5
0x7fffeafcff82:	jmp		0x7fffeafcff87
disassembling symbol '.LBB48_49':
textAddr: 0x7fffeafcff87, textSize: 5
0x7fffeafcff87:	jmp		0x7fffeafcff8c
disassembling symbol '.LBB48_50':
textAddr: 0x7fffeafcff8c, textSize: 121
0x7fffeafcff8c:	cmp		qword ptr [rbp - 0x88], 0
0x7fffeafcff94:	je		0x7fffeafd01b7
0x7fffeafcff9a:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcff9e:	add		rax, 0x258
0x7fffeafcffa4:	mov		rcx, qword ptr [rbp - 0x80]
0x7fffeafcffa8:	mov		edx, dword ptr [rcx + 0x38]
0x7fffeafcffab:	mov		ecx, edx
0x7fffeafcffad:	shl		rcx, 3
0x7fffeafcffb1:	add		rax, rcx
0x7fffeafcffb4:	mov		qword ptr [rbp - 0xb0], rax
0x7fffeafcffbb:	mov		rax, qword ptr [rbp - 0x80]
0x7fffeafcffbf:	mov		rcx, qword ptr [rbp - 0xb0]
0x7fffeafcffc6:	cmp		rax, qword ptr [rcx]
0x7fffeafcffc9:	jne		0x7fffeafd000a
0x7fffeafcffcf:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafcffd6:	mov		rcx, qword ptr [rbp - 0xb0]
0x7fffeafcffdd:	mov		qword ptr [rcx], rax
0x7fffeafcffe0:	cmp		rax, 0
0x7fffeafcffe4:	jne		0x7fffeafd0005
0x7fffeafcffea:	mov		rax, qword ptr [rbp - 0x80]
0x7fffeafcffee:	mov		ecx, dword ptr [rax + 0x38]
0x7fffeafcfff1:	mov		edx, 1
0x7fffeafcfff6:	shl		edx, cl
0x7fffeafcfff8:	xor		edx, 0xffffffff
0x7fffeafcfffb:	mov		rax, qword ptr [rbp - 8]
0x7fffeafcffff:	and		edx, dword ptr [rax + 4]
0x7fffeafd0002:	mov		dword ptr [rax + 4], edx
disassembling symbol '.LBB48_54':
textAddr: 0x7fffeafd0005, textSize: 5
0x7fffeafd0005:	jmp		0x7fffeafd007c
disassembling symbol '.LBB48_55':
textAddr: 0x7fffeafd000a, textSize: 81
0x7fffeafd000a:	mov		rax, qword ptr [rbp - 0x88]
0x7fffeafd0011:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd0015:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafd0019:	setae		dl
0x7fffeafd001c:	and		dl, 1
0x7fffeafd001f:	movzx		esi, dl
0x7fffeafd0022:	movsxd		rax, esi
0x7fffeafd0025:	cmp		rax, 0
0x7fffeafd0029:	je		0x7fffeafd0072
0x7fffeafd002f:	mov		rax, qword ptr [rbp - 0x88]
0x7fffeafd0036:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafd003a:	cmp		rax, qword ptr [rbp - 0x80]
0x7fffeafd003e:	jne		0x7fffeafd005b
0x7fffeafd0044:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafd004b:	mov		rcx, qword ptr [rbp - 0x88]
0x7fffeafd0052:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafd0056:	jmp		0x7fffeafd006d
disassembling symbol '.LBB48_58':
textAddr: 0x7fffeafd005b, textSize: 18
0x7fffeafd005b:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafd0062:	mov		rcx, qword ptr [rbp - 0x88]
0x7fffeafd0069:	mov		qword ptr [rcx + 0x28], rax
disassembling symbol '.LBB48_59':
textAddr: 0x7fffeafd006d, textSize: 5
0x7fffeafd006d:	jmp		0x7fffeafd0077
disassembling symbol '.LBB48_60':
textAddr: 0x7fffeafd0072, textSize: 5
0x7fffeafd0072:	call		0x7fffeafc4c10
disassembling symbol '.LBB48_61':
textAddr: 0x7fffeafd0077, textSize: 5
0x7fffeafd0077:	jmp		0x7fffeafd007c
disassembling symbol '.LBB48_62':
textAddr: 0x7fffeafd007c, textSize: 172
0x7fffeafd007c:	cmp		qword ptr [rbp - 0x90], 0
0x7fffeafd0084:	je		0x7fffeafd01b2
0x7fffeafd008a:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafd0091:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd0095:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafd0099:	setae		dl
0x7fffeafd009c:	and		dl, 1
0x7fffeafd009f:	movzx		esi, dl
0x7fffeafd00a2:	movsxd		rax, esi
0x7fffeafd00a5:	cmp		rax, 0
0x7fffeafd00a9:	je		0x7fffeafd01a8
0x7fffeafd00af:	mov		rax, qword ptr [rbp - 0x88]
0x7fffeafd00b6:	mov		rcx, qword ptr [rbp - 0x90]
0x7fffeafd00bd:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafd00c1:	mov		rax, qword ptr [rbp - 0x80]
0x7fffeafd00c5:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafd00c9:	mov		qword ptr [rbp - 0xb8], rax
0x7fffeafd00d0:	cmp		rax, 0
0x7fffeafd00d4:	je		0x7fffeafd0132
0x7fffeafd00da:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafd00e1:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd00e5:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafd00e9:	setae		dl
0x7fffeafd00ec:	and		dl, 1
0x7fffeafd00ef:	movzx		esi, dl
0x7fffeafd00f2:	movsxd		rax, esi
0x7fffeafd00f5:	cmp		rax, 0
0x7fffeafd00f9:	je		0x7fffeafd0128
0x7fffeafd00ff:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafd0106:	mov		rcx, qword ptr [rbp - 0x90]
0x7fffeafd010d:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafd0111:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafd0118:	mov		rcx, qword ptr [rbp - 0xb8]
0x7fffeafd011f:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafd0123:	jmp		0x7fffeafd012d
disassembling symbol '.LBB48_67':
textAddr: 0x7fffeafd0128, textSize: 5
0x7fffeafd0128:	call		0x7fffeafc4c10
disassembling symbol '.LBB48_68':
textAddr: 0x7fffeafd012d, textSize: 5
0x7fffeafd012d:	jmp		0x7fffeafd0132
disassembling symbol '.LBB48_69':
textAddr: 0x7fffeafd0132, textSize: 103
0x7fffeafd0132:	mov		rax, qword ptr [rbp - 0x80]
0x7fffeafd0136:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafd013a:	mov		qword ptr [rbp - 0xc0], rax
0x7fffeafd0141:	cmp		rax, 0
0x7fffeafd0145:	je		0x7fffeafd01a3
0x7fffeafd014b:	mov		rax, qword ptr [rbp - 0xc0]
0x7fffeafd0152:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd0156:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafd015a:	setae		dl
0x7fffeafd015d:	and		dl, 1
0x7fffeafd0160:	movzx		esi, dl
0x7fffeafd0163:	movsxd		rax, esi
0x7fffeafd0166:	cmp		rax, 0
0x7fffeafd016a:	je		0x7fffeafd0199
0x7fffeafd0170:	mov		rax, qword ptr [rbp - 0xc0]
0x7fffeafd0177:	mov		rcx, qword ptr [rbp - 0x90]
0x7fffeafd017e:	mov		qword ptr [rcx + 0x28], rax
0x7fffeafd0182:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafd0189:	mov		rcx, qword ptr [rbp - 0xc0]
0x7fffeafd0190:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafd0194:	jmp		0x7fffeafd019e
disassembling symbol '.LBB48_72':
textAddr: 0x7fffeafd0199, textSize: 5
0x7fffeafd0199:	call		0x7fffeafc4c10
disassembling symbol '.LBB48_73':
textAddr: 0x7fffeafd019e, textSize: 5
0x7fffeafd019e:	jmp		0x7fffeafd01a3
disassembling symbol '.LBB48_74':
textAddr: 0x7fffeafd01a3, textSize: 5
0x7fffeafd01a3:	jmp		0x7fffeafd01ad
disassembling symbol '.LBB48_75':
textAddr: 0x7fffeafd01a8, textSize: 5
0x7fffeafd01a8:	call		0x7fffeafc4c10
disassembling symbol '.LBB48_76':
textAddr: 0x7fffeafd01ad, textSize: 5
0x7fffeafd01ad:	jmp		0x7fffeafd01b2
disassembling symbol '.LBB48_77':
textAddr: 0x7fffeafd01b2, textSize: 5
0x7fffeafd01b2:	jmp		0x7fffeafd01b7
disassembling symbol '.LBB48_78':
textAddr: 0x7fffeafd01b7, textSize: 5
0x7fffeafd01b7:	jmp		0x7fffeafd01bc
disassembling symbol '.LBB48_79':
textAddr: 0x7fffeafd01bc, textSize: 24
0x7fffeafd01bc:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafd01c0:	add		rax, qword ptr [rbp - 0x60]
0x7fffeafd01c4:	mov		qword ptr [rbp - 0x30], rax
0x7fffeafd01c8:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafd01cc:	add		rax, qword ptr [rbp - 0x48]
0x7fffeafd01d0:	mov		qword ptr [rbp - 0x48], rax
disassembling symbol '.LBB48_80':
textAddr: 0x7fffeafd01d4, textSize: 193
0x7fffeafd01d4:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafd01d8:	mov		rcx, qword ptr [rax + 8]
0x7fffeafd01dc:	and		rcx, 0xfffffffffffffffe
0x7fffeafd01e3:	mov		qword ptr [rax + 8], rcx
0x7fffeafd01e7:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafd01eb:	or		rax, 1
0x7fffeafd01f1:	mov		rcx, qword ptr [rbp - 0x40]
0x7fffeafd01f5:	mov		qword ptr [rcx + 8], rax
0x7fffeafd01f9:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafd01fd:	mov		rcx, qword ptr [rbp - 0x40]
0x7fffeafd0201:	mov		rdx, qword ptr [rbp - 0x48]
0x7fffeafd0205:	mov		qword ptr [rcx + rdx], rax
0x7fffeafd0209:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafd020d:	shr		rax, 3
0x7fffeafd0211:	cmp		rax, 0x20
0x7fffeafd0215:	jae		0x7fffeafd0320
0x7fffeafd021b:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafd021f:	shr		rax, 3
0x7fffeafd0223:	mov		dword ptr [rbp - 0xc4], eax
0x7fffeafd0229:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd022d:	add		rcx, 0x48
0x7fffeafd0234:	mov		eax, dword ptr [rbp - 0xc4]
0x7fffeafd023a:	shl		eax, 1
0x7fffeafd023d:	mov		eax, eax
0x7fffeafd023f:	mov		edx, eax
0x7fffeafd0241:	shl		rdx, 3
0x7fffeafd0245:	add		rcx, rdx
0x7fffeafd0248:	mov		qword ptr [rbp - 0xd0], rcx
0x7fffeafd024f:	mov		rcx, qword ptr [rbp - 0xd0]
0x7fffeafd0256:	mov		qword ptr [rbp - 0xd8], rcx
0x7fffeafd025d:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd0261:	mov		eax, dword ptr [rcx]
0x7fffeafd0263:	mov		ecx, dword ptr [rbp - 0xc4]
0x7fffeafd0269:	mov		esi, 1
0x7fffeafd026e:	shl		esi, cl
0x7fffeafd0270:	and		eax, esi
0x7fffeafd0272:	cmp		eax, 0
0x7fffeafd0275:	jne		0x7fffeafd0295
0x7fffeafd027b:	mov		ecx, dword ptr [rbp - 0xc4]
0x7fffeafd0281:	mov		eax, 1
0x7fffeafd0286:	shl		eax, cl
0x7fffeafd0288:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafd028c:	or		eax, dword ptr [rdx]
0x7fffeafd028e:	mov		dword ptr [rdx], eax
0x7fffeafd0290:	jmp		0x7fffeafd02df
disassembling symbol '.LBB48_83':
textAddr: 0x7fffeafd0295, textSize: 64
0x7fffeafd0295:	mov		rax, qword ptr [rbp - 0xd0]
0x7fffeafd029c:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafd02a0:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd02a4:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafd02a8:	setae		dl
0x7fffeafd02ab:	and		dl, 1
0x7fffeafd02ae:	movzx		esi, dl
0x7fffeafd02b1:	movsxd		rax, esi
0x7fffeafd02b4:	cmp		rax, 0
0x7fffeafd02b8:	je		0x7fffeafd02d5
0x7fffeafd02be:	mov		rax, qword ptr [rbp - 0xd0]
0x7fffeafd02c5:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafd02c9:	mov		qword ptr [rbp - 0xd8], rax
0x7fffeafd02d0:	jmp		0x7fffeafd02da
disassembling symbol '.LBB48_85':
textAddr: 0x7fffeafd02d5, textSize: 5
0x7fffeafd02d5:	call		0x7fffeafc4c10
disassembling symbol '.LBB48_86':
textAddr: 0x7fffeafd02da, textSize: 5
0x7fffeafd02da:	jmp		0x7fffeafd02df
disassembling symbol '.LBB48_87':
textAddr: 0x7fffeafd02df, textSize: 65
0x7fffeafd02df:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafd02e3:	mov		rcx, qword ptr [rbp - 0xd0]
0x7fffeafd02ea:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafd02ee:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafd02f2:	mov		rcx, qword ptr [rbp - 0xd8]
0x7fffeafd02f9:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafd02fd:	mov		rax, qword ptr [rbp - 0xd8]
0x7fffeafd0304:	mov		rcx, qword ptr [rbp - 0x40]
0x7fffeafd0308:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafd030c:	mov		rax, qword ptr [rbp - 0xd0]
0x7fffeafd0313:	mov		rcx, qword ptr [rbp - 0x40]
0x7fffeafd0317:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafd031b:	jmp		0x7fffeafd06cd
disassembling symbol '.LBB48_88':
textAddr: 0x7fffeafd0320, textSize: 53
0x7fffeafd0320:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafd0324:	mov		qword ptr [rbp - 0xe0], rax
0x7fffeafd032b:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafd032f:	shr		rax, 8
0x7fffeafd0333:	mov		dword ptr [rbp - 0xf0], eax
0x7fffeafd0339:	cmp		dword ptr [rbp - 0xf0], 0
0x7fffeafd0340:	jne		0x7fffeafd0355
0x7fffeafd0346:	mov		dword ptr [rbp - 0xec], 0
0x7fffeafd0350:	jmp		0x7fffeafd03c3
disassembling symbol '.LBB48_90':
textAddr: 0x7fffeafd0355, textSize: 31
0x7fffeafd0355:	cmp		dword ptr [rbp - 0xf0], 0xffff
0x7fffeafd035f:	jbe		0x7fffeafd0374
0x7fffeafd0365:	mov		dword ptr [rbp - 0xec], 0x1f
0x7fffeafd036f:	jmp		0x7fffeafd03be
disassembling symbol '.LBB48_92':
textAddr: 0x7fffeafd0374, textSize: 74
0x7fffeafd0374:	mov		eax, dword ptr [rbp - 0xf0]
0x7fffeafd037a:	bsr		eax, eax
0x7fffeafd037d:	xor		eax, 0x1f
0x7fffeafd0380:	mov		ecx, 0x1f
0x7fffeafd0385:	sub		ecx, eax
0x7fffeafd0387:	mov		dword ptr [rbp - 0xf4], ecx
0x7fffeafd038d:	mov		eax, dword ptr [rbp - 0xf4]
0x7fffeafd0393:	shl		eax, 1
0x7fffeafd0396:	mov		eax, eax
0x7fffeafd0398:	mov		edx, eax
0x7fffeafd039a:	mov		rsi, qword ptr [rbp - 0x48]
0x7fffeafd039e:	mov		eax, dword ptr [rbp - 0xf4]
0x7fffeafd03a4:	add		eax, 7
0x7fffeafd03a7:	mov		eax, eax
0x7fffeafd03a9:	mov		ecx, eax
0x7fffeafd03ab:	shr		rsi, cl
0x7fffeafd03ae:	and		rsi, 1
0x7fffeafd03b5:	add		rdx, rsi
0x7fffeafd03b8:	mov		dword ptr [rbp - 0xec], edx
disassembling symbol '.LBB48_93':
textAddr: 0x7fffeafd03be, textSize: 5
0x7fffeafd03be:	jmp		0x7fffeafd03c3
disassembling symbol '.LBB48_94':
textAddr: 0x7fffeafd03c3, textSize: 215
0x7fffeafd03c3:	mov		rax, qword ptr [rbp - 8]
0x7fffeafd03c7:	add		rax, 0x258
0x7fffeafd03cd:	mov		ecx, dword ptr [rbp - 0xec]
0x7fffeafd03d3:	mov		edx, ecx
0x7fffeafd03d5:	shl		rdx, 3
0x7fffeafd03d9:	add		rax, rdx
0x7fffeafd03dc:	mov		qword ptr [rbp - 0xe8], rax
0x7fffeafd03e3:	mov		ecx, dword ptr [rbp - 0xec]
0x7fffeafd03e9:	mov		rax, qword ptr [rbp - 0xe0]
0x7fffeafd03f0:	mov		dword ptr [rax + 0x38], ecx
0x7fffeafd03f3:	mov		rax, qword ptr [rbp - 0xe0]
0x7fffeafd03fa:	mov		qword ptr [rax + 0x28], 0
0x7fffeafd0402:	mov		rax, qword ptr [rbp - 0xe0]
0x7fffeafd0409:	mov		qword ptr [rax + 0x20], 0
0x7fffeafd0411:	mov		rax, qword ptr [rbp - 8]
0x7fffeafd0415:	mov		ecx, dword ptr [rax + 4]
0x7fffeafd0418:	mov		esi, dword ptr [rbp - 0xec]
0x7fffeafd041e:	mov		dword ptr [rbp - 0x144], ecx
0x7fffeafd0424:	mov		ecx, esi
0x7fffeafd0426:	mov		esi, 1
0x7fffeafd042b:	shl		esi, cl
0x7fffeafd042d:	mov		edi, dword ptr [rbp - 0x144]
0x7fffeafd0433:	and		edi, esi
0x7fffeafd0435:	cmp		edi, 0
0x7fffeafd0438:	jne		0x7fffeafd049a
0x7fffeafd043e:	mov		ecx, dword ptr [rbp - 0xec]
0x7fffeafd0444:	mov		eax, 1
0x7fffeafd0449:	shl		eax, cl
0x7fffeafd044b:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafd044f:	or		eax, dword ptr [rdx + 4]
0x7fffeafd0452:	mov		dword ptr [rdx + 4], eax
0x7fffeafd0455:	mov		rdx, qword ptr [rbp - 0xe0]
0x7fffeafd045c:	mov		rsi, qword ptr [rbp - 0xe8]
0x7fffeafd0463:	mov		qword ptr [rsi], rdx
0x7fffeafd0466:	mov		rdx, qword ptr [rbp - 0xe8]
0x7fffeafd046d:	mov		rsi, qword ptr [rbp - 0xe0]
0x7fffeafd0474:	mov		qword ptr [rsi + 0x30], rdx
0x7fffeafd0478:	mov		rdx, qword ptr [rbp - 0xe0]
0x7fffeafd047f:	mov		rsi, qword ptr [rbp - 0xe0]
0x7fffeafd0486:	mov		qword ptr [rsi + 0x18], rdx
0x7fffeafd048a:	mov		rsi, qword ptr [rbp - 0xe0]
0x7fffeafd0491:	mov		qword ptr [rsi + 0x10], rdx
0x7fffeafd0495:	jmp		0x7fffeafd06c8
disassembling symbol '.LBB48_96':
textAddr: 0x7fffeafd049a, textSize: 57
0x7fffeafd049a:	mov		rax, qword ptr [rbp - 0xe8]
0x7fffeafd04a1:	mov		rax, qword ptr [rax]
0x7fffeafd04a4:	mov		qword ptr [rbp - 0x100], rax
0x7fffeafd04ab:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafd04af:	cmp		dword ptr [rbp - 0xec], 0x1f
0x7fffeafd04b6:	mov		qword ptr [rbp - 0x150], rax
0x7fffeafd04bd:	jne		0x7fffeafd04d3
0x7fffeafd04c3:	xor		eax, eax
0x7fffeafd04c5:	mov		ecx, eax
0x7fffeafd04c7:	mov		qword ptr [rbp - 0x158], rcx
0x7fffeafd04ce:	jmp		0x7fffeafd04f5
disassembling symbol '.LBB48_98':
textAddr: 0x7fffeafd04d3, textSize: 34
0x7fffeafd04d3:	mov		eax, dword ptr [rbp - 0xec]
0x7fffeafd04d9:	shr		eax, 1
0x7fffeafd04dc:	add		eax, 8
0x7fffeafd04df:	sub		eax, 2
0x7fffeafd04e2:	mov		eax, eax
0x7fffeafd04e4:	mov		ecx, eax
0x7fffeafd04e6:	mov		edx, 0x3f
0x7fffeafd04eb:	sub		rdx, rcx
0x7fffeafd04ee:	mov		qword ptr [rbp - 0x158], rdx
disassembling symbol '.LBB48_99':
textAddr: 0x7fffeafd04f5, textSize: 27
0x7fffeafd04f5:	mov		rax, qword ptr [rbp - 0x158]
0x7fffeafd04fc:	mov		rcx, rax
0x7fffeafd04ff:	mov		rax, qword ptr [rbp - 0x150]
0x7fffeafd0506:	shl		rax, cl
0x7fffeafd0509:	mov		qword ptr [rbp - 0x108], rax
disassembling symbol '.LBB48_100':
textAddr: 0x7fffeafd0510, textSize: 129
0x7fffeafd0510:	mov		rax, qword ptr [rbp - 0x100]
0x7fffeafd0517:	mov		rax, qword ptr [rax + 8]
0x7fffeafd051b:	and		rax, 0xfffffffffffffff8
0x7fffeafd0521:	cmp		rax, qword ptr [rbp - 0x48]
0x7fffeafd0525:	je		0x7fffeafd0605
0x7fffeafd052b:	mov		rax, qword ptr [rbp - 0x100]
0x7fffeafd0532:	add		rax, 0x20
0x7fffeafd0538:	mov		rcx, qword ptr [rbp - 0x108]
0x7fffeafd053f:	shr		rcx, 0x3f
0x7fffeafd0543:	and		rcx, 1
0x7fffeafd054a:	shl		rcx, 3
0x7fffeafd054e:	add		rax, rcx
0x7fffeafd0551:	mov		qword ptr [rbp - 0x110], rax
0x7fffeafd0558:	mov		rax, qword ptr [rbp - 0x108]
0x7fffeafd055f:	shl		rax, 1
0x7fffeafd0563:	mov		qword ptr [rbp - 0x108], rax
0x7fffeafd056a:	mov		rax, qword ptr [rbp - 0x110]
0x7fffeafd0571:	cmp		qword ptr [rax], 0
0x7fffeafd0575:	je		0x7fffeafd0591
0x7fffeafd057b:	mov		rax, qword ptr [rbp - 0x110]
0x7fffeafd0582:	mov		rax, qword ptr [rax]
0x7fffeafd0585:	mov		qword ptr [rbp - 0x100], rax
0x7fffeafd058c:	jmp		0x7fffeafd0600
disassembling symbol '.LBB48_103':
textAddr: 0x7fffeafd0591, textSize: 106
0x7fffeafd0591:	mov		rax, qword ptr [rbp - 0x110]
0x7fffeafd0598:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd059c:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafd05a0:	setae		dl
0x7fffeafd05a3:	and		dl, 1
0x7fffeafd05a6:	movzx		esi, dl
0x7fffeafd05a9:	movsxd		rax, esi
0x7fffeafd05ac:	cmp		rax, 0
0x7fffeafd05b0:	je		0x7fffeafd05fb
0x7fffeafd05b6:	mov		rax, qword ptr [rbp - 0xe0]
0x7fffeafd05bd:	mov		rcx, qword ptr [rbp - 0x110]
0x7fffeafd05c4:	mov		qword ptr [rcx], rax
0x7fffeafd05c7:	mov		rax, qword ptr [rbp - 0x100]
0x7fffeafd05ce:	mov		rcx, qword ptr [rbp - 0xe0]
0x7fffeafd05d5:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafd05d9:	mov		rax, qword ptr [rbp - 0xe0]
0x7fffeafd05e0:	mov		rcx, qword ptr [rbp - 0xe0]
0x7fffeafd05e7:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafd05eb:	mov		rcx, qword ptr [rbp - 0xe0]
0x7fffeafd05f2:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafd05f6:	jmp		0x7fffeafd06c3
disassembling symbol '.LBB48_105':
textAddr: 0x7fffeafd05fb, textSize: 5
0x7fffeafd05fb:	call		0x7fffeafc4c10
disassembling symbol '.LBB48_106':
textAddr: 0x7fffeafd0600, textSize: 5
0x7fffeafd0600:	jmp		0x7fffeafd06be
disassembling symbol '.LBB48_107':
textAddr: 0x7fffeafd0605, textSize: 71
0x7fffeafd0605:	xor		eax, eax
0x7fffeafd0607:	mov		rcx, qword ptr [rbp - 0x100]
0x7fffeafd060e:	mov		rcx, qword ptr [rcx + 0x10]
0x7fffeafd0612:	mov		qword ptr [rbp - 0x118], rcx
0x7fffeafd0619:	mov		rcx, qword ptr [rbp - 0x100]
0x7fffeafd0620:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafd0624:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafd0628:	mov		byte ptr [rbp - 0x159], al
0x7fffeafd062e:	jb		0x7fffeafd064c
0x7fffeafd0634:	mov		rax, qword ptr [rbp - 0x118]
0x7fffeafd063b:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd063f:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafd0643:	setae		dl
0x7fffeafd0646:	mov		byte ptr [rbp - 0x159], dl
disassembling symbol '.LBB48_109':
textAddr: 0x7fffeafd064c, textSize: 109
0x7fffeafd064c:	mov		al, byte ptr [rbp - 0x159]
0x7fffeafd0652:	and		al, 1
0x7fffeafd0654:	movzx		ecx, al
0x7fffeafd0657:	movsxd		rdx, ecx
0x7fffeafd065a:	cmp		rdx, 0
0x7fffeafd065e:	je		0x7fffeafd06b9
0x7fffeafd0664:	mov		rax, qword ptr [rbp - 0xe0]
0x7fffeafd066b:	mov		rcx, qword ptr [rbp - 0x118]
0x7fffeafd0672:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafd0676:	mov		rcx, qword ptr [rbp - 0x100]
0x7fffeafd067d:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafd0681:	mov		rax, qword ptr [rbp - 0x118]
0x7fffeafd0688:	mov		rcx, qword ptr [rbp - 0xe0]
0x7fffeafd068f:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafd0693:	mov		rax, qword ptr [rbp - 0x100]
0x7fffeafd069a:	mov		rcx, qword ptr [rbp - 0xe0]
0x7fffeafd06a1:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafd06a5:	mov		rax, qword ptr [rbp - 0xe0]
0x7fffeafd06ac:	mov		qword ptr [rax + 0x30], 0
0x7fffeafd06b4:	jmp		0x7fffeafd06c3
disassembling symbol '.LBB48_111':
textAddr: 0x7fffeafd06b9, textSize: 5
0x7fffeafd06b9:	call		0x7fffeafc4c10
disassembling symbol '.LBB48_112':
textAddr: 0x7fffeafd06be, textSize: 5
0x7fffeafd06be:	jmp		0x7fffeafd0510
disassembling symbol '.LBB48_113':
textAddr: 0x7fffeafd06c3, textSize: 5
0x7fffeafd06c3:	jmp		0x7fffeafd06c8
disassembling symbol '.LBB48_114':
textAddr: 0x7fffeafd06c8, textSize: 5
0x7fffeafd06c8:	jmp		0x7fffeafd06cd
disassembling symbol '.LBB48_115':
textAddr: 0x7fffeafd06cd, textSize: 5
0x7fffeafd06cd:	jmp		0x7fffeafd06d2
disassembling symbol '.LBB48_116':
textAddr: 0x7fffeafd06d2, textSize: 5
0x7fffeafd06d2:	jmp		0x7fffeafd06d7
disassembling symbol '.LBB48_117':
textAddr: 0x7fffeafd06d7, textSize: 25
0x7fffeafd06d7:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafd06db:	add		rax, 0x10
0x7fffeafd06e1:	add		rsp, 0x160
0x7fffeafd06e8:	pop		rbp
0x7fffeafd06e9:	ret		
0x7fffeafd06ea:	nop		word ptr [rax + rax]
disassembling symbol 'add_segment':
textAddr: 0x7fffeafd06f0, textSize: 2000
0x7fffeafd06f0:	push		rbp
0x7fffeafd06f1:	mov		rbp, rsp
0x7fffeafd06f4:	sub		rsp, 0x130
0x7fffeafd06fb:	mov		qword ptr [rbp - 8], rdi
0x7fffeafd06ff:	mov		qword ptr [rbp - 0x10], rsi
0x7fffeafd0703:	mov		qword ptr [rbp - 0x18], rdx
0x7fffeafd0707:	mov		dword ptr [rbp - 0x1c], ecx
0x7fffeafd070a:	mov		rax, qword ptr [rbp - 8]
0x7fffeafd070e:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafd0712:	mov		qword ptr [rbp - 0x28], rax
0x7fffeafd0716:	mov		rdi, qword ptr [rbp - 8]
0x7fffeafd071a:	mov		rsi, qword ptr [rbp - 0x28]
0x7fffeafd071e:	call		0x7fffeafd0ec0
0x7fffeafd0723:	xor		ecx, ecx
0x7fffeafd0725:	mov		edx, ecx
0x7fffeafd0727:	mov		qword ptr [rbp - 0x30], rax
0x7fffeafd072b:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafd072f:	mov		rax, qword ptr [rax]
0x7fffeafd0732:	mov		rsi, qword ptr [rbp - 0x30]
0x7fffeafd0736:	add		rax, qword ptr [rsi + 8]
0x7fffeafd073a:	mov		qword ptr [rbp - 0x38], rax
0x7fffeafd073e:	mov		qword ptr [rbp - 0x40], 0x30
0x7fffeafd0746:	mov		rax, qword ptr [rbp - 0x38]
0x7fffeafd074a:	mov		rsi, qword ptr [rbp - 0x40]
0x7fffeafd074e:	add		rsi, 0x20
0x7fffeafd0755:	add		rsi, 0xf
0x7fffeafd075c:	sub		rdx, rsi
0x7fffeafd075f:	add		rax, rdx
0x7fffeafd0762:	mov		qword ptr [rbp - 0x48], rax
0x7fffeafd0766:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafd076a:	add		rax, 0x10
0x7fffeafd0770:	and		rax, 0xf
0x7fffeafd0776:	cmp		rax, 0
0x7fffeafd077a:	jne		0x7fffeafd0790
0x7fffeafd0780:	xor		eax, eax
0x7fffeafd0782:	mov		ecx, eax
0x7fffeafd0784:	mov		qword ptr [rbp - 0x108], rcx
0x7fffeafd078b:	jmp		0x7fffeafd07b6
0x7fffeafd0790:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafd0794:	add		rax, 0x10
0x7fffeafd079a:	and		rax, 0xf
0x7fffeafd07a0:	mov		ecx, 0x10
0x7fffeafd07a5:	sub		rcx, rax
0x7fffeafd07a8:	and		rcx, 0xf
0x7fffeafd07af:	mov		qword ptr [rbp - 0x108], rcx
0x7fffeafd07b6:	mov		rax, qword ptr [rbp - 0x108]
0x7fffeafd07bd:	mov		qword ptr [rbp - 0x50], rax
0x7fffeafd07c1:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafd07c5:	add		rax, qword ptr [rbp - 0x50]
0x7fffeafd07c9:	mov		qword ptr [rbp - 0x58], rax
0x7fffeafd07cd:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafd07d1:	mov		rcx, qword ptr [rbp - 0x28]
0x7fffeafd07d5:	add		rcx, 0x20
0x7fffeafd07dc:	cmp		rax, rcx
0x7fffeafd07df:	jae		0x7fffeafd07f5
0x7fffeafd07e5:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafd07e9:	mov		qword ptr [rbp - 0x110], rax
0x7fffeafd07f0:	jmp		0x7fffeafd0800
0x7fffeafd07f5:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafd07f9:	mov		qword ptr [rbp - 0x110], rax
0x7fffeafd0800:	mov		rax, qword ptr [rbp - 0x110]
0x7fffeafd0807:	mov		qword ptr [rbp - 0x60], rax
0x7fffeafd080b:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafd080f:	mov		qword ptr [rbp - 0x68], rax
0x7fffeafd0813:	mov		rax, qword ptr [rbp - 0x68]
0x7fffeafd0817:	add		rax, 0x10
0x7fffeafd081d:	mov		qword ptr [rbp - 0x70], rax
0x7fffeafd0821:	mov		rax, qword ptr [rbp - 0x68]
0x7fffeafd0825:	add		rax, qword ptr [rbp - 0x40]
0x7fffeafd0829:	mov		qword ptr [rbp - 0x78], rax
0x7fffeafd082d:	mov		rax, qword ptr [rbp - 0x78]
0x7fffeafd0831:	mov		qword ptr [rbp - 0x80], rax
0x7fffeafd0835:	mov		dword ptr [rbp - 0x84], 0
0x7fffeafd083f:	mov		rdi, qword ptr [rbp - 8]
0x7fffeafd0843:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafd0847:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafd084b:	sub		rcx, 0x50
0x7fffeafd0852:	mov		rsi, rax
0x7fffeafd0855:	mov		rdx, rcx
0x7fffeafd0858:	call		0x7fffeafcf6f0
0x7fffeafd085d:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafd0861:	or		rax, 1
0x7fffeafd0867:	or		rax, 2
0x7fffeafd086d:	mov		rcx, qword ptr [rbp - 0x68]
0x7fffeafd0871:	mov		qword ptr [rcx + 8], rax
0x7fffeafd0875:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafd0879:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd087d:	mov		rdx, qword ptr [rcx + 0x378]
0x7fffeafd0884:	mov		qword ptr [rax], rdx
0x7fffeafd0887:	mov		rdx, qword ptr [rcx + 0x380]
0x7fffeafd088e:	mov		qword ptr [rax + 8], rdx
0x7fffeafd0892:	mov		rdx, qword ptr [rcx + 0x388]
0x7fffeafd0899:	mov		qword ptr [rax + 0x10], rdx
0x7fffeafd089d:	mov		rcx, qword ptr [rcx + 0x390]
0x7fffeafd08a4:	mov		qword ptr [rax + 0x18], rcx
0x7fffeafd08a8:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafd08ac:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd08b0:	mov		qword ptr [rcx + 0x378], rax
0x7fffeafd08b7:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafd08bb:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd08bf:	mov		qword ptr [rcx + 0x380], rax
0x7fffeafd08c6:	mov		r8d, dword ptr [rbp - 0x1c]
0x7fffeafd08ca:	mov		rax, qword ptr [rbp - 8]
0x7fffeafd08ce:	mov		dword ptr [rax + 0x390], r8d
0x7fffeafd08d5:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafd08d9:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd08dd:	mov		qword ptr [rcx + 0x388], rax
0x7fffeafd08e4:	mov		rax, qword ptr [rbp - 0x80]
0x7fffeafd08e8:	add		rax, 8
0x7fffeafd08ee:	mov		qword ptr [rbp - 0x90], rax
0x7fffeafd08f5:	mov		rax, qword ptr [rbp - 0x80]
0x7fffeafd08f9:	mov		qword ptr [rax + 8], 0xb
0x7fffeafd0901:	mov		ecx, dword ptr [rbp - 0x84]
0x7fffeafd0907:	add		ecx, 1
0x7fffeafd090a:	mov		dword ptr [rbp - 0x84], ecx
0x7fffeafd0910:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafd0917:	add		rax, 8
0x7fffeafd091d:	cmp		rax, qword ptr [rbp - 0x38]
0x7fffeafd0921:	jae		0x7fffeafd0937
0x7fffeafd0927:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafd092e:	mov		qword ptr [rbp - 0x80], rax
0x7fffeafd0932:	jmp		0x7fffeafd093c
0x7fffeafd0937:	jmp		0x7fffeafd0941
0x7fffeafd093c:	jmp		0x7fffeafd08e4
0x7fffeafd0941:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafd0945:	cmp		rax, qword ptr [rbp - 0x28]
0x7fffeafd0949:	je		0x7fffeafd0eb2
0x7fffeafd094f:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafd0953:	mov		qword ptr [rbp - 0x98], rax
0x7fffeafd095a:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafd095e:	mov		rcx, qword ptr [rbp - 0x28]
0x7fffeafd0962:	sub		rax, rcx
0x7fffeafd0965:	mov		qword ptr [rbp - 0xa0], rax
0x7fffeafd096c:	mov		rax, qword ptr [rbp - 0x98]
0x7fffeafd0973:	add		rax, qword ptr [rbp - 0xa0]
0x7fffeafd097a:	mov		qword ptr [rbp - 0xa8], rax
0x7fffeafd0981:	mov		rax, qword ptr [rbp - 0xa8]
0x7fffeafd0988:	mov		rcx, qword ptr [rax + 8]
0x7fffeafd098c:	and		rcx, 0xfffffffffffffffe
0x7fffeafd0993:	mov		qword ptr [rax + 8], rcx
0x7fffeafd0997:	mov		rax, qword ptr [rbp - 0xa0]
0x7fffeafd099e:	or		rax, 1
0x7fffeafd09a4:	mov		rcx, qword ptr [rbp - 0x98]
0x7fffeafd09ab:	mov		qword ptr [rcx + 8], rax
0x7fffeafd09af:	mov		rax, qword ptr [rbp - 0xa0]
0x7fffeafd09b6:	mov		rcx, qword ptr [rbp - 0x98]
0x7fffeafd09bd:	mov		rdx, qword ptr [rbp - 0xa0]
0x7fffeafd09c4:	mov		qword ptr [rcx + rdx], rax
0x7fffeafd09c8:	mov		rax, qword ptr [rbp - 0xa0]
0x7fffeafd09cf:	shr		rax, 3
0x7fffeafd09d3:	cmp		rax, 0x20
0x7fffeafd09d7:	jae		0x7fffeafd0af1
0x7fffeafd09dd:	mov		rax, qword ptr [rbp - 0xa0]
0x7fffeafd09e4:	shr		rax, 3
0x7fffeafd09e8:	mov		dword ptr [rbp - 0xac], eax
0x7fffeafd09ee:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd09f2:	add		rcx, 0x48
0x7fffeafd09f9:	mov		eax, dword ptr [rbp - 0xac]
0x7fffeafd09ff:	shl		eax, 1
0x7fffeafd0a02:	mov		eax, eax
0x7fffeafd0a04:	mov		edx, eax
0x7fffeafd0a06:	shl		rdx, 3
0x7fffeafd0a0a:	add		rcx, rdx
0x7fffeafd0a0d:	mov		qword ptr [rbp - 0xb8], rcx
0x7fffeafd0a14:	mov		rcx, qword ptr [rbp - 0xb8]
0x7fffeafd0a1b:	mov		qword ptr [rbp - 0xc0], rcx
0x7fffeafd0a22:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd0a26:	mov		eax, dword ptr [rcx]
0x7fffeafd0a28:	mov		ecx, dword ptr [rbp - 0xac]
0x7fffeafd0a2e:	mov		esi, 1
0x7fffeafd0a33:	shl		esi, cl
0x7fffeafd0a35:	and		eax, esi
0x7fffeafd0a37:	cmp		eax, 0
0x7fffeafd0a3a:	jne		0x7fffeafd0a5a
0x7fffeafd0a40:	mov		ecx, dword ptr [rbp - 0xac]
0x7fffeafd0a46:	mov		eax, 1
0x7fffeafd0a4b:	shl		eax, cl
0x7fffeafd0a4d:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafd0a51:	or		eax, dword ptr [rdx]
0x7fffeafd0a53:	mov		dword ptr [rdx], eax
0x7fffeafd0a55:	jmp		0x7fffeafd0aa4
0x7fffeafd0a5a:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafd0a61:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafd0a65:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd0a69:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafd0a6d:	setae		dl
0x7fffeafd0a70:	and		dl, 1
0x7fffeafd0a73:	movzx		esi, dl
0x7fffeafd0a76:	movsxd		rax, esi
0x7fffeafd0a79:	cmp		rax, 0
0x7fffeafd0a7d:	je		0x7fffeafd0a9a
0x7fffeafd0a83:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafd0a8a:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafd0a8e:	mov		qword ptr [rbp - 0xc0], rax
0x7fffeafd0a95:	jmp		0x7fffeafd0a9f
0x7fffeafd0a9a:	call		0x7fffeafc4c10
0x7fffeafd0a9f:	jmp		0x7fffeafd0aa4
0x7fffeafd0aa4:	mov		rax, qword ptr [rbp - 0x98]
0x7fffeafd0aab:	mov		rcx, qword ptr [rbp - 0xb8]
0x7fffeafd0ab2:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafd0ab6:	mov		rax, qword ptr [rbp - 0x98]
0x7fffeafd0abd:	mov		rcx, qword ptr [rbp - 0xc0]
0x7fffeafd0ac4:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafd0ac8:	mov		rax, qword ptr [rbp - 0xc0]
0x7fffeafd0acf:	mov		rcx, qword ptr [rbp - 0x98]
0x7fffeafd0ad6:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafd0ada:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafd0ae1:	mov		rcx, qword ptr [rbp - 0x98]
0x7fffeafd0ae8:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafd0aec:	jmp		0x7fffeafd0ead
0x7fffeafd0af1:	mov		rax, qword ptr [rbp - 0x98]
0x7fffeafd0af8:	mov		qword ptr [rbp - 0xc8], rax
0x7fffeafd0aff:	mov		rax, qword ptr [rbp - 0xa0]
0x7fffeafd0b06:	shr		rax, 8
0x7fffeafd0b0a:	mov		dword ptr [rbp - 0xd8], eax
0x7fffeafd0b10:	cmp		dword ptr [rbp - 0xd8], 0
0x7fffeafd0b17:	jne		0x7fffeafd0b2c
0x7fffeafd0b1d:	mov		dword ptr [rbp - 0xd4], 0
0x7fffeafd0b27:	jmp		0x7fffeafd0b9d
0x7fffeafd0b2c:	cmp		dword ptr [rbp - 0xd8], 0xffff
0x7fffeafd0b36:	jbe		0x7fffeafd0b4b
0x7fffeafd0b3c:	mov		dword ptr [rbp - 0xd4], 0x1f
0x7fffeafd0b46:	jmp		0x7fffeafd0b98
0x7fffeafd0b4b:	mov		eax, dword ptr [rbp - 0xd8]
0x7fffeafd0b51:	bsr		eax, eax
0x7fffeafd0b54:	xor		eax, 0x1f
0x7fffeafd0b57:	mov		ecx, 0x1f
0x7fffeafd0b5c:	sub		ecx, eax
0x7fffeafd0b5e:	mov		dword ptr [rbp - 0xdc], ecx
0x7fffeafd0b64:	mov		eax, dword ptr [rbp - 0xdc]
0x7fffeafd0b6a:	shl		eax, 1
0x7fffeafd0b6d:	mov		eax, eax
0x7fffeafd0b6f:	mov		edx, eax
0x7fffeafd0b71:	mov		rsi, qword ptr [rbp - 0xa0]
0x7fffeafd0b78:	mov		eax, dword ptr [rbp - 0xdc]
0x7fffeafd0b7e:	add		eax, 7
0x7fffeafd0b81:	mov		eax, eax
0x7fffeafd0b83:	mov		ecx, eax
0x7fffeafd0b85:	shr		rsi, cl
0x7fffeafd0b88:	and		rsi, 1
0x7fffeafd0b8f:	add		rdx, rsi
0x7fffeafd0b92:	mov		dword ptr [rbp - 0xd4], edx
0x7fffeafd0b98:	jmp		0x7fffeafd0b9d
0x7fffeafd0b9d:	mov		rax, qword ptr [rbp - 8]
0x7fffeafd0ba1:	add		rax, 0x258
0x7fffeafd0ba7:	mov		ecx, dword ptr [rbp - 0xd4]
0x7fffeafd0bad:	mov		edx, ecx
0x7fffeafd0baf:	shl		rdx, 3
0x7fffeafd0bb3:	add		rax, rdx
0x7fffeafd0bb6:	mov		qword ptr [rbp - 0xd0], rax
0x7fffeafd0bbd:	mov		ecx, dword ptr [rbp - 0xd4]
0x7fffeafd0bc3:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafd0bca:	mov		dword ptr [rax + 0x38], ecx
0x7fffeafd0bcd:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafd0bd4:	mov		qword ptr [rax + 0x28], 0
0x7fffeafd0bdc:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafd0be3:	mov		qword ptr [rax + 0x20], 0
0x7fffeafd0beb:	mov		rax, qword ptr [rbp - 8]
0x7fffeafd0bef:	mov		ecx, dword ptr [rax + 4]
0x7fffeafd0bf2:	mov		esi, dword ptr [rbp - 0xd4]
0x7fffeafd0bf8:	mov		dword ptr [rbp - 0x114], ecx
0x7fffeafd0bfe:	mov		ecx, esi
0x7fffeafd0c00:	mov		esi, 1
0x7fffeafd0c05:	shl		esi, cl
0x7fffeafd0c07:	mov		edi, dword ptr [rbp - 0x114]
0x7fffeafd0c0d:	and		edi, esi
0x7fffeafd0c0f:	cmp		edi, 0
0x7fffeafd0c12:	jne		0x7fffeafd0c74
0x7fffeafd0c18:	mov		ecx, dword ptr [rbp - 0xd4]
0x7fffeafd0c1e:	mov		eax, 1
0x7fffeafd0c23:	shl		eax, cl
0x7fffeafd0c25:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafd0c29:	or		eax, dword ptr [rdx + 4]
0x7fffeafd0c2c:	mov		dword ptr [rdx + 4], eax
0x7fffeafd0c2f:	mov		rdx, qword ptr [rbp - 0xc8]
0x7fffeafd0c36:	mov		rsi, qword ptr [rbp - 0xd0]
0x7fffeafd0c3d:	mov		qword ptr [rsi], rdx
0x7fffeafd0c40:	mov		rdx, qword ptr [rbp - 0xd0]
0x7fffeafd0c47:	mov		rsi, qword ptr [rbp - 0xc8]
0x7fffeafd0c4e:	mov		qword ptr [rsi + 0x30], rdx
0x7fffeafd0c52:	mov		rdx, qword ptr [rbp - 0xc8]
0x7fffeafd0c59:	mov		rsi, qword ptr [rbp - 0xc8]
0x7fffeafd0c60:	mov		qword ptr [rsi + 0x18], rdx
0x7fffeafd0c64:	mov		rsi, qword ptr [rbp - 0xc8]
0x7fffeafd0c6b:	mov		qword ptr [rsi + 0x10], rdx
0x7fffeafd0c6f:	jmp		0x7fffeafd0ea8
0x7fffeafd0c74:	mov		rax, qword ptr [rbp - 0xd0]
0x7fffeafd0c7b:	mov		rax, qword ptr [rax]
0x7fffeafd0c7e:	mov		qword ptr [rbp - 0xe8], rax
0x7fffeafd0c85:	mov		rax, qword ptr [rbp - 0xa0]
0x7fffeafd0c8c:	cmp		dword ptr [rbp - 0xd4], 0x1f
0x7fffeafd0c93:	mov		qword ptr [rbp - 0x120], rax
0x7fffeafd0c9a:	jne		0x7fffeafd0cb0
0x7fffeafd0ca0:	xor		eax, eax
0x7fffeafd0ca2:	mov		ecx, eax
0x7fffeafd0ca4:	mov		qword ptr [rbp - 0x128], rcx
0x7fffeafd0cab:	jmp		0x7fffeafd0cd2
0x7fffeafd0cb0:	mov		eax, dword ptr [rbp - 0xd4]
0x7fffeafd0cb6:	shr		eax, 1
0x7fffeafd0cb9:	add		eax, 8
0x7fffeafd0cbc:	sub		eax, 2
0x7fffeafd0cbf:	mov		eax, eax
0x7fffeafd0cc1:	mov		ecx, eax
0x7fffeafd0cc3:	mov		edx, 0x3f
0x7fffeafd0cc8:	sub		rdx, rcx
0x7fffeafd0ccb:	mov		qword ptr [rbp - 0x128], rdx
0x7fffeafd0cd2:	mov		rax, qword ptr [rbp - 0x128]
0x7fffeafd0cd9:	mov		rcx, rax
0x7fffeafd0cdc:	mov		rax, qword ptr [rbp - 0x120]
0x7fffeafd0ce3:	shl		rax, cl
0x7fffeafd0ce6:	mov		qword ptr [rbp - 0xf0], rax
0x7fffeafd0ced:	mov		rax, qword ptr [rbp - 0xe8]
0x7fffeafd0cf4:	mov		rax, qword ptr [rax + 8]
0x7fffeafd0cf8:	and		rax, 0xfffffffffffffff8
0x7fffeafd0cfe:	cmp		rax, qword ptr [rbp - 0xa0]
0x7fffeafd0d05:	je		0x7fffeafd0de5
0x7fffeafd0d0b:	mov		rax, qword ptr [rbp - 0xe8]
0x7fffeafd0d12:	add		rax, 0x20
0x7fffeafd0d18:	mov		rcx, qword ptr [rbp - 0xf0]
0x7fffeafd0d1f:	shr		rcx, 0x3f
0x7fffeafd0d23:	and		rcx, 1
0x7fffeafd0d2a:	shl		rcx, 3
0x7fffeafd0d2e:	add		rax, rcx
0x7fffeafd0d31:	mov		qword ptr [rbp - 0xf8], rax
0x7fffeafd0d38:	mov		rax, qword ptr [rbp - 0xf0]
0x7fffeafd0d3f:	shl		rax, 1
0x7fffeafd0d43:	mov		qword ptr [rbp - 0xf0], rax
0x7fffeafd0d4a:	mov		rax, qword ptr [rbp - 0xf8]
0x7fffeafd0d51:	cmp		qword ptr [rax], 0
0x7fffeafd0d55:	je		0x7fffeafd0d71
0x7fffeafd0d5b:	mov		rax, qword ptr [rbp - 0xf8]
0x7fffeafd0d62:	mov		rax, qword ptr [rax]
0x7fffeafd0d65:	mov		qword ptr [rbp - 0xe8], rax
0x7fffeafd0d6c:	jmp		0x7fffeafd0de0
0x7fffeafd0d71:	mov		rax, qword ptr [rbp - 0xf8]
0x7fffeafd0d78:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd0d7c:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafd0d80:	setae		dl
0x7fffeafd0d83:	and		dl, 1
0x7fffeafd0d86:	movzx		esi, dl
0x7fffeafd0d89:	movsxd		rax, esi
0x7fffeafd0d8c:	cmp		rax, 0
0x7fffeafd0d90:	je		0x7fffeafd0ddb
0x7fffeafd0d96:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafd0d9d:	mov		rcx, qword ptr [rbp - 0xf8]
0x7fffeafd0da4:	mov		qword ptr [rcx], rax
0x7fffeafd0da7:	mov		rax, qword ptr [rbp - 0xe8]
0x7fffeafd0dae:	mov		rcx, qword ptr [rbp - 0xc8]
0x7fffeafd0db5:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafd0db9:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafd0dc0:	mov		rcx, qword ptr [rbp - 0xc8]
0x7fffeafd0dc7:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafd0dcb:	mov		rcx, qword ptr [rbp - 0xc8]
0x7fffeafd0dd2:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafd0dd6:	jmp		0x7fffeafd0ea3
0x7fffeafd0ddb:	call		0x7fffeafc4c10
0x7fffeafd0de0:	jmp		0x7fffeafd0e9e
0x7fffeafd0de5:	xor		eax, eax
0x7fffeafd0de7:	mov		rcx, qword ptr [rbp - 0xe8]
0x7fffeafd0dee:	mov		rcx, qword ptr [rcx + 0x10]
0x7fffeafd0df2:	mov		qword ptr [rbp - 0x100], rcx
0x7fffeafd0df9:	mov		rcx, qword ptr [rbp - 0xe8]
0x7fffeafd0e00:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafd0e04:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafd0e08:	mov		byte ptr [rbp - 0x129], al
0x7fffeafd0e0e:	jb		0x7fffeafd0e2c
0x7fffeafd0e14:	mov		rax, qword ptr [rbp - 0x100]
0x7fffeafd0e1b:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd0e1f:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafd0e23:	setae		dl
0x7fffeafd0e26:	mov		byte ptr [rbp - 0x129], dl
0x7fffeafd0e2c:	mov		al, byte ptr [rbp - 0x129]
0x7fffeafd0e32:	and		al, 1
0x7fffeafd0e34:	movzx		ecx, al
0x7fffeafd0e37:	movsxd		rdx, ecx
0x7fffeafd0e3a:	cmp		rdx, 0
0x7fffeafd0e3e:	je		0x7fffeafd0e99
0x7fffeafd0e44:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafd0e4b:	mov		rcx, qword ptr [rbp - 0x100]
0x7fffeafd0e52:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafd0e56:	mov		rcx, qword ptr [rbp - 0xe8]
0x7fffeafd0e5d:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafd0e61:	mov		rax, qword ptr [rbp - 0x100]
0x7fffeafd0e68:	mov		rcx, qword ptr [rbp - 0xc8]
0x7fffeafd0e6f:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafd0e73:	mov		rax, qword ptr [rbp - 0xe8]
0x7fffeafd0e7a:	mov		rcx, qword ptr [rbp - 0xc8]
0x7fffeafd0e81:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafd0e85:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafd0e8c:	mov		qword ptr [rax + 0x30], 0
0x7fffeafd0e94:	jmp		0x7fffeafd0ea3
0x7fffeafd0e99:	call		0x7fffeafc4c10
0x7fffeafd0e9e:	jmp		0x7fffeafd0ced
0x7fffeafd0ea3:	jmp		0x7fffeafd0ea8
0x7fffeafd0ea8:	jmp		0x7fffeafd0ead
0x7fffeafd0ead:	jmp		0x7fffeafd0eb2
0x7fffeafd0eb2:	add		rsp, 0x130
0x7fffeafd0eb9:	pop		rbp
0x7fffeafd0eba:	ret		
0x7fffeafd0ebb:	nop		dword ptr [rax + rax]
disassembling symbol '.LBB49_2':
textAddr: 0x7fffeafd0790, textSize: 38
0x7fffeafd0790:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafd0794:	add		rax, 0x10
0x7fffeafd079a:	and		rax, 0xf
0x7fffeafd07a0:	mov		ecx, 0x10
0x7fffeafd07a5:	sub		rcx, rax
0x7fffeafd07a8:	and		rcx, 0xf
0x7fffeafd07af:	mov		qword ptr [rbp - 0x108], rcx
disassembling symbol '.LBB49_3':
textAddr: 0x7fffeafd07b6, textSize: 63
0x7fffeafd07b6:	mov		rax, qword ptr [rbp - 0x108]
0x7fffeafd07bd:	mov		qword ptr [rbp - 0x50], rax
0x7fffeafd07c1:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafd07c5:	add		rax, qword ptr [rbp - 0x50]
0x7fffeafd07c9:	mov		qword ptr [rbp - 0x58], rax
0x7fffeafd07cd:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafd07d1:	mov		rcx, qword ptr [rbp - 0x28]
0x7fffeafd07d5:	add		rcx, 0x20
0x7fffeafd07dc:	cmp		rax, rcx
0x7fffeafd07df:	jae		0x7fffeafd07f5
0x7fffeafd07e5:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafd07e9:	mov		qword ptr [rbp - 0x110], rax
0x7fffeafd07f0:	jmp		0x7fffeafd0800
disassembling symbol '.LBB49_5':
textAddr: 0x7fffeafd07f5, textSize: 11
0x7fffeafd07f5:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafd07f9:	mov		qword ptr [rbp - 0x110], rax
disassembling symbol '.LBB49_6':
textAddr: 0x7fffeafd0800, textSize: 228
0x7fffeafd0800:	mov		rax, qword ptr [rbp - 0x110]
0x7fffeafd0807:	mov		qword ptr [rbp - 0x60], rax
0x7fffeafd080b:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafd080f:	mov		qword ptr [rbp - 0x68], rax
0x7fffeafd0813:	mov		rax, qword ptr [rbp - 0x68]
0x7fffeafd0817:	add		rax, 0x10
0x7fffeafd081d:	mov		qword ptr [rbp - 0x70], rax
0x7fffeafd0821:	mov		rax, qword ptr [rbp - 0x68]
0x7fffeafd0825:	add		rax, qword ptr [rbp - 0x40]
0x7fffeafd0829:	mov		qword ptr [rbp - 0x78], rax
0x7fffeafd082d:	mov		rax, qword ptr [rbp - 0x78]
0x7fffeafd0831:	mov		qword ptr [rbp - 0x80], rax
0x7fffeafd0835:	mov		dword ptr [rbp - 0x84], 0
0x7fffeafd083f:	mov		rdi, qword ptr [rbp - 8]
0x7fffeafd0843:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafd0847:	mov		rcx, qword ptr [rbp - 0x18]
0x7fffeafd084b:	sub		rcx, 0x50
0x7fffeafd0852:	mov		rsi, rax
0x7fffeafd0855:	mov		rdx, rcx
0x7fffeafd0858:	call		0x7fffeafcf6f0
0x7fffeafd085d:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafd0861:	or		rax, 1
0x7fffeafd0867:	or		rax, 2
0x7fffeafd086d:	mov		rcx, qword ptr [rbp - 0x68]
0x7fffeafd0871:	mov		qword ptr [rcx + 8], rax
0x7fffeafd0875:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafd0879:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd087d:	mov		rdx, qword ptr [rcx + 0x378]
0x7fffeafd0884:	mov		qword ptr [rax], rdx
0x7fffeafd0887:	mov		rdx, qword ptr [rcx + 0x380]
0x7fffeafd088e:	mov		qword ptr [rax + 8], rdx
0x7fffeafd0892:	mov		rdx, qword ptr [rcx + 0x388]
0x7fffeafd0899:	mov		qword ptr [rax + 0x10], rdx
0x7fffeafd089d:	mov		rcx, qword ptr [rcx + 0x390]
0x7fffeafd08a4:	mov		qword ptr [rax + 0x18], rcx
0x7fffeafd08a8:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafd08ac:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd08b0:	mov		qword ptr [rcx + 0x378], rax
0x7fffeafd08b7:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafd08bb:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd08bf:	mov		qword ptr [rcx + 0x380], rax
0x7fffeafd08c6:	mov		r8d, dword ptr [rbp - 0x1c]
0x7fffeafd08ca:	mov		rax, qword ptr [rbp - 8]
0x7fffeafd08ce:	mov		dword ptr [rax + 0x390], r8d
0x7fffeafd08d5:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafd08d9:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd08dd:	mov		qword ptr [rcx + 0x388], rax
disassembling symbol '.LBB49_7':
textAddr: 0x7fffeafd08e4, textSize: 83
0x7fffeafd08e4:	mov		rax, qword ptr [rbp - 0x80]
0x7fffeafd08e8:	add		rax, 8
0x7fffeafd08ee:	mov		qword ptr [rbp - 0x90], rax
0x7fffeafd08f5:	mov		rax, qword ptr [rbp - 0x80]
0x7fffeafd08f9:	mov		qword ptr [rax + 8], 0xb
0x7fffeafd0901:	mov		ecx, dword ptr [rbp - 0x84]
0x7fffeafd0907:	add		ecx, 1
0x7fffeafd090a:	mov		dword ptr [rbp - 0x84], ecx
0x7fffeafd0910:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafd0917:	add		rax, 8
0x7fffeafd091d:	cmp		rax, qword ptr [rbp - 0x38]
0x7fffeafd0921:	jae		0x7fffeafd0937
0x7fffeafd0927:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafd092e:	mov		qword ptr [rbp - 0x80], rax
0x7fffeafd0932:	jmp		0x7fffeafd093c
disassembling symbol '.LBB49_9':
textAddr: 0x7fffeafd0937, textSize: 5
0x7fffeafd0937:	jmp		0x7fffeafd0941
disassembling symbol '.LBB49_10':
textAddr: 0x7fffeafd093c, textSize: 5
0x7fffeafd093c:	jmp		0x7fffeafd08e4
disassembling symbol '.LBB49_11':
textAddr: 0x7fffeafd0941, textSize: 281
0x7fffeafd0941:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafd0945:	cmp		rax, qword ptr [rbp - 0x28]
0x7fffeafd0949:	je		0x7fffeafd0eb2
0x7fffeafd094f:	mov		rax, qword ptr [rbp - 0x28]
0x7fffeafd0953:	mov		qword ptr [rbp - 0x98], rax
0x7fffeafd095a:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafd095e:	mov		rcx, qword ptr [rbp - 0x28]
0x7fffeafd0962:	sub		rax, rcx
0x7fffeafd0965:	mov		qword ptr [rbp - 0xa0], rax
0x7fffeafd096c:	mov		rax, qword ptr [rbp - 0x98]
0x7fffeafd0973:	add		rax, qword ptr [rbp - 0xa0]
0x7fffeafd097a:	mov		qword ptr [rbp - 0xa8], rax
0x7fffeafd0981:	mov		rax, qword ptr [rbp - 0xa8]
0x7fffeafd0988:	mov		rcx, qword ptr [rax + 8]
0x7fffeafd098c:	and		rcx, 0xfffffffffffffffe
0x7fffeafd0993:	mov		qword ptr [rax + 8], rcx
0x7fffeafd0997:	mov		rax, qword ptr [rbp - 0xa0]
0x7fffeafd099e:	or		rax, 1
0x7fffeafd09a4:	mov		rcx, qword ptr [rbp - 0x98]
0x7fffeafd09ab:	mov		qword ptr [rcx + 8], rax
0x7fffeafd09af:	mov		rax, qword ptr [rbp - 0xa0]
0x7fffeafd09b6:	mov		rcx, qword ptr [rbp - 0x98]
0x7fffeafd09bd:	mov		rdx, qword ptr [rbp - 0xa0]
0x7fffeafd09c4:	mov		qword ptr [rcx + rdx], rax
0x7fffeafd09c8:	mov		rax, qword ptr [rbp - 0xa0]
0x7fffeafd09cf:	shr		rax, 3
0x7fffeafd09d3:	cmp		rax, 0x20
0x7fffeafd09d7:	jae		0x7fffeafd0af1
0x7fffeafd09dd:	mov		rax, qword ptr [rbp - 0xa0]
0x7fffeafd09e4:	shr		rax, 3
0x7fffeafd09e8:	mov		dword ptr [rbp - 0xac], eax
0x7fffeafd09ee:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd09f2:	add		rcx, 0x48
0x7fffeafd09f9:	mov		eax, dword ptr [rbp - 0xac]
0x7fffeafd09ff:	shl		eax, 1
0x7fffeafd0a02:	mov		eax, eax
0x7fffeafd0a04:	mov		edx, eax
0x7fffeafd0a06:	shl		rdx, 3
0x7fffeafd0a0a:	add		rcx, rdx
0x7fffeafd0a0d:	mov		qword ptr [rbp - 0xb8], rcx
0x7fffeafd0a14:	mov		rcx, qword ptr [rbp - 0xb8]
0x7fffeafd0a1b:	mov		qword ptr [rbp - 0xc0], rcx
0x7fffeafd0a22:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd0a26:	mov		eax, dword ptr [rcx]
0x7fffeafd0a28:	mov		ecx, dword ptr [rbp - 0xac]
0x7fffeafd0a2e:	mov		esi, 1
0x7fffeafd0a33:	shl		esi, cl
0x7fffeafd0a35:	and		eax, esi
0x7fffeafd0a37:	cmp		eax, 0
0x7fffeafd0a3a:	jne		0x7fffeafd0a5a
0x7fffeafd0a40:	mov		ecx, dword ptr [rbp - 0xac]
0x7fffeafd0a46:	mov		eax, 1
0x7fffeafd0a4b:	shl		eax, cl
0x7fffeafd0a4d:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafd0a51:	or		eax, dword ptr [rdx]
0x7fffeafd0a53:	mov		dword ptr [rdx], eax
0x7fffeafd0a55:	jmp		0x7fffeafd0aa4
disassembling symbol '.LBB49_15':
textAddr: 0x7fffeafd0a5a, textSize: 64
0x7fffeafd0a5a:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafd0a61:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafd0a65:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd0a69:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafd0a6d:	setae		dl
0x7fffeafd0a70:	and		dl, 1
0x7fffeafd0a73:	movzx		esi, dl
0x7fffeafd0a76:	movsxd		rax, esi
0x7fffeafd0a79:	cmp		rax, 0
0x7fffeafd0a7d:	je		0x7fffeafd0a9a
0x7fffeafd0a83:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafd0a8a:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafd0a8e:	mov		qword ptr [rbp - 0xc0], rax
0x7fffeafd0a95:	jmp		0x7fffeafd0a9f
disassembling symbol '.LBB49_17':
textAddr: 0x7fffeafd0a9a, textSize: 5
0x7fffeafd0a9a:	call		0x7fffeafc4c10
disassembling symbol '.LBB49_18':
textAddr: 0x7fffeafd0a9f, textSize: 5
0x7fffeafd0a9f:	jmp		0x7fffeafd0aa4
disassembling symbol '.LBB49_19':
textAddr: 0x7fffeafd0aa4, textSize: 77
0x7fffeafd0aa4:	mov		rax, qword ptr [rbp - 0x98]
0x7fffeafd0aab:	mov		rcx, qword ptr [rbp - 0xb8]
0x7fffeafd0ab2:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafd0ab6:	mov		rax, qword ptr [rbp - 0x98]
0x7fffeafd0abd:	mov		rcx, qword ptr [rbp - 0xc0]
0x7fffeafd0ac4:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafd0ac8:	mov		rax, qword ptr [rbp - 0xc0]
0x7fffeafd0acf:	mov		rcx, qword ptr [rbp - 0x98]
0x7fffeafd0ad6:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafd0ada:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafd0ae1:	mov		rcx, qword ptr [rbp - 0x98]
0x7fffeafd0ae8:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafd0aec:	jmp		0x7fffeafd0ead
disassembling symbol '.LBB49_20':
textAddr: 0x7fffeafd0af1, textSize: 59
0x7fffeafd0af1:	mov		rax, qword ptr [rbp - 0x98]
0x7fffeafd0af8:	mov		qword ptr [rbp - 0xc8], rax
0x7fffeafd0aff:	mov		rax, qword ptr [rbp - 0xa0]
0x7fffeafd0b06:	shr		rax, 8
0x7fffeafd0b0a:	mov		dword ptr [rbp - 0xd8], eax
0x7fffeafd0b10:	cmp		dword ptr [rbp - 0xd8], 0
0x7fffeafd0b17:	jne		0x7fffeafd0b2c
0x7fffeafd0b1d:	mov		dword ptr [rbp - 0xd4], 0
0x7fffeafd0b27:	jmp		0x7fffeafd0b9d
disassembling symbol '.LBB49_22':
textAddr: 0x7fffeafd0b2c, textSize: 31
0x7fffeafd0b2c:	cmp		dword ptr [rbp - 0xd8], 0xffff
0x7fffeafd0b36:	jbe		0x7fffeafd0b4b
0x7fffeafd0b3c:	mov		dword ptr [rbp - 0xd4], 0x1f
0x7fffeafd0b46:	jmp		0x7fffeafd0b98
disassembling symbol '.LBB49_24':
textAddr: 0x7fffeafd0b4b, textSize: 77
0x7fffeafd0b4b:	mov		eax, dword ptr [rbp - 0xd8]
0x7fffeafd0b51:	bsr		eax, eax
0x7fffeafd0b54:	xor		eax, 0x1f
0x7fffeafd0b57:	mov		ecx, 0x1f
0x7fffeafd0b5c:	sub		ecx, eax
0x7fffeafd0b5e:	mov		dword ptr [rbp - 0xdc], ecx
0x7fffeafd0b64:	mov		eax, dword ptr [rbp - 0xdc]
0x7fffeafd0b6a:	shl		eax, 1
0x7fffeafd0b6d:	mov		eax, eax
0x7fffeafd0b6f:	mov		edx, eax
0x7fffeafd0b71:	mov		rsi, qword ptr [rbp - 0xa0]
0x7fffeafd0b78:	mov		eax, dword ptr [rbp - 0xdc]
0x7fffeafd0b7e:	add		eax, 7
0x7fffeafd0b81:	mov		eax, eax
0x7fffeafd0b83:	mov		ecx, eax
0x7fffeafd0b85:	shr		rsi, cl
0x7fffeafd0b88:	and		rsi, 1
0x7fffeafd0b8f:	add		rdx, rsi
0x7fffeafd0b92:	mov		dword ptr [rbp - 0xd4], edx
disassembling symbol '.LBB49_25':
textAddr: 0x7fffeafd0b98, textSize: 5
0x7fffeafd0b98:	jmp		0x7fffeafd0b9d
disassembling symbol '.LBB49_26':
textAddr: 0x7fffeafd0b9d, textSize: 215
0x7fffeafd0b9d:	mov		rax, qword ptr [rbp - 8]
0x7fffeafd0ba1:	add		rax, 0x258
0x7fffeafd0ba7:	mov		ecx, dword ptr [rbp - 0xd4]
0x7fffeafd0bad:	mov		edx, ecx
0x7fffeafd0baf:	shl		rdx, 3
0x7fffeafd0bb3:	add		rax, rdx
0x7fffeafd0bb6:	mov		qword ptr [rbp - 0xd0], rax
0x7fffeafd0bbd:	mov		ecx, dword ptr [rbp - 0xd4]
0x7fffeafd0bc3:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafd0bca:	mov		dword ptr [rax + 0x38], ecx
0x7fffeafd0bcd:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafd0bd4:	mov		qword ptr [rax + 0x28], 0
0x7fffeafd0bdc:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafd0be3:	mov		qword ptr [rax + 0x20], 0
0x7fffeafd0beb:	mov		rax, qword ptr [rbp - 8]
0x7fffeafd0bef:	mov		ecx, dword ptr [rax + 4]
0x7fffeafd0bf2:	mov		esi, dword ptr [rbp - 0xd4]
0x7fffeafd0bf8:	mov		dword ptr [rbp - 0x114], ecx
0x7fffeafd0bfe:	mov		ecx, esi
0x7fffeafd0c00:	mov		esi, 1
0x7fffeafd0c05:	shl		esi, cl
0x7fffeafd0c07:	mov		edi, dword ptr [rbp - 0x114]
0x7fffeafd0c0d:	and		edi, esi
0x7fffeafd0c0f:	cmp		edi, 0
0x7fffeafd0c12:	jne		0x7fffeafd0c74
0x7fffeafd0c18:	mov		ecx, dword ptr [rbp - 0xd4]
0x7fffeafd0c1e:	mov		eax, 1
0x7fffeafd0c23:	shl		eax, cl
0x7fffeafd0c25:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafd0c29:	or		eax, dword ptr [rdx + 4]
0x7fffeafd0c2c:	mov		dword ptr [rdx + 4], eax
0x7fffeafd0c2f:	mov		rdx, qword ptr [rbp - 0xc8]
0x7fffeafd0c36:	mov		rsi, qword ptr [rbp - 0xd0]
0x7fffeafd0c3d:	mov		qword ptr [rsi], rdx
0x7fffeafd0c40:	mov		rdx, qword ptr [rbp - 0xd0]
0x7fffeafd0c47:	mov		rsi, qword ptr [rbp - 0xc8]
0x7fffeafd0c4e:	mov		qword ptr [rsi + 0x30], rdx
0x7fffeafd0c52:	mov		rdx, qword ptr [rbp - 0xc8]
0x7fffeafd0c59:	mov		rsi, qword ptr [rbp - 0xc8]
0x7fffeafd0c60:	mov		qword ptr [rsi + 0x18], rdx
0x7fffeafd0c64:	mov		rsi, qword ptr [rbp - 0xc8]
0x7fffeafd0c6b:	mov		qword ptr [rsi + 0x10], rdx
0x7fffeafd0c6f:	jmp		0x7fffeafd0ea8
disassembling symbol '.LBB49_28':
textAddr: 0x7fffeafd0c74, textSize: 60
0x7fffeafd0c74:	mov		rax, qword ptr [rbp - 0xd0]
0x7fffeafd0c7b:	mov		rax, qword ptr [rax]
0x7fffeafd0c7e:	mov		qword ptr [rbp - 0xe8], rax
0x7fffeafd0c85:	mov		rax, qword ptr [rbp - 0xa0]
0x7fffeafd0c8c:	cmp		dword ptr [rbp - 0xd4], 0x1f
0x7fffeafd0c93:	mov		qword ptr [rbp - 0x120], rax
0x7fffeafd0c9a:	jne		0x7fffeafd0cb0
0x7fffeafd0ca0:	xor		eax, eax
0x7fffeafd0ca2:	mov		ecx, eax
0x7fffeafd0ca4:	mov		qword ptr [rbp - 0x128], rcx
0x7fffeafd0cab:	jmp		0x7fffeafd0cd2
disassembling symbol '.LBB49_30':
textAddr: 0x7fffeafd0cb0, textSize: 34
0x7fffeafd0cb0:	mov		eax, dword ptr [rbp - 0xd4]
0x7fffeafd0cb6:	shr		eax, 1
0x7fffeafd0cb9:	add		eax, 8
0x7fffeafd0cbc:	sub		eax, 2
0x7fffeafd0cbf:	mov		eax, eax
0x7fffeafd0cc1:	mov		ecx, eax
0x7fffeafd0cc3:	mov		edx, 0x3f
0x7fffeafd0cc8:	sub		rdx, rcx
0x7fffeafd0ccb:	mov		qword ptr [rbp - 0x128], rdx
disassembling symbol '.LBB49_31':
textAddr: 0x7fffeafd0cd2, textSize: 27
0x7fffeafd0cd2:	mov		rax, qword ptr [rbp - 0x128]
0x7fffeafd0cd9:	mov		rcx, rax
0x7fffeafd0cdc:	mov		rax, qword ptr [rbp - 0x120]
0x7fffeafd0ce3:	shl		rax, cl
0x7fffeafd0ce6:	mov		qword ptr [rbp - 0xf0], rax
disassembling symbol '.LBB49_32':
textAddr: 0x7fffeafd0ced, textSize: 132
0x7fffeafd0ced:	mov		rax, qword ptr [rbp - 0xe8]
0x7fffeafd0cf4:	mov		rax, qword ptr [rax + 8]
0x7fffeafd0cf8:	and		rax, 0xfffffffffffffff8
0x7fffeafd0cfe:	cmp		rax, qword ptr [rbp - 0xa0]
0x7fffeafd0d05:	je		0x7fffeafd0de5
0x7fffeafd0d0b:	mov		rax, qword ptr [rbp - 0xe8]
0x7fffeafd0d12:	add		rax, 0x20
0x7fffeafd0d18:	mov		rcx, qword ptr [rbp - 0xf0]
0x7fffeafd0d1f:	shr		rcx, 0x3f
0x7fffeafd0d23:	and		rcx, 1
0x7fffeafd0d2a:	shl		rcx, 3
0x7fffeafd0d2e:	add		rax, rcx
0x7fffeafd0d31:	mov		qword ptr [rbp - 0xf8], rax
0x7fffeafd0d38:	mov		rax, qword ptr [rbp - 0xf0]
0x7fffeafd0d3f:	shl		rax, 1
0x7fffeafd0d43:	mov		qword ptr [rbp - 0xf0], rax
0x7fffeafd0d4a:	mov		rax, qword ptr [rbp - 0xf8]
0x7fffeafd0d51:	cmp		qword ptr [rax], 0
0x7fffeafd0d55:	je		0x7fffeafd0d71
0x7fffeafd0d5b:	mov		rax, qword ptr [rbp - 0xf8]
0x7fffeafd0d62:	mov		rax, qword ptr [rax]
0x7fffeafd0d65:	mov		qword ptr [rbp - 0xe8], rax
0x7fffeafd0d6c:	jmp		0x7fffeafd0de0
disassembling symbol '.LBB49_35':
textAddr: 0x7fffeafd0d71, textSize: 106
0x7fffeafd0d71:	mov		rax, qword ptr [rbp - 0xf8]
0x7fffeafd0d78:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd0d7c:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafd0d80:	setae		dl
0x7fffeafd0d83:	and		dl, 1
0x7fffeafd0d86:	movzx		esi, dl
0x7fffeafd0d89:	movsxd		rax, esi
0x7fffeafd0d8c:	cmp		rax, 0
0x7fffeafd0d90:	je		0x7fffeafd0ddb
0x7fffeafd0d96:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafd0d9d:	mov		rcx, qword ptr [rbp - 0xf8]
0x7fffeafd0da4:	mov		qword ptr [rcx], rax
0x7fffeafd0da7:	mov		rax, qword ptr [rbp - 0xe8]
0x7fffeafd0dae:	mov		rcx, qword ptr [rbp - 0xc8]
0x7fffeafd0db5:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafd0db9:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafd0dc0:	mov		rcx, qword ptr [rbp - 0xc8]
0x7fffeafd0dc7:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafd0dcb:	mov		rcx, qword ptr [rbp - 0xc8]
0x7fffeafd0dd2:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafd0dd6:	jmp		0x7fffeafd0ea3
disassembling symbol '.LBB49_37':
textAddr: 0x7fffeafd0ddb, textSize: 5
0x7fffeafd0ddb:	call		0x7fffeafc4c10
disassembling symbol '.LBB49_38':
textAddr: 0x7fffeafd0de0, textSize: 5
0x7fffeafd0de0:	jmp		0x7fffeafd0e9e
disassembling symbol '.LBB49_39':
textAddr: 0x7fffeafd0de5, textSize: 71
0x7fffeafd0de5:	xor		eax, eax
0x7fffeafd0de7:	mov		rcx, qword ptr [rbp - 0xe8]
0x7fffeafd0dee:	mov		rcx, qword ptr [rcx + 0x10]
0x7fffeafd0df2:	mov		qword ptr [rbp - 0x100], rcx
0x7fffeafd0df9:	mov		rcx, qword ptr [rbp - 0xe8]
0x7fffeafd0e00:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafd0e04:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafd0e08:	mov		byte ptr [rbp - 0x129], al
0x7fffeafd0e0e:	jb		0x7fffeafd0e2c
0x7fffeafd0e14:	mov		rax, qword ptr [rbp - 0x100]
0x7fffeafd0e1b:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd0e1f:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafd0e23:	setae		dl
0x7fffeafd0e26:	mov		byte ptr [rbp - 0x129], dl
disassembling symbol '.LBB49_41':
textAddr: 0x7fffeafd0e2c, textSize: 109
0x7fffeafd0e2c:	mov		al, byte ptr [rbp - 0x129]
0x7fffeafd0e32:	and		al, 1
0x7fffeafd0e34:	movzx		ecx, al
0x7fffeafd0e37:	movsxd		rdx, ecx
0x7fffeafd0e3a:	cmp		rdx, 0
0x7fffeafd0e3e:	je		0x7fffeafd0e99
0x7fffeafd0e44:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafd0e4b:	mov		rcx, qword ptr [rbp - 0x100]
0x7fffeafd0e52:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafd0e56:	mov		rcx, qword ptr [rbp - 0xe8]
0x7fffeafd0e5d:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafd0e61:	mov		rax, qword ptr [rbp - 0x100]
0x7fffeafd0e68:	mov		rcx, qword ptr [rbp - 0xc8]
0x7fffeafd0e6f:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafd0e73:	mov		rax, qword ptr [rbp - 0xe8]
0x7fffeafd0e7a:	mov		rcx, qword ptr [rbp - 0xc8]
0x7fffeafd0e81:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafd0e85:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafd0e8c:	mov		qword ptr [rax + 0x30], 0
0x7fffeafd0e94:	jmp		0x7fffeafd0ea3
disassembling symbol '.LBB49_43':
textAddr: 0x7fffeafd0e99, textSize: 5
0x7fffeafd0e99:	call		0x7fffeafc4c10
disassembling symbol '.LBB49_44':
textAddr: 0x7fffeafd0e9e, textSize: 5
0x7fffeafd0e9e:	jmp		0x7fffeafd0ced
disassembling symbol '.LBB49_45':
textAddr: 0x7fffeafd0ea3, textSize: 5
0x7fffeafd0ea3:	jmp		0x7fffeafd0ea8
disassembling symbol '.LBB49_46':
textAddr: 0x7fffeafd0ea8, textSize: 5
0x7fffeafd0ea8:	jmp		0x7fffeafd0ead
disassembling symbol '.LBB49_47':
textAddr: 0x7fffeafd0ead, textSize: 5
0x7fffeafd0ead:	jmp		0x7fffeafd0eb2
disassembling symbol '.LBB49_48':
textAddr: 0x7fffeafd0eb2, textSize: 14
0x7fffeafd0eb2:	add		rsp, 0x130
0x7fffeafd0eb9:	pop		rbp
0x7fffeafd0eba:	ret		
0x7fffeafd0ebb:	nop		dword ptr [rax + rax]
disassembling symbol 'segment_holding':
textAddr: 0x7fffeafd0ec0, textSize: 144
0x7fffeafd0ec0:	push		rbp
0x7fffeafd0ec1:	mov		rbp, rsp
0x7fffeafd0ec4:	mov		qword ptr [rbp - 0x10], rdi
0x7fffeafd0ec8:	mov		qword ptr [rbp - 0x18], rsi
0x7fffeafd0ecc:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafd0ed0:	add		rax, 0x378
0x7fffeafd0ed6:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafd0eda:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafd0ede:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafd0ee2:	cmp		rax, qword ptr [rcx]
0x7fffeafd0ee5:	jb		0x7fffeafd0f14
0x7fffeafd0eeb:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafd0eef:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafd0ef3:	mov		rcx, qword ptr [rcx]
0x7fffeafd0ef6:	mov		rdx, qword ptr [rbp - 0x20]
0x7fffeafd0efa:	add		rcx, qword ptr [rdx + 8]
0x7fffeafd0efe:	cmp		rax, rcx
0x7fffeafd0f01:	jae		0x7fffeafd0f14
0x7fffeafd0f07:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafd0f0b:	mov		qword ptr [rbp - 8], rax
0x7fffeafd0f0f:	jmp		0x7fffeafd0f3c
0x7fffeafd0f14:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafd0f18:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafd0f1c:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafd0f20:	cmp		rax, 0
0x7fffeafd0f24:	jne		0x7fffeafd0f37
0x7fffeafd0f2a:	mov		qword ptr [rbp - 8], 0
0x7fffeafd0f32:	jmp		0x7fffeafd0f3c
0x7fffeafd0f37:	jmp		0x7fffeafd0eda
0x7fffeafd0f3c:	mov		rax, qword ptr [rbp - 8]
0x7fffeafd0f40:	pop		rbp
0x7fffeafd0f41:	ret		
0x7fffeafd0f42:	nop		word ptr cs:[rax + rax]
0x7fffeafd0f4c:	nop		dword ptr [rax]
disassembling symbol '.LBB50_1':
textAddr: 0x7fffeafd0eda, textSize: 58
0x7fffeafd0eda:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafd0ede:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafd0ee2:	cmp		rax, qword ptr [rcx]
0x7fffeafd0ee5:	jb		0x7fffeafd0f14
0x7fffeafd0eeb:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafd0eef:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafd0ef3:	mov		rcx, qword ptr [rcx]
0x7fffeafd0ef6:	mov		rdx, qword ptr [rbp - 0x20]
0x7fffeafd0efa:	add		rcx, qword ptr [rdx + 8]
0x7fffeafd0efe:	cmp		rax, rcx
0x7fffeafd0f01:	jae		0x7fffeafd0f14
0x7fffeafd0f07:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafd0f0b:	mov		qword ptr [rbp - 8], rax
0x7fffeafd0f0f:	jmp		0x7fffeafd0f3c
disassembling symbol '.LBB50_4':
textAddr: 0x7fffeafd0f14, textSize: 35
0x7fffeafd0f14:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafd0f18:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafd0f1c:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafd0f20:	cmp		rax, 0
0x7fffeafd0f24:	jne		0x7fffeafd0f37
0x7fffeafd0f2a:	mov		qword ptr [rbp - 8], 0
0x7fffeafd0f32:	jmp		0x7fffeafd0f3c
disassembling symbol '.LBB50_6':
textAddr: 0x7fffeafd0f37, textSize: 5
0x7fffeafd0f37:	jmp		0x7fffeafd0eda
disassembling symbol '.LBB50_7':
textAddr: 0x7fffeafd0f3c, textSize: 20
0x7fffeafd0f3c:	mov		rax, qword ptr [rbp - 8]
0x7fffeafd0f40:	pop		rbp
0x7fffeafd0f41:	ret		
0x7fffeafd0f42:	nop		word ptr cs:[rax + rax]
0x7fffeafd0f4c:	nop		dword ptr [rax]
disassembling symbol 'mmap_resize':
textAddr: 0x7fffeafd0f50, textSize: 448
0x7fffeafd0f50:	push		rbp
0x7fffeafd0f51:	mov		rbp, rsp
0x7fffeafd0f54:	mov		qword ptr [rbp - 0x10], rdi
0x7fffeafd0f58:	mov		qword ptr [rbp - 0x18], rsi
0x7fffeafd0f5c:	mov		qword ptr [rbp - 0x20], rdx
0x7fffeafd0f60:	mov		dword ptr [rbp - 0x24], ecx
0x7fffeafd0f63:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafd0f67:	mov		rax, qword ptr [rax + 8]
0x7fffeafd0f6b:	and		rax, 0xfffffffffffffff8
0x7fffeafd0f71:	mov		qword ptr [rbp - 0x30], rax
0x7fffeafd0f75:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafd0f79:	shr		rax, 3
0x7fffeafd0f7d:	cmp		rax, 0x20
0x7fffeafd0f81:	jae		0x7fffeafd0f94
0x7fffeafd0f87:	mov		qword ptr [rbp - 8], 0
0x7fffeafd0f8f:	jmp		0x7fffeafd1109
0x7fffeafd0f94:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafd0f98:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafd0f9c:	add		rcx, 8
0x7fffeafd0fa3:	cmp		rax, rcx
0x7fffeafd0fa6:	jb		0x7fffeafd0fd5
0x7fffeafd0fac:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafd0fb0:	sub		rax, qword ptr [rbp - 0x20]
0x7fffeafd0fb4:	mov		rcx, qword ptr [rip + 0x2c19e7d]
0x7fffeafd0fbb:	shl		rcx, 1
0x7fffeafd0fbf:	cmp		rax, rcx
0x7fffeafd0fc2:	ja		0x7fffeafd0fd5
0x7fffeafd0fc8:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafd0fcc:	mov		qword ptr [rbp - 8], rax
0x7fffeafd0fd0:	jmp		0x7fffeafd1109
0x7fffeafd0fd5:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafd0fd9:	mov		rax, qword ptr [rax]
0x7fffeafd0fdc:	mov		qword ptr [rbp - 0x38], rax
0x7fffeafd0fe0:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafd0fe4:	add		rax, qword ptr [rbp - 0x38]
0x7fffeafd0fe8:	add		rax, 0x20
0x7fffeafd0fee:	mov		qword ptr [rbp - 0x40], rax
0x7fffeafd0ff2:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafd0ff6:	add		rax, 0x30
0x7fffeafd0ffc:	add		rax, 0xf
0x7fffeafd1002:	mov		rcx, qword ptr [rip + 0x2c19e27]
0x7fffeafd1009:	sub		rcx, 1
0x7fffeafd1010:	add		rax, rcx
0x7fffeafd1013:	mov		rcx, qword ptr [rip + 0x2c19e16]
0x7fffeafd101a:	sub		rcx, 1
0x7fffeafd1021:	xor		rcx, 0xffffffffffffffff
0x7fffeafd1028:	and		rax, rcx
0x7fffeafd102b:	mov		qword ptr [rbp - 0x48], rax
0x7fffeafd102f:	mov		rax, -1
0x7fffeafd1036:	mov		qword ptr [rbp - 0x50], rax
0x7fffeafd103a:	cmp		qword ptr [rbp - 0x50], rax
0x7fffeafd103e:	je		0x7fffeafd10fc
0x7fffeafd1044:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafd1048:	add		rax, qword ptr [rbp - 0x38]
0x7fffeafd104c:	mov		qword ptr [rbp - 0x58], rax
0x7fffeafd1050:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafd1054:	sub		rax, qword ptr [rbp - 0x38]
0x7fffeafd1058:	sub		rax, 0x20
0x7fffeafd105e:	mov		qword ptr [rbp - 0x60], rax
0x7fffeafd1062:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafd1066:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafd106a:	mov		qword ptr [rcx + 8], rax
0x7fffeafd106e:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafd1072:	mov		rcx, qword ptr [rbp - 0x60]
0x7fffeafd1076:	mov		qword ptr [rax + rcx + 8], 0xb
0x7fffeafd107f:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafd1083:	mov		rcx, qword ptr [rbp - 0x60]
0x7fffeafd1087:	mov		qword ptr [rax + rcx + 0x10], 0
0x7fffeafd1090:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafd1094:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafd1098:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafd109c:	jae		0x7fffeafd10ae
0x7fffeafd10a2:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafd10a6:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafd10aa:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafd10ae:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafd10b2:	sub		rax, qword ptr [rbp - 0x40]
0x7fffeafd10b6:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafd10ba:	add		rax, qword ptr [rcx + 0x358]
0x7fffeafd10c1:	mov		qword ptr [rcx + 0x358], rax
0x7fffeafd10c8:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafd10cc:	cmp		rax, qword ptr [rcx + 0x360]
0x7fffeafd10d3:	jbe		0x7fffeafd10ef
0x7fffeafd10d9:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafd10dd:	mov		rax, qword ptr [rax + 0x358]
0x7fffeafd10e4:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafd10e8:	mov		qword ptr [rcx + 0x360], rax
0x7fffeafd10ef:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafd10f3:	mov		qword ptr [rbp - 8], rax
0x7fffeafd10f7:	jmp		0x7fffeafd1109
0x7fffeafd10fc:	jmp		0x7fffeafd1101
0x7fffeafd1101:	mov		qword ptr [rbp - 8], 0
0x7fffeafd1109:	mov		rax, qword ptr [rbp - 8]
0x7fffeafd110d:	pop		rbp
0x7fffeafd110e:	ret		
0x7fffeafd110f:	nop		
disassembling symbol '.LBB51_2':
textAddr: 0x7fffeafd0f94, textSize: 65
0x7fffeafd0f94:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafd0f98:	mov		rcx, qword ptr [rbp - 0x20]
0x7fffeafd0f9c:	add		rcx, 8
0x7fffeafd0fa3:	cmp		rax, rcx
0x7fffeafd0fa6:	jb		0x7fffeafd0fd5
0x7fffeafd0fac:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafd0fb0:	sub		rax, qword ptr [rbp - 0x20]
0x7fffeafd0fb4:	mov		rcx, qword ptr [rip + 0x2c19e7d]
0x7fffeafd0fbb:	shl		rcx, 1
0x7fffeafd0fbf:	cmp		rax, rcx
0x7fffeafd0fc2:	ja		0x7fffeafd0fd5
0x7fffeafd0fc8:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafd0fcc:	mov		qword ptr [rbp - 8], rax
0x7fffeafd0fd0:	jmp		0x7fffeafd1109
disassembling symbol '.LBB51_5':
textAddr: 0x7fffeafd0fd5, textSize: 217
0x7fffeafd0fd5:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafd0fd9:	mov		rax, qword ptr [rax]
0x7fffeafd0fdc:	mov		qword ptr [rbp - 0x38], rax
0x7fffeafd0fe0:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafd0fe4:	add		rax, qword ptr [rbp - 0x38]
0x7fffeafd0fe8:	add		rax, 0x20
0x7fffeafd0fee:	mov		qword ptr [rbp - 0x40], rax
0x7fffeafd0ff2:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafd0ff6:	add		rax, 0x30
0x7fffeafd0ffc:	add		rax, 0xf
0x7fffeafd1002:	mov		rcx, qword ptr [rip + 0x2c19e27]
0x7fffeafd1009:	sub		rcx, 1
0x7fffeafd1010:	add		rax, rcx
0x7fffeafd1013:	mov		rcx, qword ptr [rip + 0x2c19e16]
0x7fffeafd101a:	sub		rcx, 1
0x7fffeafd1021:	xor		rcx, 0xffffffffffffffff
0x7fffeafd1028:	and		rax, rcx
0x7fffeafd102b:	mov		qword ptr [rbp - 0x48], rax
0x7fffeafd102f:	mov		rax, -1
0x7fffeafd1036:	mov		qword ptr [rbp - 0x50], rax
0x7fffeafd103a:	cmp		qword ptr [rbp - 0x50], rax
0x7fffeafd103e:	je		0x7fffeafd10fc
0x7fffeafd1044:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafd1048:	add		rax, qword ptr [rbp - 0x38]
0x7fffeafd104c:	mov		qword ptr [rbp - 0x58], rax
0x7fffeafd1050:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafd1054:	sub		rax, qword ptr [rbp - 0x38]
0x7fffeafd1058:	sub		rax, 0x20
0x7fffeafd105e:	mov		qword ptr [rbp - 0x60], rax
0x7fffeafd1062:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafd1066:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafd106a:	mov		qword ptr [rcx + 8], rax
0x7fffeafd106e:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafd1072:	mov		rcx, qword ptr [rbp - 0x60]
0x7fffeafd1076:	mov		qword ptr [rax + rcx + 8], 0xb
0x7fffeafd107f:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafd1083:	mov		rcx, qword ptr [rbp - 0x60]
0x7fffeafd1087:	mov		qword ptr [rax + rcx + 0x10], 0
0x7fffeafd1090:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafd1094:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafd1098:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafd109c:	jae		0x7fffeafd10ae
0x7fffeafd10a2:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafd10a6:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafd10aa:	mov		qword ptr [rcx + 0x18], rax
disassembling symbol '.LBB51_8':
textAddr: 0x7fffeafd10ae, textSize: 65
0x7fffeafd10ae:	mov		rax, qword ptr [rbp - 0x48]
0x7fffeafd10b2:	sub		rax, qword ptr [rbp - 0x40]
0x7fffeafd10b6:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafd10ba:	add		rax, qword ptr [rcx + 0x358]
0x7fffeafd10c1:	mov		qword ptr [rcx + 0x358], rax
0x7fffeafd10c8:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafd10cc:	cmp		rax, qword ptr [rcx + 0x360]
0x7fffeafd10d3:	jbe		0x7fffeafd10ef
0x7fffeafd10d9:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafd10dd:	mov		rax, qword ptr [rax + 0x358]
0x7fffeafd10e4:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafd10e8:	mov		qword ptr [rcx + 0x360], rax
disassembling symbol '.LBB51_10':
textAddr: 0x7fffeafd10ef, textSize: 13
0x7fffeafd10ef:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafd10f3:	mov		qword ptr [rbp - 8], rax
0x7fffeafd10f7:	jmp		0x7fffeafd1109
disassembling symbol '.LBB51_11':
textAddr: 0x7fffeafd10fc, textSize: 5
0x7fffeafd10fc:	jmp		0x7fffeafd1101
disassembling symbol '.LBB51_12':
textAddr: 0x7fffeafd1101, textSize: 8
0x7fffeafd1101:	mov		qword ptr [rbp - 8], 0
disassembling symbol '.LBB51_13':
textAddr: 0x7fffeafd1109, textSize: 7
0x7fffeafd1109:	mov		rax, qword ptr [rbp - 8]
0x7fffeafd110d:	pop		rbp
0x7fffeafd110e:	ret		
0x7fffeafd110f:	nop		
disassembling symbol 'dispose_chunk':
textAddr: 0x7fffeafd1110, textSize: 5016
0x7fffeafd1110:	push		rbp
0x7fffeafd1111:	mov		rbp, rsp
0x7fffeafd1114:	sub		rsp, 0x190
0x7fffeafd111b:	mov		qword ptr [rbp - 8], rdi
0x7fffeafd111f:	mov		qword ptr [rbp - 0x10], rsi
0x7fffeafd1123:	mov		qword ptr [rbp - 0x18], rdx
0x7fffeafd1127:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafd112b:	add		rax, qword ptr [rbp - 0x18]
0x7fffeafd112f:	mov		qword ptr [rbp - 0x20], rax
0x7fffeafd1133:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafd1137:	mov		rax, qword ptr [rax + 8]
0x7fffeafd113b:	and		rax, 1
0x7fffeafd1141:	cmp		rax, 0
0x7fffeafd1145:	jne		0x7fffeafd17be
0x7fffeafd114b:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafd114f:	mov		rax, qword ptr [rax]
0x7fffeafd1152:	mov		qword ptr [rbp - 0x30], rax
0x7fffeafd1156:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafd115a:	mov		rax, qword ptr [rax + 8]
0x7fffeafd115e:	and		rax, 3
0x7fffeafd1164:	cmp		rax, 0
0x7fffeafd1168:	jne		0x7fffeafd1185
0x7fffeafd116e:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafd1172:	add		rax, 0x20
0x7fffeafd1178:	add		rax, qword ptr [rbp - 0x18]
0x7fffeafd117c:	mov		qword ptr [rbp - 0x18], rax
0x7fffeafd1180:	jmp		0x7fffeafd249f
0x7fffeafd1185:	xor		eax, eax
0x7fffeafd1187:	mov		ecx, eax
0x7fffeafd1189:	mov		rdx, qword ptr [rbp - 0x10]
0x7fffeafd118d:	sub		rcx, qword ptr [rbp - 0x30]
0x7fffeafd1191:	add		rdx, rcx
0x7fffeafd1194:	mov		qword ptr [rbp - 0x28], rdx
0x7fffeafd1198:	mov		rcx, qword ptr [rbp - 0x30]
0x7fffeafd119c:	add		rcx, qword ptr [rbp - 0x18]
0x7fffeafd11a0:	mov		qword ptr [rbp - 0x18], rcx
0x7fffeafd11a4:	mov		rcx, qword ptr [rbp - 0x28]
0x7fffeafd11a8:	mov		qword ptr [rbp - 0x10], rcx
0x7fffeafd11ac:	mov		rcx, qword ptr [rbp - 0x28]
0x7fffeafd11b0:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafd11b4:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafd11b8:	setae		sil
0x7fffeafd11bc:	and		sil, 1
0x7fffeafd11c0:	movzx		eax, sil
0x7fffeafd11c4:	movsxd		rcx, eax
0x7fffeafd11c7:	cmp		rcx, 0
0x7fffeafd11cb:	je		0x7fffeafd17b4
0x7fffeafd11d1:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafd11d5:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd11d9:	cmp		rax, qword ptr [rcx + 0x20]
0x7fffeafd11dd:	je		0x7fffeafd174c
0x7fffeafd11e3:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafd11e7:	shr		rax, 3
0x7fffeafd11eb:	cmp		rax, 0x20
0x7fffeafd11ef:	jae		0x7fffeafd1382
0x7fffeafd11f5:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafd11f9:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafd11fd:	mov		qword ptr [rbp - 0x38], rax
0x7fffeafd1201:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafd1205:	mov		rax, qword ptr [rax + 0x18]
0x7fffeafd1209:	mov		qword ptr [rbp - 0x40], rax
0x7fffeafd120d:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafd1211:	shr		rax, 3
0x7fffeafd1215:	mov		dword ptr [rbp - 0x44], eax
0x7fffeafd1218:	mov		rcx, qword ptr [rbp - 0x38]
0x7fffeafd121c:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafd1220:	add		rdx, 0x48
0x7fffeafd1227:	mov		eax, dword ptr [rbp - 0x44]
0x7fffeafd122a:	shl		eax, 1
0x7fffeafd122d:	mov		eax, eax
0x7fffeafd122f:	mov		esi, eax
0x7fffeafd1231:	shl		rsi, 3
0x7fffeafd1235:	add		rdx, rsi
0x7fffeafd1238:	cmp		rcx, rdx
0x7fffeafd123b:	mov		dil, 1
0x7fffeafd123e:	mov		byte ptr [rbp - 0x161], dil
0x7fffeafd1245:	je		0x7fffeafd1286
0x7fffeafd124b:	xor		eax, eax
0x7fffeafd124d:	mov		rcx, qword ptr [rbp - 0x38]
0x7fffeafd1251:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafd1255:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafd1259:	mov		byte ptr [rbp - 0x162], al
0x7fffeafd125f:	jb		0x7fffeafd127a
0x7fffeafd1265:	mov		rax, qword ptr [rbp - 0x38]
0x7fffeafd1269:	mov		rax, qword ptr [rax + 0x18]
0x7fffeafd126d:	cmp		rax, qword ptr [rbp - 0x10]
0x7fffeafd1271:	sete		cl
0x7fffeafd1274:	mov		byte ptr [rbp - 0x162], cl
0x7fffeafd127a:	mov		al, byte ptr [rbp - 0x162]
0x7fffeafd1280:	mov		byte ptr [rbp - 0x161], al
0x7fffeafd1286:	mov		al, byte ptr [rbp - 0x161]
0x7fffeafd128c:	and		al, 1
0x7fffeafd128e:	movzx		ecx, al
0x7fffeafd1291:	movsxd		rdx, ecx
0x7fffeafd1294:	cmp		rdx, 0
0x7fffeafd1298:	je		0x7fffeafd1378
0x7fffeafd129e:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafd12a2:	cmp		rax, qword ptr [rbp - 0x38]
0x7fffeafd12a6:	jne		0x7fffeafd12c6
0x7fffeafd12ac:	mov		ecx, dword ptr [rbp - 0x44]
0x7fffeafd12af:	mov		eax, 1
0x7fffeafd12b4:	shl		eax, cl
0x7fffeafd12b6:	xor		eax, 0xffffffff
0x7fffeafd12b9:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafd12bd:	and		eax, dword ptr [rdx]
0x7fffeafd12bf:	mov		dword ptr [rdx], eax
0x7fffeafd12c1:	jmp		0x7fffeafd1373
0x7fffeafd12c6:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafd12ca:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd12ce:	add		rcx, 0x48
0x7fffeafd12d5:	mov		edx, dword ptr [rbp - 0x44]
0x7fffeafd12d8:	shl		edx, 1
0x7fffeafd12db:	mov		edx, edx
0x7fffeafd12dd:	mov		esi, edx
0x7fffeafd12df:	shl		rsi, 3
0x7fffeafd12e3:	add		rcx, rsi
0x7fffeafd12e6:	cmp		rax, rcx
0x7fffeafd12e9:	mov		dil, 1
0x7fffeafd12ec:	mov		byte ptr [rbp - 0x163], dil
0x7fffeafd12f3:	je		0x7fffeafd1334
0x7fffeafd12f9:	xor		eax, eax
0x7fffeafd12fb:	mov		rcx, qword ptr [rbp - 0x40]
0x7fffeafd12ff:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafd1303:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafd1307:	mov		byte ptr [rbp - 0x164], al
0x7fffeafd130d:	jb		0x7fffeafd1328
0x7fffeafd1313:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafd1317:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafd131b:	cmp		rax, qword ptr [rbp - 0x10]
0x7fffeafd131f:	sete		cl
0x7fffeafd1322:	mov		byte ptr [rbp - 0x164], cl
0x7fffeafd1328:	mov		al, byte ptr [rbp - 0x164]
0x7fffeafd132e:	mov		byte ptr [rbp - 0x163], al
0x7fffeafd1334:	mov		al, byte ptr [rbp - 0x163]
0x7fffeafd133a:	and		al, 1
0x7fffeafd133c:	movzx		ecx, al
0x7fffeafd133f:	movsxd		rdx, ecx
0x7fffeafd1342:	cmp		rdx, 0
0x7fffeafd1346:	je		0x7fffeafd1369
0x7fffeafd134c:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafd1350:	mov		rcx, qword ptr [rbp - 0x38]
0x7fffeafd1354:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafd1358:	mov		rax, qword ptr [rbp - 0x38]
0x7fffeafd135c:	mov		rcx, qword ptr [rbp - 0x40]
0x7fffeafd1360:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafd1364:	jmp		0x7fffeafd136e
0x7fffeafd1369:	call		0x7fffeafc4c10
0x7fffeafd136e:	jmp		0x7fffeafd1373
0x7fffeafd1373:	jmp		0x7fffeafd137d
0x7fffeafd1378:	call		0x7fffeafc4c10
0x7fffeafd137d:	jmp		0x7fffeafd1747
0x7fffeafd1382:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafd1386:	mov		qword ptr [rbp - 0x50], rax
0x7fffeafd138a:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafd138e:	mov		rax, qword ptr [rax + 0x30]
0x7fffeafd1392:	mov		qword ptr [rbp - 0x58], rax
0x7fffeafd1396:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafd139a:	mov		rax, qword ptr [rax + 0x18]
0x7fffeafd139e:	cmp		rax, qword ptr [rbp - 0x50]
0x7fffeafd13a2:	je		0x7fffeafd1448
0x7fffeafd13a8:	xor		eax, eax
0x7fffeafd13aa:	mov		rcx, qword ptr [rbp - 0x50]
0x7fffeafd13ae:	mov		rcx, qword ptr [rcx + 0x10]
0x7fffeafd13b2:	mov		qword ptr [rbp - 0x68], rcx
0x7fffeafd13b6:	mov		rcx, qword ptr [rbp - 0x50]
0x7fffeafd13ba:	mov		rcx, qword ptr [rcx + 0x18]
0x7fffeafd13be:	mov		qword ptr [rbp - 0x60], rcx
0x7fffeafd13c2:	mov		rcx, qword ptr [rbp - 0x68]
0x7fffeafd13c6:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafd13ca:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafd13ce:	mov		byte ptr [rbp - 0x165], al
0x7fffeafd13d4:	jb		0x7fffeafd1409
0x7fffeafd13da:	xor		eax, eax
0x7fffeafd13dc:	mov		rcx, qword ptr [rbp - 0x68]
0x7fffeafd13e0:	mov		rcx, qword ptr [rcx + 0x18]
0x7fffeafd13e4:	cmp		rcx, qword ptr [rbp - 0x50]
0x7fffeafd13e8:	mov		byte ptr [rbp - 0x165], al
0x7fffeafd13ee:	jne		0x7fffeafd1409
0x7fffeafd13f4:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafd13f8:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafd13fc:	cmp		rax, qword ptr [rbp - 0x50]
0x7fffeafd1400:	sete		cl
0x7fffeafd1403:	mov		byte ptr [rbp - 0x165], cl
0x7fffeafd1409:	mov		al, byte ptr [rbp - 0x165]
0x7fffeafd140f:	and		al, 1
0x7fffeafd1411:	movzx		ecx, al
0x7fffeafd1414:	movsxd		rdx, ecx
0x7fffeafd1417:	cmp		rdx, 0
0x7fffeafd141b:	je		0x7fffeafd143e
0x7fffeafd1421:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafd1425:	mov		rcx, qword ptr [rbp - 0x68]
0x7fffeafd1429:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafd142d:	mov		rax, qword ptr [rbp - 0x68]
0x7fffeafd1431:	mov		rcx, qword ptr [rbp - 0x60]
0x7fffeafd1435:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafd1439:	jmp		0x7fffeafd1443
0x7fffeafd143e:	call		0x7fffeafc4c10
0x7fffeafd1443:	jmp		0x7fffeafd1550
0x7fffeafd1448:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafd144c:	mov		rcx, rax
0x7fffeafd144f:	add		rcx, 0x20
0x7fffeafd1456:	add		rcx, 8
0x7fffeafd145d:	mov		qword ptr [rbp - 0x70], rcx
0x7fffeafd1461:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafd1465:	mov		qword ptr [rbp - 0x60], rax
0x7fffeafd1469:	cmp		rax, 0
0x7fffeafd146d:	jne		0x7fffeafd1497
0x7fffeafd1473:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafd1477:	mov		rcx, rax
0x7fffeafd147a:	add		rcx, 0x20
0x7fffeafd1481:	mov		qword ptr [rbp - 0x70], rcx
0x7fffeafd1485:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafd1489:	mov		qword ptr [rbp - 0x60], rax
0x7fffeafd148d:	cmp		rax, 0
0x7fffeafd1491:	je		0x7fffeafd154b
0x7fffeafd1497:	jmp		0x7fffeafd149c
0x7fffeafd149c:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafd14a0:	mov		rcx, rax
0x7fffeafd14a3:	add		rcx, 0x20
0x7fffeafd14aa:	add		rcx, 8
0x7fffeafd14b1:	mov		qword ptr [rbp - 0x78], rcx
0x7fffeafd14b5:	cmp		qword ptr [rax + 0x28], 0
0x7fffeafd14ba:	mov		dl, 1
0x7fffeafd14bc:	mov		byte ptr [rbp - 0x166], dl
0x7fffeafd14c2:	jne		0x7fffeafd14e8
0x7fffeafd14c8:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafd14cc:	mov		rcx, rax
0x7fffeafd14cf:	add		rcx, 0x20
0x7fffeafd14d6:	mov		qword ptr [rbp - 0x78], rcx
0x7fffeafd14da:	cmp		qword ptr [rax + 0x20], 0
0x7fffeafd14df:	setne		dl
0x7fffeafd14e2:	mov		byte ptr [rbp - 0x166], dl
0x7fffeafd14e8:	mov		al, byte ptr [rbp - 0x166]
0x7fffeafd14ee:	test		al, 1
0x7fffeafd14f0:	jne		0x7fffeafd14fb
0x7fffeafd14f6:	jmp		0x7fffeafd150f
0x7fffeafd14fb:	mov		rax, qword ptr [rbp - 0x78]
0x7fffeafd14ff:	mov		qword ptr [rbp - 0x70], rax
0x7fffeafd1503:	mov		rax, qword ptr [rax]
0x7fffeafd1506:	mov		qword ptr [rbp - 0x60], rax
0x7fffeafd150a:	jmp		0x7fffeafd149c
0x7fffeafd150f:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafd1513:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd1517:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafd151b:	setae		dl
0x7fffeafd151e:	and		dl, 1
0x7fffeafd1521:	movzx		esi, dl
0x7fffeafd1524:	movsxd		rax, esi
0x7fffeafd1527:	cmp		rax, 0
0x7fffeafd152b:	je		0x7fffeafd1541
0x7fffeafd1531:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafd1535:	mov		qword ptr [rax], 0
0x7fffeafd153c:	jmp		0x7fffeafd1546
0x7fffeafd1541:	call		0x7fffeafc4c10
0x7fffeafd1546:	jmp		0x7fffeafd154b
0x7fffeafd154b:	jmp		0x7fffeafd1550
0x7fffeafd1550:	cmp		qword ptr [rbp - 0x58], 0
0x7fffeafd1555:	je		0x7fffeafd1742
0x7fffeafd155b:	mov		rax, qword ptr [rbp - 8]
0x7fffeafd155f:	add		rax, 0x258
0x7fffeafd1565:	mov		rcx, qword ptr [rbp - 0x50]
0x7fffeafd1569:	mov		edx, dword ptr [rcx + 0x38]
0x7fffeafd156c:	mov		ecx, edx
0x7fffeafd156e:	shl		rcx, 3
0x7fffeafd1572:	add		rax, rcx
0x7fffeafd1575:	mov		qword ptr [rbp - 0x80], rax
0x7fffeafd1579:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafd157d:	mov		rcx, qword ptr [rbp - 0x80]
0x7fffeafd1581:	cmp		rax, qword ptr [rcx]
0x7fffeafd1584:	jne		0x7fffeafd15bf
0x7fffeafd158a:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafd158e:	mov		rcx, qword ptr [rbp - 0x80]
0x7fffeafd1592:	mov		qword ptr [rcx], rax
0x7fffeafd1595:	cmp		rax, 0
0x7fffeafd1599:	jne		0x7fffeafd15ba
0x7fffeafd159f:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafd15a3:	mov		ecx, dword ptr [rax + 0x38]
0x7fffeafd15a6:	mov		edx, 1
0x7fffeafd15ab:	shl		edx, cl
0x7fffeafd15ad:	xor		edx, 0xffffffff
0x7fffeafd15b0:	mov		rax, qword ptr [rbp - 8]
0x7fffeafd15b4:	and		edx, dword ptr [rax + 4]
0x7fffeafd15b7:	mov		dword ptr [rax + 4], edx
0x7fffeafd15ba:	jmp		0x7fffeafd161f
0x7fffeafd15bf:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafd15c3:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd15c7:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafd15cb:	setae		dl
0x7fffeafd15ce:	and		dl, 1
0x7fffeafd15d1:	movzx		esi, dl
0x7fffeafd15d4:	movsxd		rax, esi
0x7fffeafd15d7:	cmp		rax, 0
0x7fffeafd15db:	je		0x7fffeafd1615
0x7fffeafd15e1:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafd15e5:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafd15e9:	cmp		rax, qword ptr [rbp - 0x50]
0x7fffeafd15ed:	jne		0x7fffeafd1604
0x7fffeafd15f3:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafd15f7:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafd15fb:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafd15ff:	jmp		0x7fffeafd1610
0x7fffeafd1604:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafd1608:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafd160c:	mov		qword ptr [rcx + 0x28], rax
0x7fffeafd1610:	jmp		0x7fffeafd161a
0x7fffeafd1615:	call		0x7fffeafc4c10
0x7fffeafd161a:	jmp		0x7fffeafd161f
0x7fffeafd161f:	cmp		qword ptr [rbp - 0x60], 0
0x7fffeafd1624:	je		0x7fffeafd173d
0x7fffeafd162a:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafd162e:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd1632:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafd1636:	setae		dl
0x7fffeafd1639:	and		dl, 1
0x7fffeafd163c:	movzx		esi, dl
0x7fffeafd163f:	movsxd		rax, esi
0x7fffeafd1642:	cmp		rax, 0
0x7fffeafd1646:	je		0x7fffeafd1733
0x7fffeafd164c:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafd1650:	mov		rcx, qword ptr [rbp - 0x60]
0x7fffeafd1654:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafd1658:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafd165c:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafd1660:	mov		qword ptr [rbp - 0x88], rax
0x7fffeafd1667:	cmp		rax, 0
0x7fffeafd166b:	je		0x7fffeafd16c3
0x7fffeafd1671:	mov		rax, qword ptr [rbp - 0x88]
0x7fffeafd1678:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd167c:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafd1680:	setae		dl
0x7fffeafd1683:	and		dl, 1
0x7fffeafd1686:	movzx		esi, dl
0x7fffeafd1689:	movsxd		rax, esi
0x7fffeafd168c:	cmp		rax, 0
0x7fffeafd1690:	je		0x7fffeafd16b9
0x7fffeafd1696:	mov		rax, qword ptr [rbp - 0x88]
0x7fffeafd169d:	mov		rcx, qword ptr [rbp - 0x60]
0x7fffeafd16a1:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafd16a5:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafd16a9:	mov		rcx, qword ptr [rbp - 0x88]
0x7fffeafd16b0:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafd16b4:	jmp		0x7fffeafd16be
0x7fffeafd16b9:	call		0x7fffeafc4c10
0x7fffeafd16be:	jmp		0x7fffeafd16c3
0x7fffeafd16c3:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafd16c7:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafd16cb:	mov		qword ptr [rbp - 0x90], rax
0x7fffeafd16d2:	cmp		rax, 0
0x7fffeafd16d6:	je		0x7fffeafd172e
0x7fffeafd16dc:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafd16e3:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd16e7:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafd16eb:	setae		dl
0x7fffeafd16ee:	and		dl, 1
0x7fffeafd16f1:	movzx		esi, dl
0x7fffeafd16f4:	movsxd		rax, esi
0x7fffeafd16f7:	cmp		rax, 0
0x7fffeafd16fb:	je		0x7fffeafd1724
0x7fffeafd1701:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafd1708:	mov		rcx, qword ptr [rbp - 0x60]
0x7fffeafd170c:	mov		qword ptr [rcx + 0x28], rax
0x7fffeafd1710:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafd1714:	mov		rcx, qword ptr [rbp - 0x90]
0x7fffeafd171b:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafd171f:	jmp		0x7fffeafd1729
0x7fffeafd1724:	call		0x7fffeafc4c10
0x7fffeafd1729:	jmp		0x7fffeafd172e
0x7fffeafd172e:	jmp		0x7fffeafd1738
0x7fffeafd1733:	call		0x7fffeafc4c10
0x7fffeafd1738:	jmp		0x7fffeafd173d
0x7fffeafd173d:	jmp		0x7fffeafd1742
0x7fffeafd1742:	jmp		0x7fffeafd1747
0x7fffeafd1747:	jmp		0x7fffeafd17af
0x7fffeafd174c:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafd1750:	mov		rax, qword ptr [rax + 8]
0x7fffeafd1754:	and		rax, 3
0x7fffeafd175a:	cmp		rax, 3
0x7fffeafd175e:	jne		0x7fffeafd17aa
0x7fffeafd1764:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafd1768:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd176c:	mov		qword ptr [rcx + 8], rax
0x7fffeafd1770:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafd1774:	mov		rcx, qword ptr [rax + 8]
0x7fffeafd1778:	and		rcx, 0xfffffffffffffffe
0x7fffeafd177f:	mov		qword ptr [rax + 8], rcx
0x7fffeafd1783:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafd1787:	or		rax, 1
0x7fffeafd178d:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafd1791:	mov		qword ptr [rcx + 8], rax
0x7fffeafd1795:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafd1799:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafd179d:	mov		rdx, qword ptr [rbp - 0x18]
0x7fffeafd17a1:	mov		qword ptr [rcx + rdx], rax
0x7fffeafd17a5:	jmp		0x7fffeafd249f
0x7fffeafd17aa:	jmp		0x7fffeafd17af
0x7fffeafd17af:	jmp		0x7fffeafd17b9
0x7fffeafd17b4:	call		0x7fffeafc4c10
0x7fffeafd17b9:	jmp		0x7fffeafd17be
0x7fffeafd17be:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafd17c2:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd17c6:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafd17ca:	setae		dl
0x7fffeafd17cd:	and		dl, 1
0x7fffeafd17d0:	movzx		esi, dl
0x7fffeafd17d3:	movsxd		rax, esi
0x7fffeafd17d6:	cmp		rax, 0
0x7fffeafd17da:	je		0x7fffeafd249a
0x7fffeafd17e0:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafd17e4:	mov		rax, qword ptr [rax + 8]
0x7fffeafd17e8:	and		rax, 2
0x7fffeafd17ee:	cmp		rax, 0
0x7fffeafd17f2:	jne		0x7fffeafd1f9c
0x7fffeafd17f8:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafd17fc:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd1800:	cmp		rax, qword ptr [rcx + 0x28]
0x7fffeafd1804:	jne		0x7fffeafd1871
0x7fffeafd180a:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafd180e:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd1812:	add		rax, qword ptr [rcx + 0x10]
0x7fffeafd1816:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafd181a:	mov		qword ptr [rbp - 0x98], rax
0x7fffeafd1821:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafd1825:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd1829:	mov		qword ptr [rcx + 0x28], rax
0x7fffeafd182d:	mov		rax, qword ptr [rbp - 0x98]
0x7fffeafd1834:	or		rax, 1
0x7fffeafd183a:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafd183e:	mov		qword ptr [rcx + 8], rax
0x7fffeafd1842:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafd1846:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd184a:	cmp		rax, qword ptr [rcx + 0x20]
0x7fffeafd184e:	jne		0x7fffeafd186c
0x7fffeafd1854:	mov		rax, qword ptr [rbp - 8]
0x7fffeafd1858:	mov		qword ptr [rax + 0x20], 0
0x7fffeafd1860:	mov		rax, qword ptr [rbp - 8]
0x7fffeafd1864:	mov		qword ptr [rax + 8], 0
0x7fffeafd186c:	jmp		0x7fffeafd249f
0x7fffeafd1871:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafd1875:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd1879:	cmp		rax, qword ptr [rcx + 0x20]
0x7fffeafd187d:	jne		0x7fffeafd18d6
0x7fffeafd1883:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafd1887:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd188b:	add		rax, qword ptr [rcx + 8]
0x7fffeafd188f:	mov		qword ptr [rcx + 8], rax
0x7fffeafd1893:	mov		qword ptr [rbp - 0xa0], rax
0x7fffeafd189a:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafd189e:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd18a2:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafd18a6:	mov		rax, qword ptr [rbp - 0xa0]
0x7fffeafd18ad:	or		rax, 1
0x7fffeafd18b3:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafd18b7:	mov		qword ptr [rcx + 8], rax
0x7fffeafd18bb:	mov		rax, qword ptr [rbp - 0xa0]
0x7fffeafd18c2:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafd18c6:	mov		rdx, qword ptr [rbp - 0xa0]
0x7fffeafd18cd:	mov		qword ptr [rcx + rdx], rax
0x7fffeafd18d1:	jmp		0x7fffeafd249f
0x7fffeafd18d6:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafd18da:	mov		rax, qword ptr [rax + 8]
0x7fffeafd18de:	and		rax, 0xfffffffffffffff8
0x7fffeafd18e4:	mov		qword ptr [rbp - 0xa8], rax
0x7fffeafd18eb:	mov		rax, qword ptr [rbp - 0xa8]
0x7fffeafd18f2:	add		rax, qword ptr [rbp - 0x18]
0x7fffeafd18f6:	mov		qword ptr [rbp - 0x18], rax
0x7fffeafd18fa:	mov		rax, qword ptr [rbp - 0xa8]
0x7fffeafd1901:	shr		rax, 3
0x7fffeafd1905:	cmp		rax, 0x20
0x7fffeafd1909:	jae		0x7fffeafd1ad5
0x7fffeafd190f:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafd1913:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafd1917:	mov		qword ptr [rbp - 0xb0], rax
0x7fffeafd191e:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafd1922:	mov		rax, qword ptr [rax + 0x18]
0x7fffeafd1926:	mov		qword ptr [rbp - 0xb8], rax
0x7fffeafd192d:	mov		rax, qword ptr [rbp - 0xa8]
0x7fffeafd1934:	shr		rax, 3
0x7fffeafd1938:	mov		dword ptr [rbp - 0xbc], eax
0x7fffeafd193e:	mov		rcx, qword ptr [rbp - 0xb0]
0x7fffeafd1945:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafd1949:	add		rdx, 0x48
0x7fffeafd1950:	mov		eax, dword ptr [rbp - 0xbc]
0x7fffeafd1956:	shl		eax, 1
0x7fffeafd1959:	mov		eax, eax
0x7fffeafd195b:	mov		esi, eax
0x7fffeafd195d:	shl		rsi, 3
0x7fffeafd1961:	add		rdx, rsi
0x7fffeafd1964:	cmp		rcx, rdx
0x7fffeafd1967:	mov		dil, 1
0x7fffeafd196a:	mov		byte ptr [rbp - 0x167], dil
0x7fffeafd1971:	je		0x7fffeafd19b8
0x7fffeafd1977:	xor		eax, eax
0x7fffeafd1979:	mov		rcx, qword ptr [rbp - 0xb0]
0x7fffeafd1980:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafd1984:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafd1988:	mov		byte ptr [rbp - 0x168], al
0x7fffeafd198e:	jb		0x7fffeafd19ac
0x7fffeafd1994:	mov		rax, qword ptr [rbp - 0xb0]
0x7fffeafd199b:	mov		rax, qword ptr [rax + 0x18]
0x7fffeafd199f:	cmp		rax, qword ptr [rbp - 0x20]
0x7fffeafd19a3:	sete		cl
0x7fffeafd19a6:	mov		byte ptr [rbp - 0x168], cl
0x7fffeafd19ac:	mov		al, byte ptr [rbp - 0x168]
0x7fffeafd19b2:	mov		byte ptr [rbp - 0x167], al
0x7fffeafd19b8:	mov		al, byte ptr [rbp - 0x167]
0x7fffeafd19be:	and		al, 1
0x7fffeafd19c0:	movzx		ecx, al
0x7fffeafd19c3:	movsxd		rdx, ecx
0x7fffeafd19c6:	cmp		rdx, 0
0x7fffeafd19ca:	je		0x7fffeafd1acb
0x7fffeafd19d0:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafd19d7:	cmp		rax, qword ptr [rbp - 0xb0]
0x7fffeafd19de:	jne		0x7fffeafd1a01
0x7fffeafd19e4:	mov		ecx, dword ptr [rbp - 0xbc]
0x7fffeafd19ea:	mov		eax, 1
0x7fffeafd19ef:	shl		eax, cl
0x7fffeafd19f1:	xor		eax, 0xffffffff
0x7fffeafd19f4:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafd19f8:	and		eax, dword ptr [rdx]
0x7fffeafd19fa:	mov		dword ptr [rdx], eax
0x7fffeafd19fc:	jmp		0x7fffeafd1ac6
0x7fffeafd1a01:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafd1a08:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd1a0c:	add		rcx, 0x48
0x7fffeafd1a13:	mov		edx, dword ptr [rbp - 0xbc]
0x7fffeafd1a19:	shl		edx, 1
0x7fffeafd1a1c:	mov		edx, edx
0x7fffeafd1a1e:	mov		esi, edx
0x7fffeafd1a20:	shl		rsi, 3
0x7fffeafd1a24:	add		rcx, rsi
0x7fffeafd1a27:	cmp		rax, rcx
0x7fffeafd1a2a:	mov		dil, 1
0x7fffeafd1a2d:	mov		byte ptr [rbp - 0x169], dil
0x7fffeafd1a34:	je		0x7fffeafd1a7b
0x7fffeafd1a3a:	xor		eax, eax
0x7fffeafd1a3c:	mov		rcx, qword ptr [rbp - 0xb8]
0x7fffeafd1a43:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafd1a47:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafd1a4b:	mov		byte ptr [rbp - 0x16a], al
0x7fffeafd1a51:	jb		0x7fffeafd1a6f
0x7fffeafd1a57:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafd1a5e:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafd1a62:	cmp		rax, qword ptr [rbp - 0x20]
0x7fffeafd1a66:	sete		cl
0x7fffeafd1a69:	mov		byte ptr [rbp - 0x16a], cl
0x7fffeafd1a6f:	mov		al, byte ptr [rbp - 0x16a]
0x7fffeafd1a75:	mov		byte ptr [rbp - 0x169], al
0x7fffeafd1a7b:	mov		al, byte ptr [rbp - 0x169]
0x7fffeafd1a81:	and		al, 1
0x7fffeafd1a83:	movzx		ecx, al
0x7fffeafd1a86:	movsxd		rdx, ecx
0x7fffeafd1a89:	cmp		rdx, 0
0x7fffeafd1a8d:	je		0x7fffeafd1abc
0x7fffeafd1a93:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafd1a9a:	mov		rcx, qword ptr [rbp - 0xb0]
0x7fffeafd1aa1:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafd1aa5:	mov		rax, qword ptr [rbp - 0xb0]
0x7fffeafd1aac:	mov		rcx, qword ptr [rbp - 0xb8]
0x7fffeafd1ab3:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafd1ab7:	jmp		0x7fffeafd1ac1
0x7fffeafd1abc:	call		0x7fffeafc4c10
0x7fffeafd1ac1:	jmp		0x7fffeafd1ac6
0x7fffeafd1ac6:	jmp		0x7fffeafd1ad0
0x7fffeafd1acb:	call		0x7fffeafc4c10
0x7fffeafd1ad0:	jmp		0x7fffeafd1f48
0x7fffeafd1ad5:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafd1ad9:	mov		qword ptr [rbp - 0xc8], rax
0x7fffeafd1ae0:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafd1ae7:	mov		rax, qword ptr [rax + 0x30]
0x7fffeafd1aeb:	mov		qword ptr [rbp - 0xd0], rax
0x7fffeafd1af2:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafd1af9:	mov		rax, qword ptr [rax + 0x18]
0x7fffeafd1afd:	cmp		rax, qword ptr [rbp - 0xc8]
0x7fffeafd1b04:	je		0x7fffeafd1bd1
0x7fffeafd1b0a:	xor		eax, eax
0x7fffeafd1b0c:	mov		rcx, qword ptr [rbp - 0xc8]
0x7fffeafd1b13:	mov		rcx, qword ptr [rcx + 0x10]
0x7fffeafd1b17:	mov		qword ptr [rbp - 0xe0], rcx
0x7fffeafd1b1e:	mov		rcx, qword ptr [rbp - 0xc8]
0x7fffeafd1b25:	mov		rcx, qword ptr [rcx + 0x18]
0x7fffeafd1b29:	mov		qword ptr [rbp - 0xd8], rcx
0x7fffeafd1b30:	mov		rcx, qword ptr [rbp - 0xe0]
0x7fffeafd1b37:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafd1b3b:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafd1b3f:	mov		byte ptr [rbp - 0x16b], al
0x7fffeafd1b45:	jb		0x7fffeafd1b86
0x7fffeafd1b4b:	xor		eax, eax
0x7fffeafd1b4d:	mov		rcx, qword ptr [rbp - 0xe0]
0x7fffeafd1b54:	mov		rcx, qword ptr [rcx + 0x18]
0x7fffeafd1b58:	cmp		rcx, qword ptr [rbp - 0xc8]
0x7fffeafd1b5f:	mov		byte ptr [rbp - 0x16b], al
0x7fffeafd1b65:	jne		0x7fffeafd1b86
0x7fffeafd1b6b:	mov		rax, qword ptr [rbp - 0xd8]
0x7fffeafd1b72:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafd1b76:	cmp		rax, qword ptr [rbp - 0xc8]
0x7fffeafd1b7d:	sete		cl
0x7fffeafd1b80:	mov		byte ptr [rbp - 0x16b], cl
0x7fffeafd1b86:	mov		al, byte ptr [rbp - 0x16b]
0x7fffeafd1b8c:	and		al, 1
0x7fffeafd1b8e:	movzx		ecx, al
0x7fffeafd1b91:	movsxd		rdx, ecx
0x7fffeafd1b94:	cmp		rdx, 0
0x7fffeafd1b98:	je		0x7fffeafd1bc7
0x7fffeafd1b9e:	mov		rax, qword ptr [rbp - 0xd8]
0x7fffeafd1ba5:	mov		rcx, qword ptr [rbp - 0xe0]
0x7fffeafd1bac:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafd1bb0:	mov		rax, qword ptr [rbp - 0xe0]
0x7fffeafd1bb7:	mov		rcx, qword ptr [rbp - 0xd8]
0x7fffeafd1bbe:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafd1bc2:	jmp		0x7fffeafd1bcc
0x7fffeafd1bc7:	call		0x7fffeafc4c10
0x7fffeafd1bcc:	jmp		0x7fffeafd1d06
0x7fffeafd1bd1:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafd1bd8:	mov		rcx, rax
0x7fffeafd1bdb:	add		rcx, 0x20
0x7fffeafd1be2:	add		rcx, 8
0x7fffeafd1be9:	mov		qword ptr [rbp - 0xe8], rcx
0x7fffeafd1bf0:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafd1bf4:	mov		qword ptr [rbp - 0xd8], rax
0x7fffeafd1bfb:	cmp		rax, 0
0x7fffeafd1bff:	jne		0x7fffeafd1c32
0x7fffeafd1c05:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafd1c0c:	mov		rcx, rax
0x7fffeafd1c0f:	add		rcx, 0x20
0x7fffeafd1c16:	mov		qword ptr [rbp - 0xe8], rcx
0x7fffeafd1c1d:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafd1c21:	mov		qword ptr [rbp - 0xd8], rax
0x7fffeafd1c28:	cmp		rax, 0
0x7fffeafd1c2c:	je		0x7fffeafd1d01
0x7fffeafd1c32:	jmp		0x7fffeafd1c37
0x7fffeafd1c37:	mov		rax, qword ptr [rbp - 0xd8]
0x7fffeafd1c3e:	mov		rcx, rax
0x7fffeafd1c41:	add		rcx, 0x20
0x7fffeafd1c48:	add		rcx, 8
0x7fffeafd1c4f:	mov		qword ptr [rbp - 0xf0], rcx
0x7fffeafd1c56:	cmp		qword ptr [rax + 0x28], 0
0x7fffeafd1c5b:	mov		dl, 1
0x7fffeafd1c5d:	mov		byte ptr [rbp - 0x16c], dl
0x7fffeafd1c63:	jne		0x7fffeafd1c8f
0x7fffeafd1c69:	mov		rax, qword ptr [rbp - 0xd8]
0x7fffeafd1c70:	mov		rcx, rax
0x7fffeafd1c73:	add		rcx, 0x20
0x7fffeafd1c7a:	mov		qword ptr [rbp - 0xf0], rcx
0x7fffeafd1c81:	cmp		qword ptr [rax + 0x20], 0
0x7fffeafd1c86:	setne		dl
0x7fffeafd1c89:	mov		byte ptr [rbp - 0x16c], dl
0x7fffeafd1c8f:	mov		al, byte ptr [rbp - 0x16c]
0x7fffeafd1c95:	test		al, 1
0x7fffeafd1c97:	jne		0x7fffeafd1ca2
0x7fffeafd1c9d:	jmp		0x7fffeafd1cbf
0x7fffeafd1ca2:	mov		rax, qword ptr [rbp - 0xf0]
0x7fffeafd1ca9:	mov		qword ptr [rbp - 0xe8], rax
0x7fffeafd1cb0:	mov		rax, qword ptr [rax]
0x7fffeafd1cb3:	mov		qword ptr [rbp - 0xd8], rax
0x7fffeafd1cba:	jmp		0x7fffeafd1c37
0x7fffeafd1cbf:	mov		rax, qword ptr [rbp - 0xe8]
0x7fffeafd1cc6:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd1cca:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafd1cce:	setae		dl
0x7fffeafd1cd1:	and		dl, 1
0x7fffeafd1cd4:	movzx		esi, dl
0x7fffeafd1cd7:	movsxd		rax, esi
0x7fffeafd1cda:	cmp		rax, 0
0x7fffeafd1cde:	je		0x7fffeafd1cf7
0x7fffeafd1ce4:	mov		rax, qword ptr [rbp - 0xe8]
0x7fffeafd1ceb:	mov		qword ptr [rax], 0
0x7fffeafd1cf2:	jmp		0x7fffeafd1cfc
0x7fffeafd1cf7:	call		0x7fffeafc4c10
0x7fffeafd1cfc:	jmp		0x7fffeafd1d01
0x7fffeafd1d01:	jmp		0x7fffeafd1d06
0x7fffeafd1d06:	cmp		qword ptr [rbp - 0xd0], 0
0x7fffeafd1d0e:	je		0x7fffeafd1f43
0x7fffeafd1d14:	mov		rax, qword ptr [rbp - 8]
0x7fffeafd1d18:	add		rax, 0x258
0x7fffeafd1d1e:	mov		rcx, qword ptr [rbp - 0xc8]
0x7fffeafd1d25:	mov		edx, dword ptr [rcx + 0x38]
0x7fffeafd1d28:	mov		ecx, edx
0x7fffeafd1d2a:	shl		rcx, 3
0x7fffeafd1d2e:	add		rax, rcx
0x7fffeafd1d31:	mov		qword ptr [rbp - 0xf8], rax
0x7fffeafd1d38:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafd1d3f:	mov		rcx, qword ptr [rbp - 0xf8]
0x7fffeafd1d46:	cmp		rax, qword ptr [rcx]
0x7fffeafd1d49:	jne		0x7fffeafd1d8d
0x7fffeafd1d4f:	mov		rax, qword ptr [rbp - 0xd8]
0x7fffeafd1d56:	mov		rcx, qword ptr [rbp - 0xf8]
0x7fffeafd1d5d:	mov		qword ptr [rcx], rax
0x7fffeafd1d60:	cmp		rax, 0
0x7fffeafd1d64:	jne		0x7fffeafd1d88
0x7fffeafd1d6a:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafd1d71:	mov		ecx, dword ptr [rax + 0x38]
0x7fffeafd1d74:	mov		edx, 1
0x7fffeafd1d79:	shl		edx, cl
0x7fffeafd1d7b:	xor		edx, 0xffffffff
0x7fffeafd1d7e:	mov		rax, qword ptr [rbp - 8]
0x7fffeafd1d82:	and		edx, dword ptr [rax + 4]
0x7fffeafd1d85:	mov		dword ptr [rax + 4], edx
0x7fffeafd1d88:	jmp		0x7fffeafd1e02
0x7fffeafd1d8d:	mov		rax, qword ptr [rbp - 0xd0]
0x7fffeafd1d94:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd1d98:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafd1d9c:	setae		dl
0x7fffeafd1d9f:	and		dl, 1
0x7fffeafd1da2:	movzx		esi, dl
0x7fffeafd1da5:	movsxd		rax, esi
0x7fffeafd1da8:	cmp		rax, 0
0x7fffeafd1dac:	je		0x7fffeafd1df8
0x7fffeafd1db2:	mov		rax, qword ptr [rbp - 0xd0]
0x7fffeafd1db9:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafd1dbd:	cmp		rax, qword ptr [rbp - 0xc8]
0x7fffeafd1dc4:	jne		0x7fffeafd1de1
0x7fffeafd1dca:	mov		rax, qword ptr [rbp - 0xd8]
0x7fffeafd1dd1:	mov		rcx, qword ptr [rbp - 0xd0]
0x7fffeafd1dd8:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafd1ddc:	jmp		0x7fffeafd1df3
0x7fffeafd1de1:	mov		rax, qword ptr [rbp - 0xd8]
0x7fffeafd1de8:	mov		rcx, qword ptr [rbp - 0xd0]
0x7fffeafd1def:	mov		qword ptr [rcx + 0x28], rax
0x7fffeafd1df3:	jmp		0x7fffeafd1dfd
0x7fffeafd1df8:	call		0x7fffeafc4c10
0x7fffeafd1dfd:	jmp		0x7fffeafd1e02
0x7fffeafd1e02:	cmp		qword ptr [rbp - 0xd8], 0
0x7fffeafd1e0a:	je		0x7fffeafd1f3e
0x7fffeafd1e10:	mov		rax, qword ptr [rbp - 0xd8]
0x7fffeafd1e17:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd1e1b:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafd1e1f:	setae		dl
0x7fffeafd1e22:	and		dl, 1
0x7fffeafd1e25:	movzx		esi, dl
0x7fffeafd1e28:	movsxd		rax, esi
0x7fffeafd1e2b:	cmp		rax, 0
0x7fffeafd1e2f:	je		0x7fffeafd1f34
0x7fffeafd1e35:	mov		rax, qword ptr [rbp - 0xd0]
0x7fffeafd1e3c:	mov		rcx, qword ptr [rbp - 0xd8]
0x7fffeafd1e43:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafd1e47:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafd1e4e:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafd1e52:	mov		qword ptr [rbp - 0x100], rax
0x7fffeafd1e59:	cmp		rax, 0
0x7fffeafd1e5d:	je		0x7fffeafd1ebb
0x7fffeafd1e63:	mov		rax, qword ptr [rbp - 0x100]
0x7fffeafd1e6a:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd1e6e:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafd1e72:	setae		dl
0x7fffeafd1e75:	and		dl, 1
0x7fffeafd1e78:	movzx		esi, dl
0x7fffeafd1e7b:	movsxd		rax, esi
0x7fffeafd1e7e:	cmp		rax, 0
0x7fffeafd1e82:	je		0x7fffeafd1eb1
0x7fffeafd1e88:	mov		rax, qword ptr [rbp - 0x100]
0x7fffeafd1e8f:	mov		rcx, qword ptr [rbp - 0xd8]
0x7fffeafd1e96:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafd1e9a:	mov		rax, qword ptr [rbp - 0xd8]
0x7fffeafd1ea1:	mov		rcx, qword ptr [rbp - 0x100]
0x7fffeafd1ea8:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafd1eac:	jmp		0x7fffeafd1eb6
0x7fffeafd1eb1:	call		0x7fffeafc4c10
0x7fffeafd1eb6:	jmp		0x7fffeafd1ebb
0x7fffeafd1ebb:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafd1ec2:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafd1ec6:	mov		qword ptr [rbp - 0x108], rax
0x7fffeafd1ecd:	cmp		rax, 0
0x7fffeafd1ed1:	je		0x7fffeafd1f2f
0x7fffeafd1ed7:	mov		rax, qword ptr [rbp - 0x108]
0x7fffeafd1ede:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd1ee2:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafd1ee6:	setae		dl
0x7fffeafd1ee9:	and		dl, 1
0x7fffeafd1eec:	movzx		esi, dl
0x7fffeafd1eef:	movsxd		rax, esi
0x7fffeafd1ef2:	cmp		rax, 0
0x7fffeafd1ef6:	je		0x7fffeafd1f25
0x7fffeafd1efc:	mov		rax, qword ptr [rbp - 0x108]
0x7fffeafd1f03:	mov		rcx, qword ptr [rbp - 0xd8]
0x7fffeafd1f0a:	mov		qword ptr [rcx + 0x28], rax
0x7fffeafd1f0e:	mov		rax, qword ptr [rbp - 0xd8]
0x7fffeafd1f15:	mov		rcx, qword ptr [rbp - 0x108]
0x7fffeafd1f1c:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafd1f20:	jmp		0x7fffeafd1f2a
0x7fffeafd1f25:	call		0x7fffeafc4c10
0x7fffeafd1f2a:	jmp		0x7fffeafd1f2f
0x7fffeafd1f2f:	jmp		0x7fffeafd1f39
0x7fffeafd1f34:	call		0x7fffeafc4c10
0x7fffeafd1f39:	jmp		0x7fffeafd1f3e
0x7fffeafd1f3e:	jmp		0x7fffeafd1f43
0x7fffeafd1f43:	jmp		0x7fffeafd1f48
0x7fffeafd1f48:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafd1f4c:	or		rax, 1
0x7fffeafd1f52:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafd1f56:	mov		qword ptr [rcx + 8], rax
0x7fffeafd1f5a:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafd1f5e:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafd1f62:	mov		rdx, qword ptr [rbp - 0x18]
0x7fffeafd1f66:	mov		qword ptr [rcx + rdx], rax
0x7fffeafd1f6a:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafd1f6e:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd1f72:	cmp		rax, qword ptr [rcx + 0x20]
0x7fffeafd1f76:	jne		0x7fffeafd1f8d
0x7fffeafd1f7c:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafd1f80:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd1f84:	mov		qword ptr [rcx + 8], rax
0x7fffeafd1f88:	jmp		0x7fffeafd249f
0x7fffeafd1f8d:	jmp		0x7fffeafd1f92
0x7fffeafd1f92:	jmp		0x7fffeafd1f97
0x7fffeafd1f97:	jmp		0x7fffeafd1fd1
0x7fffeafd1f9c:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafd1fa0:	mov		rcx, qword ptr [rax + 8]
0x7fffeafd1fa4:	and		rcx, 0xfffffffffffffffe
0x7fffeafd1fab:	mov		qword ptr [rax + 8], rcx
0x7fffeafd1faf:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafd1fb3:	or		rax, 1
0x7fffeafd1fb9:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafd1fbd:	mov		qword ptr [rcx + 8], rax
0x7fffeafd1fc1:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafd1fc5:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafd1fc9:	mov		rdx, qword ptr [rbp - 0x18]
0x7fffeafd1fcd:	mov		qword ptr [rcx + rdx], rax
0x7fffeafd1fd1:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafd1fd5:	shr		rax, 3
0x7fffeafd1fd9:	cmp		rax, 0x20
0x7fffeafd1fdd:	jae		0x7fffeafd20e8
0x7fffeafd1fe3:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafd1fe7:	shr		rax, 3
0x7fffeafd1feb:	mov		dword ptr [rbp - 0x10c], eax
0x7fffeafd1ff1:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd1ff5:	add		rcx, 0x48
0x7fffeafd1ffc:	mov		eax, dword ptr [rbp - 0x10c]
0x7fffeafd2002:	shl		eax, 1
0x7fffeafd2005:	mov		eax, eax
0x7fffeafd2007:	mov		edx, eax
0x7fffeafd2009:	shl		rdx, 3
0x7fffeafd200d:	add		rcx, rdx
0x7fffeafd2010:	mov		qword ptr [rbp - 0x118], rcx
0x7fffeafd2017:	mov		rcx, qword ptr [rbp - 0x118]
0x7fffeafd201e:	mov		qword ptr [rbp - 0x120], rcx
0x7fffeafd2025:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd2029:	mov		eax, dword ptr [rcx]
0x7fffeafd202b:	mov		ecx, dword ptr [rbp - 0x10c]
0x7fffeafd2031:	mov		esi, 1
0x7fffeafd2036:	shl		esi, cl
0x7fffeafd2038:	and		eax, esi
0x7fffeafd203a:	cmp		eax, 0
0x7fffeafd203d:	jne		0x7fffeafd205d
0x7fffeafd2043:	mov		ecx, dword ptr [rbp - 0x10c]
0x7fffeafd2049:	mov		eax, 1
0x7fffeafd204e:	shl		eax, cl
0x7fffeafd2050:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafd2054:	or		eax, dword ptr [rdx]
0x7fffeafd2056:	mov		dword ptr [rdx], eax
0x7fffeafd2058:	jmp		0x7fffeafd20a7
0x7fffeafd205d:	mov		rax, qword ptr [rbp - 0x118]
0x7fffeafd2064:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafd2068:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd206c:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafd2070:	setae		dl
0x7fffeafd2073:	and		dl, 1
0x7fffeafd2076:	movzx		esi, dl
0x7fffeafd2079:	movsxd		rax, esi
0x7fffeafd207c:	cmp		rax, 0
0x7fffeafd2080:	je		0x7fffeafd209d
0x7fffeafd2086:	mov		rax, qword ptr [rbp - 0x118]
0x7fffeafd208d:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafd2091:	mov		qword ptr [rbp - 0x120], rax
0x7fffeafd2098:	jmp		0x7fffeafd20a2
0x7fffeafd209d:	call		0x7fffeafc4c10
0x7fffeafd20a2:	jmp		0x7fffeafd20a7
0x7fffeafd20a7:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafd20ab:	mov		rcx, qword ptr [rbp - 0x118]
0x7fffeafd20b2:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafd20b6:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafd20ba:	mov		rcx, qword ptr [rbp - 0x120]
0x7fffeafd20c1:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafd20c5:	mov		rax, qword ptr [rbp - 0x120]
0x7fffeafd20cc:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafd20d0:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafd20d4:	mov		rax, qword ptr [rbp - 0x118]
0x7fffeafd20db:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafd20df:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafd20e3:	jmp		0x7fffeafd2495
0x7fffeafd20e8:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafd20ec:	mov		qword ptr [rbp - 0x128], rax
0x7fffeafd20f3:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafd20f7:	shr		rax, 8
0x7fffeafd20fb:	mov		dword ptr [rbp - 0x138], eax
0x7fffeafd2101:	cmp		dword ptr [rbp - 0x138], 0
0x7fffeafd2108:	jne		0x7fffeafd211d
0x7fffeafd210e:	mov		dword ptr [rbp - 0x134], 0
0x7fffeafd2118:	jmp		0x7fffeafd218b
0x7fffeafd211d:	cmp		dword ptr [rbp - 0x138], 0xffff
0x7fffeafd2127:	jbe		0x7fffeafd213c
0x7fffeafd212d:	mov		dword ptr [rbp - 0x134], 0x1f
0x7fffeafd2137:	jmp		0x7fffeafd2186
0x7fffeafd213c:	mov		eax, dword ptr [rbp - 0x138]
0x7fffeafd2142:	bsr		eax, eax
0x7fffeafd2145:	xor		eax, 0x1f
0x7fffeafd2148:	mov		ecx, 0x1f
0x7fffeafd214d:	sub		ecx, eax
0x7fffeafd214f:	mov		dword ptr [rbp - 0x13c], ecx
0x7fffeafd2155:	mov		eax, dword ptr [rbp - 0x13c]
0x7fffeafd215b:	shl		eax, 1
0x7fffeafd215e:	mov		eax, eax
0x7fffeafd2160:	mov		edx, eax
0x7fffeafd2162:	mov		rsi, qword ptr [rbp - 0x18]
0x7fffeafd2166:	mov		eax, dword ptr [rbp - 0x13c]
0x7fffeafd216c:	add		eax, 7
0x7fffeafd216f:	mov		eax, eax
0x7fffeafd2171:	mov		ecx, eax
0x7fffeafd2173:	shr		rsi, cl
0x7fffeafd2176:	and		rsi, 1
0x7fffeafd217d:	add		rdx, rsi
0x7fffeafd2180:	mov		dword ptr [rbp - 0x134], edx
0x7fffeafd2186:	jmp		0x7fffeafd218b
0x7fffeafd218b:	mov		rax, qword ptr [rbp - 8]
0x7fffeafd218f:	add		rax, 0x258
0x7fffeafd2195:	mov		ecx, dword ptr [rbp - 0x134]
0x7fffeafd219b:	mov		edx, ecx
0x7fffeafd219d:	shl		rdx, 3
0x7fffeafd21a1:	add		rax, rdx
0x7fffeafd21a4:	mov		qword ptr [rbp - 0x130], rax
0x7fffeafd21ab:	mov		ecx, dword ptr [rbp - 0x134]
0x7fffeafd21b1:	mov		rax, qword ptr [rbp - 0x128]
0x7fffeafd21b8:	mov		dword ptr [rax + 0x38], ecx
0x7fffeafd21bb:	mov		rax, qword ptr [rbp - 0x128]
0x7fffeafd21c2:	mov		qword ptr [rax + 0x28], 0
0x7fffeafd21ca:	mov		rax, qword ptr [rbp - 0x128]
0x7fffeafd21d1:	mov		qword ptr [rax + 0x20], 0
0x7fffeafd21d9:	mov		rax, qword ptr [rbp - 8]
0x7fffeafd21dd:	mov		ecx, dword ptr [rax + 4]
0x7fffeafd21e0:	mov		esi, dword ptr [rbp - 0x134]
0x7fffeafd21e6:	mov		dword ptr [rbp - 0x170], ecx
0x7fffeafd21ec:	mov		ecx, esi
0x7fffeafd21ee:	mov		esi, 1
0x7fffeafd21f3:	shl		esi, cl
0x7fffeafd21f5:	mov		edi, dword ptr [rbp - 0x170]
0x7fffeafd21fb:	and		edi, esi
0x7fffeafd21fd:	cmp		edi, 0
0x7fffeafd2200:	jne		0x7fffeafd2262
0x7fffeafd2206:	mov		ecx, dword ptr [rbp - 0x134]
0x7fffeafd220c:	mov		eax, 1
0x7fffeafd2211:	shl		eax, cl
0x7fffeafd2213:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafd2217:	or		eax, dword ptr [rdx + 4]
0x7fffeafd221a:	mov		dword ptr [rdx + 4], eax
0x7fffeafd221d:	mov		rdx, qword ptr [rbp - 0x128]
0x7fffeafd2224:	mov		rsi, qword ptr [rbp - 0x130]
0x7fffeafd222b:	mov		qword ptr [rsi], rdx
0x7fffeafd222e:	mov		rdx, qword ptr [rbp - 0x130]
0x7fffeafd2235:	mov		rsi, qword ptr [rbp - 0x128]
0x7fffeafd223c:	mov		qword ptr [rsi + 0x30], rdx
0x7fffeafd2240:	mov		rdx, qword ptr [rbp - 0x128]
0x7fffeafd2247:	mov		rsi, qword ptr [rbp - 0x128]
0x7fffeafd224e:	mov		qword ptr [rsi + 0x18], rdx
0x7fffeafd2252:	mov		rsi, qword ptr [rbp - 0x128]
0x7fffeafd2259:	mov		qword ptr [rsi + 0x10], rdx
0x7fffeafd225d:	jmp		0x7fffeafd2490
0x7fffeafd2262:	mov		rax, qword ptr [rbp - 0x130]
0x7fffeafd2269:	mov		rax, qword ptr [rax]
0x7fffeafd226c:	mov		qword ptr [rbp - 0x148], rax
0x7fffeafd2273:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafd2277:	cmp		dword ptr [rbp - 0x134], 0x1f
0x7fffeafd227e:	mov		qword ptr [rbp - 0x178], rax
0x7fffeafd2285:	jne		0x7fffeafd229b
0x7fffeafd228b:	xor		eax, eax
0x7fffeafd228d:	mov		ecx, eax
0x7fffeafd228f:	mov		qword ptr [rbp - 0x180], rcx
0x7fffeafd2296:	jmp		0x7fffeafd22bd
0x7fffeafd229b:	mov		eax, dword ptr [rbp - 0x134]
0x7fffeafd22a1:	shr		eax, 1
0x7fffeafd22a4:	add		eax, 8
0x7fffeafd22a7:	sub		eax, 2
0x7fffeafd22aa:	mov		eax, eax
0x7fffeafd22ac:	mov		ecx, eax
0x7fffeafd22ae:	mov		edx, 0x3f
0x7fffeafd22b3:	sub		rdx, rcx
0x7fffeafd22b6:	mov		qword ptr [rbp - 0x180], rdx
0x7fffeafd22bd:	mov		rax, qword ptr [rbp - 0x180]
0x7fffeafd22c4:	mov		rcx, rax
0x7fffeafd22c7:	mov		rax, qword ptr [rbp - 0x178]
0x7fffeafd22ce:	shl		rax, cl
0x7fffeafd22d1:	mov		qword ptr [rbp - 0x150], rax
0x7fffeafd22d8:	mov		rax, qword ptr [rbp - 0x148]
0x7fffeafd22df:	mov		rax, qword ptr [rax + 8]
0x7fffeafd22e3:	and		rax, 0xfffffffffffffff8
0x7fffeafd22e9:	cmp		rax, qword ptr [rbp - 0x18]
0x7fffeafd22ed:	je		0x7fffeafd23cd
0x7fffeafd22f3:	mov		rax, qword ptr [rbp - 0x148]
0x7fffeafd22fa:	add		rax, 0x20
0x7fffeafd2300:	mov		rcx, qword ptr [rbp - 0x150]
0x7fffeafd2307:	shr		rcx, 0x3f
0x7fffeafd230b:	and		rcx, 1
0x7fffeafd2312:	shl		rcx, 3
0x7fffeafd2316:	add		rax, rcx
0x7fffeafd2319:	mov		qword ptr [rbp - 0x158], rax
0x7fffeafd2320:	mov		rax, qword ptr [rbp - 0x150]
0x7fffeafd2327:	shl		rax, 1
0x7fffeafd232b:	mov		qword ptr [rbp - 0x150], rax
0x7fffeafd2332:	mov		rax, qword ptr [rbp - 0x158]
0x7fffeafd2339:	cmp		qword ptr [rax], 0
0x7fffeafd233d:	je		0x7fffeafd2359
0x7fffeafd2343:	mov		rax, qword ptr [rbp - 0x158]
0x7fffeafd234a:	mov		rax, qword ptr [rax]
0x7fffeafd234d:	mov		qword ptr [rbp - 0x148], rax
0x7fffeafd2354:	jmp		0x7fffeafd23c8
0x7fffeafd2359:	mov		rax, qword ptr [rbp - 0x158]
0x7fffeafd2360:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd2364:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafd2368:	setae		dl
0x7fffeafd236b:	and		dl, 1
0x7fffeafd236e:	movzx		esi, dl
0x7fffeafd2371:	movsxd		rax, esi
0x7fffeafd2374:	cmp		rax, 0
0x7fffeafd2378:	je		0x7fffeafd23c3
0x7fffeafd237e:	mov		rax, qword ptr [rbp - 0x128]
0x7fffeafd2385:	mov		rcx, qword ptr [rbp - 0x158]
0x7fffeafd238c:	mov		qword ptr [rcx], rax
0x7fffeafd238f:	mov		rax, qword ptr [rbp - 0x148]
0x7fffeafd2396:	mov		rcx, qword ptr [rbp - 0x128]
0x7fffeafd239d:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafd23a1:	mov		rax, qword ptr [rbp - 0x128]
0x7fffeafd23a8:	mov		rcx, qword ptr [rbp - 0x128]
0x7fffeafd23af:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafd23b3:	mov		rcx, qword ptr [rbp - 0x128]
0x7fffeafd23ba:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafd23be:	jmp		0x7fffeafd248b
0x7fffeafd23c3:	call		0x7fffeafc4c10
0x7fffeafd23c8:	jmp		0x7fffeafd2486
0x7fffeafd23cd:	xor		eax, eax
0x7fffeafd23cf:	mov		rcx, qword ptr [rbp - 0x148]
0x7fffeafd23d6:	mov		rcx, qword ptr [rcx + 0x10]
0x7fffeafd23da:	mov		qword ptr [rbp - 0x160], rcx
0x7fffeafd23e1:	mov		rcx, qword ptr [rbp - 0x148]
0x7fffeafd23e8:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafd23ec:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafd23f0:	mov		byte ptr [rbp - 0x181], al
0x7fffeafd23f6:	jb		0x7fffeafd2414
0x7fffeafd23fc:	mov		rax, qword ptr [rbp - 0x160]
0x7fffeafd2403:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd2407:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafd240b:	setae		dl
0x7fffeafd240e:	mov		byte ptr [rbp - 0x181], dl
0x7fffeafd2414:	mov		al, byte ptr [rbp - 0x181]
0x7fffeafd241a:	and		al, 1
0x7fffeafd241c:	movzx		ecx, al
0x7fffeafd241f:	movsxd		rdx, ecx
0x7fffeafd2422:	cmp		rdx, 0
0x7fffeafd2426:	je		0x7fffeafd2481
0x7fffeafd242c:	mov		rax, qword ptr [rbp - 0x128]
0x7fffeafd2433:	mov		rcx, qword ptr [rbp - 0x160]
0x7fffeafd243a:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafd243e:	mov		rcx, qword ptr [rbp - 0x148]
0x7fffeafd2445:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafd2449:	mov		rax, qword ptr [rbp - 0x160]
0x7fffeafd2450:	mov		rcx, qword ptr [rbp - 0x128]
0x7fffeafd2457:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafd245b:	mov		rax, qword ptr [rbp - 0x148]
0x7fffeafd2462:	mov		rcx, qword ptr [rbp - 0x128]
0x7fffeafd2469:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafd246d:	mov		rax, qword ptr [rbp - 0x128]
0x7fffeafd2474:	mov		qword ptr [rax + 0x30], 0
0x7fffeafd247c:	jmp		0x7fffeafd248b
0x7fffeafd2481:	call		0x7fffeafc4c10
0x7fffeafd2486:	jmp		0x7fffeafd22d8
0x7fffeafd248b:	jmp		0x7fffeafd2490
0x7fffeafd2490:	jmp		0x7fffeafd2495
0x7fffeafd2495:	jmp		0x7fffeafd249f
0x7fffeafd249a:	call		0x7fffeafc4c10
0x7fffeafd249f:	add		rsp, 0x190
0x7fffeafd24a6:	pop		rbp
0x7fffeafd24a7:	ret		
disassembling symbol '.LBB52_3':
textAddr: 0x7fffeafd1185, textSize: 245
0x7fffeafd1185:	xor		eax, eax
0x7fffeafd1187:	mov		ecx, eax
0x7fffeafd1189:	mov		rdx, qword ptr [rbp - 0x10]
0x7fffeafd118d:	sub		rcx, qword ptr [rbp - 0x30]
0x7fffeafd1191:	add		rdx, rcx
0x7fffeafd1194:	mov		qword ptr [rbp - 0x28], rdx
0x7fffeafd1198:	mov		rcx, qword ptr [rbp - 0x30]
0x7fffeafd119c:	add		rcx, qword ptr [rbp - 0x18]
0x7fffeafd11a0:	mov		qword ptr [rbp - 0x18], rcx
0x7fffeafd11a4:	mov		rcx, qword ptr [rbp - 0x28]
0x7fffeafd11a8:	mov		qword ptr [rbp - 0x10], rcx
0x7fffeafd11ac:	mov		rcx, qword ptr [rbp - 0x28]
0x7fffeafd11b0:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafd11b4:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafd11b8:	setae		sil
0x7fffeafd11bc:	and		sil, 1
0x7fffeafd11c0:	movzx		eax, sil
0x7fffeafd11c4:	movsxd		rcx, eax
0x7fffeafd11c7:	cmp		rcx, 0
0x7fffeafd11cb:	je		0x7fffeafd17b4
0x7fffeafd11d1:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafd11d5:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd11d9:	cmp		rax, qword ptr [rcx + 0x20]
0x7fffeafd11dd:	je		0x7fffeafd174c
0x7fffeafd11e3:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafd11e7:	shr		rax, 3
0x7fffeafd11eb:	cmp		rax, 0x20
0x7fffeafd11ef:	jae		0x7fffeafd1382
0x7fffeafd11f5:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafd11f9:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafd11fd:	mov		qword ptr [rbp - 0x38], rax
0x7fffeafd1201:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafd1205:	mov		rax, qword ptr [rax + 0x18]
0x7fffeafd1209:	mov		qword ptr [rbp - 0x40], rax
0x7fffeafd120d:	mov		rax, qword ptr [rbp - 0x30]
0x7fffeafd1211:	shr		rax, 3
0x7fffeafd1215:	mov		dword ptr [rbp - 0x44], eax
0x7fffeafd1218:	mov		rcx, qword ptr [rbp - 0x38]
0x7fffeafd121c:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafd1220:	add		rdx, 0x48
0x7fffeafd1227:	mov		eax, dword ptr [rbp - 0x44]
0x7fffeafd122a:	shl		eax, 1
0x7fffeafd122d:	mov		eax, eax
0x7fffeafd122f:	mov		esi, eax
0x7fffeafd1231:	shl		rsi, 3
0x7fffeafd1235:	add		rdx, rsi
0x7fffeafd1238:	cmp		rcx, rdx
0x7fffeafd123b:	mov		dil, 1
0x7fffeafd123e:	mov		byte ptr [rbp - 0x161], dil
0x7fffeafd1245:	je		0x7fffeafd1286
0x7fffeafd124b:	xor		eax, eax
0x7fffeafd124d:	mov		rcx, qword ptr [rbp - 0x38]
0x7fffeafd1251:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafd1255:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafd1259:	mov		byte ptr [rbp - 0x162], al
0x7fffeafd125f:	jb		0x7fffeafd127a
0x7fffeafd1265:	mov		rax, qword ptr [rbp - 0x38]
0x7fffeafd1269:	mov		rax, qword ptr [rax + 0x18]
0x7fffeafd126d:	cmp		rax, qword ptr [rbp - 0x10]
0x7fffeafd1271:	sete		cl
0x7fffeafd1274:	mov		byte ptr [rbp - 0x162], cl
disassembling symbol '.LBB52_9':
textAddr: 0x7fffeafd127a, textSize: 12
0x7fffeafd127a:	mov		al, byte ptr [rbp - 0x162]
0x7fffeafd1280:	mov		byte ptr [rbp - 0x161], al
disassembling symbol '.LBB52_10':
textAddr: 0x7fffeafd1286, textSize: 64
0x7fffeafd1286:	mov		al, byte ptr [rbp - 0x161]
0x7fffeafd128c:	and		al, 1
0x7fffeafd128e:	movzx		ecx, al
0x7fffeafd1291:	movsxd		rdx, ecx
0x7fffeafd1294:	cmp		rdx, 0
0x7fffeafd1298:	je		0x7fffeafd1378
0x7fffeafd129e:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafd12a2:	cmp		rax, qword ptr [rbp - 0x38]
0x7fffeafd12a6:	jne		0x7fffeafd12c6
0x7fffeafd12ac:	mov		ecx, dword ptr [rbp - 0x44]
0x7fffeafd12af:	mov		eax, 1
0x7fffeafd12b4:	shl		eax, cl
0x7fffeafd12b6:	xor		eax, 0xffffffff
0x7fffeafd12b9:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafd12bd:	and		eax, dword ptr [rdx]
0x7fffeafd12bf:	mov		dword ptr [rdx], eax
0x7fffeafd12c1:	jmp		0x7fffeafd1373
disassembling symbol '.LBB52_13':
textAddr: 0x7fffeafd12c6, textSize: 98
0x7fffeafd12c6:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafd12ca:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd12ce:	add		rcx, 0x48
0x7fffeafd12d5:	mov		edx, dword ptr [rbp - 0x44]
0x7fffeafd12d8:	shl		edx, 1
0x7fffeafd12db:	mov		edx, edx
0x7fffeafd12dd:	mov		esi, edx
0x7fffeafd12df:	shl		rsi, 3
0x7fffeafd12e3:	add		rcx, rsi
0x7fffeafd12e6:	cmp		rax, rcx
0x7fffeafd12e9:	mov		dil, 1
0x7fffeafd12ec:	mov		byte ptr [rbp - 0x163], dil
0x7fffeafd12f3:	je		0x7fffeafd1334
0x7fffeafd12f9:	xor		eax, eax
0x7fffeafd12fb:	mov		rcx, qword ptr [rbp - 0x40]
0x7fffeafd12ff:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafd1303:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafd1307:	mov		byte ptr [rbp - 0x164], al
0x7fffeafd130d:	jb		0x7fffeafd1328
0x7fffeafd1313:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafd1317:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafd131b:	cmp		rax, qword ptr [rbp - 0x10]
0x7fffeafd131f:	sete		cl
0x7fffeafd1322:	mov		byte ptr [rbp - 0x164], cl
disassembling symbol '.LBB52_16':
textAddr: 0x7fffeafd1328, textSize: 12
0x7fffeafd1328:	mov		al, byte ptr [rbp - 0x164]
0x7fffeafd132e:	mov		byte ptr [rbp - 0x163], al
disassembling symbol '.LBB52_17':
textAddr: 0x7fffeafd1334, textSize: 53
0x7fffeafd1334:	mov		al, byte ptr [rbp - 0x163]
0x7fffeafd133a:	and		al, 1
0x7fffeafd133c:	movzx		ecx, al
0x7fffeafd133f:	movsxd		rdx, ecx
0x7fffeafd1342:	cmp		rdx, 0
0x7fffeafd1346:	je		0x7fffeafd1369
0x7fffeafd134c:	mov		rax, qword ptr [rbp - 0x40]
0x7fffeafd1350:	mov		rcx, qword ptr [rbp - 0x38]
0x7fffeafd1354:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafd1358:	mov		rax, qword ptr [rbp - 0x38]
0x7fffeafd135c:	mov		rcx, qword ptr [rbp - 0x40]
0x7fffeafd1360:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafd1364:	jmp		0x7fffeafd136e
disassembling symbol '.LBB52_19':
textAddr: 0x7fffeafd1369, textSize: 5
0x7fffeafd1369:	call		0x7fffeafc4c10
disassembling symbol '.LBB52_20':
textAddr: 0x7fffeafd136e, textSize: 5
0x7fffeafd136e:	jmp		0x7fffeafd1373
disassembling symbol '.LBB52_21':
textAddr: 0x7fffeafd1373, textSize: 5
0x7fffeafd1373:	jmp		0x7fffeafd137d
disassembling symbol '.LBB52_22':
textAddr: 0x7fffeafd1378, textSize: 5
0x7fffeafd1378:	call		0x7fffeafc4c10
disassembling symbol '.LBB52_23':
textAddr: 0x7fffeafd137d, textSize: 5
0x7fffeafd137d:	jmp		0x7fffeafd1747
disassembling symbol '.LBB52_24':
textAddr: 0x7fffeafd1382, textSize: 135
0x7fffeafd1382:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafd1386:	mov		qword ptr [rbp - 0x50], rax
0x7fffeafd138a:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafd138e:	mov		rax, qword ptr [rax + 0x30]
0x7fffeafd1392:	mov		qword ptr [rbp - 0x58], rax
0x7fffeafd1396:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafd139a:	mov		rax, qword ptr [rax + 0x18]
0x7fffeafd139e:	cmp		rax, qword ptr [rbp - 0x50]
0x7fffeafd13a2:	je		0x7fffeafd1448
0x7fffeafd13a8:	xor		eax, eax
0x7fffeafd13aa:	mov		rcx, qword ptr [rbp - 0x50]
0x7fffeafd13ae:	mov		rcx, qword ptr [rcx + 0x10]
0x7fffeafd13b2:	mov		qword ptr [rbp - 0x68], rcx
0x7fffeafd13b6:	mov		rcx, qword ptr [rbp - 0x50]
0x7fffeafd13ba:	mov		rcx, qword ptr [rcx + 0x18]
0x7fffeafd13be:	mov		qword ptr [rbp - 0x60], rcx
0x7fffeafd13c2:	mov		rcx, qword ptr [rbp - 0x68]
0x7fffeafd13c6:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafd13ca:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafd13ce:	mov		byte ptr [rbp - 0x165], al
0x7fffeafd13d4:	jb		0x7fffeafd1409
0x7fffeafd13da:	xor		eax, eax
0x7fffeafd13dc:	mov		rcx, qword ptr [rbp - 0x68]
0x7fffeafd13e0:	mov		rcx, qword ptr [rcx + 0x18]
0x7fffeafd13e4:	cmp		rcx, qword ptr [rbp - 0x50]
0x7fffeafd13e8:	mov		byte ptr [rbp - 0x165], al
0x7fffeafd13ee:	jne		0x7fffeafd1409
0x7fffeafd13f4:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafd13f8:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafd13fc:	cmp		rax, qword ptr [rbp - 0x50]
0x7fffeafd1400:	sete		cl
0x7fffeafd1403:	mov		byte ptr [rbp - 0x165], cl
disassembling symbol '.LBB52_28':
textAddr: 0x7fffeafd1409, textSize: 53
0x7fffeafd1409:	mov		al, byte ptr [rbp - 0x165]
0x7fffeafd140f:	and		al, 1
0x7fffeafd1411:	movzx		ecx, al
0x7fffeafd1414:	movsxd		rdx, ecx
0x7fffeafd1417:	cmp		rdx, 0
0x7fffeafd141b:	je		0x7fffeafd143e
0x7fffeafd1421:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafd1425:	mov		rcx, qword ptr [rbp - 0x68]
0x7fffeafd1429:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafd142d:	mov		rax, qword ptr [rbp - 0x68]
0x7fffeafd1431:	mov		rcx, qword ptr [rbp - 0x60]
0x7fffeafd1435:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafd1439:	jmp		0x7fffeafd1443
disassembling symbol '.LBB52_30':
textAddr: 0x7fffeafd143e, textSize: 5
0x7fffeafd143e:	call		0x7fffeafc4c10
disassembling symbol '.LBB52_31':
textAddr: 0x7fffeafd1443, textSize: 5
0x7fffeafd1443:	jmp		0x7fffeafd1550
disassembling symbol '.LBB52_32':
textAddr: 0x7fffeafd1448, textSize: 79
0x7fffeafd1448:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafd144c:	mov		rcx, rax
0x7fffeafd144f:	add		rcx, 0x20
0x7fffeafd1456:	add		rcx, 8
0x7fffeafd145d:	mov		qword ptr [rbp - 0x70], rcx
0x7fffeafd1461:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafd1465:	mov		qword ptr [rbp - 0x60], rax
0x7fffeafd1469:	cmp		rax, 0
0x7fffeafd146d:	jne		0x7fffeafd1497
0x7fffeafd1473:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafd1477:	mov		rcx, rax
0x7fffeafd147a:	add		rcx, 0x20
0x7fffeafd1481:	mov		qword ptr [rbp - 0x70], rcx
0x7fffeafd1485:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafd1489:	mov		qword ptr [rbp - 0x60], rax
0x7fffeafd148d:	cmp		rax, 0
0x7fffeafd1491:	je		0x7fffeafd154b
disassembling symbol '.LBB52_34':
textAddr: 0x7fffeafd1497, textSize: 5
0x7fffeafd1497:	jmp		0x7fffeafd149c
disassembling symbol '.LBB52_35':
textAddr: 0x7fffeafd149c, textSize: 76
0x7fffeafd149c:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafd14a0:	mov		rcx, rax
0x7fffeafd14a3:	add		rcx, 0x20
0x7fffeafd14aa:	add		rcx, 8
0x7fffeafd14b1:	mov		qword ptr [rbp - 0x78], rcx
0x7fffeafd14b5:	cmp		qword ptr [rax + 0x28], 0
0x7fffeafd14ba:	mov		dl, 1
0x7fffeafd14bc:	mov		byte ptr [rbp - 0x166], dl
0x7fffeafd14c2:	jne		0x7fffeafd14e8
0x7fffeafd14c8:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafd14cc:	mov		rcx, rax
0x7fffeafd14cf:	add		rcx, 0x20
0x7fffeafd14d6:	mov		qword ptr [rbp - 0x78], rcx
0x7fffeafd14da:	cmp		qword ptr [rax + 0x20], 0
0x7fffeafd14df:	setne		dl
0x7fffeafd14e2:	mov		byte ptr [rbp - 0x166], dl
disassembling symbol '.LBB52_37':
textAddr: 0x7fffeafd14e8, textSize: 19
0x7fffeafd14e8:	mov		al, byte ptr [rbp - 0x166]
0x7fffeafd14ee:	test		al, 1
0x7fffeafd14f0:	jne		0x7fffeafd14fb
0x7fffeafd14f6:	jmp		0x7fffeafd150f
disassembling symbol '.LBB52_38':
textAddr: 0x7fffeafd14fb, textSize: 20
0x7fffeafd14fb:	mov		rax, qword ptr [rbp - 0x78]
0x7fffeafd14ff:	mov		qword ptr [rbp - 0x70], rax
0x7fffeafd1503:	mov		rax, qword ptr [rax]
0x7fffeafd1506:	mov		qword ptr [rbp - 0x60], rax
0x7fffeafd150a:	jmp		0x7fffeafd149c
disassembling symbol '.LBB52_39':
textAddr: 0x7fffeafd150f, textSize: 50
0x7fffeafd150f:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafd1513:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd1517:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafd151b:	setae		dl
0x7fffeafd151e:	and		dl, 1
0x7fffeafd1521:	movzx		esi, dl
0x7fffeafd1524:	movsxd		rax, esi
0x7fffeafd1527:	cmp		rax, 0
0x7fffeafd152b:	je		0x7fffeafd1541
0x7fffeafd1531:	mov		rax, qword ptr [rbp - 0x70]
0x7fffeafd1535:	mov		qword ptr [rax], 0
0x7fffeafd153c:	jmp		0x7fffeafd1546
disassembling symbol '.LBB52_41':
textAddr: 0x7fffeafd1541, textSize: 5
0x7fffeafd1541:	call		0x7fffeafc4c10
disassembling symbol '.LBB52_42':
textAddr: 0x7fffeafd1546, textSize: 5
0x7fffeafd1546:	jmp		0x7fffeafd154b
disassembling symbol '.LBB52_43':
textAddr: 0x7fffeafd154b, textSize: 5
0x7fffeafd154b:	jmp		0x7fffeafd1550
disassembling symbol '.LBB52_44':
textAddr: 0x7fffeafd1550, textSize: 106
0x7fffeafd1550:	cmp		qword ptr [rbp - 0x58], 0
0x7fffeafd1555:	je		0x7fffeafd1742
0x7fffeafd155b:	mov		rax, qword ptr [rbp - 8]
0x7fffeafd155f:	add		rax, 0x258
0x7fffeafd1565:	mov		rcx, qword ptr [rbp - 0x50]
0x7fffeafd1569:	mov		edx, dword ptr [rcx + 0x38]
0x7fffeafd156c:	mov		ecx, edx
0x7fffeafd156e:	shl		rcx, 3
0x7fffeafd1572:	add		rax, rcx
0x7fffeafd1575:	mov		qword ptr [rbp - 0x80], rax
0x7fffeafd1579:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafd157d:	mov		rcx, qword ptr [rbp - 0x80]
0x7fffeafd1581:	cmp		rax, qword ptr [rcx]
0x7fffeafd1584:	jne		0x7fffeafd15bf
0x7fffeafd158a:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafd158e:	mov		rcx, qword ptr [rbp - 0x80]
0x7fffeafd1592:	mov		qword ptr [rcx], rax
0x7fffeafd1595:	cmp		rax, 0
0x7fffeafd1599:	jne		0x7fffeafd15ba
0x7fffeafd159f:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafd15a3:	mov		ecx, dword ptr [rax + 0x38]
0x7fffeafd15a6:	mov		edx, 1
0x7fffeafd15ab:	shl		edx, cl
0x7fffeafd15ad:	xor		edx, 0xffffffff
0x7fffeafd15b0:	mov		rax, qword ptr [rbp - 8]
0x7fffeafd15b4:	and		edx, dword ptr [rax + 4]
0x7fffeafd15b7:	mov		dword ptr [rax + 4], edx
disassembling symbol '.LBB52_48':
textAddr: 0x7fffeafd15ba, textSize: 5
0x7fffeafd15ba:	jmp		0x7fffeafd161f
disassembling symbol '.LBB52_49':
textAddr: 0x7fffeafd15bf, textSize: 69
0x7fffeafd15bf:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafd15c3:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd15c7:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafd15cb:	setae		dl
0x7fffeafd15ce:	and		dl, 1
0x7fffeafd15d1:	movzx		esi, dl
0x7fffeafd15d4:	movsxd		rax, esi
0x7fffeafd15d7:	cmp		rax, 0
0x7fffeafd15db:	je		0x7fffeafd1615
0x7fffeafd15e1:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafd15e5:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafd15e9:	cmp		rax, qword ptr [rbp - 0x50]
0x7fffeafd15ed:	jne		0x7fffeafd1604
0x7fffeafd15f3:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafd15f7:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafd15fb:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafd15ff:	jmp		0x7fffeafd1610
disassembling symbol '.LBB52_52':
textAddr: 0x7fffeafd1604, textSize: 12
0x7fffeafd1604:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafd1608:	mov		rcx, qword ptr [rbp - 0x58]
0x7fffeafd160c:	mov		qword ptr [rcx + 0x28], rax
disassembling symbol '.LBB52_53':
textAddr: 0x7fffeafd1610, textSize: 5
0x7fffeafd1610:	jmp		0x7fffeafd161a
disassembling symbol '.LBB52_54':
textAddr: 0x7fffeafd1615, textSize: 5
0x7fffeafd1615:	call		0x7fffeafc4c10
disassembling symbol '.LBB52_55':
textAddr: 0x7fffeafd161a, textSize: 5
0x7fffeafd161a:	jmp		0x7fffeafd161f
disassembling symbol '.LBB52_56':
textAddr: 0x7fffeafd161f, textSize: 154
0x7fffeafd161f:	cmp		qword ptr [rbp - 0x60], 0
0x7fffeafd1624:	je		0x7fffeafd173d
0x7fffeafd162a:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafd162e:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd1632:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafd1636:	setae		dl
0x7fffeafd1639:	and		dl, 1
0x7fffeafd163c:	movzx		esi, dl
0x7fffeafd163f:	movsxd		rax, esi
0x7fffeafd1642:	cmp		rax, 0
0x7fffeafd1646:	je		0x7fffeafd1733
0x7fffeafd164c:	mov		rax, qword ptr [rbp - 0x58]
0x7fffeafd1650:	mov		rcx, qword ptr [rbp - 0x60]
0x7fffeafd1654:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafd1658:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafd165c:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafd1660:	mov		qword ptr [rbp - 0x88], rax
0x7fffeafd1667:	cmp		rax, 0
0x7fffeafd166b:	je		0x7fffeafd16c3
0x7fffeafd1671:	mov		rax, qword ptr [rbp - 0x88]
0x7fffeafd1678:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd167c:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafd1680:	setae		dl
0x7fffeafd1683:	and		dl, 1
0x7fffeafd1686:	movzx		esi, dl
0x7fffeafd1689:	movsxd		rax, esi
0x7fffeafd168c:	cmp		rax, 0
0x7fffeafd1690:	je		0x7fffeafd16b9
0x7fffeafd1696:	mov		rax, qword ptr [rbp - 0x88]
0x7fffeafd169d:	mov		rcx, qword ptr [rbp - 0x60]
0x7fffeafd16a1:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafd16a5:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafd16a9:	mov		rcx, qword ptr [rbp - 0x88]
0x7fffeafd16b0:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafd16b4:	jmp		0x7fffeafd16be
disassembling symbol '.LBB52_61':
textAddr: 0x7fffeafd16b9, textSize: 5
0x7fffeafd16b9:	call		0x7fffeafc4c10
disassembling symbol '.LBB52_62':
textAddr: 0x7fffeafd16be, textSize: 5
0x7fffeafd16be:	jmp		0x7fffeafd16c3
disassembling symbol '.LBB52_63':
textAddr: 0x7fffeafd16c3, textSize: 97
0x7fffeafd16c3:	mov		rax, qword ptr [rbp - 0x50]
0x7fffeafd16c7:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafd16cb:	mov		qword ptr [rbp - 0x90], rax
0x7fffeafd16d2:	cmp		rax, 0
0x7fffeafd16d6:	je		0x7fffeafd172e
0x7fffeafd16dc:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafd16e3:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd16e7:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafd16eb:	setae		dl
0x7fffeafd16ee:	and		dl, 1
0x7fffeafd16f1:	movzx		esi, dl
0x7fffeafd16f4:	movsxd		rax, esi
0x7fffeafd16f7:	cmp		rax, 0
0x7fffeafd16fb:	je		0x7fffeafd1724
0x7fffeafd1701:	mov		rax, qword ptr [rbp - 0x90]
0x7fffeafd1708:	mov		rcx, qword ptr [rbp - 0x60]
0x7fffeafd170c:	mov		qword ptr [rcx + 0x28], rax
0x7fffeafd1710:	mov		rax, qword ptr [rbp - 0x60]
0x7fffeafd1714:	mov		rcx, qword ptr [rbp - 0x90]
0x7fffeafd171b:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafd171f:	jmp		0x7fffeafd1729
disassembling symbol '.LBB52_66':
textAddr: 0x7fffeafd1724, textSize: 5
0x7fffeafd1724:	call		0x7fffeafc4c10
disassembling symbol '.LBB52_67':
textAddr: 0x7fffeafd1729, textSize: 5
0x7fffeafd1729:	jmp		0x7fffeafd172e
disassembling symbol '.LBB52_68':
textAddr: 0x7fffeafd172e, textSize: 5
0x7fffeafd172e:	jmp		0x7fffeafd1738
disassembling symbol '.LBB52_69':
textAddr: 0x7fffeafd1733, textSize: 5
0x7fffeafd1733:	call		0x7fffeafc4c10
disassembling symbol '.LBB52_70':
textAddr: 0x7fffeafd1738, textSize: 5
0x7fffeafd1738:	jmp		0x7fffeafd173d
disassembling symbol '.LBB52_71':
textAddr: 0x7fffeafd173d, textSize: 5
0x7fffeafd173d:	jmp		0x7fffeafd1742
disassembling symbol '.LBB52_72':
textAddr: 0x7fffeafd1742, textSize: 5
0x7fffeafd1742:	jmp		0x7fffeafd1747
disassembling symbol '.LBB52_73':
textAddr: 0x7fffeafd1747, textSize: 5
0x7fffeafd1747:	jmp		0x7fffeafd17af
disassembling symbol '.LBB52_74':
textAddr: 0x7fffeafd174c, textSize: 94
0x7fffeafd174c:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafd1750:	mov		rax, qword ptr [rax + 8]
0x7fffeafd1754:	and		rax, 3
0x7fffeafd175a:	cmp		rax, 3
0x7fffeafd175e:	jne		0x7fffeafd17aa
0x7fffeafd1764:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafd1768:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd176c:	mov		qword ptr [rcx + 8], rax
0x7fffeafd1770:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafd1774:	mov		rcx, qword ptr [rax + 8]
0x7fffeafd1778:	and		rcx, 0xfffffffffffffffe
0x7fffeafd177f:	mov		qword ptr [rax + 8], rcx
0x7fffeafd1783:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafd1787:	or		rax, 1
0x7fffeafd178d:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafd1791:	mov		qword ptr [rcx + 8], rax
0x7fffeafd1795:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafd1799:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafd179d:	mov		rdx, qword ptr [rbp - 0x18]
0x7fffeafd17a1:	mov		qword ptr [rcx + rdx], rax
0x7fffeafd17a5:	jmp		0x7fffeafd249f
disassembling symbol '.LBB52_76':
textAddr: 0x7fffeafd17aa, textSize: 5
0x7fffeafd17aa:	jmp		0x7fffeafd17af
disassembling symbol '.LBB52_77':
textAddr: 0x7fffeafd17af, textSize: 5
0x7fffeafd17af:	jmp		0x7fffeafd17b9
disassembling symbol '.LBB52_78':
textAddr: 0x7fffeafd17b4, textSize: 5
0x7fffeafd17b4:	call		0x7fffeafc4c10
disassembling symbol '.LBB52_79':
textAddr: 0x7fffeafd17b9, textSize: 5
0x7fffeafd17b9:	jmp		0x7fffeafd17be
disassembling symbol '.LBB52_80':
textAddr: 0x7fffeafd17be, textSize: 174
0x7fffeafd17be:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafd17c2:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd17c6:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafd17ca:	setae		dl
0x7fffeafd17cd:	and		dl, 1
0x7fffeafd17d0:	movzx		esi, dl
0x7fffeafd17d3:	movsxd		rax, esi
0x7fffeafd17d6:	cmp		rax, 0
0x7fffeafd17da:	je		0x7fffeafd249a
0x7fffeafd17e0:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafd17e4:	mov		rax, qword ptr [rax + 8]
0x7fffeafd17e8:	and		rax, 2
0x7fffeafd17ee:	cmp		rax, 0
0x7fffeafd17f2:	jne		0x7fffeafd1f9c
0x7fffeafd17f8:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafd17fc:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd1800:	cmp		rax, qword ptr [rcx + 0x28]
0x7fffeafd1804:	jne		0x7fffeafd1871
0x7fffeafd180a:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafd180e:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd1812:	add		rax, qword ptr [rcx + 0x10]
0x7fffeafd1816:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafd181a:	mov		qword ptr [rbp - 0x98], rax
0x7fffeafd1821:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafd1825:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd1829:	mov		qword ptr [rcx + 0x28], rax
0x7fffeafd182d:	mov		rax, qword ptr [rbp - 0x98]
0x7fffeafd1834:	or		rax, 1
0x7fffeafd183a:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafd183e:	mov		qword ptr [rcx + 8], rax
0x7fffeafd1842:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafd1846:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd184a:	cmp		rax, qword ptr [rcx + 0x20]
0x7fffeafd184e:	jne		0x7fffeafd186c
0x7fffeafd1854:	mov		rax, qword ptr [rbp - 8]
0x7fffeafd1858:	mov		qword ptr [rax + 0x20], 0
0x7fffeafd1860:	mov		rax, qword ptr [rbp - 8]
0x7fffeafd1864:	mov		qword ptr [rax + 8], 0
disassembling symbol '.LBB52_85':
textAddr: 0x7fffeafd186c, textSize: 5
0x7fffeafd186c:	jmp		0x7fffeafd249f
disassembling symbol '.LBB52_86':
textAddr: 0x7fffeafd1871, textSize: 101
0x7fffeafd1871:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafd1875:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd1879:	cmp		rax, qword ptr [rcx + 0x20]
0x7fffeafd187d:	jne		0x7fffeafd18d6
0x7fffeafd1883:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafd1887:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd188b:	add		rax, qword ptr [rcx + 8]
0x7fffeafd188f:	mov		qword ptr [rcx + 8], rax
0x7fffeafd1893:	mov		qword ptr [rbp - 0xa0], rax
0x7fffeafd189a:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafd189e:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd18a2:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafd18a6:	mov		rax, qword ptr [rbp - 0xa0]
0x7fffeafd18ad:	or		rax, 1
0x7fffeafd18b3:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafd18b7:	mov		qword ptr [rcx + 8], rax
0x7fffeafd18bb:	mov		rax, qword ptr [rbp - 0xa0]
0x7fffeafd18c2:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafd18c6:	mov		rdx, qword ptr [rbp - 0xa0]
0x7fffeafd18cd:	mov		qword ptr [rcx + rdx], rax
0x7fffeafd18d1:	jmp		0x7fffeafd249f
disassembling symbol '.LBB52_88':
textAddr: 0x7fffeafd18d6, textSize: 214
0x7fffeafd18d6:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafd18da:	mov		rax, qword ptr [rax + 8]
0x7fffeafd18de:	and		rax, 0xfffffffffffffff8
0x7fffeafd18e4:	mov		qword ptr [rbp - 0xa8], rax
0x7fffeafd18eb:	mov		rax, qword ptr [rbp - 0xa8]
0x7fffeafd18f2:	add		rax, qword ptr [rbp - 0x18]
0x7fffeafd18f6:	mov		qword ptr [rbp - 0x18], rax
0x7fffeafd18fa:	mov		rax, qword ptr [rbp - 0xa8]
0x7fffeafd1901:	shr		rax, 3
0x7fffeafd1905:	cmp		rax, 0x20
0x7fffeafd1909:	jae		0x7fffeafd1ad5
0x7fffeafd190f:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafd1913:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafd1917:	mov		qword ptr [rbp - 0xb0], rax
0x7fffeafd191e:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafd1922:	mov		rax, qword ptr [rax + 0x18]
0x7fffeafd1926:	mov		qword ptr [rbp - 0xb8], rax
0x7fffeafd192d:	mov		rax, qword ptr [rbp - 0xa8]
0x7fffeafd1934:	shr		rax, 3
0x7fffeafd1938:	mov		dword ptr [rbp - 0xbc], eax
0x7fffeafd193e:	mov		rcx, qword ptr [rbp - 0xb0]
0x7fffeafd1945:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafd1949:	add		rdx, 0x48
0x7fffeafd1950:	mov		eax, dword ptr [rbp - 0xbc]
0x7fffeafd1956:	shl		eax, 1
0x7fffeafd1959:	mov		eax, eax
0x7fffeafd195b:	mov		esi, eax
0x7fffeafd195d:	shl		rsi, 3
0x7fffeafd1961:	add		rdx, rsi
0x7fffeafd1964:	cmp		rcx, rdx
0x7fffeafd1967:	mov		dil, 1
0x7fffeafd196a:	mov		byte ptr [rbp - 0x167], dil
0x7fffeafd1971:	je		0x7fffeafd19b8
0x7fffeafd1977:	xor		eax, eax
0x7fffeafd1979:	mov		rcx, qword ptr [rbp - 0xb0]
0x7fffeafd1980:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafd1984:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafd1988:	mov		byte ptr [rbp - 0x168], al
0x7fffeafd198e:	jb		0x7fffeafd19ac
0x7fffeafd1994:	mov		rax, qword ptr [rbp - 0xb0]
0x7fffeafd199b:	mov		rax, qword ptr [rax + 0x18]
0x7fffeafd199f:	cmp		rax, qword ptr [rbp - 0x20]
0x7fffeafd19a3:	sete		cl
0x7fffeafd19a6:	mov		byte ptr [rbp - 0x168], cl
disassembling symbol '.LBB52_92':
textAddr: 0x7fffeafd19ac, textSize: 12
0x7fffeafd19ac:	mov		al, byte ptr [rbp - 0x168]
0x7fffeafd19b2:	mov		byte ptr [rbp - 0x167], al
disassembling symbol '.LBB52_93':
textAddr: 0x7fffeafd19b8, textSize: 73
0x7fffeafd19b8:	mov		al, byte ptr [rbp - 0x167]
0x7fffeafd19be:	and		al, 1
0x7fffeafd19c0:	movzx		ecx, al
0x7fffeafd19c3:	movsxd		rdx, ecx
0x7fffeafd19c6:	cmp		rdx, 0
0x7fffeafd19ca:	je		0x7fffeafd1acb
0x7fffeafd19d0:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafd19d7:	cmp		rax, qword ptr [rbp - 0xb0]
0x7fffeafd19de:	jne		0x7fffeafd1a01
0x7fffeafd19e4:	mov		ecx, dword ptr [rbp - 0xbc]
0x7fffeafd19ea:	mov		eax, 1
0x7fffeafd19ef:	shl		eax, cl
0x7fffeafd19f1:	xor		eax, 0xffffffff
0x7fffeafd19f4:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafd19f8:	and		eax, dword ptr [rdx]
0x7fffeafd19fa:	mov		dword ptr [rdx], eax
0x7fffeafd19fc:	jmp		0x7fffeafd1ac6
disassembling symbol '.LBB52_96':
textAddr: 0x7fffeafd1a01, textSize: 110
0x7fffeafd1a01:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafd1a08:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd1a0c:	add		rcx, 0x48
0x7fffeafd1a13:	mov		edx, dword ptr [rbp - 0xbc]
0x7fffeafd1a19:	shl		edx, 1
0x7fffeafd1a1c:	mov		edx, edx
0x7fffeafd1a1e:	mov		esi, edx
0x7fffeafd1a20:	shl		rsi, 3
0x7fffeafd1a24:	add		rcx, rsi
0x7fffeafd1a27:	cmp		rax, rcx
0x7fffeafd1a2a:	mov		dil, 1
0x7fffeafd1a2d:	mov		byte ptr [rbp - 0x169], dil
0x7fffeafd1a34:	je		0x7fffeafd1a7b
0x7fffeafd1a3a:	xor		eax, eax
0x7fffeafd1a3c:	mov		rcx, qword ptr [rbp - 0xb8]
0x7fffeafd1a43:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafd1a47:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafd1a4b:	mov		byte ptr [rbp - 0x16a], al
0x7fffeafd1a51:	jb		0x7fffeafd1a6f
0x7fffeafd1a57:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafd1a5e:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafd1a62:	cmp		rax, qword ptr [rbp - 0x20]
0x7fffeafd1a66:	sete		cl
0x7fffeafd1a69:	mov		byte ptr [rbp - 0x16a], cl
disassembling symbol '.LBB52_99':
textAddr: 0x7fffeafd1a6f, textSize: 12
0x7fffeafd1a6f:	mov		al, byte ptr [rbp - 0x16a]
0x7fffeafd1a75:	mov		byte ptr [rbp - 0x169], al
disassembling symbol '.LBB52_100':
textAddr: 0x7fffeafd1a7b, textSize: 65
0x7fffeafd1a7b:	mov		al, byte ptr [rbp - 0x169]
0x7fffeafd1a81:	and		al, 1
0x7fffeafd1a83:	movzx		ecx, al
0x7fffeafd1a86:	movsxd		rdx, ecx
0x7fffeafd1a89:	cmp		rdx, 0
0x7fffeafd1a8d:	je		0x7fffeafd1abc
0x7fffeafd1a93:	mov		rax, qword ptr [rbp - 0xb8]
0x7fffeafd1a9a:	mov		rcx, qword ptr [rbp - 0xb0]
0x7fffeafd1aa1:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafd1aa5:	mov		rax, qword ptr [rbp - 0xb0]
0x7fffeafd1aac:	mov		rcx, qword ptr [rbp - 0xb8]
0x7fffeafd1ab3:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafd1ab7:	jmp		0x7fffeafd1ac1
disassembling symbol '.LBB52_102':
textAddr: 0x7fffeafd1abc, textSize: 5
0x7fffeafd1abc:	call		0x7fffeafc4c10
disassembling symbol '.LBB52_103':
textAddr: 0x7fffeafd1ac1, textSize: 5
0x7fffeafd1ac1:	jmp		0x7fffeafd1ac6
disassembling symbol '.LBB52_104':
textAddr: 0x7fffeafd1ac6, textSize: 5
0x7fffeafd1ac6:	jmp		0x7fffeafd1ad0
disassembling symbol '.LBB52_105':
textAddr: 0x7fffeafd1acb, textSize: 5
0x7fffeafd1acb:	call		0x7fffeafc4c10
disassembling symbol '.LBB52_106':
textAddr: 0x7fffeafd1ad0, textSize: 5
0x7fffeafd1ad0:	jmp		0x7fffeafd1f48
disassembling symbol '.LBB52_107':
textAddr: 0x7fffeafd1ad5, textSize: 177
0x7fffeafd1ad5:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafd1ad9:	mov		qword ptr [rbp - 0xc8], rax
0x7fffeafd1ae0:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafd1ae7:	mov		rax, qword ptr [rax + 0x30]
0x7fffeafd1aeb:	mov		qword ptr [rbp - 0xd0], rax
0x7fffeafd1af2:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafd1af9:	mov		rax, qword ptr [rax + 0x18]
0x7fffeafd1afd:	cmp		rax, qword ptr [rbp - 0xc8]
0x7fffeafd1b04:	je		0x7fffeafd1bd1
0x7fffeafd1b0a:	xor		eax, eax
0x7fffeafd1b0c:	mov		rcx, qword ptr [rbp - 0xc8]
0x7fffeafd1b13:	mov		rcx, qword ptr [rcx + 0x10]
0x7fffeafd1b17:	mov		qword ptr [rbp - 0xe0], rcx
0x7fffeafd1b1e:	mov		rcx, qword ptr [rbp - 0xc8]
0x7fffeafd1b25:	mov		rcx, qword ptr [rcx + 0x18]
0x7fffeafd1b29:	mov		qword ptr [rbp - 0xd8], rcx
0x7fffeafd1b30:	mov		rcx, qword ptr [rbp - 0xe0]
0x7fffeafd1b37:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafd1b3b:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafd1b3f:	mov		byte ptr [rbp - 0x16b], al
0x7fffeafd1b45:	jb		0x7fffeafd1b86
0x7fffeafd1b4b:	xor		eax, eax
0x7fffeafd1b4d:	mov		rcx, qword ptr [rbp - 0xe0]
0x7fffeafd1b54:	mov		rcx, qword ptr [rcx + 0x18]
0x7fffeafd1b58:	cmp		rcx, qword ptr [rbp - 0xc8]
0x7fffeafd1b5f:	mov		byte ptr [rbp - 0x16b], al
0x7fffeafd1b65:	jne		0x7fffeafd1b86
0x7fffeafd1b6b:	mov		rax, qword ptr [rbp - 0xd8]
0x7fffeafd1b72:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafd1b76:	cmp		rax, qword ptr [rbp - 0xc8]
0x7fffeafd1b7d:	sete		cl
0x7fffeafd1b80:	mov		byte ptr [rbp - 0x16b], cl
disassembling symbol '.LBB52_111':
textAddr: 0x7fffeafd1b86, textSize: 65
0x7fffeafd1b86:	mov		al, byte ptr [rbp - 0x16b]
0x7fffeafd1b8c:	and		al, 1
0x7fffeafd1b8e:	movzx		ecx, al
0x7fffeafd1b91:	movsxd		rdx, ecx
0x7fffeafd1b94:	cmp		rdx, 0
0x7fffeafd1b98:	je		0x7fffeafd1bc7
0x7fffeafd1b9e:	mov		rax, qword ptr [rbp - 0xd8]
0x7fffeafd1ba5:	mov		rcx, qword ptr [rbp - 0xe0]
0x7fffeafd1bac:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafd1bb0:	mov		rax, qword ptr [rbp - 0xe0]
0x7fffeafd1bb7:	mov		rcx, qword ptr [rbp - 0xd8]
0x7fffeafd1bbe:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafd1bc2:	jmp		0x7fffeafd1bcc
disassembling symbol '.LBB52_113':
textAddr: 0x7fffeafd1bc7, textSize: 5
0x7fffeafd1bc7:	call		0x7fffeafc4c10
disassembling symbol '.LBB52_114':
textAddr: 0x7fffeafd1bcc, textSize: 5
0x7fffeafd1bcc:	jmp		0x7fffeafd1d06
disassembling symbol '.LBB52_115':
textAddr: 0x7fffeafd1bd1, textSize: 97
0x7fffeafd1bd1:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafd1bd8:	mov		rcx, rax
0x7fffeafd1bdb:	add		rcx, 0x20
0x7fffeafd1be2:	add		rcx, 8
0x7fffeafd1be9:	mov		qword ptr [rbp - 0xe8], rcx
0x7fffeafd1bf0:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafd1bf4:	mov		qword ptr [rbp - 0xd8], rax
0x7fffeafd1bfb:	cmp		rax, 0
0x7fffeafd1bff:	jne		0x7fffeafd1c32
0x7fffeafd1c05:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafd1c0c:	mov		rcx, rax
0x7fffeafd1c0f:	add		rcx, 0x20
0x7fffeafd1c16:	mov		qword ptr [rbp - 0xe8], rcx
0x7fffeafd1c1d:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafd1c21:	mov		qword ptr [rbp - 0xd8], rax
0x7fffeafd1c28:	cmp		rax, 0
0x7fffeafd1c2c:	je		0x7fffeafd1d01
disassembling symbol '.LBB52_117':
textAddr: 0x7fffeafd1c32, textSize: 5
0x7fffeafd1c32:	jmp		0x7fffeafd1c37
disassembling symbol '.LBB52_118':
textAddr: 0x7fffeafd1c37, textSize: 88
0x7fffeafd1c37:	mov		rax, qword ptr [rbp - 0xd8]
0x7fffeafd1c3e:	mov		rcx, rax
0x7fffeafd1c41:	add		rcx, 0x20
0x7fffeafd1c48:	add		rcx, 8
0x7fffeafd1c4f:	mov		qword ptr [rbp - 0xf0], rcx
0x7fffeafd1c56:	cmp		qword ptr [rax + 0x28], 0
0x7fffeafd1c5b:	mov		dl, 1
0x7fffeafd1c5d:	mov		byte ptr [rbp - 0x16c], dl
0x7fffeafd1c63:	jne		0x7fffeafd1c8f
0x7fffeafd1c69:	mov		rax, qword ptr [rbp - 0xd8]
0x7fffeafd1c70:	mov		rcx, rax
0x7fffeafd1c73:	add		rcx, 0x20
0x7fffeafd1c7a:	mov		qword ptr [rbp - 0xf0], rcx
0x7fffeafd1c81:	cmp		qword ptr [rax + 0x20], 0
0x7fffeafd1c86:	setne		dl
0x7fffeafd1c89:	mov		byte ptr [rbp - 0x16c], dl
disassembling symbol '.LBB52_120':
textAddr: 0x7fffeafd1c8f, textSize: 19
0x7fffeafd1c8f:	mov		al, byte ptr [rbp - 0x16c]
0x7fffeafd1c95:	test		al, 1
0x7fffeafd1c97:	jne		0x7fffeafd1ca2
0x7fffeafd1c9d:	jmp		0x7fffeafd1cbf
disassembling symbol '.LBB52_121':
textAddr: 0x7fffeafd1ca2, textSize: 29
0x7fffeafd1ca2:	mov		rax, qword ptr [rbp - 0xf0]
0x7fffeafd1ca9:	mov		qword ptr [rbp - 0xe8], rax
0x7fffeafd1cb0:	mov		rax, qword ptr [rax]
0x7fffeafd1cb3:	mov		qword ptr [rbp - 0xd8], rax
0x7fffeafd1cba:	jmp		0x7fffeafd1c37
disassembling symbol '.LBB52_122':
textAddr: 0x7fffeafd1cbf, textSize: 56
0x7fffeafd1cbf:	mov		rax, qword ptr [rbp - 0xe8]
0x7fffeafd1cc6:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd1cca:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafd1cce:	setae		dl
0x7fffeafd1cd1:	and		dl, 1
0x7fffeafd1cd4:	movzx		esi, dl
0x7fffeafd1cd7:	movsxd		rax, esi
0x7fffeafd1cda:	cmp		rax, 0
0x7fffeafd1cde:	je		0x7fffeafd1cf7
0x7fffeafd1ce4:	mov		rax, qword ptr [rbp - 0xe8]
0x7fffeafd1ceb:	mov		qword ptr [rax], 0
0x7fffeafd1cf2:	jmp		0x7fffeafd1cfc
disassembling symbol '.LBB52_124':
textAddr: 0x7fffeafd1cf7, textSize: 5
0x7fffeafd1cf7:	call		0x7fffeafc4c10
disassembling symbol '.LBB52_125':
textAddr: 0x7fffeafd1cfc, textSize: 5
0x7fffeafd1cfc:	jmp		0x7fffeafd1d01
disassembling symbol '.LBB52_126':
textAddr: 0x7fffeafd1d01, textSize: 5
0x7fffeafd1d01:	jmp		0x7fffeafd1d06
disassembling symbol '.LBB52_127':
textAddr: 0x7fffeafd1d06, textSize: 130
0x7fffeafd1d06:	cmp		qword ptr [rbp - 0xd0], 0
0x7fffeafd1d0e:	je		0x7fffeafd1f43
0x7fffeafd1d14:	mov		rax, qword ptr [rbp - 8]
0x7fffeafd1d18:	add		rax, 0x258
0x7fffeafd1d1e:	mov		rcx, qword ptr [rbp - 0xc8]
0x7fffeafd1d25:	mov		edx, dword ptr [rcx + 0x38]
0x7fffeafd1d28:	mov		ecx, edx
0x7fffeafd1d2a:	shl		rcx, 3
0x7fffeafd1d2e:	add		rax, rcx
0x7fffeafd1d31:	mov		qword ptr [rbp - 0xf8], rax
0x7fffeafd1d38:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafd1d3f:	mov		rcx, qword ptr [rbp - 0xf8]
0x7fffeafd1d46:	cmp		rax, qword ptr [rcx]
0x7fffeafd1d49:	jne		0x7fffeafd1d8d
0x7fffeafd1d4f:	mov		rax, qword ptr [rbp - 0xd8]
0x7fffeafd1d56:	mov		rcx, qword ptr [rbp - 0xf8]
0x7fffeafd1d5d:	mov		qword ptr [rcx], rax
0x7fffeafd1d60:	cmp		rax, 0
0x7fffeafd1d64:	jne		0x7fffeafd1d88
0x7fffeafd1d6a:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafd1d71:	mov		ecx, dword ptr [rax + 0x38]
0x7fffeafd1d74:	mov		edx, 1
0x7fffeafd1d79:	shl		edx, cl
0x7fffeafd1d7b:	xor		edx, 0xffffffff
0x7fffeafd1d7e:	mov		rax, qword ptr [rbp - 8]
0x7fffeafd1d82:	and		edx, dword ptr [rax + 4]
0x7fffeafd1d85:	mov		dword ptr [rax + 4], edx
disassembling symbol '.LBB52_131':
textAddr: 0x7fffeafd1d88, textSize: 5
0x7fffeafd1d88:	jmp		0x7fffeafd1e02
disassembling symbol '.LBB52_132':
textAddr: 0x7fffeafd1d8d, textSize: 84
0x7fffeafd1d8d:	mov		rax, qword ptr [rbp - 0xd0]
0x7fffeafd1d94:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd1d98:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafd1d9c:	setae		dl
0x7fffeafd1d9f:	and		dl, 1
0x7fffeafd1da2:	movzx		esi, dl
0x7fffeafd1da5:	movsxd		rax, esi
0x7fffeafd1da8:	cmp		rax, 0
0x7fffeafd1dac:	je		0x7fffeafd1df8
0x7fffeafd1db2:	mov		rax, qword ptr [rbp - 0xd0]
0x7fffeafd1db9:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafd1dbd:	cmp		rax, qword ptr [rbp - 0xc8]
0x7fffeafd1dc4:	jne		0x7fffeafd1de1
0x7fffeafd1dca:	mov		rax, qword ptr [rbp - 0xd8]
0x7fffeafd1dd1:	mov		rcx, qword ptr [rbp - 0xd0]
0x7fffeafd1dd8:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafd1ddc:	jmp		0x7fffeafd1df3
disassembling symbol '.LBB52_135':
textAddr: 0x7fffeafd1de1, textSize: 18
0x7fffeafd1de1:	mov		rax, qword ptr [rbp - 0xd8]
0x7fffeafd1de8:	mov		rcx, qword ptr [rbp - 0xd0]
0x7fffeafd1def:	mov		qword ptr [rcx + 0x28], rax
disassembling symbol '.LBB52_136':
textAddr: 0x7fffeafd1df3, textSize: 5
0x7fffeafd1df3:	jmp		0x7fffeafd1dfd
disassembling symbol '.LBB52_137':
textAddr: 0x7fffeafd1df8, textSize: 5
0x7fffeafd1df8:	call		0x7fffeafc4c10
disassembling symbol '.LBB52_138':
textAddr: 0x7fffeafd1dfd, textSize: 5
0x7fffeafd1dfd:	jmp		0x7fffeafd1e02
disassembling symbol '.LBB52_139':
textAddr: 0x7fffeafd1e02, textSize: 175
0x7fffeafd1e02:	cmp		qword ptr [rbp - 0xd8], 0
0x7fffeafd1e0a:	je		0x7fffeafd1f3e
0x7fffeafd1e10:	mov		rax, qword ptr [rbp - 0xd8]
0x7fffeafd1e17:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd1e1b:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafd1e1f:	setae		dl
0x7fffeafd1e22:	and		dl, 1
0x7fffeafd1e25:	movzx		esi, dl
0x7fffeafd1e28:	movsxd		rax, esi
0x7fffeafd1e2b:	cmp		rax, 0
0x7fffeafd1e2f:	je		0x7fffeafd1f34
0x7fffeafd1e35:	mov		rax, qword ptr [rbp - 0xd0]
0x7fffeafd1e3c:	mov		rcx, qword ptr [rbp - 0xd8]
0x7fffeafd1e43:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafd1e47:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafd1e4e:	mov		rax, qword ptr [rax + 0x20]
0x7fffeafd1e52:	mov		qword ptr [rbp - 0x100], rax
0x7fffeafd1e59:	cmp		rax, 0
0x7fffeafd1e5d:	je		0x7fffeafd1ebb
0x7fffeafd1e63:	mov		rax, qword ptr [rbp - 0x100]
0x7fffeafd1e6a:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd1e6e:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafd1e72:	setae		dl
0x7fffeafd1e75:	and		dl, 1
0x7fffeafd1e78:	movzx		esi, dl
0x7fffeafd1e7b:	movsxd		rax, esi
0x7fffeafd1e7e:	cmp		rax, 0
0x7fffeafd1e82:	je		0x7fffeafd1eb1
0x7fffeafd1e88:	mov		rax, qword ptr [rbp - 0x100]
0x7fffeafd1e8f:	mov		rcx, qword ptr [rbp - 0xd8]
0x7fffeafd1e96:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafd1e9a:	mov		rax, qword ptr [rbp - 0xd8]
0x7fffeafd1ea1:	mov		rcx, qword ptr [rbp - 0x100]
0x7fffeafd1ea8:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafd1eac:	jmp		0x7fffeafd1eb6
disassembling symbol '.LBB52_144':
textAddr: 0x7fffeafd1eb1, textSize: 5
0x7fffeafd1eb1:	call		0x7fffeafc4c10
disassembling symbol '.LBB52_145':
textAddr: 0x7fffeafd1eb6, textSize: 5
0x7fffeafd1eb6:	jmp		0x7fffeafd1ebb
disassembling symbol '.LBB52_146':
textAddr: 0x7fffeafd1ebb, textSize: 106
0x7fffeafd1ebb:	mov		rax, qword ptr [rbp - 0xc8]
0x7fffeafd1ec2:	mov		rax, qword ptr [rax + 0x28]
0x7fffeafd1ec6:	mov		qword ptr [rbp - 0x108], rax
0x7fffeafd1ecd:	cmp		rax, 0
0x7fffeafd1ed1:	je		0x7fffeafd1f2f
0x7fffeafd1ed7:	mov		rax, qword ptr [rbp - 0x108]
0x7fffeafd1ede:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd1ee2:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafd1ee6:	setae		dl
0x7fffeafd1ee9:	and		dl, 1
0x7fffeafd1eec:	movzx		esi, dl
0x7fffeafd1eef:	movsxd		rax, esi
0x7fffeafd1ef2:	cmp		rax, 0
0x7fffeafd1ef6:	je		0x7fffeafd1f25
0x7fffeafd1efc:	mov		rax, qword ptr [rbp - 0x108]
0x7fffeafd1f03:	mov		rcx, qword ptr [rbp - 0xd8]
0x7fffeafd1f0a:	mov		qword ptr [rcx + 0x28], rax
0x7fffeafd1f0e:	mov		rax, qword ptr [rbp - 0xd8]
0x7fffeafd1f15:	mov		rcx, qword ptr [rbp - 0x108]
0x7fffeafd1f1c:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafd1f20:	jmp		0x7fffeafd1f2a
disassembling symbol '.LBB52_149':
textAddr: 0x7fffeafd1f25, textSize: 5
0x7fffeafd1f25:	call		0x7fffeafc4c10
disassembling symbol '.LBB52_150':
textAddr: 0x7fffeafd1f2a, textSize: 5
0x7fffeafd1f2a:	jmp		0x7fffeafd1f2f
disassembling symbol '.LBB52_151':
textAddr: 0x7fffeafd1f2f, textSize: 5
0x7fffeafd1f2f:	jmp		0x7fffeafd1f39
disassembling symbol '.LBB52_152':
textAddr: 0x7fffeafd1f34, textSize: 5
0x7fffeafd1f34:	call		0x7fffeafc4c10
disassembling symbol '.LBB52_153':
textAddr: 0x7fffeafd1f39, textSize: 5
0x7fffeafd1f39:	jmp		0x7fffeafd1f3e
disassembling symbol '.LBB52_154':
textAddr: 0x7fffeafd1f3e, textSize: 5
0x7fffeafd1f3e:	jmp		0x7fffeafd1f43
disassembling symbol '.LBB52_155':
textAddr: 0x7fffeafd1f43, textSize: 5
0x7fffeafd1f43:	jmp		0x7fffeafd1f48
disassembling symbol '.LBB52_156':
textAddr: 0x7fffeafd1f48, textSize: 69
0x7fffeafd1f48:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafd1f4c:	or		rax, 1
0x7fffeafd1f52:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafd1f56:	mov		qword ptr [rcx + 8], rax
0x7fffeafd1f5a:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafd1f5e:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafd1f62:	mov		rdx, qword ptr [rbp - 0x18]
0x7fffeafd1f66:	mov		qword ptr [rcx + rdx], rax
0x7fffeafd1f6a:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafd1f6e:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd1f72:	cmp		rax, qword ptr [rcx + 0x20]
0x7fffeafd1f76:	jne		0x7fffeafd1f8d
0x7fffeafd1f7c:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafd1f80:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd1f84:	mov		qword ptr [rcx + 8], rax
0x7fffeafd1f88:	jmp		0x7fffeafd249f
disassembling symbol '.LBB52_158':
textAddr: 0x7fffeafd1f8d, textSize: 5
0x7fffeafd1f8d:	jmp		0x7fffeafd1f92
disassembling symbol '.LBB52_159':
textAddr: 0x7fffeafd1f92, textSize: 5
0x7fffeafd1f92:	jmp		0x7fffeafd1f97
disassembling symbol '.LBB52_160':
textAddr: 0x7fffeafd1f97, textSize: 5
0x7fffeafd1f97:	jmp		0x7fffeafd1fd1
disassembling symbol '.LBB52_161':
textAddr: 0x7fffeafd1f9c, textSize: 53
0x7fffeafd1f9c:	mov		rax, qword ptr [rbp - 0x20]
0x7fffeafd1fa0:	mov		rcx, qword ptr [rax + 8]
0x7fffeafd1fa4:	and		rcx, 0xfffffffffffffffe
0x7fffeafd1fab:	mov		qword ptr [rax + 8], rcx
0x7fffeafd1faf:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafd1fb3:	or		rax, 1
0x7fffeafd1fb9:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafd1fbd:	mov		qword ptr [rcx + 8], rax
0x7fffeafd1fc1:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafd1fc5:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafd1fc9:	mov		rdx, qword ptr [rbp - 0x18]
0x7fffeafd1fcd:	mov		qword ptr [rcx + rdx], rax
disassembling symbol '.LBB52_162':
textAddr: 0x7fffeafd1fd1, textSize: 140
0x7fffeafd1fd1:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafd1fd5:	shr		rax, 3
0x7fffeafd1fd9:	cmp		rax, 0x20
0x7fffeafd1fdd:	jae		0x7fffeafd20e8
0x7fffeafd1fe3:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafd1fe7:	shr		rax, 3
0x7fffeafd1feb:	mov		dword ptr [rbp - 0x10c], eax
0x7fffeafd1ff1:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd1ff5:	add		rcx, 0x48
0x7fffeafd1ffc:	mov		eax, dword ptr [rbp - 0x10c]
0x7fffeafd2002:	shl		eax, 1
0x7fffeafd2005:	mov		eax, eax
0x7fffeafd2007:	mov		edx, eax
0x7fffeafd2009:	shl		rdx, 3
0x7fffeafd200d:	add		rcx, rdx
0x7fffeafd2010:	mov		qword ptr [rbp - 0x118], rcx
0x7fffeafd2017:	mov		rcx, qword ptr [rbp - 0x118]
0x7fffeafd201e:	mov		qword ptr [rbp - 0x120], rcx
0x7fffeafd2025:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd2029:	mov		eax, dword ptr [rcx]
0x7fffeafd202b:	mov		ecx, dword ptr [rbp - 0x10c]
0x7fffeafd2031:	mov		esi, 1
0x7fffeafd2036:	shl		esi, cl
0x7fffeafd2038:	and		eax, esi
0x7fffeafd203a:	cmp		eax, 0
0x7fffeafd203d:	jne		0x7fffeafd205d
0x7fffeafd2043:	mov		ecx, dword ptr [rbp - 0x10c]
0x7fffeafd2049:	mov		eax, 1
0x7fffeafd204e:	shl		eax, cl
0x7fffeafd2050:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafd2054:	or		eax, dword ptr [rdx]
0x7fffeafd2056:	mov		dword ptr [rdx], eax
0x7fffeafd2058:	jmp		0x7fffeafd20a7
disassembling symbol '.LBB52_165':
textAddr: 0x7fffeafd205d, textSize: 64
0x7fffeafd205d:	mov		rax, qword ptr [rbp - 0x118]
0x7fffeafd2064:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafd2068:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd206c:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafd2070:	setae		dl
0x7fffeafd2073:	and		dl, 1
0x7fffeafd2076:	movzx		esi, dl
0x7fffeafd2079:	movsxd		rax, esi
0x7fffeafd207c:	cmp		rax, 0
0x7fffeafd2080:	je		0x7fffeafd209d
0x7fffeafd2086:	mov		rax, qword ptr [rbp - 0x118]
0x7fffeafd208d:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafd2091:	mov		qword ptr [rbp - 0x120], rax
0x7fffeafd2098:	jmp		0x7fffeafd20a2
disassembling symbol '.LBB52_167':
textAddr: 0x7fffeafd209d, textSize: 5
0x7fffeafd209d:	call		0x7fffeafc4c10
disassembling symbol '.LBB52_168':
textAddr: 0x7fffeafd20a2, textSize: 5
0x7fffeafd20a2:	jmp		0x7fffeafd20a7
disassembling symbol '.LBB52_169':
textAddr: 0x7fffeafd20a7, textSize: 65
0x7fffeafd20a7:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafd20ab:	mov		rcx, qword ptr [rbp - 0x118]
0x7fffeafd20b2:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafd20b6:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafd20ba:	mov		rcx, qword ptr [rbp - 0x120]
0x7fffeafd20c1:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafd20c5:	mov		rax, qword ptr [rbp - 0x120]
0x7fffeafd20cc:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafd20d0:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafd20d4:	mov		rax, qword ptr [rbp - 0x118]
0x7fffeafd20db:	mov		rcx, qword ptr [rbp - 0x10]
0x7fffeafd20df:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafd20e3:	jmp		0x7fffeafd2495
disassembling symbol '.LBB52_170':
textAddr: 0x7fffeafd20e8, textSize: 53
0x7fffeafd20e8:	mov		rax, qword ptr [rbp - 0x10]
0x7fffeafd20ec:	mov		qword ptr [rbp - 0x128], rax
0x7fffeafd20f3:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafd20f7:	shr		rax, 8
0x7fffeafd20fb:	mov		dword ptr [rbp - 0x138], eax
0x7fffeafd2101:	cmp		dword ptr [rbp - 0x138], 0
0x7fffeafd2108:	jne		0x7fffeafd211d
0x7fffeafd210e:	mov		dword ptr [rbp - 0x134], 0
0x7fffeafd2118:	jmp		0x7fffeafd218b
disassembling symbol '.LBB52_172':
textAddr: 0x7fffeafd211d, textSize: 31
0x7fffeafd211d:	cmp		dword ptr [rbp - 0x138], 0xffff
0x7fffeafd2127:	jbe		0x7fffeafd213c
0x7fffeafd212d:	mov		dword ptr [rbp - 0x134], 0x1f
0x7fffeafd2137:	jmp		0x7fffeafd2186
disassembling symbol '.LBB52_174':
textAddr: 0x7fffeafd213c, textSize: 74
0x7fffeafd213c:	mov		eax, dword ptr [rbp - 0x138]
0x7fffeafd2142:	bsr		eax, eax
0x7fffeafd2145:	xor		eax, 0x1f
0x7fffeafd2148:	mov		ecx, 0x1f
0x7fffeafd214d:	sub		ecx, eax
0x7fffeafd214f:	mov		dword ptr [rbp - 0x13c], ecx
0x7fffeafd2155:	mov		eax, dword ptr [rbp - 0x13c]
0x7fffeafd215b:	shl		eax, 1
0x7fffeafd215e:	mov		eax, eax
0x7fffeafd2160:	mov		edx, eax
0x7fffeafd2162:	mov		rsi, qword ptr [rbp - 0x18]
0x7fffeafd2166:	mov		eax, dword ptr [rbp - 0x13c]
0x7fffeafd216c:	add		eax, 7
0x7fffeafd216f:	mov		eax, eax
0x7fffeafd2171:	mov		ecx, eax
0x7fffeafd2173:	shr		rsi, cl
0x7fffeafd2176:	and		rsi, 1
0x7fffeafd217d:	add		rdx, rsi
0x7fffeafd2180:	mov		dword ptr [rbp - 0x134], edx
disassembling symbol '.LBB52_175':
textAddr: 0x7fffeafd2186, textSize: 5
0x7fffeafd2186:	jmp		0x7fffeafd218b
disassembling symbol '.LBB52_176':
textAddr: 0x7fffeafd218b, textSize: 215
0x7fffeafd218b:	mov		rax, qword ptr [rbp - 8]
0x7fffeafd218f:	add		rax, 0x258
0x7fffeafd2195:	mov		ecx, dword ptr [rbp - 0x134]
0x7fffeafd219b:	mov		edx, ecx
0x7fffeafd219d:	shl		rdx, 3
0x7fffeafd21a1:	add		rax, rdx
0x7fffeafd21a4:	mov		qword ptr [rbp - 0x130], rax
0x7fffeafd21ab:	mov		ecx, dword ptr [rbp - 0x134]
0x7fffeafd21b1:	mov		rax, qword ptr [rbp - 0x128]
0x7fffeafd21b8:	mov		dword ptr [rax + 0x38], ecx
0x7fffeafd21bb:	mov		rax, qword ptr [rbp - 0x128]
0x7fffeafd21c2:	mov		qword ptr [rax + 0x28], 0
0x7fffeafd21ca:	mov		rax, qword ptr [rbp - 0x128]
0x7fffeafd21d1:	mov		qword ptr [rax + 0x20], 0
0x7fffeafd21d9:	mov		rax, qword ptr [rbp - 8]
0x7fffeafd21dd:	mov		ecx, dword ptr [rax + 4]
0x7fffeafd21e0:	mov		esi, dword ptr [rbp - 0x134]
0x7fffeafd21e6:	mov		dword ptr [rbp - 0x170], ecx
0x7fffeafd21ec:	mov		ecx, esi
0x7fffeafd21ee:	mov		esi, 1
0x7fffeafd21f3:	shl		esi, cl
0x7fffeafd21f5:	mov		edi, dword ptr [rbp - 0x170]
0x7fffeafd21fb:	and		edi, esi
0x7fffeafd21fd:	cmp		edi, 0
0x7fffeafd2200:	jne		0x7fffeafd2262
0x7fffeafd2206:	mov		ecx, dword ptr [rbp - 0x134]
0x7fffeafd220c:	mov		eax, 1
0x7fffeafd2211:	shl		eax, cl
0x7fffeafd2213:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafd2217:	or		eax, dword ptr [rdx + 4]
0x7fffeafd221a:	mov		dword ptr [rdx + 4], eax
0x7fffeafd221d:	mov		rdx, qword ptr [rbp - 0x128]
0x7fffeafd2224:	mov		rsi, qword ptr [rbp - 0x130]
0x7fffeafd222b:	mov		qword ptr [rsi], rdx
0x7fffeafd222e:	mov		rdx, qword ptr [rbp - 0x130]
0x7fffeafd2235:	mov		rsi, qword ptr [rbp - 0x128]
0x7fffeafd223c:	mov		qword ptr [rsi + 0x30], rdx
0x7fffeafd2240:	mov		rdx, qword ptr [rbp - 0x128]
0x7fffeafd2247:	mov		rsi, qword ptr [rbp - 0x128]
0x7fffeafd224e:	mov		qword ptr [rsi + 0x18], rdx
0x7fffeafd2252:	mov		rsi, qword ptr [rbp - 0x128]
0x7fffeafd2259:	mov		qword ptr [rsi + 0x10], rdx
0x7fffeafd225d:	jmp		0x7fffeafd2490
disassembling symbol '.LBB52_178':
textAddr: 0x7fffeafd2262, textSize: 57
0x7fffeafd2262:	mov		rax, qword ptr [rbp - 0x130]
0x7fffeafd2269:	mov		rax, qword ptr [rax]
0x7fffeafd226c:	mov		qword ptr [rbp - 0x148], rax
0x7fffeafd2273:	mov		rax, qword ptr [rbp - 0x18]
0x7fffeafd2277:	cmp		dword ptr [rbp - 0x134], 0x1f
0x7fffeafd227e:	mov		qword ptr [rbp - 0x178], rax
0x7fffeafd2285:	jne		0x7fffeafd229b
0x7fffeafd228b:	xor		eax, eax
0x7fffeafd228d:	mov		ecx, eax
0x7fffeafd228f:	mov		qword ptr [rbp - 0x180], rcx
0x7fffeafd2296:	jmp		0x7fffeafd22bd
disassembling symbol '.LBB52_180':
textAddr: 0x7fffeafd229b, textSize: 34
0x7fffeafd229b:	mov		eax, dword ptr [rbp - 0x134]
0x7fffeafd22a1:	shr		eax, 1
0x7fffeafd22a4:	add		eax, 8
0x7fffeafd22a7:	sub		eax, 2
0x7fffeafd22aa:	mov		eax, eax
0x7fffeafd22ac:	mov		ecx, eax
0x7fffeafd22ae:	mov		edx, 0x3f
0x7fffeafd22b3:	sub		rdx, rcx
0x7fffeafd22b6:	mov		qword ptr [rbp - 0x180], rdx
disassembling symbol '.LBB52_181':
textAddr: 0x7fffeafd22bd, textSize: 27
0x7fffeafd22bd:	mov		rax, qword ptr [rbp - 0x180]
0x7fffeafd22c4:	mov		rcx, rax
0x7fffeafd22c7:	mov		rax, qword ptr [rbp - 0x178]
0x7fffeafd22ce:	shl		rax, cl
0x7fffeafd22d1:	mov		qword ptr [rbp - 0x150], rax
disassembling symbol '.LBB52_182':
textAddr: 0x7fffeafd22d8, textSize: 129
0x7fffeafd22d8:	mov		rax, qword ptr [rbp - 0x148]
0x7fffeafd22df:	mov		rax, qword ptr [rax + 8]
0x7fffeafd22e3:	and		rax, 0xfffffffffffffff8
0x7fffeafd22e9:	cmp		rax, qword ptr [rbp - 0x18]
0x7fffeafd22ed:	je		0x7fffeafd23cd
0x7fffeafd22f3:	mov		rax, qword ptr [rbp - 0x148]
0x7fffeafd22fa:	add		rax, 0x20
0x7fffeafd2300:	mov		rcx, qword ptr [rbp - 0x150]
0x7fffeafd2307:	shr		rcx, 0x3f
0x7fffeafd230b:	and		rcx, 1
0x7fffeafd2312:	shl		rcx, 3
0x7fffeafd2316:	add		rax, rcx
0x7fffeafd2319:	mov		qword ptr [rbp - 0x158], rax
0x7fffeafd2320:	mov		rax, qword ptr [rbp - 0x150]
0x7fffeafd2327:	shl		rax, 1
0x7fffeafd232b:	mov		qword ptr [rbp - 0x150], rax
0x7fffeafd2332:	mov		rax, qword ptr [rbp - 0x158]
0x7fffeafd2339:	cmp		qword ptr [rax], 0
0x7fffeafd233d:	je		0x7fffeafd2359
0x7fffeafd2343:	mov		rax, qword ptr [rbp - 0x158]
0x7fffeafd234a:	mov		rax, qword ptr [rax]
0x7fffeafd234d:	mov		qword ptr [rbp - 0x148], rax
0x7fffeafd2354:	jmp		0x7fffeafd23c8
disassembling symbol '.LBB52_185':
textAddr: 0x7fffeafd2359, textSize: 106
0x7fffeafd2359:	mov		rax, qword ptr [rbp - 0x158]
0x7fffeafd2360:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd2364:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafd2368:	setae		dl
0x7fffeafd236b:	and		dl, 1
0x7fffeafd236e:	movzx		esi, dl
0x7fffeafd2371:	movsxd		rax, esi
0x7fffeafd2374:	cmp		rax, 0
0x7fffeafd2378:	je		0x7fffeafd23c3
0x7fffeafd237e:	mov		rax, qword ptr [rbp - 0x128]
0x7fffeafd2385:	mov		rcx, qword ptr [rbp - 0x158]
0x7fffeafd238c:	mov		qword ptr [rcx], rax
0x7fffeafd238f:	mov		rax, qword ptr [rbp - 0x148]
0x7fffeafd2396:	mov		rcx, qword ptr [rbp - 0x128]
0x7fffeafd239d:	mov		qword ptr [rcx + 0x30], rax
0x7fffeafd23a1:	mov		rax, qword ptr [rbp - 0x128]
0x7fffeafd23a8:	mov		rcx, qword ptr [rbp - 0x128]
0x7fffeafd23af:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafd23b3:	mov		rcx, qword ptr [rbp - 0x128]
0x7fffeafd23ba:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafd23be:	jmp		0x7fffeafd248b
disassembling symbol '.LBB52_187':
textAddr: 0x7fffeafd23c3, textSize: 5
0x7fffeafd23c3:	call		0x7fffeafc4c10
disassembling symbol '.LBB52_188':
textAddr: 0x7fffeafd23c8, textSize: 5
0x7fffeafd23c8:	jmp		0x7fffeafd2486
disassembling symbol '.LBB52_189':
textAddr: 0x7fffeafd23cd, textSize: 71
0x7fffeafd23cd:	xor		eax, eax
0x7fffeafd23cf:	mov		rcx, qword ptr [rbp - 0x148]
0x7fffeafd23d6:	mov		rcx, qword ptr [rcx + 0x10]
0x7fffeafd23da:	mov		qword ptr [rbp - 0x160], rcx
0x7fffeafd23e1:	mov		rcx, qword ptr [rbp - 0x148]
0x7fffeafd23e8:	mov		rdx, qword ptr [rbp - 8]
0x7fffeafd23ec:	cmp		rcx, qword ptr [rdx + 0x18]
0x7fffeafd23f0:	mov		byte ptr [rbp - 0x181], al
0x7fffeafd23f6:	jb		0x7fffeafd2414
0x7fffeafd23fc:	mov		rax, qword ptr [rbp - 0x160]
0x7fffeafd2403:	mov		rcx, qword ptr [rbp - 8]
0x7fffeafd2407:	cmp		rax, qword ptr [rcx + 0x18]
0x7fffeafd240b:	setae		dl
0x7fffeafd240e:	mov		byte ptr [rbp - 0x181], dl
disassembling symbol '.LBB52_191':
textAddr: 0x7fffeafd2414, textSize: 109
0x7fffeafd2414:	mov		al, byte ptr [rbp - 0x181]
0x7fffeafd241a:	and		al, 1
0x7fffeafd241c:	movzx		ecx, al
0x7fffeafd241f:	movsxd		rdx, ecx
0x7fffeafd2422:	cmp		rdx, 0
0x7fffeafd2426:	je		0x7fffeafd2481
0x7fffeafd242c:	mov		rax, qword ptr [rbp - 0x128]
0x7fffeafd2433:	mov		rcx, qword ptr [rbp - 0x160]
0x7fffeafd243a:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafd243e:	mov		rcx, qword ptr [rbp - 0x148]
0x7fffeafd2445:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafd2449:	mov		rax, qword ptr [rbp - 0x160]
0x7fffeafd2450:	mov		rcx, qword ptr [rbp - 0x128]
0x7fffeafd2457:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafd245b:	mov		rax, qword ptr [rbp - 0x148]
0x7fffeafd2462:	mov		rcx, qword ptr [rbp - 0x128]
0x7fffeafd2469:	mov		qword ptr [rcx + 0x18], rax
0x7fffeafd246d:	mov		rax, qword ptr [rbp - 0x128]
0x7fffeafd2474:	mov		qword ptr [rax + 0x30], 0
0x7fffeafd247c:	jmp		0x7fffeafd248b
disassembling symbol '.LBB52_193':
textAddr: 0x7fffeafd2481, textSize: 5
0x7fffeafd2481:	call		0x7fffeafc4c10
disassembling symbol '.LBB52_194':
textAddr: 0x7fffeafd2486, textSize: 5
0x7fffeafd2486:	jmp		0x7fffeafd22d8
disassembling symbol '.LBB52_195':
textAddr: 0x7fffeafd248b, textSize: 5
0x7fffeafd248b:	jmp		0x7fffeafd2490
disassembling symbol '.LBB52_196':
textAddr: 0x7fffeafd2490, textSize: 5
0x7fffeafd2490:	jmp		0x7fffeafd2495
disassembling symbol '.LBB52_197':
textAddr: 0x7fffeafd2495, textSize: 5
0x7fffeafd2495:	jmp		0x7fffeafd249f
disassembling symbol '.LBB52_198':
textAddr: 0x7fffeafd249a, textSize: 5
0x7fffeafd249a:	call		0x7fffeafc4c10
disassembling symbol '.LBB52_199':
textAddr: 0x7fffeafd249f, textSize: 17
0x7fffeafd249f:	add		rsp, 0x190
0x7fffeafd24a6:	pop		rbp
0x7fffeafd24a7:	ret		
0x7fffeafd24a8:	add		byte ptr [rax], al
0x7fffeafd24aa:	add		byte ptr [rax], al
0x7fffeafd24ac:	add		byte ptr [rax], al
0x7fffeafd24ae:	add		byte ptr [rax], al
disassembling symbol 'memchr':
textAddr: 0x7fffeafd24b0, textSize: 218
0x7fffeafd24b0:	mov		rax, rdi
0x7fffeafd24b3:	test		rdx, rdx
0x7fffeafd24b6:	setne		cl
0x7fffeafd24b9:	je		0x7fffeafd24ec
0x7fffeafd24bf:	nop		
0x7fffeafd24c0:	mov		edi, eax
0x7fffeafd24c2:	and		edi, 7
0x7fffeafd24c5:	test		rdi, rdi
0x7fffeafd24c8:	je		0x7fffeafd24ec
0x7fffeafd24ce:	cmp		byte ptr [rax], sil
0x7fffeafd24d1:	je		0x7fffeafd24f4
0x7fffeafd24d7:	add		rax, 1
0x7fffeafd24db:	cmp		rdx, 1
0x7fffeafd24df:	lea		rdx, [rdx - 1]
0x7fffeafd24e3:	setne		cl
0x7fffeafd24e6:	jne		0x7fffeafd24c0
0x7fffeafd24ec:	test		cl, cl
0x7fffeafd24ee:	je		0x7fffeafd2587
0x7fffeafd24f4:	cmp		byte ptr [rax], sil
0x7fffeafd24f7:	je		0x7fffeafd2589
0x7fffeafd24fd:	cmp		rdx, 8
0x7fffeafd2501:	jb		0x7fffeafd255d
0x7fffeafd2507:	movzx		ecx, sil
0x7fffeafd250b:	mov		edi, ecx
0x7fffeafd250d:	movabs		r10, 0x101010101010101
0x7fffeafd2517:	imul		r10, rdi
0x7fffeafd251b:	movabs		r8, 0x8080808080808080
0x7fffeafd2525:	movabs		r9, 0xfefefefefefefeff
0x7fffeafd252f:	nop		
0x7fffeafd2530:	mov		rdi, qword ptr [rax]
0x7fffeafd2533:	xor		rdi, r10
0x7fffeafd2536:	mov		rcx, rdi
0x7fffeafd2539:	not		rcx
0x7fffeafd253c:	and		rcx, r8
0x7fffeafd253f:	add		rdi, r9
0x7fffeafd2542:	test		rcx, rdi
0x7fffeafd2545:	jne		0x7fffeafd2570
0x7fffeafd254b:	add		rax, 8
0x7fffeafd254f:	add		rdx, -8
0x7fffeafd2553:	cmp		rdx, 7
0x7fffeafd2557:	ja		0x7fffeafd2530
0x7fffeafd255d:	test		rdx, rdx
0x7fffeafd2560:	je		0x7fffeafd2587
0x7fffeafd2566:	nop		word ptr cs:[rax + rax]
0x7fffeafd2570:	cmp		byte ptr [rax], sil
0x7fffeafd2573:	je		0x7fffeafd2589
0x7fffeafd2579:	add		rax, 1
0x7fffeafd257d:	add		rdx, -1
0x7fffeafd2581:	jne		0x7fffeafd2570
0x7fffeafd2587:	xor		eax, eax
0x7fffeafd2589:	ret		
disassembling symbol '.LBB0_2':
textAddr: 0x7fffeafd24c0, textSize: 44
0x7fffeafd24c0:	mov		edi, eax
0x7fffeafd24c2:	and		edi, 7
0x7fffeafd24c5:	test		rdi, rdi
0x7fffeafd24c8:	je		0x7fffeafd24ec
0x7fffeafd24ce:	cmp		byte ptr [rax], sil
0x7fffeafd24d1:	je		0x7fffeafd24f4
0x7fffeafd24d7:	add		rax, 1
0x7fffeafd24db:	cmp		rdx, 1
0x7fffeafd24df:	lea		rdx, [rdx - 1]
0x7fffeafd24e3:	setne		cl
0x7fffeafd24e6:	jne		0x7fffeafd24c0
disassembling symbol '.LBB0_5':
textAddr: 0x7fffeafd24ec, textSize: 8
0x7fffeafd24ec:	test		cl, cl
0x7fffeafd24ee:	je		0x7fffeafd2587
disassembling symbol '.LBB0_6':
textAddr: 0x7fffeafd24f4, textSize: 60
0x7fffeafd24f4:	cmp		byte ptr [rax], sil
0x7fffeafd24f7:	je		0x7fffeafd2589
0x7fffeafd24fd:	cmp		rdx, 8
0x7fffeafd2501:	jb		0x7fffeafd255d
0x7fffeafd2507:	movzx		ecx, sil
0x7fffeafd250b:	mov		edi, ecx
0x7fffeafd250d:	movabs		r10, 0x101010101010101
0x7fffeafd2517:	imul		r10, rdi
0x7fffeafd251b:	movabs		r8, 0x8080808080808080
0x7fffeafd2525:	movabs		r9, 0xfefefefefefefeff
0x7fffeafd252f:	nop		
disassembling symbol '.LBB0_9':
textAddr: 0x7fffeafd2530, textSize: 45
0x7fffeafd2530:	mov		rdi, qword ptr [rax]
0x7fffeafd2533:	xor		rdi, r10
0x7fffeafd2536:	mov		rcx, rdi
0x7fffeafd2539:	not		rcx
0x7fffeafd253c:	and		rcx, r8
0x7fffeafd253f:	add		rdi, r9
0x7fffeafd2542:	test		rcx, rdi
0x7fffeafd2545:	jne		0x7fffeafd2570
0x7fffeafd254b:	add		rax, 8
0x7fffeafd254f:	add		rdx, -8
0x7fffeafd2553:	cmp		rdx, 7
0x7fffeafd2557:	ja		0x7fffeafd2530
disassembling symbol '.LBB0_11':
textAddr: 0x7fffeafd255d, textSize: 19
0x7fffeafd255d:	test		rdx, rdx
0x7fffeafd2560:	je		0x7fffeafd2587
0x7fffeafd2566:	nop		word ptr cs:[rax + rax]
disassembling symbol '.LBB0_12':
textAddr: 0x7fffeafd2570, textSize: 23
0x7fffeafd2570:	cmp		byte ptr [rax], sil
0x7fffeafd2573:	je		0x7fffeafd2589
0x7fffeafd2579:	add		rax, 1
0x7fffeafd257d:	add		rdx, -1
0x7fffeafd2581:	jne		0x7fffeafd2570
disassembling symbol '.LBB0_14':
textAddr: 0x7fffeafd2587, textSize: 2
0x7fffeafd2587:	xor		eax, eax
disassembling symbol '.LBB0_15':
textAddr: 0x7fffeafd2589, textSize: 7
0x7fffeafd2589:	ret		
0x7fffeafd258a:	add		byte ptr [rax], al
0x7fffeafd258c:	add		byte ptr [rax], al
0x7fffeafd258e:	add		byte ptr [rax], al
disassembling symbol 'memcpy':
textAddr: 0x7fffeafd2590, textSize: 1143
0x7fffeafd2590:	mov		rax, rdi
0x7fffeafd2593:	test		rdx, rdx
0x7fffeafd2596:	je		0x7fffeafd26be
0x7fffeafd259c:	mov		ecx, esi
0x7fffeafd259e:	and		ecx, 3
0x7fffeafd25a1:	mov		r10, rax
0x7fffeafd25a4:	test		rcx, rcx
0x7fffeafd25a7:	je		0x7fffeafd25da
0x7fffeafd25ad:	nop		dword ptr [rax]
0x7fffeafd25b0:	movzx		ecx, byte ptr [rsi]
0x7fffeafd25b3:	add		rsi, 1
0x7fffeafd25b7:	mov		byte ptr [r10], cl
0x7fffeafd25ba:	add		r10, 1
0x7fffeafd25be:	cmp		rdx, 1
0x7fffeafd25c2:	lea		rdx, [rdx - 1]
0x7fffeafd25c6:	je		0x7fffeafd25da
0x7fffeafd25cc:	mov		ecx, esi
0x7fffeafd25ce:	and		ecx, 3
0x7fffeafd25d1:	test		rcx, rcx
0x7fffeafd25d4:	jne		0x7fffeafd25b0
0x7fffeafd25da:	mov		rdi, r10
0x7fffeafd25dd:	and		rdi, 3
0x7fffeafd25e1:	je		0x7fffeafd26ce
0x7fffeafd25e7:	cmp		rdx, 0x20
0x7fffeafd25eb:	jb		0x7fffeafd268b
0x7fffeafd25f1:	cmp		rdi, 3
0x7fffeafd25f5:	je		0x7fffeafd27f9
0x7fffeafd25fb:	cmp		rdi, 2
0x7fffeafd25ff:	je		0x7fffeafd2879
0x7fffeafd2605:	cmp		rdi, 1
0x7fffeafd2609:	jne		0x7fffeafd268b
0x7fffeafd260f:	mov		edi, dword ptr [rsi]
0x7fffeafd2611:	mov		byte ptr [r10], dil
0x7fffeafd2614:	mov		cl, byte ptr [rsi + 1]
0x7fffeafd2617:	mov		byte ptr [r10 + 1], cl
0x7fffeafd261b:	mov		cl, byte ptr [rsi + 2]
0x7fffeafd261e:	mov		byte ptr [r10 + 2], cl
0x7fffeafd2622:	add		r10, 3
0x7fffeafd2626:	lea		r9, [rdx - 3]
0x7fffeafd262a:	lea		r8, [rdx - 0x14]
0x7fffeafd262e:	and		r8, 0xfffffffffffffff0
0x7fffeafd2632:	add		rsi, 0x10
0x7fffeafd2636:	nop		word ptr cs:[rax + rax]
0x7fffeafd2640:	mov		ecx, dword ptr [rsi - 0xc]
0x7fffeafd2643:	shrd		edi, ecx, 0x18
0x7fffeafd2647:	mov		dword ptr [r10], edi
0x7fffeafd264a:	mov		edi, dword ptr [rsi - 8]
0x7fffeafd264d:	shrd		ecx, edi, 0x18
0x7fffeafd2651:	mov		dword ptr [r10 + 4], ecx
0x7fffeafd2655:	mov		ecx, dword ptr [rsi - 4]
0x7fffeafd2658:	shrd		edi, ecx, 0x18
0x7fffeafd265c:	mov		dword ptr [r10 + 8], edi
0x7fffeafd2660:	mov		edi, dword ptr [rsi]
0x7fffeafd2662:	shrd		ecx, edi, 0x18
0x7fffeafd2666:	mov		dword ptr [r10 + 0xc], ecx
0x7fffeafd266a:	add		r10, 0x10
0x7fffeafd266e:	add		r9, -0x10
0x7fffeafd2672:	add		rsi, 0x10
0x7fffeafd2676:	cmp		r9, 0x10
0x7fffeafd267a:	ja		0x7fffeafd2640
0x7fffeafd2680:	sub		rdx, r8
0x7fffeafd2683:	add		rdx, -0x13
0x7fffeafd2687:	add		rsi, -0xd
0x7fffeafd268b:	test		dl, 0x10
0x7fffeafd268e:	jne		0x7fffeafd28f4
0x7fffeafd2694:	test		dl, 8
0x7fffeafd2697:	jne		0x7fffeafd2973
0x7fffeafd269d:	test		dl, 4
0x7fffeafd26a0:	jne		0x7fffeafd29ba
0x7fffeafd26a6:	test		dl, 2
0x7fffeafd26a9:	jne		0x7fffeafd29e5
0x7fffeafd26af:	test		dl, 1
0x7fffeafd26b2:	je		0x7fffeafd26bd
0x7fffeafd26b8:	mov		cl, byte ptr [rsi]
0x7fffeafd26ba:	mov		byte ptr [r10], cl
0x7fffeafd26bd:	ret		
0x7fffeafd26be:	mov		r10, rax
0x7fffeafd26c1:	mov		rdi, r10
0x7fffeafd26c4:	and		rdi, 3
0x7fffeafd26c8:	jne		0x7fffeafd25e7
0x7fffeafd26ce:	cmp		rdx, 0x10
0x7fffeafd26d2:	jb		0x7fffeafd2771
0x7fffeafd26d8:	lea		rdi, [rdx - 0x10]
0x7fffeafd26dc:	test		dil, 0x10
0x7fffeafd26e0:	jne		0x7fffeafd270c
0x7fffeafd26e6:	mov		ecx, dword ptr [rsi]
0x7fffeafd26e8:	mov		dword ptr [r10], ecx
0x7fffeafd26eb:	mov		ecx, dword ptr [rsi + 4]
0x7fffeafd26ee:	mov		dword ptr [r10 + 4], ecx
0x7fffeafd26f2:	mov		ecx, dword ptr [rsi + 8]
0x7fffeafd26f5:	mov		dword ptr [r10 + 8], ecx
0x7fffeafd26f9:	mov		ecx, dword ptr [rsi + 0xc]
0x7fffeafd26fc:	mov		dword ptr [r10 + 0xc], ecx
0x7fffeafd2700:	add		rsi, 0x10
0x7fffeafd2704:	add		r10, 0x10
0x7fffeafd2708:	add		rdx, -0x10
0x7fffeafd270c:	cmp		rdi, 0x10
0x7fffeafd2710:	jb		0x7fffeafd2774
0x7fffeafd2716:	nop		word ptr cs:[rax + rax]
0x7fffeafd2720:	mov		ecx, dword ptr [rsi]
0x7fffeafd2722:	mov		dword ptr [r10], ecx
0x7fffeafd2725:	mov		ecx, dword ptr [rsi + 4]
0x7fffeafd2728:	mov		dword ptr [r10 + 4], ecx
0x7fffeafd272c:	mov		ecx, dword ptr [rsi + 8]
0x7fffeafd272f:	mov		dword ptr [r10 + 8], ecx
0x7fffeafd2733:	mov		ecx, dword ptr [rsi + 0xc]
0x7fffeafd2736:	mov		dword ptr [r10 + 0xc], ecx
0x7fffeafd273a:	mov		ecx, dword ptr [rsi + 0x10]
0x7fffeafd273d:	mov		dword ptr [r10 + 0x10], ecx
0x7fffeafd2741:	mov		ecx, dword ptr [rsi + 0x14]
0x7fffeafd2744:	mov		dword ptr [r10 + 0x14], ecx
0x7fffeafd2748:	mov		ecx, dword ptr [rsi + 0x18]
0x7fffeafd274b:	mov		dword ptr [r10 + 0x18], ecx
0x7fffeafd274f:	mov		ecx, dword ptr [rsi + 0x1c]
0x7fffeafd2752:	mov		dword ptr [r10 + 0x1c], ecx
0x7fffeafd2756:	add		rsi, 0x20
0x7fffeafd275a:	add		r10, 0x20
0x7fffeafd275e:	add		rdx, -0x20
0x7fffeafd2762:	cmp		rdx, 0xf
0x7fffeafd2766:	ja		0x7fffeafd2720
0x7fffeafd276c:	jmp		0x7fffeafd2774
0x7fffeafd2771:	mov		rdi, rdx
0x7fffeafd2774:	test		dil, 8
0x7fffeafd2778:	jne		0x7fffeafd27a1
0x7fffeafd277e:	test		dil, 4
0x7fffeafd2782:	jne		0x7fffeafd27bf
0x7fffeafd2788:	test		dil, 2
0x7fffeafd278c:	jne		0x7fffeafd27d6
0x7fffeafd2792:	test		dil, 1
0x7fffeafd2796:	jne		0x7fffeafd26b8
0x7fffeafd279c:	jmp		0x7fffeafd26bd
0x7fffeafd27a1:	mov		ecx, dword ptr [rsi]
0x7fffeafd27a3:	mov		dword ptr [r10], ecx
0x7fffeafd27a6:	mov		ecx, dword ptr [rsi + 4]
0x7fffeafd27a9:	mov		dword ptr [r10 + 4], ecx
0x7fffeafd27ad:	add		r10, 8
0x7fffeafd27b1:	add		rsi, 8
0x7fffeafd27b5:	test		dil, 4
0x7fffeafd27b9:	je		0x7fffeafd2788
0x7fffeafd27bf:	mov		ecx, dword ptr [rsi]
0x7fffeafd27c1:	mov		dword ptr [r10], ecx
0x7fffeafd27c4:	add		r10, 4
0x7fffeafd27c8:	add		rsi, 4
0x7fffeafd27cc:	test		dil, 2
0x7fffeafd27d0:	je		0x7fffeafd2792
0x7fffeafd27d6:	mov		cl, byte ptr [rsi]
0x7fffeafd27d8:	mov		byte ptr [r10], cl
0x7fffeafd27db:	mov		cl, byte ptr [rsi + 1]
0x7fffeafd27de:	add		rsi, 2
0x7fffeafd27e2:	mov		byte ptr [r10 + 1], cl
0x7fffeafd27e6:	add		r10, 2
0x7fffeafd27ea:	test		dil, 1
0x7fffeafd27ee:	jne		0x7fffeafd26b8
0x7fffeafd27f4:	jmp		0x7fffeafd26bd
0x7fffeafd27f9:	mov		edi, dword ptr [rsi]
0x7fffeafd27fb:	mov		byte ptr [r10], dil
0x7fffeafd27fe:	add		r10, 1
0x7fffeafd2802:	lea		r9, [rdx - 1]
0x7fffeafd2806:	lea		r8, [rdx - 0x14]
0x7fffeafd280a:	and		r8, 0xfffffffffffffff0
0x7fffeafd280e:	add		rsi, 0x10
0x7fffeafd2812:	nop		word ptr cs:[rax + rax]
0x7fffeafd281c:	nop		dword ptr [rax]
0x7fffeafd2820:	mov		ecx, dword ptr [rsi - 0xc]
0x7fffeafd2823:	shrd		edi, ecx, 8
0x7fffeafd2827:	mov		dword ptr [r10], edi
0x7fffeafd282a:	mov		edi, dword ptr [rsi - 8]
0x7fffeafd282d:	shrd		ecx, edi, 8
0x7fffeafd2831:	mov		dword ptr [r10 + 4], ecx
0x7fffeafd2835:	mov		ecx, dword ptr [rsi - 4]
0x7fffeafd2838:	shrd		edi, ecx, 8
0x7fffeafd283c:	mov		dword ptr [r10 + 8], edi
0x7fffeafd2840:	mov		edi, dword ptr [rsi]
0x7fffeafd2842:	shrd		ecx, edi, 8
0x7fffeafd2846:	mov		dword ptr [r10 + 0xc], ecx
0x7fffeafd284a:	add		r10, 0x10
0x7fffeafd284e:	add		r9, -0x10
0x7fffeafd2852:	add		rsi, 0x10
0x7fffeafd2856:	cmp		r9, 0x12
0x7fffeafd285a:	ja		0x7fffeafd2820
0x7fffeafd2860:	sub		rdx, r8
0x7fffeafd2863:	add		rdx, -0x11
0x7fffeafd2867:	add		rsi, -0xf
0x7fffeafd286b:	test		dl, 0x10
0x7fffeafd286e:	je		0x7fffeafd2694
0x7fffeafd2874:	jmp		0x7fffeafd28f4
0x7fffeafd2879:	mov		edi, dword ptr [rsi]
0x7fffeafd287b:	mov		byte ptr [r10], dil
0x7fffeafd287e:	mov		cl, byte ptr [rsi + 1]
0x7fffeafd2881:	mov		byte ptr [r10 + 1], cl
0x7fffeafd2885:	add		r10, 2
0x7fffeafd2889:	lea		r9, [rdx - 2]
0x7fffeafd288d:	lea		r8, [rdx - 0x14]
0x7fffeafd2891:	and		r8, 0xfffffffffffffff0
0x7fffeafd2895:	add		rsi, 0x10
0x7fffeafd2899:	nop		dword ptr [rax]
0x7fffeafd28a0:	mov		ecx, dword ptr [rsi - 0xc]
0x7fffeafd28a3:	shrd		edi, ecx, 0x10
0x7fffeafd28a7:	mov		dword ptr [r10], edi
0x7fffeafd28aa:	mov		edi, dword ptr [rsi - 8]
0x7fffeafd28ad:	shrd		ecx, edi, 0x10
0x7fffeafd28b1:	mov		dword ptr [r10 + 4], ecx
0x7fffeafd28b5:	mov		ecx, dword ptr [rsi - 4]
0x7fffeafd28b8:	shrd		edi, ecx, 0x10
0x7fffeafd28bc:	mov		dword ptr [r10 + 8], edi
0x7fffeafd28c0:	mov		edi, dword ptr [rsi]
0x7fffeafd28c2:	shrd		ecx, edi, 0x10
0x7fffeafd28c6:	mov		dword ptr [r10 + 0xc], ecx
0x7fffeafd28ca:	add		r10, 0x10
0x7fffeafd28ce:	add		r9, -0x10
0x7fffeafd28d2:	add		rsi, 0x10
0x7fffeafd28d6:	cmp		r9, 0x11
0x7fffeafd28da:	ja		0x7fffeafd28a0
0x7fffeafd28e0:	sub		rdx, r8
0x7fffeafd28e3:	add		rdx, -0x12
0x7fffeafd28e7:	add		rsi, -0xe
0x7fffeafd28eb:	test		dl, 0x10
0x7fffeafd28ee:	je		0x7fffeafd2694
0x7fffeafd28f4:	mov		cl, byte ptr [rsi]
0x7fffeafd28f6:	mov		byte ptr [r10], cl
0x7fffeafd28f9:	mov		cl, byte ptr [rsi + 1]
0x7fffeafd28fc:	mov		byte ptr [r10 + 1], cl
0x7fffeafd2900:	mov		cl, byte ptr [rsi + 2]
0x7fffeafd2903:	mov		byte ptr [r10 + 2], cl
0x7fffeafd2907:	mov		cl, byte ptr [rsi + 3]
0x7fffeafd290a:	mov		byte ptr [r10 + 3], cl
0x7fffeafd290e:	mov		cl, byte ptr [rsi + 4]
0x7fffeafd2911:	mov		byte ptr [r10 + 4], cl
0x7fffeafd2915:	mov		cl, byte ptr [rsi + 5]
0x7fffeafd2918:	mov		byte ptr [r10 + 5], cl
0x7fffeafd291c:	mov		cl, byte ptr [rsi + 6]
0x7fffeafd291f:	mov		byte ptr [r10 + 6], cl
0x7fffeafd2923:	mov		cl, byte ptr [rsi + 7]
0x7fffeafd2926:	mov		byte ptr [r10 + 7], cl
0x7fffeafd292a:	mov		cl, byte ptr [rsi + 8]
0x7fffeafd292d:	mov		byte ptr [r10 + 8], cl
0x7fffeafd2931:	mov		cl, byte ptr [rsi + 9]
0x7fffeafd2934:	mov		byte ptr [r10 + 9], cl
0x7fffeafd2938:	mov		cl, byte ptr [rsi + 0xa]
0x7fffeafd293b:	mov		byte ptr [r10 + 0xa], cl
0x7fffeafd293f:	mov		cl, byte ptr [rsi + 0xb]
0x7fffeafd2942:	mov		byte ptr [r10 + 0xb], cl
0x7fffeafd2946:	mov		cl, byte ptr [rsi + 0xc]
0x7fffeafd2949:	mov		byte ptr [r10 + 0xc], cl
0x7fffeafd294d:	mov		cl, byte ptr [rsi + 0xd]
0x7fffeafd2950:	mov		byte ptr [r10 + 0xd], cl
0x7fffeafd2954:	mov		cl, byte ptr [rsi + 0xe]
0x7fffeafd2957:	mov		byte ptr [r10 + 0xe], cl
0x7fffeafd295b:	mov		cl, byte ptr [rsi + 0xf]
0x7fffeafd295e:	add		rsi, 0x10
0x7fffeafd2962:	mov		byte ptr [r10 + 0xf], cl
0x7fffeafd2966:	add		r10, 0x10
0x7fffeafd296a:	test		dl, 8
0x7fffeafd296d:	je		0x7fffeafd269d
0x7fffeafd2973:	mov		cl, byte ptr [rsi]
0x7fffeafd2975:	mov		byte ptr [r10], cl
0x7fffeafd2978:	mov		cl, byte ptr [rsi + 1]
0x7fffeafd297b:	mov		byte ptr [r10 + 1], cl
0x7fffeafd297f:	mov		cl, byte ptr [rsi + 2]
0x7fffeafd2982:	mov		byte ptr [r10 + 2], cl
0x7fffeafd2986:	mov		cl, byte ptr [rsi + 3]
0x7fffeafd2989:	mov		byte ptr [r10 + 3], cl
0x7fffeafd298d:	mov		cl, byte ptr [rsi + 4]
0x7fffeafd2990:	mov		byte ptr [r10 + 4], cl
0x7fffeafd2994:	mov		cl, byte ptr [rsi + 5]
0x7fffeafd2997:	mov		byte ptr [r10 + 5], cl
0x7fffeafd299b:	mov		cl, byte ptr [rsi + 6]
0x7fffeafd299e:	mov		byte ptr [r10 + 6], cl
0x7fffeafd29a2:	mov		cl, byte ptr [rsi + 7]
0x7fffeafd29a5:	add		rsi, 8
0x7fffeafd29a9:	mov		byte ptr [r10 + 7], cl
0x7fffeafd29ad:	add		r10, 8
0x7fffeafd29b1:	test		dl, 4
0x7fffeafd29b4:	je		0x7fffeafd26a6
0x7fffeafd29ba:	mov		cl, byte ptr [rsi]
0x7fffeafd29bc:	mov		byte ptr [r10], cl
0x7fffeafd29bf:	mov		cl, byte ptr [rsi + 1]
0x7fffeafd29c2:	mov		byte ptr [r10 + 1], cl
0x7fffeafd29c6:	mov		cl, byte ptr [rsi + 2]
0x7fffeafd29c9:	mov		byte ptr [r10 + 2], cl
0x7fffeafd29cd:	mov		cl, byte ptr [rsi + 3]
0x7fffeafd29d0:	add		rsi, 4
0x7fffeafd29d4:	mov		byte ptr [r10 + 3], cl
0x7fffeafd29d8:	add		r10, 4
0x7fffeafd29dc:	test		dl, 2
0x7fffeafd29df:	je		0x7fffeafd26af
0x7fffeafd29e5:	mov		cl, byte ptr [rsi]
0x7fffeafd29e7:	mov		byte ptr [r10], cl
0x7fffeafd29ea:	mov		cl, byte ptr [rsi + 1]
0x7fffeafd29ed:	add		rsi, 2
0x7fffeafd29f1:	mov		byte ptr [r10 + 1], cl
0x7fffeafd29f5:	add		r10, 2
0x7fffeafd29f9:	test		dl, 1
0x7fffeafd29fc:	jne		0x7fffeafd26b8
0x7fffeafd2a02:	jmp		0x7fffeafd26bd
disassembling symbol '.LBB0_7':
textAddr: 0x7fffeafd25b0, textSize: 42
0x7fffeafd25b0:	movzx		ecx, byte ptr [rsi]
0x7fffeafd25b3:	add		rsi, 1
0x7fffeafd25b7:	mov		byte ptr [r10], cl
0x7fffeafd25ba:	add		r10, 1
0x7fffeafd25be:	cmp		rdx, 1
0x7fffeafd25c2:	lea		rdx, [rdx - 1]
0x7fffeafd25c6:	je		0x7fffeafd25da
0x7fffeafd25cc:	mov		ecx, esi
0x7fffeafd25ce:	and		ecx, 3
0x7fffeafd25d1:	test		rcx, rcx
0x7fffeafd25d4:	jne		0x7fffeafd25b0
disassembling symbol '.LBB0_2':
textAddr: 0x7fffeafd25da, textSize: 13
0x7fffeafd25da:	mov		rdi, r10
0x7fffeafd25dd:	and		rdi, 3
0x7fffeafd25e1:	je		0x7fffeafd26ce
disassembling symbol '.LBB0_20':
textAddr: 0x7fffeafd25e7, textSize: 89
0x7fffeafd25e7:	cmp		rdx, 0x20
0x7fffeafd25eb:	jb		0x7fffeafd268b
0x7fffeafd25f1:	cmp		rdi, 3
0x7fffeafd25f5:	je		0x7fffeafd27f9
0x7fffeafd25fb:	cmp		rdi, 2
0x7fffeafd25ff:	je		0x7fffeafd2879
0x7fffeafd2605:	cmp		rdi, 1
0x7fffeafd2609:	jne		0x7fffeafd268b
0x7fffeafd260f:	mov		edi, dword ptr [rsi]
0x7fffeafd2611:	mov		byte ptr [r10], dil
0x7fffeafd2614:	mov		cl, byte ptr [rsi + 1]
0x7fffeafd2617:	mov		byte ptr [r10 + 1], cl
0x7fffeafd261b:	mov		cl, byte ptr [rsi + 2]
0x7fffeafd261e:	mov		byte ptr [r10 + 2], cl
0x7fffeafd2622:	add		r10, 3
0x7fffeafd2626:	lea		r9, [rdx - 3]
0x7fffeafd262a:	lea		r8, [rdx - 0x14]
0x7fffeafd262e:	and		r8, 0xfffffffffffffff0
0x7fffeafd2632:	add		rsi, 0x10
0x7fffeafd2636:	nop		word ptr cs:[rax + rax]
disassembling symbol '.LBB0_25':
textAddr: 0x7fffeafd2640, textSize: 75
0x7fffeafd2640:	mov		ecx, dword ptr [rsi - 0xc]
0x7fffeafd2643:	shrd		edi, ecx, 0x18
0x7fffeafd2647:	mov		dword ptr [r10], edi
0x7fffeafd264a:	mov		edi, dword ptr [rsi - 8]
0x7fffeafd264d:	shrd		ecx, edi, 0x18
0x7fffeafd2651:	mov		dword ptr [r10 + 4], ecx
0x7fffeafd2655:	mov		ecx, dword ptr [rsi - 4]
0x7fffeafd2658:	shrd		edi, ecx, 0x18
0x7fffeafd265c:	mov		dword ptr [r10 + 8], edi
0x7fffeafd2660:	mov		edi, dword ptr [rsi]
0x7fffeafd2662:	shrd		ecx, edi, 0x18
0x7fffeafd2666:	mov		dword ptr [r10 + 0xc], ecx
0x7fffeafd266a:	add		r10, 0x10
0x7fffeafd266e:	add		r9, -0x10
0x7fffeafd2672:	add		rsi, 0x10
0x7fffeafd2676:	cmp		r9, 0x10
0x7fffeafd267a:	ja		0x7fffeafd2640
0x7fffeafd2680:	sub		rdx, r8
0x7fffeafd2683:	add		rdx, -0x13
0x7fffeafd2687:	add		rsi, -0xd
disassembling symbol '.LBB0_33':
textAddr: 0x7fffeafd268b, textSize: 9
0x7fffeafd268b:	test		dl, 0x10
0x7fffeafd268e:	jne		0x7fffeafd28f4
disassembling symbol '.LBB0_35':
textAddr: 0x7fffeafd2694, textSize: 9
0x7fffeafd2694:	test		dl, 8
0x7fffeafd2697:	jne		0x7fffeafd2973
disassembling symbol '.LBB0_37':
textAddr: 0x7fffeafd269d, textSize: 9
0x7fffeafd269d:	test		dl, 4
0x7fffeafd26a0:	jne		0x7fffeafd29ba
disassembling symbol '.LBB0_39':
textAddr: 0x7fffeafd26a6, textSize: 9
0x7fffeafd26a6:	test		dl, 2
0x7fffeafd26a9:	jne		0x7fffeafd29e5
disassembling symbol '.LBB0_41':
textAddr: 0x7fffeafd26af, textSize: 9
0x7fffeafd26af:	test		dl, 1
0x7fffeafd26b2:	je		0x7fffeafd26bd
disassembling symbol '.LBB0_42':
textAddr: 0x7fffeafd26b8, textSize: 5
0x7fffeafd26b8:	mov		cl, byte ptr [rsi]
0x7fffeafd26ba:	mov		byte ptr [r10], cl
disassembling symbol '.LBB0_43':
textAddr: 0x7fffeafd26bd, textSize: 1
0x7fffeafd26bd:	ret		
disassembling symbol '.LBB0_1':
textAddr: 0x7fffeafd26be, textSize: 16
0x7fffeafd26be:	mov		r10, rax
0x7fffeafd26c1:	mov		rdi, r10
0x7fffeafd26c4:	and		rdi, 3
0x7fffeafd26c8:	jne		0x7fffeafd25e7
disassembling symbol '.LBB0_3':
textAddr: 0x7fffeafd26ce, textSize: 62
0x7fffeafd26ce:	cmp		rdx, 0x10
0x7fffeafd26d2:	jb		0x7fffeafd2771
0x7fffeafd26d8:	lea		rdi, [rdx - 0x10]
0x7fffeafd26dc:	test		dil, 0x10
0x7fffeafd26e0:	jne		0x7fffeafd270c
0x7fffeafd26e6:	mov		ecx, dword ptr [rsi]
0x7fffeafd26e8:	mov		dword ptr [r10], ecx
0x7fffeafd26eb:	mov		ecx, dword ptr [rsi + 4]
0x7fffeafd26ee:	mov		dword ptr [r10 + 4], ecx
0x7fffeafd26f2:	mov		ecx, dword ptr [rsi + 8]
0x7fffeafd26f5:	mov		dword ptr [r10 + 8], ecx
0x7fffeafd26f9:	mov		ecx, dword ptr [rsi + 0xc]
0x7fffeafd26fc:	mov		dword ptr [r10 + 0xc], ecx
0x7fffeafd2700:	add		rsi, 0x10
0x7fffeafd2704:	add		r10, 0x10
0x7fffeafd2708:	add		rdx, -0x10
disassembling symbol '.LBB0_11':
textAddr: 0x7fffeafd270c, textSize: 20
0x7fffeafd270c:	cmp		rdi, 0x10
0x7fffeafd2710:	jb		0x7fffeafd2774
0x7fffeafd2716:	nop		word ptr cs:[rax + rax]
disassembling symbol '.LBB0_12':
textAddr: 0x7fffeafd2720, textSize: 81
0x7fffeafd2720:	mov		ecx, dword ptr [rsi]
0x7fffeafd2722:	mov		dword ptr [r10], ecx
0x7fffeafd2725:	mov		ecx, dword ptr [rsi + 4]
0x7fffeafd2728:	mov		dword ptr [r10 + 4], ecx
0x7fffeafd272c:	mov		ecx, dword ptr [rsi + 8]
0x7fffeafd272f:	mov		dword ptr [r10 + 8], ecx
0x7fffeafd2733:	mov		ecx, dword ptr [rsi + 0xc]
0x7fffeafd2736:	mov		dword ptr [r10 + 0xc], ecx
0x7fffeafd273a:	mov		ecx, dword ptr [rsi + 0x10]
0x7fffeafd273d:	mov		dword ptr [r10 + 0x10], ecx
0x7fffeafd2741:	mov		ecx, dword ptr [rsi + 0x14]
0x7fffeafd2744:	mov		dword ptr [r10 + 0x14], ecx
0x7fffeafd2748:	mov		ecx, dword ptr [rsi + 0x18]
0x7fffeafd274b:	mov		dword ptr [r10 + 0x18], ecx
0x7fffeafd274f:	mov		ecx, dword ptr [rsi + 0x1c]
0x7fffeafd2752:	mov		dword ptr [r10 + 0x1c], ecx
0x7fffeafd2756:	add		rsi, 0x20
0x7fffeafd275a:	add		r10, 0x20
0x7fffeafd275e:	add		rdx, -0x20
0x7fffeafd2762:	cmp		rdx, 0xf
0x7fffeafd2766:	ja		0x7fffeafd2720
0x7fffeafd276c:	jmp		0x7fffeafd2774
disassembling symbol '.LBB0_4':
textAddr: 0x7fffeafd2771, textSize: 3
0x7fffeafd2771:	mov		rdi, rdx
disassembling symbol '.LBB0_13':
textAddr: 0x7fffeafd2774, textSize: 20
0x7fffeafd2774:	test		dil, 8
0x7fffeafd2778:	jne		0x7fffeafd27a1
0x7fffeafd277e:	test		dil, 4
0x7fffeafd2782:	jne		0x7fffeafd27bf
disassembling symbol '.LBB0_17':
textAddr: 0x7fffeafd2788, textSize: 10
0x7fffeafd2788:	test		dil, 2
0x7fffeafd278c:	jne		0x7fffeafd27d6
disassembling symbol '.LBB0_19':
textAddr: 0x7fffeafd2792, textSize: 15
0x7fffeafd2792:	test		dil, 1
0x7fffeafd2796:	jne		0x7fffeafd26b8
0x7fffeafd279c:	jmp		0x7fffeafd26bd
disassembling symbol '.LBB0_14':
textAddr: 0x7fffeafd27a1, textSize: 30
0x7fffeafd27a1:	mov		ecx, dword ptr [rsi]
0x7fffeafd27a3:	mov		dword ptr [r10], ecx
0x7fffeafd27a6:	mov		ecx, dword ptr [rsi + 4]
0x7fffeafd27a9:	mov		dword ptr [r10 + 4], ecx
0x7fffeafd27ad:	add		r10, 8
0x7fffeafd27b1:	add		rsi, 8
0x7fffeafd27b5:	test		dil, 4
0x7fffeafd27b9:	je		0x7fffeafd2788
disassembling symbol '.LBB0_16':
textAddr: 0x7fffeafd27bf, textSize: 23
0x7fffeafd27bf:	mov		ecx, dword ptr [rsi]
0x7fffeafd27c1:	mov		dword ptr [r10], ecx
0x7fffeafd27c4:	add		r10, 4
0x7fffeafd27c8:	add		rsi, 4
0x7fffeafd27cc:	test		dil, 2
0x7fffeafd27d0:	je		0x7fffeafd2792
disassembling symbol '.LBB0_18':
textAddr: 0x7fffeafd27d6, textSize: 35
0x7fffeafd27d6:	mov		cl, byte ptr [rsi]
0x7fffeafd27d8:	mov		byte ptr [r10], cl
0x7fffeafd27db:	mov		cl, byte ptr [rsi + 1]
0x7fffeafd27de:	add		rsi, 2
0x7fffeafd27e2:	mov		byte ptr [r10 + 1], cl
0x7fffeafd27e6:	add		r10, 2
0x7fffeafd27ea:	test		dil, 1
0x7fffeafd27ee:	jne		0x7fffeafd26b8
0x7fffeafd27f4:	jmp		0x7fffeafd26bd
disassembling symbol '.LBB0_30':
textAddr: 0x7fffeafd27f9, textSize: 39
0x7fffeafd27f9:	mov		edi, dword ptr [rsi]
0x7fffeafd27fb:	mov		byte ptr [r10], dil
0x7fffeafd27fe:	add		r10, 1
0x7fffeafd2802:	lea		r9, [rdx - 1]
0x7fffeafd2806:	lea		r8, [rdx - 0x14]
0x7fffeafd280a:	and		r8, 0xfffffffffffffff0
0x7fffeafd280e:	add		rsi, 0x10
0x7fffeafd2812:	nop		word ptr cs:[rax + rax]
0x7fffeafd281c:	nop		dword ptr [rax]
disassembling symbol '.LBB0_31':
textAddr: 0x7fffeafd2820, textSize: 89
0x7fffeafd2820:	mov		ecx, dword ptr [rsi - 0xc]
0x7fffeafd2823:	shrd		edi, ecx, 8
0x7fffeafd2827:	mov		dword ptr [r10], edi
0x7fffeafd282a:	mov		edi, dword ptr [rsi - 8]
0x7fffeafd282d:	shrd		ecx, edi, 8
0x7fffeafd2831:	mov		dword ptr [r10 + 4], ecx
0x7fffeafd2835:	mov		ecx, dword ptr [rsi - 4]
0x7fffeafd2838:	shrd		edi, ecx, 8
0x7fffeafd283c:	mov		dword ptr [r10 + 8], edi
0x7fffeafd2840:	mov		edi, dword ptr [rsi]
0x7fffeafd2842:	shrd		ecx, edi, 8
0x7fffeafd2846:	mov		dword ptr [r10 + 0xc], ecx
0x7fffeafd284a:	add		r10, 0x10
0x7fffeafd284e:	add		r9, -0x10
0x7fffeafd2852:	add		rsi, 0x10
0x7fffeafd2856:	cmp		r9, 0x12
0x7fffeafd285a:	ja		0x7fffeafd2820
0x7fffeafd2860:	sub		rdx, r8
0x7fffeafd2863:	add		rdx, -0x11
0x7fffeafd2867:	add		rsi, -0xf
0x7fffeafd286b:	test		dl, 0x10
0x7fffeafd286e:	je		0x7fffeafd2694
0x7fffeafd2874:	jmp		0x7fffeafd28f4
disassembling symbol '.LBB0_27':
textAddr: 0x7fffeafd2879, textSize: 39
0x7fffeafd2879:	mov		edi, dword ptr [rsi]
0x7fffeafd287b:	mov		byte ptr [r10], dil
0x7fffeafd287e:	mov		cl, byte ptr [rsi + 1]
0x7fffeafd2881:	mov		byte ptr [r10 + 1], cl
0x7fffeafd2885:	add		r10, 2
0x7fffeafd2889:	lea		r9, [rdx - 2]
0x7fffeafd288d:	lea		r8, [rdx - 0x14]
0x7fffeafd2891:	and		r8, 0xfffffffffffffff0
0x7fffeafd2895:	add		rsi, 0x10
0x7fffeafd2899:	nop		dword ptr [rax]
disassembling symbol '.LBB0_28':
textAddr: 0x7fffeafd28a0, textSize: 84
0x7fffeafd28a0:	mov		ecx, dword ptr [rsi - 0xc]
0x7fffeafd28a3:	shrd		edi, ecx, 0x10
0x7fffeafd28a7:	mov		dword ptr [r10], edi
0x7fffeafd28aa:	mov		edi, dword ptr [rsi - 8]
0x7fffeafd28ad:	shrd		ecx, edi, 0x10
0x7fffeafd28b1:	mov		dword ptr [r10 + 4], ecx
0x7fffeafd28b5:	mov		ecx, dword ptr [rsi - 4]
0x7fffeafd28b8:	shrd		edi, ecx, 0x10
0x7fffeafd28bc:	mov		dword ptr [r10 + 8], edi
0x7fffeafd28c0:	mov		edi, dword ptr [rsi]
0x7fffeafd28c2:	shrd		ecx, edi, 0x10
0x7fffeafd28c6:	mov		dword ptr [r10 + 0xc], ecx
0x7fffeafd28ca:	add		r10, 0x10
0x7fffeafd28ce:	add		r9, -0x10
0x7fffeafd28d2:	add		rsi, 0x10
0x7fffeafd28d6:	cmp		r9, 0x11
0x7fffeafd28da:	ja		0x7fffeafd28a0
0x7fffeafd28e0:	sub		rdx, r8
0x7fffeafd28e3:	add		rdx, -0x12
0x7fffeafd28e7:	add		rsi, -0xe
0x7fffeafd28eb:	test		dl, 0x10
0x7fffeafd28ee:	je		0x7fffeafd2694
disassembling symbol '.LBB0_34':
textAddr: 0x7fffeafd28f4, textSize: 127
0x7fffeafd28f4:	mov		cl, byte ptr [rsi]
0x7fffeafd28f6:	mov		byte ptr [r10], cl
0x7fffeafd28f9:	mov		cl, byte ptr [rsi + 1]
0x7fffeafd28fc:	mov		byte ptr [r10 + 1], cl
0x7fffeafd2900:	mov		cl, byte ptr [rsi + 2]
0x7fffeafd2903:	mov		byte ptr [r10 + 2], cl
0x7fffeafd2907:	mov		cl, byte ptr [rsi + 3]
0x7fffeafd290a:	mov		byte ptr [r10 + 3], cl
0x7fffeafd290e:	mov		cl, byte ptr [rsi + 4]
0x7fffeafd2911:	mov		byte ptr [r10 + 4], cl
0x7fffeafd2915:	mov		cl, byte ptr [rsi + 5]
0x7fffeafd2918:	mov		byte ptr [r10 + 5], cl
0x7fffeafd291c:	mov		cl, byte ptr [rsi + 6]
0x7fffeafd291f:	mov		byte ptr [r10 + 6], cl
0x7fffeafd2923:	mov		cl, byte ptr [rsi + 7]
0x7fffeafd2926:	mov		byte ptr [r10 + 7], cl
0x7fffeafd292a:	mov		cl, byte ptr [rsi + 8]
0x7fffeafd292d:	mov		byte ptr [r10 + 8], cl
0x7fffeafd2931:	mov		cl, byte ptr [rsi + 9]
0x7fffeafd2934:	mov		byte ptr [r10 + 9], cl
0x7fffeafd2938:	mov		cl, byte ptr [rsi + 0xa]
0x7fffeafd293b:	mov		byte ptr [r10 + 0xa], cl
0x7fffeafd293f:	mov		cl, byte ptr [rsi + 0xb]
0x7fffeafd2942:	mov		byte ptr [r10 + 0xb], cl
0x7fffeafd2946:	mov		cl, byte ptr [rsi + 0xc]
0x7fffeafd2949:	mov		byte ptr [r10 + 0xc], cl
0x7fffeafd294d:	mov		cl, byte ptr [rsi + 0xd]
0x7fffeafd2950:	mov		byte ptr [r10 + 0xd], cl
0x7fffeafd2954:	mov		cl, byte ptr [rsi + 0xe]
0x7fffeafd2957:	mov		byte ptr [r10 + 0xe], cl
0x7fffeafd295b:	mov		cl, byte ptr [rsi + 0xf]
0x7fffeafd295e:	add		rsi, 0x10
0x7fffeafd2962:	mov		byte ptr [r10 + 0xf], cl
0x7fffeafd2966:	add		r10, 0x10
0x7fffeafd296a:	test		dl, 8
0x7fffeafd296d:	je		0x7fffeafd269d
disassembling symbol '.LBB0_36':
textAddr: 0x7fffeafd2973, textSize: 71
0x7fffeafd2973:	mov		cl, byte ptr [rsi]
0x7fffeafd2975:	mov		byte ptr [r10], cl
0x7fffeafd2978:	mov		cl, byte ptr [rsi + 1]
0x7fffeafd297b:	mov		byte ptr [r10 + 1], cl
0x7fffeafd297f:	mov		cl, byte ptr [rsi + 2]
0x7fffeafd2982:	mov		byte ptr [r10 + 2], cl
0x7fffeafd2986:	mov		cl, byte ptr [rsi + 3]
0x7fffeafd2989:	mov		byte ptr [r10 + 3], cl
0x7fffeafd298d:	mov		cl, byte ptr [rsi + 4]
0x7fffeafd2990:	mov		byte ptr [r10 + 4], cl
0x7fffeafd2994:	mov		cl, byte ptr [rsi + 5]
0x7fffeafd2997:	mov		byte ptr [r10 + 5], cl
0x7fffeafd299b:	mov		cl, byte ptr [rsi + 6]
0x7fffeafd299e:	mov		byte ptr [r10 + 6], cl
0x7fffeafd29a2:	mov		cl, byte ptr [rsi + 7]
0x7fffeafd29a5:	add		rsi, 8
0x7fffeafd29a9:	mov		byte ptr [r10 + 7], cl
0x7fffeafd29ad:	add		r10, 8
0x7fffeafd29b1:	test		dl, 4
0x7fffeafd29b4:	je		0x7fffeafd26a6
disassembling symbol '.LBB0_38':
textAddr: 0x7fffeafd29ba, textSize: 43
0x7fffeafd29ba:	mov		cl, byte ptr [rsi]
0x7fffeafd29bc:	mov		byte ptr [r10], cl
0x7fffeafd29bf:	mov		cl, byte ptr [rsi + 1]
0x7fffeafd29c2:	mov		byte ptr [r10 + 1], cl
0x7fffeafd29c6:	mov		cl, byte ptr [rsi + 2]
0x7fffeafd29c9:	mov		byte ptr [r10 + 2], cl
0x7fffeafd29cd:	mov		cl, byte ptr [rsi + 3]
0x7fffeafd29d0:	add		rsi, 4
0x7fffeafd29d4:	mov		byte ptr [r10 + 3], cl
0x7fffeafd29d8:	add		r10, 4
0x7fffeafd29dc:	test		dl, 2
0x7fffeafd29df:	je		0x7fffeafd26af
disassembling symbol '.LBB0_40':
textAddr: 0x7fffeafd29e5, textSize: 43
0x7fffeafd29e5:	mov		cl, byte ptr [rsi]
0x7fffeafd29e7:	mov		byte ptr [r10], cl
0x7fffeafd29ea:	mov		cl, byte ptr [rsi + 1]
0x7fffeafd29ed:	add		rsi, 2
0x7fffeafd29f1:	mov		byte ptr [r10 + 1], cl
0x7fffeafd29f5:	add		r10, 2
0x7fffeafd29f9:	test		dl, 1
0x7fffeafd29fc:	jne		0x7fffeafd26b8
0x7fffeafd2a02:	jmp		0x7fffeafd26bd
0x7fffeafd2a07:	add		byte ptr [rax], al
0x7fffeafd2a09:	add		byte ptr [rax], al
0x7fffeafd2a0b:	add		byte ptr [rax], al
0x7fffeafd2a0d:	add		byte ptr [rax], al
disassembling symbol 'memset':
textAddr: 0x7fffeafd2a10, textSize: 373
0x7fffeafd2a10:	mov		rax, rdi
0x7fffeafd2a13:	test		rdx, rdx
0x7fffeafd2a16:	je		0x7fffeafd2b84
0x7fffeafd2a1c:	mov		byte ptr [rdx + rax - 1], sil
0x7fffeafd2a21:	mov		byte ptr [rax], sil
0x7fffeafd2a24:	cmp		rdx, 3
0x7fffeafd2a28:	jb		0x7fffeafd2b84
0x7fffeafd2a2e:	mov		byte ptr [rdx + rax - 2], sil
0x7fffeafd2a33:	mov		byte ptr [rax + 1], sil
0x7fffeafd2a37:	mov		byte ptr [rdx + rax - 3], sil
0x7fffeafd2a3c:	mov		byte ptr [rax + 2], sil
0x7fffeafd2a40:	cmp		rdx, 7
0x7fffeafd2a44:	jb		0x7fffeafd2b84
0x7fffeafd2a4a:	mov		byte ptr [rdx + rax - 4], sil
0x7fffeafd2a4f:	mov		byte ptr [rax + 3], sil
0x7fffeafd2a53:	cmp		rdx, 9
0x7fffeafd2a57:	jb		0x7fffeafd2b84
0x7fffeafd2a5d:	mov		edi, eax
0x7fffeafd2a5f:	neg		edi
0x7fffeafd2a61:	and		edi, 3
0x7fffeafd2a64:	lea		rcx, [rax + rdi]
0x7fffeafd2a68:	sub		rdx, rdi
0x7fffeafd2a6b:	and		rdx, 0xfffffffffffffffc
0x7fffeafd2a6f:	movzx		esi, sil
0x7fffeafd2a73:	imul		esi, esi, 0x1010101
0x7fffeafd2a79:	mov		dword ptr [rax + rdi], esi
0x7fffeafd2a7c:	mov		dword ptr [rdx + rcx - 4], esi
0x7fffeafd2a80:	cmp		rdx, 9
0x7fffeafd2a84:	jb		0x7fffeafd2b84
0x7fffeafd2a8a:	mov		dword ptr [rcx + 4], esi
0x7fffeafd2a8d:	mov		dword ptr [rcx + 8], esi
0x7fffeafd2a90:	mov		dword ptr [rcx + rdx - 0xc], esi
0x7fffeafd2a94:	mov		dword ptr [rcx + rdx - 8], esi
0x7fffeafd2a98:	cmp		rdx, 0x19
0x7fffeafd2a9c:	jb		0x7fffeafd2b84
0x7fffeafd2aa2:	movd		xmm0, esi
0x7fffeafd2aa6:	pshufd		xmm0, xmm0, 0
0x7fffeafd2aab:	movdqu		xmmword ptr [rcx + 0xc], xmm0
0x7fffeafd2ab0:	movdqu		xmmword ptr [rcx + rdx - 0x1c], xmm0
0x7fffeafd2ab6:	mov		r10d, ecx
0x7fffeafd2ab9:	and		r10d, 4
0x7fffeafd2abd:	or		r10, 0x18
0x7fffeafd2ac1:	mov		r8, rdx
0x7fffeafd2ac4:	sub		r8, r10
0x7fffeafd2ac7:	cmp		r8, 0x20
0x7fffeafd2acb:	jb		0x7fffeafd2b84
0x7fffeafd2ad1:	mov		edi, esi
0x7fffeafd2ad3:	mov		rsi, rdi
0x7fffeafd2ad6:	shl		rsi, 0x20
0x7fffeafd2ada:	or		rsi, rdi
0x7fffeafd2add:	add		rcx, r10
0x7fffeafd2ae0:	mov		r9, rdx
0x7fffeafd2ae3:	sub		r9, r10
0x7fffeafd2ae6:	add		r9, -0x20
0x7fffeafd2aea:	mov		edi, r9d
0x7fffeafd2aed:	shr		edi, 5
0x7fffeafd2af0:	add		edi, 1
0x7fffeafd2af3:	and		rdi, 3
0x7fffeafd2af7:	je		0x7fffeafd2b29
0x7fffeafd2afd:	sub		r10, rdx
0x7fffeafd2b00:	neg		rdi
0x7fffeafd2b03:	mov		qword ptr [rcx], rsi
0x7fffeafd2b06:	mov		qword ptr [rcx + 8], rsi
0x7fffeafd2b0a:	mov		qword ptr [rcx + 0x10], rsi
0x7fffeafd2b0e:	mov		qword ptr [rcx + 0x18], rsi
0x7fffeafd2b12:	add		rcx, 0x20
0x7fffeafd2b16:	add		r10, 0x20
0x7fffeafd2b1a:	inc		rdi
0x7fffeafd2b1d:	jne		0x7fffeafd2b03
0x7fffeafd2b23:	neg		r10
0x7fffeafd2b26:	mov		r8, r10
0x7fffeafd2b29:	cmp		r9, 0x60
0x7fffeafd2b2d:	jb		0x7fffeafd2b84
0x7fffeafd2b33:	mov		qword ptr [rcx], rsi
0x7fffeafd2b36:	mov		qword ptr [rcx + 8], rsi
0x7fffeafd2b3a:	mov		qword ptr [rcx + 0x10], rsi
0x7fffeafd2b3e:	mov		qword ptr [rcx + 0x18], rsi
0x7fffeafd2b42:	mov		qword ptr [rcx + 0x20], rsi
0x7fffeafd2b46:	mov		qword ptr [rcx + 0x28], rsi
0x7fffeafd2b4a:	mov		qword ptr [rcx + 0x30], rsi
0x7fffeafd2b4e:	mov		qword ptr [rcx + 0x38], rsi
0x7fffeafd2b52:	mov		qword ptr [rcx + 0x40], rsi
0x7fffeafd2b56:	mov		qword ptr [rcx + 0x48], rsi
0x7fffeafd2b5a:	mov		qword ptr [rcx + 0x50], rsi
0x7fffeafd2b5e:	mov		qword ptr [rcx + 0x58], rsi
0x7fffeafd2b62:	mov		qword ptr [rcx + 0x60], rsi
0x7fffeafd2b66:	mov		qword ptr [rcx + 0x68], rsi
0x7fffeafd2b6a:	mov		qword ptr [rcx + 0x70], rsi
0x7fffeafd2b6e:	mov		qword ptr [rcx + 0x78], rsi
0x7fffeafd2b72:	add		r8, -0x80
0x7fffeafd2b76:	sub		rcx, -0x80
0x7fffeafd2b7a:	cmp		r8, 0x1f
0x7fffeafd2b7e:	ja		0x7fffeafd2b33
0x7fffeafd2b84:	ret		
disassembling symbol '.LBB0_9':
textAddr: 0x7fffeafd2b03, textSize: 38
0x7fffeafd2b03:	mov		qword ptr [rcx], rsi
0x7fffeafd2b06:	mov		qword ptr [rcx + 8], rsi
0x7fffeafd2b0a:	mov		qword ptr [rcx + 0x10], rsi
0x7fffeafd2b0e:	mov		qword ptr [rcx + 0x18], rsi
0x7fffeafd2b12:	add		rcx, 0x20
0x7fffeafd2b16:	add		r10, 0x20
0x7fffeafd2b1a:	inc		rdi
0x7fffeafd2b1d:	jne		0x7fffeafd2b03
0x7fffeafd2b23:	neg		r10
0x7fffeafd2b26:	mov		r8, r10
disassembling symbol '.LBB0_11':
textAddr: 0x7fffeafd2b29, textSize: 10
0x7fffeafd2b29:	cmp		r9, 0x60
0x7fffeafd2b2d:	jb		0x7fffeafd2b84
disassembling symbol '.LBB0_12':
textAddr: 0x7fffeafd2b33, textSize: 81
0x7fffeafd2b33:	mov		qword ptr [rcx], rsi
0x7fffeafd2b36:	mov		qword ptr [rcx + 8], rsi
0x7fffeafd2b3a:	mov		qword ptr [rcx + 0x10], rsi
0x7fffeafd2b3e:	mov		qword ptr [rcx + 0x18], rsi
0x7fffeafd2b42:	mov		qword ptr [rcx + 0x20], rsi
0x7fffeafd2b46:	mov		qword ptr [rcx + 0x28], rsi
0x7fffeafd2b4a:	mov		qword ptr [rcx + 0x30], rsi
0x7fffeafd2b4e:	mov		qword ptr [rcx + 0x38], rsi
0x7fffeafd2b52:	mov		qword ptr [rcx + 0x40], rsi
0x7fffeafd2b56:	mov		qword ptr [rcx + 0x48], rsi
0x7fffeafd2b5a:	mov		qword ptr [rcx + 0x50], rsi
0x7fffeafd2b5e:	mov		qword ptr [rcx + 0x58], rsi
0x7fffeafd2b62:	mov		qword ptr [rcx + 0x60], rsi
0x7fffeafd2b66:	mov		qword ptr [rcx + 0x68], rsi
0x7fffeafd2b6a:	mov		qword ptr [rcx + 0x70], rsi
0x7fffeafd2b6e:	mov		qword ptr [rcx + 0x78], rsi
0x7fffeafd2b72:	add		r8, -0x80
0x7fffeafd2b76:	sub		rcx, -0x80
0x7fffeafd2b7a:	cmp		r8, 0x1f
0x7fffeafd2b7e:	ja		0x7fffeafd2b33
disassembling symbol '.LBB0_13':
textAddr: 0x7fffeafd2b84, textSize: 12
0x7fffeafd2b84:	ret		
0x7fffeafd2b85:	add		byte ptr [rax], al
0x7fffeafd2b87:	add		byte ptr [rax], al
0x7fffeafd2b89:	add		byte ptr [rax], al
0x7fffeafd2b8b:	add		byte ptr [rax], al
0x7fffeafd2b8d:	add		byte ptr [rax], al
disassembling symbol '__vm_lock':
textAddr: 0x7fffeafd2b90, textSize: 16
0x7fffeafd2b90:	mov		dword ptr [rsp - 4], edi
0x7fffeafd2b94:	ret		
0x7fffeafd2b95:	nop		word ptr cs:[rax + rax]
0x7fffeafd2b9f:	nop		
disassembling symbol '__vm_unlock':
textAddr: 0x7fffeafd2ba0, textSize: 16
0x7fffeafd2ba0:	ret		
0x7fffeafd2ba1:	nop		word ptr cs:[rax + rax]
0x7fffeafd2bab:	nop		dword ptr [rax + rax]
disassembling symbol 'mmap64':
textAddr: 0x7fffeafd2bb0, textSize: 272
0x7fffeafd2bb0:	sub		rsp, 0x48
0x7fffeafd2bb4:	mov		qword ptr [rsp + 0x38], rdi
0x7fffeafd2bb9:	mov		qword ptr [rsp + 0x30], rsi
0x7fffeafd2bbe:	mov		dword ptr [rsp + 0x2c], edx
0x7fffeafd2bc2:	mov		dword ptr [rsp + 0x28], ecx
0x7fffeafd2bc6:	mov		dword ptr [rsp + 0x24], r8d
0x7fffeafd2bcb:	mov		qword ptr [rsp + 0x18], r9
0x7fffeafd2bd0:	mov		rax, qword ptr [rsp + 0x18]
0x7fffeafd2bd5:	and		rax, 0xfff
0x7fffeafd2bdb:	cmp		rax, 0
0x7fffeafd2bdf:	je		0x7fffeafd2c01
0x7fffeafd2be5:	call		0x7fffeafc3cb0
0x7fffeafd2bea:	mov		dword ptr [rax], 0x16
0x7fffeafd2bf0:	mov		rax, -1
0x7fffeafd2bf7:	mov		qword ptr [rsp + 0x40], rax
0x7fffeafd2bfc:	jmp		0x7fffeafd2ca7
0x7fffeafd2c01:	movabs		rax, 0x7fffffffffffffff
0x7fffeafd2c0b:	cmp		qword ptr [rsp + 0x30], rax
0x7fffeafd2c10:	jb		0x7fffeafd2c32
0x7fffeafd2c16:	call		0x7fffeafc3cb0
0x7fffeafd2c1b:	mov		dword ptr [rax], 0xc
0x7fffeafd2c21:	mov		rax, -1
0x7fffeafd2c28:	mov		qword ptr [rsp + 0x40], rax
0x7fffeafd2c2d:	jmp		0x7fffeafd2ca7
0x7fffeafd2c32:	mov		eax, dword ptr [rsp + 0x28]
0x7fffeafd2c36:	and		eax, 0x10
0x7fffeafd2c39:	cmp		eax, 0
0x7fffeafd2c3c:	je		0x7fffeafd2c4c
0x7fffeafd2c42:	mov		edi, 0xffffffff
0x7fffeafd2c47:	call		0x7fffeafd2b90
0x7fffeafd2c4c:	mov		rsi, qword ptr [rsp + 0x38]
0x7fffeafd2c51:	mov		rdx, qword ptr [rsp + 0x30]
0x7fffeafd2c56:	movsxd		rcx, dword ptr [rsp + 0x2c]
0x7fffeafd2c5b:	movsxd		r8, dword ptr [rsp + 0x28]
0x7fffeafd2c60:	movsxd		r9, dword ptr [rsp + 0x24]
0x7fffeafd2c65:	mov		rax, qword ptr [rsp + 0x18]
0x7fffeafd2c6a:	mov		edi, 9
0x7fffeafd2c6f:	mov		qword ptr [rsp], rax
0x7fffeafd2c73:	call		0x7fffeafd2cc0
0x7fffeafd2c78:	mov		rdi, rax
0x7fffeafd2c7b:	call		0x7fffeafd46c0
0x7fffeafd2c80:	mov		qword ptr [rsp + 0x10], rax
0x7fffeafd2c85:	mov		r10d, dword ptr [rsp + 0x28]
0x7fffeafd2c8a:	and		r10d, 0x10
0x7fffeafd2c8e:	cmp		r10d, 0
0x7fffeafd2c92:	je		0x7fffeafd2c9d
0x7fffeafd2c98:	call		0x7fffeafd2ba0
0x7fffeafd2c9d:	mov		rax, qword ptr [rsp + 0x10]
0x7fffeafd2ca2:	mov		qword ptr [rsp + 0x40], rax
0x7fffeafd2ca7:	mov		rax, qword ptr [rsp + 0x40]
0x7fffeafd2cac:	add		rsp, 0x48
0x7fffeafd2cb0:	ret		
0x7fffeafd2cb1:	nop		word ptr cs:[rax + rax]
0x7fffeafd2cbb:	nop		dword ptr [rax + rax]
disassembling symbol '.LBB2_2':
textAddr: 0x7fffeafd2c01, textSize: 49
0x7fffeafd2c01:	movabs		rax, 0x7fffffffffffffff
0x7fffeafd2c0b:	cmp		qword ptr [rsp + 0x30], rax
0x7fffeafd2c10:	jb		0x7fffeafd2c32
0x7fffeafd2c16:	call		0x7fffeafc3cb0
0x7fffeafd2c1b:	mov		dword ptr [rax], 0xc
0x7fffeafd2c21:	mov		rax, -1
0x7fffeafd2c28:	mov		qword ptr [rsp + 0x40], rax
0x7fffeafd2c2d:	jmp		0x7fffeafd2ca7
disassembling symbol '.LBB2_4':
textAddr: 0x7fffeafd2c32, textSize: 26
0x7fffeafd2c32:	mov		eax, dword ptr [rsp + 0x28]
0x7fffeafd2c36:	and		eax, 0x10
0x7fffeafd2c39:	cmp		eax, 0
0x7fffeafd2c3c:	je		0x7fffeafd2c4c
0x7fffeafd2c42:	mov		edi, 0xffffffff
0x7fffeafd2c47:	call		0x7fffeafd2b90
disassembling symbol '.LBB2_6':
textAddr: 0x7fffeafd2c4c, textSize: 81
0x7fffeafd2c4c:	mov		rsi, qword ptr [rsp + 0x38]
0x7fffeafd2c51:	mov		rdx, qword ptr [rsp + 0x30]
0x7fffeafd2c56:	movsxd		rcx, dword ptr [rsp + 0x2c]
0x7fffeafd2c5b:	movsxd		r8, dword ptr [rsp + 0x28]
0x7fffeafd2c60:	movsxd		r9, dword ptr [rsp + 0x24]
0x7fffeafd2c65:	mov		rax, qword ptr [rsp + 0x18]
0x7fffeafd2c6a:	mov		edi, 9
0x7fffeafd2c6f:	mov		qword ptr [rsp], rax
0x7fffeafd2c73:	call		0x7fffeafd2cc0
0x7fffeafd2c78:	mov		rdi, rax
0x7fffeafd2c7b:	call		0x7fffeafd46c0
0x7fffeafd2c80:	mov		qword ptr [rsp + 0x10], rax
0x7fffeafd2c85:	mov		r10d, dword ptr [rsp + 0x28]
0x7fffeafd2c8a:	and		r10d, 0x10
0x7fffeafd2c8e:	cmp		r10d, 0
0x7fffeafd2c92:	je		0x7fffeafd2c9d
0x7fffeafd2c98:	call		0x7fffeafd2ba0
disassembling symbol '.LBB2_8':
textAddr: 0x7fffeafd2c9d, textSize: 10
0x7fffeafd2c9d:	mov		rax, qword ptr [rsp + 0x10]
0x7fffeafd2ca2:	mov		qword ptr [rsp + 0x40], rax
disassembling symbol '.LBB2_9':
textAddr: 0x7fffeafd2ca7, textSize: 25
0x7fffeafd2ca7:	mov		rax, qword ptr [rsp + 0x40]
0x7fffeafd2cac:	add		rsp, 0x48
0x7fffeafd2cb0:	ret		
0x7fffeafd2cb1:	nop		word ptr cs:[rax + rax]
0x7fffeafd2cbb:	nop		dword ptr [rax + rax]
disassembling symbol '__syscall6':
textAddr: 0x7fffeafd2cc0, textSize: 121
0x7fffeafd2cc0:	mov		rax, qword ptr [rsp + 8]
0x7fffeafd2cc5:	mov		qword ptr [rsp - 8], rdi
0x7fffeafd2cca:	mov		qword ptr [rsp - 0x10], rsi
0x7fffeafd2ccf:	mov		qword ptr [rsp - 0x18], rdx
0x7fffeafd2cd4:	mov		qword ptr [rsp - 0x20], rcx
0x7fffeafd2cd9:	mov		qword ptr [rsp - 0x28], r8
0x7fffeafd2cde:	mov		qword ptr [rsp - 0x30], r9
0x7fffeafd2ce3:	mov		rcx, qword ptr [rsp - 0x28]
0x7fffeafd2ce8:	mov		qword ptr [rsp - 0x40], rcx
0x7fffeafd2ced:	mov		rcx, qword ptr [rsp - 0x30]
0x7fffeafd2cf2:	mov		qword ptr [rsp - 0x48], rcx
0x7fffeafd2cf7:	mov		rcx, qword ptr [rsp + 8]
0x7fffeafd2cfc:	mov		qword ptr [rsp - 0x50], rcx
0x7fffeafd2d01:	mov		rcx, qword ptr [rsp - 8]
0x7fffeafd2d06:	mov		rdi, qword ptr [rsp - 0x10]
0x7fffeafd2d0b:	mov		rsi, qword ptr [rsp - 0x18]
0x7fffeafd2d10:	mov		rdx, qword ptr [rsp - 0x20]
0x7fffeafd2d15:	mov		r10, qword ptr [rsp - 0x40]
0x7fffeafd2d1a:	mov		r8, qword ptr [rsp - 0x48]
0x7fffeafd2d1f:	mov		r9, qword ptr [rsp - 0x50]
0x7fffeafd2d24:	mov		qword ptr [rsp - 0x58], rax
0x7fffeafd2d29:	mov		rax, rcx
0x7fffeafd2d2c:	syscall		
0x7fffeafd2d2e:	mov		qword ptr [rsp - 0x38], rax
0x7fffeafd2d33:	mov		rax, qword ptr [rsp - 0x38]
0x7fffeafd2d38:	ret		
disassembling symbol 'mprotect':
textAddr: 0x7fffeafd2d40, textSize: 112
0x7fffeafd2d40:	sub		rsp, 0x28
0x7fffeafd2d44:	mov		qword ptr [rsp + 0x20], rdi
0x7fffeafd2d49:	mov		qword ptr [rsp + 0x18], rsi
0x7fffeafd2d4e:	mov		dword ptr [rsp + 0x14], edx
0x7fffeafd2d52:	mov		rax, qword ptr [rsp + 0x20]
0x7fffeafd2d57:	and		rax, 0xfffffffffffff000
0x7fffeafd2d5d:	mov		qword ptr [rsp + 8], rax
0x7fffeafd2d62:	mov		rax, qword ptr [rsp + 0x20]
0x7fffeafd2d67:	add		rax, qword ptr [rsp + 0x18]
0x7fffeafd2d6c:	add		rax, 0x1000
0x7fffeafd2d72:	add		rax, -1
0x7fffeafd2d78:	and		rax, 0xfffffffffffff000
0x7fffeafd2d7e:	mov		qword ptr [rsp], rax
0x7fffeafd2d82:	mov		rsi, qword ptr [rsp + 8]
0x7fffeafd2d87:	mov		rax, qword ptr [rsp]
0x7fffeafd2d8b:	sub		rax, qword ptr [rsp + 8]
0x7fffeafd2d90:	movsxd		rcx, dword ptr [rsp + 0x14]
0x7fffeafd2d95:	mov		edi, 0xa
0x7fffeafd2d9a:	mov		rdx, rax
0x7fffeafd2d9d:	call		0x7fffeafd2db0
0x7fffeafd2da2:	mov		rdi, rax
0x7fffeafd2da5:	call		0x7fffeafd46c0
0x7fffeafd2daa:	add		rsp, 0x28
0x7fffeafd2dae:	ret		
0x7fffeafd2daf:	nop		
disassembling symbol '__syscall3':
textAddr: 0x7fffeafd2db0, textSize: 53
0x7fffeafd2db0:	mov		qword ptr [rsp - 8], rdi
0x7fffeafd2db5:	mov		qword ptr [rsp - 0x10], rsi
0x7fffeafd2dba:	mov		qword ptr [rsp - 0x18], rdx
0x7fffeafd2dbf:	mov		qword ptr [rsp - 0x20], rcx
0x7fffeafd2dc4:	mov		rax, qword ptr [rsp - 8]
0x7fffeafd2dc9:	mov		rdi, qword ptr [rsp - 0x10]
0x7fffeafd2dce:	mov		rsi, qword ptr [rsp - 0x18]
0x7fffeafd2dd3:	mov		rdx, qword ptr [rsp - 0x20]
0x7fffeafd2dd8:	syscall		
0x7fffeafd2dda:	mov		qword ptr [rsp - 0x28], rax
0x7fffeafd2ddf:	mov		rax, qword ptr [rsp - 0x28]
0x7fffeafd2de4:	ret		
disassembling symbol '__vm_lock':
textAddr: 0x7fffeafd2df0, textSize: 16
0x7fffeafd2df0:	mov		dword ptr [rsp - 4], edi
0x7fffeafd2df4:	ret		
0x7fffeafd2df5:	nop		word ptr cs:[rax + rax]
0x7fffeafd2dff:	nop		
disassembling symbol '__vm_unlock':
textAddr: 0x7fffeafd2e00, textSize: 16
0x7fffeafd2e00:	ret		
0x7fffeafd2e01:	nop		word ptr cs:[rax + rax]
0x7fffeafd2e0b:	nop		dword ptr [rax + rax]
disassembling symbol 'munmap':
textAddr: 0x7fffeafd2e10, textSize: 80
0x7fffeafd2e10:	sub		rsp, 0x18
0x7fffeafd2e14:	mov		qword ptr [rsp + 0x10], rdi
0x7fffeafd2e19:	mov		qword ptr [rsp + 8], rsi
0x7fffeafd2e1e:	mov		edi, 0xffffffff
0x7fffeafd2e23:	call		0x7fffeafd2df0
0x7fffeafd2e28:	mov		rsi, qword ptr [rsp + 0x10]
0x7fffeafd2e2d:	mov		rdx, qword ptr [rsp + 8]
0x7fffeafd2e32:	mov		edi, 0xb
0x7fffeafd2e37:	call		0x7fffeafd2e60
0x7fffeafd2e3c:	mov		rdi, rax
0x7fffeafd2e3f:	call		0x7fffeafd46c0
0x7fffeafd2e44:	mov		dword ptr [rsp + 4], eax
0x7fffeafd2e48:	call		0x7fffeafd2e00
0x7fffeafd2e4d:	mov		eax, dword ptr [rsp + 4]
0x7fffeafd2e51:	add		rsp, 0x18
0x7fffeafd2e55:	ret		
0x7fffeafd2e56:	nop		word ptr cs:[rax + rax]
disassembling symbol '__syscall2':
textAddr: 0x7fffeafd2e60, textSize: 43
0x7fffeafd2e60:	mov		qword ptr [rsp - 8], rdi
0x7fffeafd2e65:	mov		qword ptr [rsp - 0x10], rsi
0x7fffeafd2e6a:	mov		qword ptr [rsp - 0x18], rdx
0x7fffeafd2e6f:	mov		rax, qword ptr [rsp - 8]
0x7fffeafd2e74:	mov		rdi, qword ptr [rsp - 0x10]
0x7fffeafd2e79:	mov		rsi, qword ptr [rsp - 0x18]
0x7fffeafd2e7e:	syscall		
0x7fffeafd2e80:	mov		qword ptr [rsp - 0x20], rax
0x7fffeafd2e85:	mov		rax, qword ptr [rsp - 0x20]
0x7fffeafd2e8a:	ret		
disassembling symbol 'sgx_ocall':
textAddr: 0x7fffeafd2e90, textSize: 32
0x7fffeafd2e90:	mov		r14, rsp
0x7fffeafd2e93:	movabs		r13, 0x7fffedbeaf60
0x7fffeafd2e9d:	mov		rsp, qword ptr [r13]
0x7fffeafd2ea1:	mov		qword ptr [r13], r14
0x7fffeafd2ea5:	call		0x7fffe80121a2
0x7fffeafd2eaa:	jmp		0x7fffeafd2eb0
0x7fffeafd2eaf:	nop		
disassembling symbol 'sgx_ocall.0':
textAddr: 0x7fffeafd2eb0, textSize: 32
0x7fffeafd2eb0:	mov		r14, rsp
0x7fffeafd2eb3:	movabs		r13, 0x7fffedbeaf60
0x7fffeafd2ebd:	mov		rsp, qword ptr [r13]
0x7fffeafd2ec1:	mov		qword ptr [r13], r14
0x7fffeafd2ec5:	jmp		0x7fffeafd2ed0
0x7fffeafd2eca:	nop		word ptr [rax + rax]
disassembling symbol 'sgx_ocall.1':
textAddr: 0x7fffeafd2ed0, textSize: 32
0x7fffeafd2ed0:	movabs		r14, 0x7fffeafc3ca8
0x7fffeafd2eda:	movabs		r15, 0x7fffecfeaca8
0x7fffeafd2ee4:	ret		
0x7fffeafd2ee5:	nop		word ptr cs:[rax + rax]
0x7fffeafd2eef:	nop		
disassembling symbol 'sgx_ocall.loader':
textAddr: 0x7fffe80121a2, textSize: 1
0x7fffe80121a2:	push		rbp
disassembling symbol 'pthread_exit':
textAddr: 0x7fffeafd2ef0, textSize: 480
0x7fffeafd2ef0:	sub		rsp, 0xa8
0x7fffeafd2ef7:	mov		qword ptr [rsp + 0xa0], rdi
0x7fffeafd2eff:	call		0x7fffeafd3ca0
0x7fffeafd2f04:	mov		qword ptr [rsp + 0x98], rax
0x7fffeafd2f0c:	mov		rax, qword ptr [rsp + 0xa0]
0x7fffeafd2f14:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafd2f1c:	mov		qword ptr [rcx + 0x88], rax
0x7fffeafd2f23:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd2f2b:	cmp		qword ptr [rax + 0x90], 0
0x7fffeafd2f33:	je		0x7fffeafd2f9b
0x7fffeafd2f39:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd2f41:	mov		rax, qword ptr [rax + 0x90]
0x7fffeafd2f48:	mov		rax, qword ptr [rax]
0x7fffeafd2f4b:	mov		qword ptr [rsp + 0x10], rax
0x7fffeafd2f50:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd2f58:	mov		rax, qword ptr [rax + 0x90]
0x7fffeafd2f5f:	mov		rax, qword ptr [rax + 8]
0x7fffeafd2f63:	mov		qword ptr [rsp + 8], rax
0x7fffeafd2f68:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd2f70:	mov		rax, qword ptr [rax + 0x90]
0x7fffeafd2f77:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafd2f7b:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafd2f83:	mov		qword ptr [rcx + 0x90], rax
0x7fffeafd2f8a:	mov		rax, qword ptr [rsp + 0x10]
0x7fffeafd2f8f:	mov		rdi, qword ptr [rsp + 8]
0x7fffeafd2f94:	call		rax
0x7fffeafd2f96:	jmp		0x7fffeafd2f23
0x7fffeafd2f9b:	mov		al, 0
0x7fffeafd2f9d:	call		0x7fffeafd3b40
0x7fffeafd2fa2:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafd2faa:	add		rcx, 0x110
0x7fffeafd2fb1:	mov		rdi, rcx
0x7fffeafd2fb4:	call		0x7fffeafc4150
0x7fffeafd2fb9:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafd2fc1:	add		rcx, 0x108
0x7fffeafd2fc8:	mov		rdi, rcx
0x7fffeafd2fcb:	call		0x7fffeafc4150
0x7fffeafd2fd0:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafd2fd8:	mov		dword ptr [rcx + 0xd8], 1
0x7fffeafd2fe2:	lea		rcx, [rsp + 0x18]
0x7fffeafd2fe7:	mov		rdi, rcx
0x7fffeafd2fea:	call		0x7fffeafc4c30
0x7fffeafd2fef:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafd2ff7:	add		rcx, 0x108
0x7fffeafd2ffe:	mov		rdi, rcx
0x7fffeafd3001:	call		0x7fffeafc41d0
0x7fffeafd3006:	lea		rcx, [rip + 0x2c18f83]
0x7fffeafd300d:	add		rcx, 0x18
0x7fffeafd3014:	mov		rdi, rcx
0x7fffeafd3017:	mov		esi, 0xffffffff
0x7fffeafd301c:	call		0x7fffeafd30d0
0x7fffeafd3021:	cmp		eax, 0
0x7fffeafd3024:	jne		0x7fffeafd3048
0x7fffeafd302a:	mov		dword ptr [rip + 0x2c18f74], 0
0x7fffeafd3034:	lea		rax, [rsp + 0x18]
0x7fffeafd3039:	mov		rdi, rax
0x7fffeafd303c:	call		0x7fffeafc4ce0
0x7fffeafd3041:	xor		edi, edi
0x7fffeafd3043:	call		0x7fffeafd41d0
0x7fffeafd3048:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd3050:	cmp		dword ptr [rax + 0x54], 0
0x7fffeafd3054:	je		0x7fffeafd30aa
0x7fffeafd305a:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd3062:	cmp		qword ptr [rax + 0x58], 0
0x7fffeafd3067:	je		0x7fffeafd30aa
0x7fffeafd306d:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd3075:	cmp		dword ptr [rax + 0x54], 2
0x7fffeafd3079:	jne		0x7fffeafd308d
0x7fffeafd307f:	xor		eax, eax
0x7fffeafd3081:	mov		esi, eax
0x7fffeafd3083:	mov		edi, 0xda
0x7fffeafd3088:	call		0x7fffeafd30f0
0x7fffeafd308d:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd3095:	mov		rdi, qword ptr [rax + 0x58]
0x7fffeafd3099:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd30a1:	mov		rsi, qword ptr [rax + 0x60]
0x7fffeafd30a5:	call		0x7fffeafc4a60
0x7fffeafd30aa:	jmp		0x7fffeafd30af
0x7fffeafd30af:	xor		eax, eax
0x7fffeafd30b1:	mov		esi, eax
0x7fffeafd30b3:	mov		edi, 0x3c
0x7fffeafd30b8:	call		0x7fffeafd30f0
0x7fffeafd30bd:	mov		qword ptr [rsp], rax
0x7fffeafd30c1:	jmp		0x7fffeafd30af
0x7fffeafd30c6:	nop		word ptr cs:[rax + rax]
disassembling symbol '.LBB0_1':
textAddr: 0x7fffeafd2f23, textSize: 120
0x7fffeafd2f23:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd2f2b:	cmp		qword ptr [rax + 0x90], 0
0x7fffeafd2f33:	je		0x7fffeafd2f9b
0x7fffeafd2f39:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd2f41:	mov		rax, qword ptr [rax + 0x90]
0x7fffeafd2f48:	mov		rax, qword ptr [rax]
0x7fffeafd2f4b:	mov		qword ptr [rsp + 0x10], rax
0x7fffeafd2f50:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd2f58:	mov		rax, qword ptr [rax + 0x90]
0x7fffeafd2f5f:	mov		rax, qword ptr [rax + 8]
0x7fffeafd2f63:	mov		qword ptr [rsp + 8], rax
0x7fffeafd2f68:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd2f70:	mov		rax, qword ptr [rax + 0x90]
0x7fffeafd2f77:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafd2f7b:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafd2f83:	mov		qword ptr [rcx + 0x90], rax
0x7fffeafd2f8a:	mov		rax, qword ptr [rsp + 0x10]
0x7fffeafd2f8f:	mov		rdi, qword ptr [rsp + 8]
0x7fffeafd2f94:	call		rax
0x7fffeafd2f96:	jmp		0x7fffeafd2f23
disassembling symbol '.LBB0_3':
textAddr: 0x7fffeafd2f9b, textSize: 173
0x7fffeafd2f9b:	mov		al, 0
0x7fffeafd2f9d:	call		0x7fffeafd3b40
0x7fffeafd2fa2:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafd2faa:	add		rcx, 0x110
0x7fffeafd2fb1:	mov		rdi, rcx
0x7fffeafd2fb4:	call		0x7fffeafc4150
0x7fffeafd2fb9:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafd2fc1:	add		rcx, 0x108
0x7fffeafd2fc8:	mov		rdi, rcx
0x7fffeafd2fcb:	call		0x7fffeafc4150
0x7fffeafd2fd0:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafd2fd8:	mov		dword ptr [rcx + 0xd8], 1
0x7fffeafd2fe2:	lea		rcx, [rsp + 0x18]
0x7fffeafd2fe7:	mov		rdi, rcx
0x7fffeafd2fea:	call		0x7fffeafc4c30
0x7fffeafd2fef:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafd2ff7:	add		rcx, 0x108
0x7fffeafd2ffe:	mov		rdi, rcx
0x7fffeafd3001:	call		0x7fffeafc41d0
0x7fffeafd3006:	lea		rcx, [rip + 0x2c18f83]
0x7fffeafd300d:	add		rcx, 0x18
0x7fffeafd3014:	mov		rdi, rcx
0x7fffeafd3017:	mov		esi, 0xffffffff
0x7fffeafd301c:	call		0x7fffeafd30d0
0x7fffeafd3021:	cmp		eax, 0
0x7fffeafd3024:	jne		0x7fffeafd3048
0x7fffeafd302a:	mov		dword ptr [rip + 0x2c18f74], 0
0x7fffeafd3034:	lea		rax, [rsp + 0x18]
0x7fffeafd3039:	mov		rdi, rax
0x7fffeafd303c:	call		0x7fffeafc4ce0
0x7fffeafd3041:	xor		edi, edi
0x7fffeafd3043:	call		0x7fffeafd41d0
disassembling symbol '.LBB0_5':
textAddr: 0x7fffeafd3048, textSize: 69
0x7fffeafd3048:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd3050:	cmp		dword ptr [rax + 0x54], 0
0x7fffeafd3054:	je		0x7fffeafd30aa
0x7fffeafd305a:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd3062:	cmp		qword ptr [rax + 0x58], 0
0x7fffeafd3067:	je		0x7fffeafd30aa
0x7fffeafd306d:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd3075:	cmp		dword ptr [rax + 0x54], 2
0x7fffeafd3079:	jne		0x7fffeafd308d
0x7fffeafd307f:	xor		eax, eax
0x7fffeafd3081:	mov		esi, eax
0x7fffeafd3083:	mov		edi, 0xda
0x7fffeafd3088:	call		0x7fffeafd30f0
disassembling symbol '.LBB0_9':
textAddr: 0x7fffeafd308d, textSize: 29
0x7fffeafd308d:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd3095:	mov		rdi, qword ptr [rax + 0x58]
0x7fffeafd3099:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd30a1:	mov		rsi, qword ptr [rax + 0x60]
0x7fffeafd30a5:	call		0x7fffeafc4a60
disassembling symbol '.LBB0_10':
textAddr: 0x7fffeafd30aa, textSize: 5
0x7fffeafd30aa:	jmp		0x7fffeafd30af
disassembling symbol '.LBB0_11':
textAddr: 0x7fffeafd30af, textSize: 33
0x7fffeafd30af:	xor		eax, eax
0x7fffeafd30b1:	mov		esi, eax
0x7fffeafd30b3:	mov		edi, 0x3c
0x7fffeafd30b8:	call		0x7fffeafd30f0
0x7fffeafd30bd:	mov		qword ptr [rsp], rax
0x7fffeafd30c1:	jmp		0x7fffeafd30af
0x7fffeafd30c6:	nop		word ptr cs:[rax + rax]
disassembling symbol 'a_fetch_add':
textAddr: 0x7fffeafd30d0, textSize: 32
0x7fffeafd30d0:	mov		qword ptr [rsp - 8], rdi
0x7fffeafd30d5:	mov		dword ptr [rsp - 0xc], esi
0x7fffeafd30d9:	mov		rax, qword ptr [rsp - 8]
0x7fffeafd30de:	mov		ecx, dword ptr [rsp - 0xc]
0x7fffeafd30e2:	lock xadd		dword ptr [rax], ecx
0x7fffeafd30e6:	mov		dword ptr [rsp - 0xc], ecx
0x7fffeafd30ea:	mov		eax, dword ptr [rsp - 0xc]
0x7fffeafd30ee:	ret		
0x7fffeafd30ef:	nop		
disassembling symbol '__syscall1':
textAddr: 0x7fffeafd30f0, textSize: 48
0x7fffeafd30f0:	mov		qword ptr [rsp - 8], rdi
0x7fffeafd30f5:	mov		qword ptr [rsp - 0x10], rsi
0x7fffeafd30fa:	mov		rax, qword ptr [rsp - 8]
0x7fffeafd30ff:	mov		rdi, qword ptr [rsp - 0x10]
0x7fffeafd3104:	syscall		
0x7fffeafd3106:	mov		qword ptr [rsp - 0x18], rax
0x7fffeafd310b:	mov		rax, qword ptr [rsp - 0x18]
0x7fffeafd3110:	ret		
0x7fffeafd3111:	nop		word ptr cs:[rax + rax]
0x7fffeafd311b:	nop		dword ptr [rax + rax]
disassembling symbol '__do_cleanup_push':
textAddr: 0x7fffeafd3120, textSize: 64
0x7fffeafd3120:	sub		rsp, 0x18
0x7fffeafd3124:	mov		qword ptr [rsp + 0x10], rdi
0x7fffeafd3129:	call		0x7fffeafd3ca0
0x7fffeafd312e:	mov		qword ptr [rsp + 8], rax
0x7fffeafd3133:	mov		rax, qword ptr [rsp + 8]
0x7fffeafd3138:	mov		rax, qword ptr [rax + 0x90]
0x7fffeafd313f:	mov		rcx, qword ptr [rsp + 0x10]
0x7fffeafd3144:	mov		qword ptr [rcx + 0x10], rax
0x7fffeafd3148:	mov		rax, qword ptr [rsp + 0x10]
0x7fffeafd314d:	mov		rcx, qword ptr [rsp + 8]
0x7fffeafd3152:	mov		qword ptr [rcx + 0x90], rax
0x7fffeafd3159:	add		rsp, 0x18
0x7fffeafd315d:	ret		
0x7fffeafd315e:	nop		
disassembling symbol '__do_cleanup_pop':
textAddr: 0x7fffeafd3160, textSize: 48
0x7fffeafd3160:	sub		rsp, 0x18
0x7fffeafd3164:	mov		qword ptr [rsp + 0x10], rdi
0x7fffeafd3169:	mov		rax, qword ptr [rsp + 0x10]
0x7fffeafd316e:	mov		rax, qword ptr [rax + 0x10]
0x7fffeafd3172:	mov		qword ptr [rsp + 8], rax
0x7fffeafd3177:	call		0x7fffeafd3b50
0x7fffeafd317c:	mov		rcx, qword ptr [rsp + 8]
0x7fffeafd3181:	mov		qword ptr [rax + 0x90], rcx
0x7fffeafd3188:	add		rsp, 0x18
0x7fffeafd318c:	ret		
0x7fffeafd318d:	nop		dword ptr [rax]
disassembling symbol 'pthread_create':
textAddr: 0x7fffeafd3190, textSize: 2032
0x7fffeafd3190:	sub		rsp, 0xe8
0x7fffeafd3197:	mov		qword ptr [rsp + 0xd8], rdi
0x7fffeafd319f:	mov		qword ptr [rsp + 0xd0], rsi
0x7fffeafd31a7:	mov		qword ptr [rsp + 0xc8], rdx
0x7fffeafd31af:	mov		qword ptr [rsp + 0xc0], rcx
0x7fffeafd31b7:	call		0x7fffeafd3ca0
0x7fffeafd31bc:	xor		esi, esi
0x7fffeafd31be:	mov		qword ptr [rsp + 0xa0], rax
0x7fffeafd31c6:	mov		qword ptr [rsp + 0x90], 0
0x7fffeafd31d2:	mov		qword ptr [rsp + 0x88], 0
0x7fffeafd31de:	mov		qword ptr [rsp + 0x80], 0
0x7fffeafd31ea:	mov		dword ptr [rsp + 0x74], 0x7d0f00
0x7fffeafd31f2:	mov		dword ptr [rsp + 0x70], 0
0x7fffeafd31fa:	lea		rax, [rsp + 0x38]
0x7fffeafd31ff:	mov		rdi, rax
0x7fffeafd3202:	mov		edx, 0x38
0x7fffeafd3207:	call		0x7fffeafd2a10
0x7fffeafd320c:	cmp		qword ptr [rsp + 0xa0], 0
0x7fffeafd3215:	jne		0x7fffeafd322b
0x7fffeafd321b:	mov		dword ptr [rsp + 0xe4], 0x26
0x7fffeafd3226:	jmp		0x7fffeafd396b
0x7fffeafd322b:	cmp		dword ptr [rip + 0x2c18d66], 0
0x7fffeafd3232:	jne		0x7fffeafd32a4
0x7fffeafd3238:	mov		rax, qword ptr [rip + 0x2c18d71]
0x7fffeafd323f:	mov		qword ptr [rsp + 0x30], rax
0x7fffeafd3244:	cmp		qword ptr [rsp + 0x30], 0
0x7fffeafd324a:	je		0x7fffeafd326d
0x7fffeafd3250:	mov		rdi, qword ptr [rsp + 0x30]
0x7fffeafd3255:	call		0x7fffeafd3980
0x7fffeafd325a:	mov		rax, qword ptr [rsp + 0x30]
0x7fffeafd325f:	mov		rax, qword ptr [rax + 0x70]
0x7fffeafd3263:	mov		qword ptr [rsp + 0x30], rax
0x7fffeafd3268:	jmp		0x7fffeafd3244
0x7fffeafd326d:	mov		rax, qword ptr [rip - 0x1ff52a4]
0x7fffeafd3274:	mov		rdi, qword ptr [rax]
0x7fffeafd3277:	call		0x7fffeafd3980
0x7fffeafd327c:	mov		rax, qword ptr [rip - 0x1ff52cb]
0x7fffeafd3283:	mov		rdi, qword ptr [rax]
0x7fffeafd3286:	call		0x7fffeafd3980
0x7fffeafd328b:	mov		rax, qword ptr [rip - 0x1ff52aa]
0x7fffeafd3292:	mov		rdi, qword ptr [rax]
0x7fffeafd3295:	call		0x7fffeafd3980
0x7fffeafd329a:	mov		dword ptr [rip + 0x2c18cf4], 1
0x7fffeafd32a4:	cmp		qword ptr [rsp + 0xd0], 0
0x7fffeafd32ad:	je		0x7fffeafd32d0
0x7fffeafd32b3:	mov		rax, qword ptr [rsp + 0xd0]
0x7fffeafd32bb:	lea		rcx, [rsp + 0x38]
0x7fffeafd32c0:	mov		rdi, rcx
0x7fffeafd32c3:	mov		rsi, rax
0x7fffeafd32c6:	mov		edx, 0x38
0x7fffeafd32cb:	call		0x7fffeafd2590
0x7fffeafd32d0:	mov		al, 0
0x7fffeafd32d2:	call		0x7fffeafd3b40
0x7fffeafd32d7:	cmp		qword ptr [rsp + 0x48], 0
0x7fffeafd32dd:	je		0x7fffeafd33e7
0x7fffeafd32e3:	mov		rax, qword ptr [rip - 0x1ff52d2]
0x7fffeafd32ea:	mov		rcx, qword ptr [rip + 0x2c18ccf]
0x7fffeafd32f1:	mov		rax, qword ptr [rax]
0x7fffeafd32f4:	add		rcx, rax
0x7fffeafd32f7:	mov		qword ptr [rsp + 0x28], rcx
0x7fffeafd32fc:	mov		rax, qword ptr [rsp + 0x38]
0x7fffeafd3301:	add		rax, 0x14000
0x7fffeafd3307:	mov		qword ptr [rsp + 0xb0], rax
0x7fffeafd330f:	mov		rax, qword ptr [rsp + 0x48]
0x7fffeafd3314:	and		rax, 0xfffffffffffffff0
0x7fffeafd331a:	mov		qword ptr [rsp + 0x88], rax
0x7fffeafd3322:	mov		rax, qword ptr [rsp + 0x48]
0x7fffeafd3327:	sub		rax, qword ptr [rsp + 0xb0]
0x7fffeafd332f:	mov		qword ptr [rsp + 0x78], rax
0x7fffeafd3334:	mov		rax, qword ptr [rsp + 0x28]
0x7fffeafd3339:	mov		rcx, qword ptr [rsp + 0xb0]
0x7fffeafd3341:	shr		rcx, 3
0x7fffeafd3345:	cmp		rax, rcx
0x7fffeafd3348:	jae		0x7fffeafd33b7
0x7fffeafd334e:	cmp		qword ptr [rsp + 0x28], 0x800
0x7fffeafd3357:	jae		0x7fffeafd33b7
0x7fffeafd335d:	xor		esi, esi
0x7fffeafd335f:	xor		eax, eax
0x7fffeafd3361:	mov		ecx, eax
0x7fffeafd3363:	mov		rdx, qword ptr [rip - 0x1ff5352]
0x7fffeafd336a:	mov		rdi, qword ptr [rsp + 0x88]
0x7fffeafd3372:	mov		rdx, qword ptr [rdx]
0x7fffeafd3375:	mov		r8, rcx
0x7fffeafd3378:	sub		r8, rdx
0x7fffeafd337b:	add		rdi, r8
0x7fffeafd337e:	mov		qword ptr [rsp + 0x80], rdi
0x7fffeafd3386:	mov		rdx, qword ptr [rsp + 0x80]
0x7fffeafd338e:	sub		rcx, qword ptr [rip + 0x2c18c2b]
0x7fffeafd3395:	add		rdx, rcx
0x7fffeafd3398:	mov		qword ptr [rsp + 0x88], rdx
0x7fffeafd33a0:	mov		rdi, qword ptr [rsp + 0x88]
0x7fffeafd33a8:	mov		rdx, qword ptr [rsp + 0x28]
0x7fffeafd33ad:	call		0x7fffeafd2a10
0x7fffeafd33b2:	jmp		0x7fffeafd33e2
0x7fffeafd33b7:	mov		rax, qword ptr [rsp + 0x28]
0x7fffeafd33bc:	add		rax, 0x1000
0x7fffeafd33c2:	sub		rax, 1
0x7fffeafd33c8:	and		rax, 0xfffffffffffff000
0x7fffeafd33ce:	mov		qword ptr [rsp + 0xb0], rax
0x7fffeafd33d6:	mov		qword ptr [rsp + 0xa8], 0
0x7fffeafd33e2:	jmp		0x7fffeafd3458
0x7fffeafd33e7:	mov		rax, qword ptr [rip - 0x1ff53d6]
0x7fffeafd33ee:	mov		rcx, qword ptr [rsp + 0x40]
0x7fffeafd33f3:	add		rcx, 0x1000
0x7fffeafd33fa:	add		rcx, 0x1000
0x7fffeafd3401:	sub		rcx, 1
0x7fffeafd3408:	and		rcx, 0xfffffffffffff000
0x7fffeafd340f:	mov		qword ptr [rsp + 0xa8], rcx
0x7fffeafd3417:	mov		rcx, qword ptr [rsp + 0xa8]
0x7fffeafd341f:	mov		rdx, qword ptr [rsp + 0x38]
0x7fffeafd3424:	add		rdx, 0x14000
0x7fffeafd342b:	add		rdx, qword ptr [rip + 0x2c18b8e]
0x7fffeafd3432:	mov		rax, qword ptr [rax]
0x7fffeafd3435:	add		rdx, rax
0x7fffeafd3438:	add		rdx, 0x1000
0x7fffeafd343f:	sub		rdx, 1
0x7fffeafd3446:	and		rdx, 0xfffffffffffff000
0x7fffeafd344d:	add		rcx, rdx
0x7fffeafd3450:	mov		qword ptr [rsp + 0xb0], rcx
0x7fffeafd3458:	cmp		qword ptr [rsp + 0x80], 0
0x7fffeafd3461:	jne		0x7fffeafd35e7
0x7fffeafd3467:	cmp		qword ptr [rsp + 0xa8], 0
0x7fffeafd3470:	je		0x7fffeafd351d
0x7fffeafd3476:	xor		eax, eax
0x7fffeafd3478:	mov		ecx, eax
0x7fffeafd347a:	xor		edx, edx
0x7fffeafd347c:	mov		rsi, qword ptr [rsp + 0xb0]
0x7fffeafd3484:	mov		rdi, rcx
0x7fffeafd3487:	mov		eax, 0x22
0x7fffeafd348c:	mov		qword ptr [rsp + 0x20], rcx
0x7fffeafd3491:	mov		ecx, eax
0x7fffeafd3493:	mov		r8d, 0xffffffff
0x7fffeafd3499:	mov		r9, qword ptr [rsp + 0x20]
0x7fffeafd349e:	call		0x7fffeafd2bb0
0x7fffeafd34a3:	mov		qword ptr [rsp + 0x90], rax
0x7fffeafd34ab:	mov		rax, -1
0x7fffeafd34b2:	cmp		qword ptr [rsp + 0x90], rax
0x7fffeafd34ba:	jne		0x7fffeafd34c5
0x7fffeafd34c0:	jmp		0x7fffeafd3959
0x7fffeafd34c5:	mov		rax, qword ptr [rsp + 0x90]
0x7fffeafd34cd:	add		rax, qword ptr [rsp + 0xa8]
0x7fffeafd34d5:	mov		rcx, qword ptr [rsp + 0xb0]
0x7fffeafd34dd:	sub		rcx, qword ptr [rsp + 0xa8]
0x7fffeafd34e5:	mov		rdi, rax
0x7fffeafd34e8:	mov		rsi, rcx
0x7fffeafd34eb:	mov		edx, 3
0x7fffeafd34f0:	call		0x7fffeafd2d40
0x7fffeafd34f5:	cmp		eax, 0
0x7fffeafd34f8:	je		0x7fffeafd3518
0x7fffeafd34fe:	mov		rdi, qword ptr [rsp + 0x90]
0x7fffeafd3506:	mov		rsi, qword ptr [rsp + 0xb0]
0x7fffeafd350e:	call		0x7fffeafd2e10
0x7fffeafd3513:	jmp		0x7fffeafd3959
0x7fffeafd3518:	jmp		0x7fffeafd3574
0x7fffeafd351d:	xor		eax, eax
0x7fffeafd351f:	mov		ecx, eax
0x7fffeafd3521:	mov		rsi, qword ptr [rsp + 0xb0]
0x7fffeafd3529:	mov		rdi, rcx
0x7fffeafd352c:	mov		edx, 3
0x7fffeafd3531:	mov		eax, 0x22
0x7fffeafd3536:	mov		qword ptr [rsp + 0x18], rcx
0x7fffeafd353b:	mov		ecx, eax
0x7fffeafd353d:	mov		r8d, 0xffffffff
0x7fffeafd3543:	mov		r9, qword ptr [rsp + 0x18]
0x7fffeafd3548:	call		0x7fffeafd2bb0
0x7fffeafd354d:	mov		qword ptr [rsp + 0x90], rax
0x7fffeafd3555:	mov		rax, -1
0x7fffeafd355c:	cmp		qword ptr [rsp + 0x90], rax
0x7fffeafd3564:	jne		0x7fffeafd356f
0x7fffeafd356a:	jmp		0x7fffeafd3959
0x7fffeafd356f:	jmp		0x7fffeafd3574
0x7fffeafd3574:	xor		eax, eax
0x7fffeafd3576:	mov		ecx, eax
0x7fffeafd3578:	mov		rdx, qword ptr [rip - 0x1ff5567]
0x7fffeafd357f:	mov		rsi, qword ptr [rsp + 0x90]
0x7fffeafd3587:	add		rsi, qword ptr [rsp + 0xb0]
0x7fffeafd358f:	mov		rdx, qword ptr [rdx]
0x7fffeafd3592:	sub		rcx, rdx
0x7fffeafd3595:	add		rsi, rcx
0x7fffeafd3598:	mov		qword ptr [rsp + 0x80], rsi
0x7fffeafd35a0:	cmp		qword ptr [rsp + 0x88], 0
0x7fffeafd35a9:	jne		0x7fffeafd35e2
0x7fffeafd35af:	xor		eax, eax
0x7fffeafd35b1:	mov		ecx, eax
0x7fffeafd35b3:	mov		rdx, qword ptr [rsp + 0x80]
0x7fffeafd35bb:	sub		rcx, qword ptr [rip + 0x2c189fe]
0x7fffeafd35c2:	add		rdx, rcx
0x7fffeafd35c5:	mov		qword ptr [rsp + 0x88], rdx
0x7fffeafd35cd:	mov		rcx, qword ptr [rsp + 0x90]
0x7fffeafd35d5:	add		rcx, qword ptr [rsp + 0xa8]
0x7fffeafd35dd:	mov		qword ptr [rsp + 0x78], rcx
0x7fffeafd35e2:	jmp		0x7fffeafd35e7
0x7fffeafd35e7:	xor		eax, eax
0x7fffeafd35e9:	mov		ecx, eax
0x7fffeafd35eb:	mov		rdx, qword ptr [rsp + 0x80]
0x7fffeafd35f3:	sub		rcx, qword ptr [rip + 0x2c189c6]
0x7fffeafd35fa:	add		rdx, rcx
0x7fffeafd35fd:	mov		rdi, rdx
0x7fffeafd3600:	call		0x7fffeafc3dd0
0x7fffeafd3605:	mov		qword ptr [rsp + 0x98], rax
0x7fffeafd360d:	mov		rax, qword ptr [rsp + 0x90]
0x7fffeafd3615:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafd361d:	mov		qword ptr [rcx + 0x58], rax
0x7fffeafd3621:	mov		rax, qword ptr [rsp + 0xb0]
0x7fffeafd3629:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafd3631:	mov		qword ptr [rcx + 0x60], rax
0x7fffeafd3635:	mov		rax, qword ptr [rsp + 0x88]
0x7fffeafd363d:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafd3645:	mov		qword ptr [rcx + 0x68], rax
0x7fffeafd3649:	mov		rax, qword ptr [rsp + 0x88]
0x7fffeafd3651:	mov		rcx, qword ptr [rsp + 0x78]
0x7fffeafd3656:	sub		rax, rcx
0x7fffeafd3659:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafd3661:	mov		qword ptr [rcx + 0x70], rax
0x7fffeafd3665:	mov		rax, qword ptr [rsp + 0xa0]
0x7fffeafd366d:	mov		esi, dword ptr [rax + 0x34]
0x7fffeafd3670:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd3678:	mov		dword ptr [rax + 0x34], esi
0x7fffeafd367b:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd3683:	add		rax, 0x3c
0x7fffeafd3689:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafd3691:	mov		qword ptr [rcx + 0x40], rax
0x7fffeafd3695:	mov		rax, qword ptr [rsp + 0xc8]
0x7fffeafd369d:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafd36a5:	mov		qword ptr [rcx + 0x80], rax
0x7fffeafd36ac:	mov		rax, qword ptr [rsp + 0xc0]
0x7fffeafd36b4:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafd36bc:	mov		qword ptr [rcx + 0x78], rax
0x7fffeafd36c0:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd36c8:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafd36d0:	mov		qword ptr [rcx], rax
0x7fffeafd36d3:	mov		rax, qword ptr [rsp + 0x80]
0x7fffeafd36db:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafd36e3:	mov		qword ptr [rcx + 0x98], rax
0x7fffeafd36ea:	cmp		dword ptr [rsp + 0x50], 0
0x7fffeafd36ef:	je		0x7fffeafd3712
0x7fffeafd36f5:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd36fd:	mov		dword ptr [rax + 0x54], 1
0x7fffeafd3704:	mov		ecx, dword ptr [rsp + 0x74]
0x7fffeafd3708:	sub		ecx, 0x200000
0x7fffeafd370e:	mov		dword ptr [rsp + 0x74], ecx
0x7fffeafd3712:	cmp		dword ptr [rsp + 0x54], 0
0x7fffeafd3717:	je		0x7fffeafd374d
0x7fffeafd371d:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd3725:	mov		dword ptr [rax + 0x118], 1
0x7fffeafd372f:	mov		dword ptr [rsp + 0x70], 1
0x7fffeafd3737:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd373f:	add		rax, 0x120
0x7fffeafd3745:	mov		rdi, rax
0x7fffeafd3748:	call		0x7fffeafc4cb0
0x7fffeafd374d:	lea		rax, [rip + 0x2c1883c]
0x7fffeafd3754:	add		rax, 0x18
0x7fffeafd375a:	mov		rcx, qword ptr [rsp + 0xa0]
0x7fffeafd3762:	mov		edx, dword ptr [rcx + 0x48]
0x7fffeafd3765:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafd376d:	mov		dword ptr [rcx + 0xf8], edx
0x7fffeafd3773:	mov		rcx, qword ptr [rsp + 0xa0]
0x7fffeafd377b:	mov		rcx, qword ptr [rcx + 0x28]
0x7fffeafd377f:	mov		rsi, qword ptr [rsp + 0x98]
0x7fffeafd3787:	mov		qword ptr [rsi + 0x28], rcx
0x7fffeafd378b:	mov		rdi, rax
0x7fffeafd378e:	call		0x7fffeafd39c0
0x7fffeafd3793:	mov		rsi, qword ptr [rsp + 0x88]
0x7fffeafd379b:	mov		edx, dword ptr [rsp + 0x74]
0x7fffeafd379f:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd37a7:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafd37af:	add		rcx, 0x30
0x7fffeafd37b6:	mov		r9, qword ptr [rsp + 0x98]
0x7fffeafd37be:	mov		rdi, qword ptr [rsp + 0x98]
0x7fffeafd37c6:	add		rdi, 0x30
0x7fffeafd37cd:	lea		r8, [rip + 0x20c]
0x7fffeafd37d4:	mov		qword ptr [rsp + 0x10], rdi
0x7fffeafd37d9:	mov		rdi, r8
0x7fffeafd37dc:	mov		qword ptr [rsp + 8], rcx
0x7fffeafd37e1:	mov		rcx, rax
0x7fffeafd37e4:	mov		r8, qword ptr [rsp + 8]
0x7fffeafd37e9:	mov		rax, qword ptr [rsp + 0x10]
0x7fffeafd37ee:	mov		qword ptr [rsp], rax
0x7fffeafd37f2:	mov		al, 0
0x7fffeafd37f4:	call		0x7fffeafc5250
0x7fffeafd37f9:	mov		dword ptr [rsp + 0xbc], eax
0x7fffeafd3800:	mov		al, 0
0x7fffeafd3802:	call		0x7fffeafd3b40
0x7fffeafd3807:	cmp		dword ptr [rsp + 0x70], 0
0x7fffeafd380c:	je		0x7fffeafd3828
0x7fffeafd3812:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd381a:	add		rax, 0x120
0x7fffeafd3820:	mov		rdi, rax
0x7fffeafd3823:	call		0x7fffeafc4ce0
0x7fffeafd3828:	cmp		dword ptr [rsp + 0xbc], 0
0x7fffeafd3830:	jge		0x7fffeafd387f
0x7fffeafd3836:	lea		rax, [rip + 0x2c18753]
0x7fffeafd383d:	add		rax, 0x18
0x7fffeafd3843:	mov		rdi, rax
0x7fffeafd3846:	call		0x7fffeafd3ac0
0x7fffeafd384b:	cmp		qword ptr [rsp + 0x90], 0
0x7fffeafd3854:	je		0x7fffeafd386f
0x7fffeafd385a:	mov		rdi, qword ptr [rsp + 0x90]
0x7fffeafd3862:	mov		rsi, qword ptr [rsp + 0xb0]
0x7fffeafd386a:	call		0x7fffeafd2e10
0x7fffeafd386f:	mov		dword ptr [rsp + 0xe4], 0xb
0x7fffeafd387a:	jmp		0x7fffeafd396b
0x7fffeafd387f:	cmp		dword ptr [rsp + 0x70], 0
0x7fffeafd3884:	je		0x7fffeafd3936
0x7fffeafd388a:	lea		rax, [rsp + 0x38]
0x7fffeafd388f:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafd3897:	movsxd		rsi, dword ptr [rcx + 0x30]
0x7fffeafd389b:	movsxd		rdx, dword ptr [rsp + 0x58]
0x7fffeafd38a0:	add		rax, 0x24
0x7fffeafd38a6:	mov		edi, 0x90
0x7fffeafd38ab:	mov		rcx, rax
0x7fffeafd38ae:	call		0x7fffeafd3ae0
0x7fffeafd38b3:	xor		r8d, r8d
0x7fffeafd38b6:	mov		dword ptr [rsp + 0xbc], eax
0x7fffeafd38bd:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafd38c5:	add		rcx, 0x118
0x7fffeafd38cc:	mov		eax, dword ptr [rsp + 0xbc]
0x7fffeafd38d3:	cmp		eax, 0
0x7fffeafd38d6:	mov		eax, 2
0x7fffeafd38db:	cmovl		r8d, eax
0x7fffeafd38df:	mov		rdi, rcx
0x7fffeafd38e2:	mov		esi, r8d
0x7fffeafd38e5:	call		0x7fffeafd3b20
0x7fffeafd38ea:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafd38f2:	add		rcx, 0x118
0x7fffeafd38f9:	mov		edi, 0xca
0x7fffeafd38fe:	mov		rsi, rcx
0x7fffeafd3901:	mov		ecx, 1
0x7fffeafd3906:	mov		rdx, rcx
0x7fffeafd3909:	call		0x7fffeafd3ae0
0x7fffeafd390e:	cmp		dword ptr [rsp + 0xbc], 0
0x7fffeafd3916:	jge		0x7fffeafd3931
0x7fffeafd391c:	xor		eax, eax
0x7fffeafd391e:	sub		eax, dword ptr [rsp + 0xbc]
0x7fffeafd3925:	mov		dword ptr [rsp + 0xe4], eax
0x7fffeafd392c:	jmp		0x7fffeafd396b
0x7fffeafd3931:	jmp		0x7fffeafd3936
0x7fffeafd3936:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd393e:	mov		rcx, qword ptr [rsp + 0xd8]
0x7fffeafd3946:	mov		qword ptr [rcx], rax
0x7fffeafd3949:	mov		dword ptr [rsp + 0xe4], 0
0x7fffeafd3954:	jmp		0x7fffeafd396b
0x7fffeafd3959:	mov		al, 0
0x7fffeafd395b:	call		0x7fffeafd3b40
0x7fffeafd3960:	mov		dword ptr [rsp + 0xe4], 0xb
0x7fffeafd396b:	mov		eax, dword ptr [rsp + 0xe4]
0x7fffeafd3972:	add		rsp, 0xe8
0x7fffeafd3979:	ret		
0x7fffeafd397a:	nop		word ptr [rax + rax]
disassembling symbol '.LBB5_2':
textAddr: 0x7fffeafd322b, textSize: 25
0x7fffeafd322b:	cmp		dword ptr [rip + 0x2c18d66], 0
0x7fffeafd3232:	jne		0x7fffeafd32a4
0x7fffeafd3238:	mov		rax, qword ptr [rip + 0x2c18d71]
0x7fffeafd323f:	mov		qword ptr [rsp + 0x30], rax
disassembling symbol '.LBB5_4':
textAddr: 0x7fffeafd3244, textSize: 41
0x7fffeafd3244:	cmp		qword ptr [rsp + 0x30], 0
0x7fffeafd324a:	je		0x7fffeafd326d
0x7fffeafd3250:	mov		rdi, qword ptr [rsp + 0x30]
0x7fffeafd3255:	call		0x7fffeafd3980
0x7fffeafd325a:	mov		rax, qword ptr [rsp + 0x30]
0x7fffeafd325f:	mov		rax, qword ptr [rax + 0x70]
0x7fffeafd3263:	mov		qword ptr [rsp + 0x30], rax
0x7fffeafd3268:	jmp		0x7fffeafd3244
disassembling symbol '.LBB5_7':
textAddr: 0x7fffeafd326d, textSize: 55
0x7fffeafd326d:	mov		rax, qword ptr [rip - 0x1ff52a4]
0x7fffeafd3274:	mov		rdi, qword ptr [rax]
0x7fffeafd3277:	call		0x7fffeafd3980
0x7fffeafd327c:	mov		rax, qword ptr [rip - 0x1ff52cb]
0x7fffeafd3283:	mov		rdi, qword ptr [rax]
0x7fffeafd3286:	call		0x7fffeafd3980
0x7fffeafd328b:	mov		rax, qword ptr [rip - 0x1ff52aa]
0x7fffeafd3292:	mov		rdi, qword ptr [rax]
0x7fffeafd3295:	call		0x7fffeafd3980
0x7fffeafd329a:	mov		dword ptr [rip + 0x2c18cf4], 1
disassembling symbol '.LBB5_8':
textAddr: 0x7fffeafd32a4, textSize: 44
0x7fffeafd32a4:	cmp		qword ptr [rsp + 0xd0], 0
0x7fffeafd32ad:	je		0x7fffeafd32d0
0x7fffeafd32b3:	mov		rax, qword ptr [rsp + 0xd0]
0x7fffeafd32bb:	lea		rcx, [rsp + 0x38]
0x7fffeafd32c0:	mov		rdi, rcx
0x7fffeafd32c3:	mov		rsi, rax
0x7fffeafd32c6:	mov		edx, 0x38
0x7fffeafd32cb:	call		0x7fffeafd2590
disassembling symbol '.LBB5_10':
textAddr: 0x7fffeafd32d0, textSize: 231
0x7fffeafd32d0:	mov		al, 0
0x7fffeafd32d2:	call		0x7fffeafd3b40
0x7fffeafd32d7:	cmp		qword ptr [rsp + 0x48], 0
0x7fffeafd32dd:	je		0x7fffeafd33e7
0x7fffeafd32e3:	mov		rax, qword ptr [rip - 0x1ff52d2]
0x7fffeafd32ea:	mov		rcx, qword ptr [rip + 0x2c18ccf]
0x7fffeafd32f1:	mov		rax, qword ptr [rax]
0x7fffeafd32f4:	add		rcx, rax
0x7fffeafd32f7:	mov		qword ptr [rsp + 0x28], rcx
0x7fffeafd32fc:	mov		rax, qword ptr [rsp + 0x38]
0x7fffeafd3301:	add		rax, 0x14000
0x7fffeafd3307:	mov		qword ptr [rsp + 0xb0], rax
0x7fffeafd330f:	mov		rax, qword ptr [rsp + 0x48]
0x7fffeafd3314:	and		rax, 0xfffffffffffffff0
0x7fffeafd331a:	mov		qword ptr [rsp + 0x88], rax
0x7fffeafd3322:	mov		rax, qword ptr [rsp + 0x48]
0x7fffeafd3327:	sub		rax, qword ptr [rsp + 0xb0]
0x7fffeafd332f:	mov		qword ptr [rsp + 0x78], rax
0x7fffeafd3334:	mov		rax, qword ptr [rsp + 0x28]
0x7fffeafd3339:	mov		rcx, qword ptr [rsp + 0xb0]
0x7fffeafd3341:	shr		rcx, 3
0x7fffeafd3345:	cmp		rax, rcx
0x7fffeafd3348:	jae		0x7fffeafd33b7
0x7fffeafd334e:	cmp		qword ptr [rsp + 0x28], 0x800
0x7fffeafd3357:	jae		0x7fffeafd33b7
0x7fffeafd335d:	xor		esi, esi
0x7fffeafd335f:	xor		eax, eax
0x7fffeafd3361:	mov		ecx, eax
0x7fffeafd3363:	mov		rdx, qword ptr [rip - 0x1ff5352]
0x7fffeafd336a:	mov		rdi, qword ptr [rsp + 0x88]
0x7fffeafd3372:	mov		rdx, qword ptr [rdx]
0x7fffeafd3375:	mov		r8, rcx
0x7fffeafd3378:	sub		r8, rdx
0x7fffeafd337b:	add		rdi, r8
0x7fffeafd337e:	mov		qword ptr [rsp + 0x80], rdi
0x7fffeafd3386:	mov		rdx, qword ptr [rsp + 0x80]
0x7fffeafd338e:	sub		rcx, qword ptr [rip + 0x2c18c2b]
0x7fffeafd3395:	add		rdx, rcx
0x7fffeafd3398:	mov		qword ptr [rsp + 0x88], rdx
0x7fffeafd33a0:	mov		rdi, qword ptr [rsp + 0x88]
0x7fffeafd33a8:	mov		rdx, qword ptr [rsp + 0x28]
0x7fffeafd33ad:	call		0x7fffeafd2a10
0x7fffeafd33b2:	jmp		0x7fffeafd33e2
disassembling symbol '.LBB5_14':
textAddr: 0x7fffeafd33b7, textSize: 43
0x7fffeafd33b7:	mov		rax, qword ptr [rsp + 0x28]
0x7fffeafd33bc:	add		rax, 0x1000
0x7fffeafd33c2:	sub		rax, 1
0x7fffeafd33c8:	and		rax, 0xfffffffffffff000
0x7fffeafd33ce:	mov		qword ptr [rsp + 0xb0], rax
0x7fffeafd33d6:	mov		qword ptr [rsp + 0xa8], 0
disassembling symbol '.LBB5_15':
textAddr: 0x7fffeafd33e2, textSize: 5
0x7fffeafd33e2:	jmp		0x7fffeafd3458
disassembling symbol '.LBB5_16':
textAddr: 0x7fffeafd33e7, textSize: 113
0x7fffeafd33e7:	mov		rax, qword ptr [rip - 0x1ff53d6]
0x7fffeafd33ee:	mov		rcx, qword ptr [rsp + 0x40]
0x7fffeafd33f3:	add		rcx, 0x1000
0x7fffeafd33fa:	add		rcx, 0x1000
0x7fffeafd3401:	sub		rcx, 1
0x7fffeafd3408:	and		rcx, 0xfffffffffffff000
0x7fffeafd340f:	mov		qword ptr [rsp + 0xa8], rcx
0x7fffeafd3417:	mov		rcx, qword ptr [rsp + 0xa8]
0x7fffeafd341f:	mov		rdx, qword ptr [rsp + 0x38]
0x7fffeafd3424:	add		rdx, 0x14000
0x7fffeafd342b:	add		rdx, qword ptr [rip + 0x2c18b8e]
0x7fffeafd3432:	mov		rax, qword ptr [rax]
0x7fffeafd3435:	add		rdx, rax
0x7fffeafd3438:	add		rdx, 0x1000
0x7fffeafd343f:	sub		rdx, 1
0x7fffeafd3446:	and		rdx, 0xfffffffffffff000
0x7fffeafd344d:	add		rcx, rdx
0x7fffeafd3450:	mov		qword ptr [rsp + 0xb0], rcx
disassembling symbol '.LBB5_17':
textAddr: 0x7fffeafd3458, textSize: 109
0x7fffeafd3458:	cmp		qword ptr [rsp + 0x80], 0
0x7fffeafd3461:	jne		0x7fffeafd35e7
0x7fffeafd3467:	cmp		qword ptr [rsp + 0xa8], 0
0x7fffeafd3470:	je		0x7fffeafd351d
0x7fffeafd3476:	xor		eax, eax
0x7fffeafd3478:	mov		ecx, eax
0x7fffeafd347a:	xor		edx, edx
0x7fffeafd347c:	mov		rsi, qword ptr [rsp + 0xb0]
0x7fffeafd3484:	mov		rdi, rcx
0x7fffeafd3487:	mov		eax, 0x22
0x7fffeafd348c:	mov		qword ptr [rsp + 0x20], rcx
0x7fffeafd3491:	mov		ecx, eax
0x7fffeafd3493:	mov		r8d, 0xffffffff
0x7fffeafd3499:	mov		r9, qword ptr [rsp + 0x20]
0x7fffeafd349e:	call		0x7fffeafd2bb0
0x7fffeafd34a3:	mov		qword ptr [rsp + 0x90], rax
0x7fffeafd34ab:	mov		rax, -1
0x7fffeafd34b2:	cmp		qword ptr [rsp + 0x90], rax
0x7fffeafd34ba:	jne		0x7fffeafd34c5
0x7fffeafd34c0:	jmp		0x7fffeafd3959
disassembling symbol '.LBB5_21':
textAddr: 0x7fffeafd34c5, textSize: 83
0x7fffeafd34c5:	mov		rax, qword ptr [rsp + 0x90]
0x7fffeafd34cd:	add		rax, qword ptr [rsp + 0xa8]
0x7fffeafd34d5:	mov		rcx, qword ptr [rsp + 0xb0]
0x7fffeafd34dd:	sub		rcx, qword ptr [rsp + 0xa8]
0x7fffeafd34e5:	mov		rdi, rax
0x7fffeafd34e8:	mov		rsi, rcx
0x7fffeafd34eb:	mov		edx, 3
0x7fffeafd34f0:	call		0x7fffeafd2d40
0x7fffeafd34f5:	cmp		eax, 0
0x7fffeafd34f8:	je		0x7fffeafd3518
0x7fffeafd34fe:	mov		rdi, qword ptr [rsp + 0x90]
0x7fffeafd3506:	mov		rsi, qword ptr [rsp + 0xb0]
0x7fffeafd350e:	call		0x7fffeafd2e10
0x7fffeafd3513:	jmp		0x7fffeafd3959
disassembling symbol '.LBB5_23':
textAddr: 0x7fffeafd3518, textSize: 5
0x7fffeafd3518:	jmp		0x7fffeafd3574
disassembling symbol '.LBB5_24':
textAddr: 0x7fffeafd351d, textSize: 82
0x7fffeafd351d:	xor		eax, eax
0x7fffeafd351f:	mov		ecx, eax
0x7fffeafd3521:	mov		rsi, qword ptr [rsp + 0xb0]
0x7fffeafd3529:	mov		rdi, rcx
0x7fffeafd352c:	mov		edx, 3
0x7fffeafd3531:	mov		eax, 0x22
0x7fffeafd3536:	mov		qword ptr [rsp + 0x18], rcx
0x7fffeafd353b:	mov		ecx, eax
0x7fffeafd353d:	mov		r8d, 0xffffffff
0x7fffeafd3543:	mov		r9, qword ptr [rsp + 0x18]
0x7fffeafd3548:	call		0x7fffeafd2bb0
0x7fffeafd354d:	mov		qword ptr [rsp + 0x90], rax
0x7fffeafd3555:	mov		rax, -1
0x7fffeafd355c:	cmp		qword ptr [rsp + 0x90], rax
0x7fffeafd3564:	jne		0x7fffeafd356f
0x7fffeafd356a:	jmp		0x7fffeafd3959
disassembling symbol '.LBB5_26':
textAddr: 0x7fffeafd356f, textSize: 5
0x7fffeafd356f:	jmp		0x7fffeafd3574
disassembling symbol '.LBB5_27':
textAddr: 0x7fffeafd3574, textSize: 110
0x7fffeafd3574:	xor		eax, eax
0x7fffeafd3576:	mov		ecx, eax
0x7fffeafd3578:	mov		rdx, qword ptr [rip - 0x1ff5567]
0x7fffeafd357f:	mov		rsi, qword ptr [rsp + 0x90]
0x7fffeafd3587:	add		rsi, qword ptr [rsp + 0xb0]
0x7fffeafd358f:	mov		rdx, qword ptr [rdx]
0x7fffeafd3592:	sub		rcx, rdx
0x7fffeafd3595:	add		rsi, rcx
0x7fffeafd3598:	mov		qword ptr [rsp + 0x80], rsi
0x7fffeafd35a0:	cmp		qword ptr [rsp + 0x88], 0
0x7fffeafd35a9:	jne		0x7fffeafd35e2
0x7fffeafd35af:	xor		eax, eax
0x7fffeafd35b1:	mov		ecx, eax
0x7fffeafd35b3:	mov		rdx, qword ptr [rsp + 0x80]
0x7fffeafd35bb:	sub		rcx, qword ptr [rip + 0x2c189fe]
0x7fffeafd35c2:	add		rdx, rcx
0x7fffeafd35c5:	mov		qword ptr [rsp + 0x88], rdx
0x7fffeafd35cd:	mov		rcx, qword ptr [rsp + 0x90]
0x7fffeafd35d5:	add		rcx, qword ptr [rsp + 0xa8]
0x7fffeafd35dd:	mov		qword ptr [rsp + 0x78], rcx
disassembling symbol '.LBB5_29':
textAddr: 0x7fffeafd35e2, textSize: 5
0x7fffeafd35e2:	jmp		0x7fffeafd35e7
disassembling symbol '.LBB5_30':
textAddr: 0x7fffeafd35e7, textSize: 299
0x7fffeafd35e7:	xor		eax, eax
0x7fffeafd35e9:	mov		ecx, eax
0x7fffeafd35eb:	mov		rdx, qword ptr [rsp + 0x80]
0x7fffeafd35f3:	sub		rcx, qword ptr [rip + 0x2c189c6]
0x7fffeafd35fa:	add		rdx, rcx
0x7fffeafd35fd:	mov		rdi, rdx
0x7fffeafd3600:	call		0x7fffeafc3dd0
0x7fffeafd3605:	mov		qword ptr [rsp + 0x98], rax
0x7fffeafd360d:	mov		rax, qword ptr [rsp + 0x90]
0x7fffeafd3615:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafd361d:	mov		qword ptr [rcx + 0x58], rax
0x7fffeafd3621:	mov		rax, qword ptr [rsp + 0xb0]
0x7fffeafd3629:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafd3631:	mov		qword ptr [rcx + 0x60], rax
0x7fffeafd3635:	mov		rax, qword ptr [rsp + 0x88]
0x7fffeafd363d:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafd3645:	mov		qword ptr [rcx + 0x68], rax
0x7fffeafd3649:	mov		rax, qword ptr [rsp + 0x88]
0x7fffeafd3651:	mov		rcx, qword ptr [rsp + 0x78]
0x7fffeafd3656:	sub		rax, rcx
0x7fffeafd3659:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafd3661:	mov		qword ptr [rcx + 0x70], rax
0x7fffeafd3665:	mov		rax, qword ptr [rsp + 0xa0]
0x7fffeafd366d:	mov		esi, dword ptr [rax + 0x34]
0x7fffeafd3670:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd3678:	mov		dword ptr [rax + 0x34], esi
0x7fffeafd367b:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd3683:	add		rax, 0x3c
0x7fffeafd3689:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafd3691:	mov		qword ptr [rcx + 0x40], rax
0x7fffeafd3695:	mov		rax, qword ptr [rsp + 0xc8]
0x7fffeafd369d:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafd36a5:	mov		qword ptr [rcx + 0x80], rax
0x7fffeafd36ac:	mov		rax, qword ptr [rsp + 0xc0]
0x7fffeafd36b4:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafd36bc:	mov		qword ptr [rcx + 0x78], rax
0x7fffeafd36c0:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd36c8:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafd36d0:	mov		qword ptr [rcx], rax
0x7fffeafd36d3:	mov		rax, qword ptr [rsp + 0x80]
0x7fffeafd36db:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafd36e3:	mov		qword ptr [rcx + 0x98], rax
0x7fffeafd36ea:	cmp		dword ptr [rsp + 0x50], 0
0x7fffeafd36ef:	je		0x7fffeafd3712
0x7fffeafd36f5:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd36fd:	mov		dword ptr [rax + 0x54], 1
0x7fffeafd3704:	mov		ecx, dword ptr [rsp + 0x74]
0x7fffeafd3708:	sub		ecx, 0x200000
0x7fffeafd370e:	mov		dword ptr [rsp + 0x74], ecx
disassembling symbol '.LBB5_32':
textAddr: 0x7fffeafd3712, textSize: 59
0x7fffeafd3712:	cmp		dword ptr [rsp + 0x54], 0
0x7fffeafd3717:	je		0x7fffeafd374d
0x7fffeafd371d:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd3725:	mov		dword ptr [rax + 0x118], 1
0x7fffeafd372f:	mov		dword ptr [rsp + 0x70], 1
0x7fffeafd3737:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd373f:	add		rax, 0x120
0x7fffeafd3745:	mov		rdi, rax
0x7fffeafd3748:	call		0x7fffeafc4cb0
disassembling symbol '.LBB5_34':
textAddr: 0x7fffeafd374d, textSize: 219
0x7fffeafd374d:	lea		rax, [rip + 0x2c1883c]
0x7fffeafd3754:	add		rax, 0x18
0x7fffeafd375a:	mov		rcx, qword ptr [rsp + 0xa0]
0x7fffeafd3762:	mov		edx, dword ptr [rcx + 0x48]
0x7fffeafd3765:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafd376d:	mov		dword ptr [rcx + 0xf8], edx
0x7fffeafd3773:	mov		rcx, qword ptr [rsp + 0xa0]
0x7fffeafd377b:	mov		rcx, qword ptr [rcx + 0x28]
0x7fffeafd377f:	mov		rsi, qword ptr [rsp + 0x98]
0x7fffeafd3787:	mov		qword ptr [rsi + 0x28], rcx
0x7fffeafd378b:	mov		rdi, rax
0x7fffeafd378e:	call		0x7fffeafd39c0
0x7fffeafd3793:	mov		rsi, qword ptr [rsp + 0x88]
0x7fffeafd379b:	mov		edx, dword ptr [rsp + 0x74]
0x7fffeafd379f:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd37a7:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafd37af:	add		rcx, 0x30
0x7fffeafd37b6:	mov		r9, qword ptr [rsp + 0x98]
0x7fffeafd37be:	mov		rdi, qword ptr [rsp + 0x98]
0x7fffeafd37c6:	add		rdi, 0x30
0x7fffeafd37cd:	lea		r8, [rip + 0x20c]
0x7fffeafd37d4:	mov		qword ptr [rsp + 0x10], rdi
0x7fffeafd37d9:	mov		rdi, r8
0x7fffeafd37dc:	mov		qword ptr [rsp + 8], rcx
0x7fffeafd37e1:	mov		rcx, rax
0x7fffeafd37e4:	mov		r8, qword ptr [rsp + 8]
0x7fffeafd37e9:	mov		rax, qword ptr [rsp + 0x10]
0x7fffeafd37ee:	mov		qword ptr [rsp], rax
0x7fffeafd37f2:	mov		al, 0
0x7fffeafd37f4:	call		0x7fffeafc5250
0x7fffeafd37f9:	mov		dword ptr [rsp + 0xbc], eax
0x7fffeafd3800:	mov		al, 0
0x7fffeafd3802:	call		0x7fffeafd3b40
0x7fffeafd3807:	cmp		dword ptr [rsp + 0x70], 0
0x7fffeafd380c:	je		0x7fffeafd3828
0x7fffeafd3812:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd381a:	add		rax, 0x120
0x7fffeafd3820:	mov		rdi, rax
0x7fffeafd3823:	call		0x7fffeafc4ce0
disassembling symbol '.LBB5_36':
textAddr: 0x7fffeafd3828, textSize: 71
0x7fffeafd3828:	cmp		dword ptr [rsp + 0xbc], 0
0x7fffeafd3830:	jge		0x7fffeafd387f
0x7fffeafd3836:	lea		rax, [rip + 0x2c18753]
0x7fffeafd383d:	add		rax, 0x18
0x7fffeafd3843:	mov		rdi, rax
0x7fffeafd3846:	call		0x7fffeafd3ac0
0x7fffeafd384b:	cmp		qword ptr [rsp + 0x90], 0
0x7fffeafd3854:	je		0x7fffeafd386f
0x7fffeafd385a:	mov		rdi, qword ptr [rsp + 0x90]
0x7fffeafd3862:	mov		rsi, qword ptr [rsp + 0xb0]
0x7fffeafd386a:	call		0x7fffeafd2e10
disassembling symbol '.LBB5_39':
textAddr: 0x7fffeafd386f, textSize: 16
0x7fffeafd386f:	mov		dword ptr [rsp + 0xe4], 0xb
0x7fffeafd387a:	jmp		0x7fffeafd396b
disassembling symbol '.LBB5_40':
textAddr: 0x7fffeafd387f, textSize: 178
0x7fffeafd387f:	cmp		dword ptr [rsp + 0x70], 0
0x7fffeafd3884:	je		0x7fffeafd3936
0x7fffeafd388a:	lea		rax, [rsp + 0x38]
0x7fffeafd388f:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafd3897:	movsxd		rsi, dword ptr [rcx + 0x30]
0x7fffeafd389b:	movsxd		rdx, dword ptr [rsp + 0x58]
0x7fffeafd38a0:	add		rax, 0x24
0x7fffeafd38a6:	mov		edi, 0x90
0x7fffeafd38ab:	mov		rcx, rax
0x7fffeafd38ae:	call		0x7fffeafd3ae0
0x7fffeafd38b3:	xor		r8d, r8d
0x7fffeafd38b6:	mov		dword ptr [rsp + 0xbc], eax
0x7fffeafd38bd:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafd38c5:	add		rcx, 0x118
0x7fffeafd38cc:	mov		eax, dword ptr [rsp + 0xbc]
0x7fffeafd38d3:	cmp		eax, 0
0x7fffeafd38d6:	mov		eax, 2
0x7fffeafd38db:	cmovl		r8d, eax
0x7fffeafd38df:	mov		rdi, rcx
0x7fffeafd38e2:	mov		esi, r8d
0x7fffeafd38e5:	call		0x7fffeafd3b20
0x7fffeafd38ea:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafd38f2:	add		rcx, 0x118
0x7fffeafd38f9:	mov		edi, 0xca
0x7fffeafd38fe:	mov		rsi, rcx
0x7fffeafd3901:	mov		ecx, 1
0x7fffeafd3906:	mov		rdx, rcx
0x7fffeafd3909:	call		0x7fffeafd3ae0
0x7fffeafd390e:	cmp		dword ptr [rsp + 0xbc], 0
0x7fffeafd3916:	jge		0x7fffeafd3931
0x7fffeafd391c:	xor		eax, eax
0x7fffeafd391e:	sub		eax, dword ptr [rsp + 0xbc]
0x7fffeafd3925:	mov		dword ptr [rsp + 0xe4], eax
0x7fffeafd392c:	jmp		0x7fffeafd396b
disassembling symbol '.LBB5_43':
textAddr: 0x7fffeafd3931, textSize: 5
0x7fffeafd3931:	jmp		0x7fffeafd3936
disassembling symbol '.LBB5_44':
textAddr: 0x7fffeafd3936, textSize: 35
0x7fffeafd3936:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd393e:	mov		rcx, qword ptr [rsp + 0xd8]
0x7fffeafd3946:	mov		qword ptr [rcx], rax
0x7fffeafd3949:	mov		dword ptr [rsp + 0xe4], 0
0x7fffeafd3954:	jmp		0x7fffeafd396b
disassembling symbol '.LBB5_45':
textAddr: 0x7fffeafd3959, textSize: 18
0x7fffeafd3959:	mov		al, 0
0x7fffeafd395b:	call		0x7fffeafd3b40
0x7fffeafd3960:	mov		dword ptr [rsp + 0xe4], 0xb
disassembling symbol '.LBB5_46':
textAddr: 0x7fffeafd396b, textSize: 21
0x7fffeafd396b:	mov		eax, dword ptr [rsp + 0xe4]
0x7fffeafd3972:	add		rsp, 0xe8
0x7fffeafd3979:	ret		
0x7fffeafd397a:	nop		word ptr [rax + rax]
disassembling symbol 'init_file_lock':
textAddr: 0x7fffeafd3980, textSize: 64
0x7fffeafd3980:	mov		qword ptr [rsp - 8], rdi
0x7fffeafd3985:	cmp		qword ptr [rsp - 8], 0
0x7fffeafd398b:	je		0x7fffeafd39b2
0x7fffeafd3991:	mov		rax, qword ptr [rsp - 8]
0x7fffeafd3996:	cmp		dword ptr [rax + 0x8c], 0
0x7fffeafd399d:	jge		0x7fffeafd39b2
0x7fffeafd39a3:	mov		rax, qword ptr [rsp - 8]
0x7fffeafd39a8:	mov		dword ptr [rax + 0x8c], 0
0x7fffeafd39b2:	ret		
0x7fffeafd39b3:	nop		word ptr cs:[rax + rax]
0x7fffeafd39bd:	nop		dword ptr [rax]
disassembling symbol '.LBB6_3':
textAddr: 0x7fffeafd39b2, textSize: 14
0x7fffeafd39b2:	ret		
0x7fffeafd39b3:	nop		word ptr cs:[rax + rax]
0x7fffeafd39bd:	nop		dword ptr [rax]
disassembling symbol 'a_inc':
textAddr: 0x7fffeafd39c0, textSize: 32
0x7fffeafd39c0:	mov		qword ptr [rsp - 8], rdi
0x7fffeafd39c5:	mov		rax, qword ptr [rsp - 8]
0x7fffeafd39ca:	mov		rcx, qword ptr [rsp - 8]
0x7fffeafd39cf:	lock inc		dword ptr [rax]
0x7fffeafd39d2:	ret		
0x7fffeafd39d3:	nop		word ptr cs:[rax + rax]
0x7fffeafd39dd:	nop		dword ptr [rax]
disassembling symbol 'start':
textAddr: 0x7fffeafd39e0, textSize: 224
0x7fffeafd39e0:	sub		rsp, 0x18
0x7fffeafd39e4:	mov		qword ptr [rsp + 0x10], rdi
0x7fffeafd39e9:	mov		rax, qword ptr [rsp + 0x10]
0x7fffeafd39ee:	mov		qword ptr [rsp + 8], rax
0x7fffeafd39f3:	mov		rax, qword ptr [rsp + 8]
0x7fffeafd39f8:	cmp		dword ptr [rax + 0x118], 0
0x7fffeafd39ff:	je		0x7fffeafd3a60
0x7fffeafd3a05:	xor		eax, eax
0x7fffeafd3a07:	mov		esi, eax
0x7fffeafd3a09:	mov		rcx, qword ptr [rsp + 8]
0x7fffeafd3a0e:	add		rcx, 0x118
0x7fffeafd3a15:	mov		rdi, rcx
0x7fffeafd3a18:	mov		eax, 1
0x7fffeafd3a1d:	mov		edx, eax
0x7fffeafd3a1f:	mov		ecx, eax
0x7fffeafd3a21:	call		0x7fffeafc4a80
0x7fffeafd3a26:	mov		rsi, qword ptr [rsp + 8]
0x7fffeafd3a2b:	cmp		dword ptr [rsi + 0x118], 0
0x7fffeafd3a32:	je		0x7fffeafd3a4d
0x7fffeafd3a38:	xor		eax, eax
0x7fffeafd3a3a:	mov		edi, eax
0x7fffeafd3a3c:	mov		rcx, qword ptr [rsp + 8]
0x7fffeafd3a41:	mov		dword ptr [rcx + 0x54], 2
0x7fffeafd3a48:	call		0x7fffeafd2ef0
0x7fffeafd3a4d:	mov		rax, qword ptr [rsp + 8]
0x7fffeafd3a52:	add		rax, 0x120
0x7fffeafd3a58:	mov		rdi, rax
0x7fffeafd3a5b:	call		0x7fffeafc4ce0
0x7fffeafd3a60:	mov		rax, qword ptr [rsp + 8]
0x7fffeafd3a65:	cmp		dword ptr [rax + 0xf8], 0
0x7fffeafd3a6c:	je		0x7fffeafd3a9c
0x7fffeafd3a72:	xor		eax, eax
0x7fffeafd3a74:	mov		ecx, eax
0x7fffeafd3a76:	mov		rdx, rsp
0x7fffeafd3a79:	movabs		rsi, 0x300000000
0x7fffeafd3a83:	mov		qword ptr [rsp], rsi
0x7fffeafd3a87:	mov		edi, 0xe
0x7fffeafd3a8c:	mov		esi, 1
0x7fffeafd3a91:	mov		r8d, 8
0x7fffeafd3a97:	call		0x7fffeafd3b70
0x7fffeafd3a9c:	mov		rax, qword ptr [rsp + 8]
0x7fffeafd3aa1:	mov		rax, qword ptr [rax + 0x80]
0x7fffeafd3aa8:	mov		rcx, qword ptr [rsp + 8]
0x7fffeafd3aad:	mov		rdi, qword ptr [rcx + 0x78]
0x7fffeafd3ab1:	call		rax
0x7fffeafd3ab3:	mov		rdi, rax
0x7fffeafd3ab6:	call		0x7fffeafd2ef0
0x7fffeafd3abb:	nop		dword ptr [rax + rax]
disassembling symbol '.LBB8_3':
textAddr: 0x7fffeafd3a4d, textSize: 19
0x7fffeafd3a4d:	mov		rax, qword ptr [rsp + 8]
0x7fffeafd3a52:	add		rax, 0x120
0x7fffeafd3a58:	mov		rdi, rax
0x7fffeafd3a5b:	call		0x7fffeafc4ce0
disassembling symbol '.LBB8_4':
textAddr: 0x7fffeafd3a60, textSize: 60
0x7fffeafd3a60:	mov		rax, qword ptr [rsp + 8]
0x7fffeafd3a65:	cmp		dword ptr [rax + 0xf8], 0
0x7fffeafd3a6c:	je		0x7fffeafd3a9c
0x7fffeafd3a72:	xor		eax, eax
0x7fffeafd3a74:	mov		ecx, eax
0x7fffeafd3a76:	mov		rdx, rsp
0x7fffeafd3a79:	movabs		rsi, 0x300000000
0x7fffeafd3a83:	mov		qword ptr [rsp], rsi
0x7fffeafd3a87:	mov		edi, 0xe
0x7fffeafd3a8c:	mov		esi, 1
0x7fffeafd3a91:	mov		r8d, 8
0x7fffeafd3a97:	call		0x7fffeafd3b70
disassembling symbol '.LBB8_6':
textAddr: 0x7fffeafd3a9c, textSize: 36
0x7fffeafd3a9c:	mov		rax, qword ptr [rsp + 8]
0x7fffeafd3aa1:	mov		rax, qword ptr [rax + 0x80]
0x7fffeafd3aa8:	mov		rcx, qword ptr [rsp + 8]
0x7fffeafd3aad:	mov		rdi, qword ptr [rcx + 0x78]
0x7fffeafd3ab1:	call		rax
0x7fffeafd3ab3:	mov		rdi, rax
0x7fffeafd3ab6:	call		0x7fffeafd2ef0
0x7fffeafd3abb:	nop		dword ptr [rax + rax]
disassembling symbol 'a_dec':
textAddr: 0x7fffeafd3ac0, textSize: 32
0x7fffeafd3ac0:	mov		qword ptr [rsp - 8], rdi
0x7fffeafd3ac5:	mov		rax, qword ptr [rsp - 8]
0x7fffeafd3aca:	mov		rcx, qword ptr [rsp - 8]
0x7fffeafd3acf:	lock dec		dword ptr [rax]
0x7fffeafd3ad2:	ret		
0x7fffeafd3ad3:	nop		word ptr cs:[rax + rax]
0x7fffeafd3add:	nop		dword ptr [rax]
disassembling symbol '__syscall3':
textAddr: 0x7fffeafd3ae0, textSize: 64
0x7fffeafd3ae0:	mov		qword ptr [rsp - 8], rdi
0x7fffeafd3ae5:	mov		qword ptr [rsp - 0x10], rsi
0x7fffeafd3aea:	mov		qword ptr [rsp - 0x18], rdx
0x7fffeafd3aef:	mov		qword ptr [rsp - 0x20], rcx
0x7fffeafd3af4:	mov		rax, qword ptr [rsp - 8]
0x7fffeafd3af9:	mov		rdi, qword ptr [rsp - 0x10]
0x7fffeafd3afe:	mov		rsi, qword ptr [rsp - 0x18]
0x7fffeafd3b03:	mov		rdx, qword ptr [rsp - 0x20]
0x7fffeafd3b08:	syscall		
0x7fffeafd3b0a:	mov		qword ptr [rsp - 0x28], rax
0x7fffeafd3b0f:	mov		rax, qword ptr [rsp - 0x28]
0x7fffeafd3b14:	ret		
0x7fffeafd3b15:	nop		word ptr cs:[rax + rax]
0x7fffeafd3b1f:	nop		
disassembling symbol 'a_store':
textAddr: 0x7fffeafd3b20, textSize: 32
0x7fffeafd3b20:	mov		qword ptr [rsp - 8], rdi
0x7fffeafd3b25:	mov		dword ptr [rsp - 0xc], esi
0x7fffeafd3b29:	mov		rax, qword ptr [rsp - 8]
0x7fffeafd3b2e:	mov		ecx, dword ptr [rsp - 0xc]
0x7fffeafd3b32:	mov		dword ptr [rax], ecx
0x7fffeafd3b34:	ret		
0x7fffeafd3b35:	nop		word ptr cs:[rax + rax]
0x7fffeafd3b3f:	nop		
disassembling symbol '__release_ptc':
textAddr: 0x7fffeafd3b40, textSize: 16
0x7fffeafd3b40:	ret		
0x7fffeafd3b41:	nop		word ptr cs:[rax + rax]
0x7fffeafd3b4b:	nop		dword ptr [rax + rax]
disassembling symbol '__pthread_self':
textAddr: 0x7fffeafd3b50, textSize: 32
0x7fffeafd3b50:	mov		rax, qword ptr fs:[0]
0x7fffeafd3b59:	mov		qword ptr [rsp - 8], rax
0x7fffeafd3b5e:	mov		rax, qword ptr [rsp - 8]
0x7fffeafd3b63:	ret		
0x7fffeafd3b64:	nop		word ptr cs:[rax + rax]
0x7fffeafd3b6e:	nop		
disassembling symbol '__syscall4':
textAddr: 0x7fffeafd3b70, textSize: 73
0x7fffeafd3b70:	mov		qword ptr [rsp - 8], rdi
0x7fffeafd3b75:	mov		qword ptr [rsp - 0x10], rsi
0x7fffeafd3b7a:	mov		qword ptr [rsp - 0x18], rdx
0x7fffeafd3b7f:	mov		qword ptr [rsp - 0x20], rcx
0x7fffeafd3b84:	mov		qword ptr [rsp - 0x28], r8
0x7fffeafd3b89:	mov		rax, qword ptr [rsp - 0x28]
0x7fffeafd3b8e:	mov		qword ptr [rsp - 0x38], rax
0x7fffeafd3b93:	mov		rax, qword ptr [rsp - 8]
0x7fffeafd3b98:	mov		rdi, qword ptr [rsp - 0x10]
0x7fffeafd3b9d:	mov		rsi, qword ptr [rsp - 0x18]
0x7fffeafd3ba2:	mov		rdx, qword ptr [rsp - 0x20]
0x7fffeafd3ba7:	mov		r10, qword ptr [rsp - 0x38]
0x7fffeafd3bac:	syscall		
0x7fffeafd3bae:	mov		qword ptr [rsp - 0x30], rax
0x7fffeafd3bb3:	mov		rax, qword ptr [rsp - 0x30]
0x7fffeafd3bb8:	ret		
disassembling symbol 'pthread_kill':
textAddr: 0x7fffeafd3bc0, textSize: 160
0x7fffeafd3bc0:	sub		rsp, 0x18
0x7fffeafd3bc4:	mov		qword ptr [rsp + 0x10], rdi
0x7fffeafd3bc9:	mov		dword ptr [rsp + 0xc], esi
0x7fffeafd3bcd:	mov		rax, qword ptr [rsp + 0x10]
0x7fffeafd3bd2:	add		rax, 0x108
0x7fffeafd3bd8:	mov		rdi, rax
0x7fffeafd3bdb:	call		0x7fffeafc4150
0x7fffeafd3be0:	mov		rax, qword ptr [rsp + 0x10]
0x7fffeafd3be5:	mov		ecx, dword ptr [rax + 0xd8]
0x7fffeafd3beb:	cmp		ecx, 0
0x7fffeafd3bee:	je		0x7fffeafd3c02
0x7fffeafd3bf4:	mov		eax, 3
0x7fffeafd3bf9:	mov		qword ptr [rsp], rax
0x7fffeafd3bfd:	jmp		0x7fffeafd3c30
0x7fffeafd3c02:	mov		rax, qword ptr [rsp + 0x10]
0x7fffeafd3c07:	movsxd		rsi, dword ptr [rax + 0x34]
0x7fffeafd3c0b:	mov		rax, qword ptr [rsp + 0x10]
0x7fffeafd3c10:	movsxd		rdx, dword ptr [rax + 0x30]
0x7fffeafd3c14:	movsxd		rcx, dword ptr [rsp + 0xc]
0x7fffeafd3c19:	mov		edi, 0xea
0x7fffeafd3c1e:	call		0x7fffeafd3c60
0x7fffeafd3c23:	xor		r8d, r8d
0x7fffeafd3c26:	mov		ecx, r8d
0x7fffeafd3c29:	sub		rcx, rax
0x7fffeafd3c2c:	mov		qword ptr [rsp], rcx
0x7fffeafd3c30:	mov		rax, qword ptr [rsp]
0x7fffeafd3c34:	mov		dword ptr [rsp + 8], eax
0x7fffeafd3c38:	mov		rcx, qword ptr [rsp + 0x10]
0x7fffeafd3c3d:	add		rcx, 0x108
0x7fffeafd3c44:	mov		rdi, rcx
0x7fffeafd3c47:	call		0x7fffeafc41d0
0x7fffeafd3c4c:	mov		eax, dword ptr [rsp + 8]
0x7fffeafd3c50:	add		rsp, 0x18
0x7fffeafd3c54:	ret		
0x7fffeafd3c55:	nop		word ptr cs:[rax + rax]
0x7fffeafd3c5f:	nop		
disassembling symbol '.LBB0_2':
textAddr: 0x7fffeafd3c02, textSize: 46
0x7fffeafd3c02:	mov		rax, qword ptr [rsp + 0x10]
0x7fffeafd3c07:	movsxd		rsi, dword ptr [rax + 0x34]
0x7fffeafd3c0b:	mov		rax, qword ptr [rsp + 0x10]
0x7fffeafd3c10:	movsxd		rdx, dword ptr [rax + 0x30]
0x7fffeafd3c14:	movsxd		rcx, dword ptr [rsp + 0xc]
0x7fffeafd3c19:	mov		edi, 0xea
0x7fffeafd3c1e:	call		0x7fffeafd3c60
0x7fffeafd3c23:	xor		r8d, r8d
0x7fffeafd3c26:	mov		ecx, r8d
0x7fffeafd3c29:	sub		rcx, rax
0x7fffeafd3c2c:	mov		qword ptr [rsp], rcx
disassembling symbol '.LBB0_3':
textAddr: 0x7fffeafd3c30, textSize: 48
0x7fffeafd3c30:	mov		rax, qword ptr [rsp]
0x7fffeafd3c34:	mov		dword ptr [rsp + 8], eax
0x7fffeafd3c38:	mov		rcx, qword ptr [rsp + 0x10]
0x7fffeafd3c3d:	add		rcx, 0x108
0x7fffeafd3c44:	mov		rdi, rcx
0x7fffeafd3c47:	call		0x7fffeafc41d0
0x7fffeafd3c4c:	mov		eax, dword ptr [rsp + 8]
0x7fffeafd3c50:	add		rsp, 0x18
0x7fffeafd3c54:	ret		
0x7fffeafd3c55:	nop		word ptr cs:[rax + rax]
0x7fffeafd3c5f:	nop		
disassembling symbol '__syscall3':
textAddr: 0x7fffeafd3c60, textSize: 53
0x7fffeafd3c60:	mov		qword ptr [rsp - 8], rdi
0x7fffeafd3c65:	mov		qword ptr [rsp - 0x10], rsi
0x7fffeafd3c6a:	mov		qword ptr [rsp - 0x18], rdx
0x7fffeafd3c6f:	mov		qword ptr [rsp - 0x20], rcx
0x7fffeafd3c74:	mov		rax, qword ptr [rsp - 8]
0x7fffeafd3c79:	mov		rdi, qword ptr [rsp - 0x10]
0x7fffeafd3c7e:	mov		rsi, qword ptr [rsp - 0x18]
0x7fffeafd3c83:	mov		rdx, qword ptr [rsp - 0x20]
0x7fffeafd3c88:	syscall		
0x7fffeafd3c8a:	mov		qword ptr [rsp - 0x28], rax
0x7fffeafd3c8f:	mov		rax, qword ptr [rsp - 0x28]
0x7fffeafd3c94:	ret		
disassembling symbol 'pthread_self':
textAddr: 0x7fffeafd3ca0, textSize: 128
0x7fffeafd3ca0:	push		rax
0x7fffeafd3ca1:	cmp		dword ptr [rip + 0x2c1725c], 0
0x7fffeafd3ca8:	jne		0x7fffeafd3d04
0x7fffeafd3cae:	cmp		dword ptr [rip + 0x2c1724b], 0
0x7fffeafd3cb5:	je		0x7fffeafd3cc8
0x7fffeafd3cbb:	mov		qword ptr [rsp], 0
0x7fffeafd3cc3:	jmp		0x7fffeafd3d0d
0x7fffeafd3cc8:	call		0x7fffeafd3d40
0x7fffeafd3ccd:	cmp		eax, 0
0x7fffeafd3cd0:	jge		0x7fffeafd3ce0
0x7fffeafd3cd6:	mov		dword ptr [rip + 0x2c17220], 1
0x7fffeafd3ce0:	cmp		dword ptr [rip + 0x2c17219], 0
0x7fffeafd3ce7:	je		0x7fffeafd3cfa
0x7fffeafd3ced:	mov		qword ptr [rsp], 0
0x7fffeafd3cf5:	jmp		0x7fffeafd3d0d
0x7fffeafd3cfa:	mov		dword ptr [rip + 0x2c17200], 1
0x7fffeafd3d04:	call		0x7fffeafd3ee0
0x7fffeafd3d09:	mov		qword ptr [rsp], rax
0x7fffeafd3d0d:	mov		rax, qword ptr [rsp]
0x7fffeafd3d11:	pop		rcx
0x7fffeafd3d12:	ret		
0x7fffeafd3d13:	nop		word ptr cs:[rax + rax]
0x7fffeafd3d1d:	nop		dword ptr [rax]
disassembling symbol '.LBB0_3':
textAddr: 0x7fffeafd3cc8, textSize: 24
0x7fffeafd3cc8:	call		0x7fffeafd3d40
0x7fffeafd3ccd:	cmp		eax, 0
0x7fffeafd3cd0:	jge		0x7fffeafd3ce0
0x7fffeafd3cd6:	mov		dword ptr [rip + 0x2c17220], 1
disassembling symbol '.LBB0_5':
textAddr: 0x7fffeafd3ce0, textSize: 26
0x7fffeafd3ce0:	cmp		dword ptr [rip + 0x2c17219], 0
0x7fffeafd3ce7:	je		0x7fffeafd3cfa
0x7fffeafd3ced:	mov		qword ptr [rsp], 0
0x7fffeafd3cf5:	jmp		0x7fffeafd3d0d
disassembling symbol '.LBB0_7':
textAddr: 0x7fffeafd3cfa, textSize: 10
0x7fffeafd3cfa:	mov		dword ptr [rip + 0x2c17200], 1
disassembling symbol '.LBB0_8':
textAddr: 0x7fffeafd3d04, textSize: 9
0x7fffeafd3d04:	call		0x7fffeafd3ee0
0x7fffeafd3d09:	mov		qword ptr [rsp], rax
disassembling symbol '.LBB0_9':
textAddr: 0x7fffeafd3d0d, textSize: 19
0x7fffeafd3d0d:	mov		rax, qword ptr [rsp]
0x7fffeafd3d11:	pop		rcx
0x7fffeafd3d12:	ret		
0x7fffeafd3d13:	nop		word ptr cs:[rax + rax]
0x7fffeafd3d1d:	nop		dword ptr [rax]
disassembling symbol '__install_initial_tls':
textAddr: 0x7fffeafd3d20, textSize: 32
0x7fffeafd3d20:	push		rax
0x7fffeafd3d21:	mov		qword ptr [rsp], rdi
0x7fffeafd3d25:	mov		rax, qword ptr [rsp]
0x7fffeafd3d29:	mov		qword ptr [rip + 0x2c17220], rax
0x7fffeafd3d30:	call		0x7fffeafd3ca0
0x7fffeafd3d35:	pop		rcx
0x7fffeafd3d36:	ret		
0x7fffeafd3d37:	nop		word ptr [rax + rax]
disassembling symbol 'init_main_thread':
textAddr: 0x7fffeafd3d40, textSize: 288
0x7fffeafd3d40:	sub		rsp, 0x18
0x7fffeafd3d44:	xor		eax, eax
0x7fffeafd3d46:	mov		ecx, eax
0x7fffeafd3d48:	lea		rdx, [rsp + 8]
0x7fffeafd3d4d:	movabs		rsi, 0x300000000
0x7fffeafd3d57:	mov		qword ptr [rsp + 8], rsi
0x7fffeafd3d5c:	mov		edi, 0xe
0x7fffeafd3d61:	mov		esi, 1
0x7fffeafd3d66:	mov		r8d, 8
0x7fffeafd3d6c:	call		0x7fffeafd3e60
0x7fffeafd3d71:	mov		rcx, qword ptr [rip + 0x2c171d8]
0x7fffeafd3d78:	mov		rdi, rcx
0x7fffeafd3d7b:	mov		qword ptr [rsp], rax
0x7fffeafd3d7f:	call		0x7fffeafc42a0
0x7fffeafd3d84:	cmp		eax, 0
0x7fffeafd3d87:	jge		0x7fffeafd3d9a
0x7fffeafd3d8d:	mov		dword ptr [rsp + 0x14], 0xffffffff
0x7fffeafd3d95:	jmp		0x7fffeafd3e48
0x7fffeafd3d9a:	mov		rax, qword ptr [rip - 0x1ff5e31]
0x7fffeafd3da1:	mov		ecx, dword ptr [rip + 0x2c18205]
0x7fffeafd3da7:	mov		rdx, qword ptr [rip + 0x2c171a2]
0x7fffeafd3dae:	mov		dword ptr [rdx + 0x4c], ecx
0x7fffeafd3db1:	mov		rdx, qword ptr [rip + 0x2c17198]
0x7fffeafd3db8:	mov		qword ptr [rdx + 0x98], rax
0x7fffeafd3dbf:	call		0x7fffeafc3cb0
0x7fffeafd3dc4:	mov		rdx, qword ptr [rip + 0x2c17185]
0x7fffeafd3dcb:	mov		qword ptr [rdx + 0x40], rax
0x7fffeafd3dcf:	mov		rax, qword ptr [rip + 0x2c1717a]
0x7fffeafd3dd6:	mov		rdx, qword ptr [rip + 0x2c17173]
0x7fffeafd3ddd:	mov		qword ptr [rdx], rax
0x7fffeafd3de0:	mov		rax, qword ptr [rip + 0x2c17169]
0x7fffeafd3de7:	add		rax, 0x30
0x7fffeafd3ded:	mov		edi, 0xda
0x7fffeafd3df2:	mov		rsi, rax
0x7fffeafd3df5:	call		0x7fffeafd3eb0
0x7fffeafd3dfa:	mov		rdx, qword ptr [rip + 0x2c1714f]
0x7fffeafd3e01:	mov		dword ptr [rdx + 0x34], eax
0x7fffeafd3e04:	mov		rdx, qword ptr [rip + 0x2c17145]
0x7fffeafd3e0b:	mov		dword ptr [rdx + 0x30], eax
0x7fffeafd3e0e:	mov		rdx, qword ptr [rip + 0x2c1713b]
0x7fffeafd3e15:	cmp		qword ptr [rdx + 8], 0
0x7fffeafd3e1a:	jne		0x7fffeafd3e32
0x7fffeafd3e20:	mov		rax, qword ptr [rip + 0x2c17129]
0x7fffeafd3e27:	lea		rcx, [rip + 0x2c1707a]
0x7fffeafd3e2e:	mov		qword ptr [rax + 8], rcx
0x7fffeafd3e32:	mov		rax, qword ptr [rip + 0x2c17117]
0x7fffeafd3e39:	mov		qword ptr [rip + 0x2c18150], rax
0x7fffeafd3e40:	mov		dword ptr [rsp + 0x14], 0
0x7fffeafd3e48:	mov		eax, dword ptr [rsp + 0x14]
0x7fffeafd3e4c:	add		rsp, 0x18
0x7fffeafd3e50:	ret		
0x7fffeafd3e51:	nop		word ptr cs:[rax + rax]
0x7fffeafd3e5b:	nop		dword ptr [rax + rax]
disassembling symbol '.LBB2_2':
textAddr: 0x7fffeafd3d9a, textSize: 152
0x7fffeafd3d9a:	mov		rax, qword ptr [rip - 0x1ff5e31]
0x7fffeafd3da1:	mov		ecx, dword ptr [rip + 0x2c18205]
0x7fffeafd3da7:	mov		rdx, qword ptr [rip + 0x2c171a2]
0x7fffeafd3dae:	mov		dword ptr [rdx + 0x4c], ecx
0x7fffeafd3db1:	mov		rdx, qword ptr [rip + 0x2c17198]
0x7fffeafd3db8:	mov		qword ptr [rdx + 0x98], rax
0x7fffeafd3dbf:	call		0x7fffeafc3cb0
0x7fffeafd3dc4:	mov		rdx, qword ptr [rip + 0x2c17185]
0x7fffeafd3dcb:	mov		qword ptr [rdx + 0x40], rax
0x7fffeafd3dcf:	mov		rax, qword ptr [rip + 0x2c1717a]
0x7fffeafd3dd6:	mov		rdx, qword ptr [rip + 0x2c17173]
0x7fffeafd3ddd:	mov		qword ptr [rdx], rax
0x7fffeafd3de0:	mov		rax, qword ptr [rip + 0x2c17169]
0x7fffeafd3de7:	add		rax, 0x30
0x7fffeafd3ded:	mov		edi, 0xda
0x7fffeafd3df2:	mov		rsi, rax
0x7fffeafd3df5:	call		0x7fffeafd3eb0
0x7fffeafd3dfa:	mov		rdx, qword ptr [rip + 0x2c1714f]
0x7fffeafd3e01:	mov		dword ptr [rdx + 0x34], eax
0x7fffeafd3e04:	mov		rdx, qword ptr [rip + 0x2c17145]
0x7fffeafd3e0b:	mov		dword ptr [rdx + 0x30], eax
0x7fffeafd3e0e:	mov		rdx, qword ptr [rip + 0x2c1713b]
0x7fffeafd3e15:	cmp		qword ptr [rdx + 8], 0
0x7fffeafd3e1a:	jne		0x7fffeafd3e32
0x7fffeafd3e20:	mov		rax, qword ptr [rip + 0x2c17129]
0x7fffeafd3e27:	lea		rcx, [rip + 0x2c1707a]
0x7fffeafd3e2e:	mov		qword ptr [rax + 8], rcx
disassembling symbol '.LBB2_4':
textAddr: 0x7fffeafd3e32, textSize: 22
0x7fffeafd3e32:	mov		rax, qword ptr [rip + 0x2c17117]
0x7fffeafd3e39:	mov		qword ptr [rip + 0x2c18150], rax
0x7fffeafd3e40:	mov		dword ptr [rsp + 0x14], 0
disassembling symbol '.LBB2_5':
textAddr: 0x7fffeafd3e48, textSize: 24
0x7fffeafd3e48:	mov		eax, dword ptr [rsp + 0x14]
0x7fffeafd3e4c:	add		rsp, 0x18
0x7fffeafd3e50:	ret		
0x7fffeafd3e51:	nop		word ptr cs:[rax + rax]
0x7fffeafd3e5b:	nop		dword ptr [rax + rax]
disassembling symbol '__syscall4':
textAddr: 0x7fffeafd3e60, textSize: 80
0x7fffeafd3e60:	mov		qword ptr [rsp - 8], rdi
0x7fffeafd3e65:	mov		qword ptr [rsp - 0x10], rsi
0x7fffeafd3e6a:	mov		qword ptr [rsp - 0x18], rdx
0x7fffeafd3e6f:	mov		qword ptr [rsp - 0x20], rcx
0x7fffeafd3e74:	mov		qword ptr [rsp - 0x28], r8
0x7fffeafd3e79:	mov		rax, qword ptr [rsp - 0x28]
0x7fffeafd3e7e:	mov		qword ptr [rsp - 0x38], rax
0x7fffeafd3e83:	mov		rax, qword ptr [rsp - 8]
0x7fffeafd3e88:	mov		rdi, qword ptr [rsp - 0x10]
0x7fffeafd3e8d:	mov		rsi, qword ptr [rsp - 0x18]
0x7fffeafd3e92:	mov		rdx, qword ptr [rsp - 0x20]
0x7fffeafd3e97:	mov		r10, qword ptr [rsp - 0x38]
0x7fffeafd3e9c:	syscall		
0x7fffeafd3e9e:	mov		qword ptr [rsp - 0x30], rax
0x7fffeafd3ea3:	mov		rax, qword ptr [rsp - 0x30]
0x7fffeafd3ea8:	ret		
0x7fffeafd3ea9:	nop		dword ptr [rax]
disassembling symbol '__syscall1':
textAddr: 0x7fffeafd3eb0, textSize: 48
0x7fffeafd3eb0:	mov		qword ptr [rsp - 8], rdi
0x7fffeafd3eb5:	mov		qword ptr [rsp - 0x10], rsi
0x7fffeafd3eba:	mov		rax, qword ptr [rsp - 8]
0x7fffeafd3ebf:	mov		rdi, qword ptr [rsp - 0x10]
0x7fffeafd3ec4:	syscall		
0x7fffeafd3ec6:	mov		qword ptr [rsp - 0x18], rax
0x7fffeafd3ecb:	mov		rax, qword ptr [rsp - 0x18]
0x7fffeafd3ed0:	ret		
0x7fffeafd3ed1:	nop		word ptr cs:[rax + rax]
0x7fffeafd3edb:	nop		dword ptr [rax + rax]
disassembling symbol '__pthread_self':
textAddr: 0x7fffeafd3ee0, textSize: 20
0x7fffeafd3ee0:	mov		rax, qword ptr fs:[0]
0x7fffeafd3ee9:	mov		qword ptr [rsp - 8], rax
0x7fffeafd3eee:	mov		rax, qword ptr [rsp - 8]
0x7fffeafd3ef3:	ret		
disassembling symbol 'pthread_sigmask':
textAddr: 0x7fffeafd3f00, textSize: 160
0x7fffeafd3f00:	sub		rsp, 0x28
0x7fffeafd3f04:	mov		dword ptr [rsp + 0x20], edi
0x7fffeafd3f08:	mov		qword ptr [rsp + 0x18], rsi
0x7fffeafd3f0d:	mov		qword ptr [rsp + 0x10], rdx
0x7fffeafd3f12:	mov		eax, dword ptr [rsp + 0x20]
0x7fffeafd3f16:	sub		eax, 0
0x7fffeafd3f19:	cmp		eax, 2
0x7fffeafd3f1c:	jbe		0x7fffeafd3f2f
0x7fffeafd3f22:	mov		dword ptr [rsp + 0x24], 0x16
0x7fffeafd3f2a:	jmp		0x7fffeafd3f8f
0x7fffeafd3f2f:	movsxd		rsi, dword ptr [rsp + 0x20]
0x7fffeafd3f34:	mov		rdx, qword ptr [rsp + 0x18]
0x7fffeafd3f39:	mov		rcx, qword ptr [rsp + 0x10]
0x7fffeafd3f3e:	mov		edi, 0xe
0x7fffeafd3f43:	mov		r8d, 8
0x7fffeafd3f49:	call		0x7fffeafd3fa0
0x7fffeafd3f4e:	xor		r9d, r9d
0x7fffeafd3f51:	mov		ecx, r9d
0x7fffeafd3f54:	sub		rcx, rax
0x7fffeafd3f57:	mov		dword ptr [rsp + 0xc], ecx
0x7fffeafd3f5b:	cmp		dword ptr [rsp + 0xc], 0
0x7fffeafd3f60:	jne		0x7fffeafd3f87
0x7fffeafd3f66:	cmp		qword ptr [rsp + 0x10], 0
0x7fffeafd3f6c:	je		0x7fffeafd3f87
0x7fffeafd3f72:	mov		rax, qword ptr [rsp + 0x10]
0x7fffeafd3f77:	movabs		rcx, 0xfffffffc7fffffff
0x7fffeafd3f81:	and		rcx, qword ptr [rax]
0x7fffeafd3f84:	mov		qword ptr [rax], rcx
0x7fffeafd3f87:	mov		eax, dword ptr [rsp + 0xc]
0x7fffeafd3f8b:	mov		dword ptr [rsp + 0x24], eax
0x7fffeafd3f8f:	mov		eax, dword ptr [rsp + 0x24]
0x7fffeafd3f93:	add		rsp, 0x28
0x7fffeafd3f97:	ret		
0x7fffeafd3f98:	nop		dword ptr [rax + rax]
disassembling symbol '.LBB0_2':
textAddr: 0x7fffeafd3f2f, textSize: 88
0x7fffeafd3f2f:	movsxd		rsi, dword ptr [rsp + 0x20]
0x7fffeafd3f34:	mov		rdx, qword ptr [rsp + 0x18]
0x7fffeafd3f39:	mov		rcx, qword ptr [rsp + 0x10]
0x7fffeafd3f3e:	mov		edi, 0xe
0x7fffeafd3f43:	mov		r8d, 8
0x7fffeafd3f49:	call		0x7fffeafd3fa0
0x7fffeafd3f4e:	xor		r9d, r9d
0x7fffeafd3f51:	mov		ecx, r9d
0x7fffeafd3f54:	sub		rcx, rax
0x7fffeafd3f57:	mov		dword ptr [rsp + 0xc], ecx
0x7fffeafd3f5b:	cmp		dword ptr [rsp + 0xc], 0
0x7fffeafd3f60:	jne		0x7fffeafd3f87
0x7fffeafd3f66:	cmp		qword ptr [rsp + 0x10], 0
0x7fffeafd3f6c:	je		0x7fffeafd3f87
0x7fffeafd3f72:	mov		rax, qword ptr [rsp + 0x10]
0x7fffeafd3f77:	movabs		rcx, 0xfffffffc7fffffff
0x7fffeafd3f81:	and		rcx, qword ptr [rax]
0x7fffeafd3f84:	mov		qword ptr [rax], rcx
disassembling symbol '.LBB0_5':
textAddr: 0x7fffeafd3f87, textSize: 8
0x7fffeafd3f87:	mov		eax, dword ptr [rsp + 0xc]
0x7fffeafd3f8b:	mov		dword ptr [rsp + 0x24], eax
disassembling symbol '.LBB0_6':
textAddr: 0x7fffeafd3f8f, textSize: 17
0x7fffeafd3f8f:	mov		eax, dword ptr [rsp + 0x24]
0x7fffeafd3f93:	add		rsp, 0x28
0x7fffeafd3f97:	ret		
0x7fffeafd3f98:	nop		dword ptr [rax + rax]
disassembling symbol '__syscall4':
textAddr: 0x7fffeafd3fa0, textSize: 73
0x7fffeafd3fa0:	mov		qword ptr [rsp - 8], rdi
0x7fffeafd3fa5:	mov		qword ptr [rsp - 0x10], rsi
0x7fffeafd3faa:	mov		qword ptr [rsp - 0x18], rdx
0x7fffeafd3faf:	mov		qword ptr [rsp - 0x20], rcx
0x7fffeafd3fb4:	mov		qword ptr [rsp - 0x28], r8
0x7fffeafd3fb9:	mov		rax, qword ptr [rsp - 0x28]
0x7fffeafd3fbe:	mov		qword ptr [rsp - 0x38], rax
0x7fffeafd3fc3:	mov		rax, qword ptr [rsp - 8]
0x7fffeafd3fc8:	mov		rdi, qword ptr [rsp - 0x10]
0x7fffeafd3fcd:	mov		rsi, qword ptr [rsp - 0x18]
0x7fffeafd3fd2:	mov		rdx, qword ptr [rsp - 0x20]
0x7fffeafd3fd7:	mov		r10, qword ptr [rsp - 0x38]
0x7fffeafd3fdc:	syscall		
0x7fffeafd3fde:	mov		qword ptr [rsp - 0x30], rax
0x7fffeafd3fe3:	mov		rax, qword ptr [rsp - 0x30]
0x7fffeafd3fe8:	ret		
disassembling symbol 'puts':
textAddr: 0x7fffeafd3ff0, textSize: 12
0x7fffeafd3ff0:	mov		r15, 6
0x7fffeafd3ff7:	jmp		0x7fffeafd2e90
disassembling symbol 'raise':
textAddr: 0x7fffeafd4000, textSize: 144
0x7fffeafd4000:	sub		rsp, 0x98
0x7fffeafd4007:	mov		dword ptr [rsp + 0x94], edi
0x7fffeafd400e:	lea		rax, [rsp + 8]
0x7fffeafd4013:	mov		rdi, rax
0x7fffeafd4016:	call		0x7fffeafc4cb0
0x7fffeafd401b:	mov		edi, 0xba
0x7fffeafd4020:	call		0x7fffeafd4090
0x7fffeafd4025:	mov		dword ptr [rsp + 0x8c], eax
0x7fffeafd402c:	mov		edi, 0x27
0x7fffeafd4031:	call		0x7fffeafd4090
0x7fffeafd4036:	mov		dword ptr [rsp + 0x90], eax
0x7fffeafd403d:	movsxd		rsi, dword ptr [rsp + 0x90]
0x7fffeafd4045:	movsxd		rdx, dword ptr [rsp + 0x8c]
0x7fffeafd404d:	movsxd		rcx, dword ptr [rsp + 0x94]
0x7fffeafd4055:	mov		edi, 0xea
0x7fffeafd405a:	call		0x7fffeafd40b0
0x7fffeafd405f:	mov		rdi, rax
0x7fffeafd4062:	call		0x7fffeafd46c0
0x7fffeafd4067:	mov		dword ptr [rsp + 0x88], eax
0x7fffeafd406e:	lea		rcx, [rsp + 8]
0x7fffeafd4073:	mov		rdi, rcx
0x7fffeafd4076:	call		0x7fffeafc4ce0
0x7fffeafd407b:	mov		eax, dword ptr [rsp + 0x88]
0x7fffeafd4082:	add		rsp, 0x98
0x7fffeafd4089:	ret		
0x7fffeafd408a:	nop		word ptr [rax + rax]
disassembling symbol '__syscall0':
textAddr: 0x7fffeafd4090, textSize: 32
0x7fffeafd4090:	mov		qword ptr [rsp - 8], rdi
0x7fffeafd4095:	mov		rax, qword ptr [rsp - 8]
0x7fffeafd409a:	syscall		
0x7fffeafd409c:	mov		qword ptr [rsp - 0x10], rax
0x7fffeafd40a1:	mov		rax, qword ptr [rsp - 0x10]
0x7fffeafd40a6:	ret		
0x7fffeafd40a7:	nop		word ptr [rax + rax]
disassembling symbol '__syscall3':
textAddr: 0x7fffeafd40b0, textSize: 53
0x7fffeafd40b0:	mov		qword ptr [rsp - 8], rdi
0x7fffeafd40b5:	mov		qword ptr [rsp - 0x10], rsi
0x7fffeafd40ba:	mov		qword ptr [rsp - 0x18], rdx
0x7fffeafd40bf:	mov		qword ptr [rsp - 0x20], rcx
0x7fffeafd40c4:	mov		rax, qword ptr [rsp - 8]
0x7fffeafd40c9:	mov		rdi, qword ptr [rsp - 0x10]
0x7fffeafd40ce:	mov		rsi, qword ptr [rsp - 0x18]
0x7fffeafd40d3:	mov		rdx, qword ptr [rsp - 0x20]
0x7fffeafd40d8:	syscall		
0x7fffeafd40da:	mov		qword ptr [rsp - 0x28], rax
0x7fffeafd40df:	mov		rax, qword ptr [rsp - 0x28]
0x7fffeafd40e4:	ret		
disassembling symbol 'srand':
textAddr: 0x7fffeafd40f0, textSize: 32
0x7fffeafd40f0:	mov		dword ptr [rsp - 4], edi
0x7fffeafd40f4:	mov		eax, dword ptr [rsp - 4]
0x7fffeafd40f8:	sub		eax, 1
0x7fffeafd40fb:	mov		eax, eax
0x7fffeafd40fd:	mov		ecx, eax
0x7fffeafd40ff:	mov		qword ptr [rip + 0x2c16db2], rcx
0x7fffeafd4106:	ret		
0x7fffeafd4107:	nop		word ptr [rax + rax]
disassembling symbol 'rand':
textAddr: 0x7fffeafd4110, textSize: 43
0x7fffeafd4110:	movabs		rax, 0x5851f42d4c957f2d
0x7fffeafd411a:	imul		rax, qword ptr [rip + 0x2c16d96]
0x7fffeafd4122:	add		rax, 1
0x7fffeafd4128:	mov		qword ptr [rip + 0x2c16d89], rax
0x7fffeafd412f:	mov		rax, qword ptr [rip + 0x2c16d82]
0x7fffeafd4136:	shr		rax, 0x21
0x7fffeafd413a:	ret		
disassembling symbol '__restore_rt':
textAddr: 0x7fffeafd4140, textSize: 7
0x7fffeafd4140:	mov		eax, 0xf
0x7fffeafd4145:	syscall		
disassembling symbol 'gadget1':
textAddr: 0x7fffeafd4150, textSize: 32
0x7fffeafd4150:	pop		rax
0x7fffeafd4151:	add		rax, 5
0x7fffeafd4155:	ret		
0x7fffeafd4156:	nop		word ptr cs:[rax + rax]
0x7fffeafd4160:	nop		word ptr cs:[rax + rax]
0x7fffeafd416a:	nop		word ptr [rax + rax]
disassembling symbol 'gadget2':
textAddr: 0x7fffeafd4170, textSize: 32
0x7fffeafd4170:	pop		rdi
0x7fffeafd4171:	pop		rbx
0x7fffeafd4172:	ret		
0x7fffeafd4173:	nop		word ptr cs:[rax + rax]
0x7fffeafd417d:	nop		word ptr cs:[rax + rax]
0x7fffeafd4187:	nop		word ptr [rax + rax]
disassembling symbol 'gadget3':
textAddr: 0x7fffeafd4190, textSize: 32
0x7fffeafd4190:	enclu		
0x7fffeafd4193:	nop		word ptr cs:[rax + rax]
0x7fffeafd419d:	nop		word ptr cs:[rax + rax]
0x7fffeafd41a7:	nop		word ptr [rax + rax]
disassembling symbol 'gadget4':
textAddr: 0x7fffeafd41b0, textSize: 32
0x7fffeafd41b0:	pop		rdi
0x7fffeafd41b1:	ret		
0x7fffeafd41b2:	nop		word ptr cs:[rax + rax]
0x7fffeafd41bc:	nop		word ptr cs:[rax + rax]
0x7fffeafd41c6:	nop		word ptr cs:[rax + rax]
disassembling symbol 'exit':
textAddr: 0x7fffeafd41d0, textSize: 46
0x7fffeafd41d0:	movabs		r14, 0x7fffedbeaf68
0x7fffeafd41da:	mov		rbp, qword ptr [r14]
0x7fffeafd41dd:	movabs		r14, 0x7fffedbeaf60
0x7fffeafd41e7:	mov		rsp, qword ptr [r14]
0x7fffeafd41ea:	nop		word ptr [rax + rax]
0x7fffeafd41f0:	movabs		r14, 0x7fffedbeaf58
0x7fffeafd41fa:	pop		rax
0x7fffeafd41fb:	jmp		qword ptr [r14]
disassembling symbol 'dummy':
textAddr: 0x7fffeafd4200, textSize: 16
0x7fffeafd4200:	xor		eax, eax
0x7fffeafd4202:	ret		
0x7fffeafd4203:	nop		word ptr cs:[rax + rax]
0x7fffeafd420d:	nop		dword ptr [rax]
disassembling symbol '__get_handler_set':
textAddr: 0x7fffeafd4210, textSize: 48
0x7fffeafd4210:	push		rax
0x7fffeafd4211:	lea		rax, [rip + 0x2c16ca8]
0x7fffeafd4218:	mov		qword ptr [rsp], rdi
0x7fffeafd421c:	mov		rcx, qword ptr [rsp]
0x7fffeafd4220:	mov		rdi, rcx
0x7fffeafd4223:	mov		rsi, rax
0x7fffeafd4226:	mov		edx, 8
0x7fffeafd422b:	call		0x7fffeafd2590
0x7fffeafd4230:	pop		rax
0x7fffeafd4231:	ret		
0x7fffeafd4232:	nop		word ptr cs:[rax + rax]
0x7fffeafd423c:	nop		dword ptr [rax]
disassembling symbol '__libc_sigaction':
textAddr: 0x7fffeafd4240, textSize: 528
0x7fffeafd4240:	sub		rsp, 0x78
0x7fffeafd4244:	mov		dword ptr [rsp + 0x70], edi
0x7fffeafd4248:	mov		qword ptr [rsp + 0x68], rsi
0x7fffeafd424d:	mov		qword ptr [rsp + 0x60], rdx
0x7fffeafd4252:	cmp		dword ptr [rsp + 0x70], 0x41
0x7fffeafd4257:	jb		0x7fffeafd4275
0x7fffeafd425d:	call		0x7fffeafc3cb0
0x7fffeafd4262:	mov		dword ptr [rax], 0x16
0x7fffeafd4268:	mov		dword ptr [rsp + 0x74], 0xffffffff
0x7fffeafd4270:	jmp		0x7fffeafd4447
0x7fffeafd4275:	cmp		qword ptr [rsp + 0x68], 0
0x7fffeafd427b:	je		0x7fffeafd434a
0x7fffeafd4281:	mov		rax, qword ptr [rsp + 0x68]
0x7fffeafd4286:	mov		rax, qword ptr [rax]
0x7fffeafd4289:	cmp		rax, 1
0x7fffeafd428d:	jbe		0x7fffeafd42d5
0x7fffeafd4293:	mov		eax, dword ptr [rsp + 0x70]
0x7fffeafd4297:	sub		eax, 1
0x7fffeafd429a:	movsxd		rcx, eax
0x7fffeafd429d:	shr		rcx, 6
0x7fffeafd42a1:	shl		rcx, 3
0x7fffeafd42a5:	lea		rdx, [rip + 0x2c16c14]
0x7fffeafd42ac:	add		rdx, rcx
0x7fffeafd42af:	mov		eax, dword ptr [rsp + 0x70]
0x7fffeafd42b3:	sub		eax, 1
0x7fffeafd42b6:	movsxd		rcx, eax
0x7fffeafd42b9:	and		rcx, 0x3f
0x7fffeafd42c0:	mov		esi, 1
0x7fffeafd42c5:	shl		rsi, cl
0x7fffeafd42c8:	mov		rdi, rdx
0x7fffeafd42cb:	call		0x7fffeafd4450
0x7fffeafd42d0:	call		0x7fffeafd4200
0x7fffeafd42d5:	mov		rax, qword ptr [rip - 0x1fedc3c]
0x7fffeafd42dc:	mov		rcx, qword ptr [rip - 0x1fedc5b]
0x7fffeafd42e3:	mov		rdx, qword ptr [rsp + 0x68]
0x7fffeafd42e8:	mov		rdx, qword ptr [rdx]
0x7fffeafd42eb:	mov		qword ptr [rsp + 0x40], rdx
0x7fffeafd42f0:	mov		rdx, qword ptr [rsp + 0x68]
0x7fffeafd42f5:	mov		esi, dword ptr [rdx + 0x88]
0x7fffeafd42fb:	or		esi, 0x4000000
0x7fffeafd4301:	movsxd		rdx, esi
0x7fffeafd4304:	mov		qword ptr [rsp + 0x48], rdx
0x7fffeafd4309:	mov		rdx, qword ptr [rsp + 0x68]
0x7fffeafd430e:	mov		esi, dword ptr [rdx + 0x88]
0x7fffeafd4314:	and		esi, 4
0x7fffeafd4317:	cmp		esi, 0
0x7fffeafd431a:	cmovne		rax, rcx
0x7fffeafd431e:	mov		qword ptr [rsp + 0x50], rax
0x7fffeafd4323:	lea		rax, [rsp + 0x40]
0x7fffeafd4328:	add		rax, 0x18
0x7fffeafd432e:	mov		rcx, qword ptr [rsp + 0x68]
0x7fffeafd4333:	add		rcx, 8
0x7fffeafd433a:	mov		rdi, rax
0x7fffeafd433d:	mov		rsi, rcx
0x7fffeafd4340:	mov		edx, 8
0x7fffeafd4345:	call		0x7fffeafd2590
0x7fffeafd434a:	movsxd		rsi, dword ptr [rsp + 0x70]
0x7fffeafd434f:	cmp		qword ptr [rsp + 0x68], 0
0x7fffeafd4355:	mov		qword ptr [rsp + 0x18], rsi
0x7fffeafd435a:	je		0x7fffeafd436f
0x7fffeafd4360:	lea		rax, [rsp + 0x40]
0x7fffeafd4365:	mov		qword ptr [rsp + 0x10], rax
0x7fffeafd436a:	jmp		0x7fffeafd437d
0x7fffeafd436f:	xor		eax, eax
0x7fffeafd4371:	mov		ecx, eax
0x7fffeafd4373:	mov		qword ptr [rsp + 0x10], rcx
0x7fffeafd4378:	jmp		0x7fffeafd437d
0x7fffeafd437d:	mov		rax, qword ptr [rsp + 0x10]
0x7fffeafd4382:	cmp		qword ptr [rsp + 0x60], 0
0x7fffeafd4388:	mov		qword ptr [rsp + 8], rax
0x7fffeafd438d:	je		0x7fffeafd43a1
0x7fffeafd4393:	lea		rax, [rsp + 0x20]
0x7fffeafd4398:	mov		qword ptr [rsp], rax
0x7fffeafd439c:	jmp		0x7fffeafd43ae
0x7fffeafd43a1:	xor		eax, eax
0x7fffeafd43a3:	mov		ecx, eax
0x7fffeafd43a5:	mov		qword ptr [rsp], rcx
0x7fffeafd43a9:	jmp		0x7fffeafd43ae
0x7fffeafd43ae:	mov		rax, qword ptr [rsp]
0x7fffeafd43b2:	mov		edi, 0xd
0x7fffeafd43b7:	mov		rsi, qword ptr [rsp + 0x18]
0x7fffeafd43bc:	mov		rdx, qword ptr [rsp + 8]
0x7fffeafd43c1:	mov		rcx, rax
0x7fffeafd43c4:	mov		r8d, 8
0x7fffeafd43ca:	call		0x7fffeafd4470
0x7fffeafd43cf:	mov		rdi, rax
0x7fffeafd43d2:	call		0x7fffeafd46c0
0x7fffeafd43d7:	cmp		rax, 0
0x7fffeafd43db:	je		0x7fffeafd43ee
0x7fffeafd43e1:	mov		dword ptr [rsp + 0x74], 0xffffffff
0x7fffeafd43e9:	jmp		0x7fffeafd4447
0x7fffeafd43ee:	cmp		qword ptr [rsp + 0x60], 0
0x7fffeafd43f4:	je		0x7fffeafd443f
0x7fffeafd43fa:	mov		rax, qword ptr [rsp + 0x20]
0x7fffeafd43ff:	mov		rcx, qword ptr [rsp + 0x60]
0x7fffeafd4404:	mov		qword ptr [rcx], rax
0x7fffeafd4407:	mov		rax, qword ptr [rsp + 0x28]
0x7fffeafd440c:	mov		rcx, qword ptr [rsp + 0x60]
0x7fffeafd4411:	mov		dword ptr [rcx + 0x88], eax
0x7fffeafd4417:	mov		rcx, qword ptr [rsp + 0x60]
0x7fffeafd441c:	add		rcx, 8
0x7fffeafd4423:	lea		rdx, [rsp + 0x20]
0x7fffeafd4428:	add		rdx, 0x18
0x7fffeafd442f:	mov		rdi, rcx
0x7fffeafd4432:	mov		rsi, rdx
0x7fffeafd4435:	mov		edx, 8
0x7fffeafd443a:	call		0x7fffeafd2590
0x7fffeafd443f:	mov		dword ptr [rsp + 0x74], 0
0x7fffeafd4447:	mov		eax, dword ptr [rsp + 0x74]
0x7fffeafd444b:	add		rsp, 0x78
0x7fffeafd444f:	ret		
disassembling symbol '.LBB2_2':
textAddr: 0x7fffeafd4275, textSize: 96
0x7fffeafd4275:	cmp		qword ptr [rsp + 0x68], 0
0x7fffeafd427b:	je		0x7fffeafd434a
0x7fffeafd4281:	mov		rax, qword ptr [rsp + 0x68]
0x7fffeafd4286:	mov		rax, qword ptr [rax]
0x7fffeafd4289:	cmp		rax, 1
0x7fffeafd428d:	jbe		0x7fffeafd42d5
0x7fffeafd4293:	mov		eax, dword ptr [rsp + 0x70]
0x7fffeafd4297:	sub		eax, 1
0x7fffeafd429a:	movsxd		rcx, eax
0x7fffeafd429d:	shr		rcx, 6
0x7fffeafd42a1:	shl		rcx, 3
0x7fffeafd42a5:	lea		rdx, [rip + 0x2c16c14]
0x7fffeafd42ac:	add		rdx, rcx
0x7fffeafd42af:	mov		eax, dword ptr [rsp + 0x70]
0x7fffeafd42b3:	sub		eax, 1
0x7fffeafd42b6:	movsxd		rcx, eax
0x7fffeafd42b9:	and		rcx, 0x3f
0x7fffeafd42c0:	mov		esi, 1
0x7fffeafd42c5:	shl		rsi, cl
0x7fffeafd42c8:	mov		rdi, rdx
0x7fffeafd42cb:	call		0x7fffeafd4450
0x7fffeafd42d0:	call		0x7fffeafd4200
disassembling symbol '.LBB2_5':
textAddr: 0x7fffeafd42d5, textSize: 117
0x7fffeafd42d5:	mov		rax, qword ptr [rip - 0x1fedc3c]
0x7fffeafd42dc:	mov		rcx, qword ptr [rip - 0x1fedc5b]
0x7fffeafd42e3:	mov		rdx, qword ptr [rsp + 0x68]
0x7fffeafd42e8:	mov		rdx, qword ptr [rdx]
0x7fffeafd42eb:	mov		qword ptr [rsp + 0x40], rdx
0x7fffeafd42f0:	mov		rdx, qword ptr [rsp + 0x68]
0x7fffeafd42f5:	mov		esi, dword ptr [rdx + 0x88]
0x7fffeafd42fb:	or		esi, 0x4000000
0x7fffeafd4301:	movsxd		rdx, esi
0x7fffeafd4304:	mov		qword ptr [rsp + 0x48], rdx
0x7fffeafd4309:	mov		rdx, qword ptr [rsp + 0x68]
0x7fffeafd430e:	mov		esi, dword ptr [rdx + 0x88]
0x7fffeafd4314:	and		esi, 4
0x7fffeafd4317:	cmp		esi, 0
0x7fffeafd431a:	cmovne		rax, rcx
0x7fffeafd431e:	mov		qword ptr [rsp + 0x50], rax
0x7fffeafd4323:	lea		rax, [rsp + 0x40]
0x7fffeafd4328:	add		rax, 0x18
0x7fffeafd432e:	mov		rcx, qword ptr [rsp + 0x68]
0x7fffeafd4333:	add		rcx, 8
0x7fffeafd433a:	mov		rdi, rax
0x7fffeafd433d:	mov		rsi, rcx
0x7fffeafd4340:	mov		edx, 8
0x7fffeafd4345:	call		0x7fffeafd2590
disassembling symbol '.LBB2_6':
textAddr: 0x7fffeafd434a, textSize: 37
0x7fffeafd434a:	movsxd		rsi, dword ptr [rsp + 0x70]
0x7fffeafd434f:	cmp		qword ptr [rsp + 0x68], 0
0x7fffeafd4355:	mov		qword ptr [rsp + 0x18], rsi
0x7fffeafd435a:	je		0x7fffeafd436f
0x7fffeafd4360:	lea		rax, [rsp + 0x40]
0x7fffeafd4365:	mov		qword ptr [rsp + 0x10], rax
0x7fffeafd436a:	jmp		0x7fffeafd437d
disassembling symbol '.LBB2_8':
textAddr: 0x7fffeafd436f, textSize: 14
0x7fffeafd436f:	xor		eax, eax
0x7fffeafd4371:	mov		ecx, eax
0x7fffeafd4373:	mov		qword ptr [rsp + 0x10], rcx
0x7fffeafd4378:	jmp		0x7fffeafd437d
disassembling symbol '.LBB2_9':
textAddr: 0x7fffeafd437d, textSize: 36
0x7fffeafd437d:	mov		rax, qword ptr [rsp + 0x10]
0x7fffeafd4382:	cmp		qword ptr [rsp + 0x60], 0
0x7fffeafd4388:	mov		qword ptr [rsp + 8], rax
0x7fffeafd438d:	je		0x7fffeafd43a1
0x7fffeafd4393:	lea		rax, [rsp + 0x20]
0x7fffeafd4398:	mov		qword ptr [rsp], rax
0x7fffeafd439c:	jmp		0x7fffeafd43ae
disassembling symbol '.LBB2_11':
textAddr: 0x7fffeafd43a1, textSize: 13
0x7fffeafd43a1:	xor		eax, eax
0x7fffeafd43a3:	mov		ecx, eax
0x7fffeafd43a5:	mov		qword ptr [rsp], rcx
0x7fffeafd43a9:	jmp		0x7fffeafd43ae
disassembling symbol '.LBB2_12':
textAddr: 0x7fffeafd43ae, textSize: 64
0x7fffeafd43ae:	mov		rax, qword ptr [rsp]
0x7fffeafd43b2:	mov		edi, 0xd
0x7fffeafd43b7:	mov		rsi, qword ptr [rsp + 0x18]
0x7fffeafd43bc:	mov		rdx, qword ptr [rsp + 8]
0x7fffeafd43c1:	mov		rcx, rax
0x7fffeafd43c4:	mov		r8d, 8
0x7fffeafd43ca:	call		0x7fffeafd4470
0x7fffeafd43cf:	mov		rdi, rax
0x7fffeafd43d2:	call		0x7fffeafd46c0
0x7fffeafd43d7:	cmp		rax, 0
0x7fffeafd43db:	je		0x7fffeafd43ee
0x7fffeafd43e1:	mov		dword ptr [rsp + 0x74], 0xffffffff
0x7fffeafd43e9:	jmp		0x7fffeafd4447
disassembling symbol '.LBB2_14':
textAddr: 0x7fffeafd43ee, textSize: 81
0x7fffeafd43ee:	cmp		qword ptr [rsp + 0x60], 0
0x7fffeafd43f4:	je		0x7fffeafd443f
0x7fffeafd43fa:	mov		rax, qword ptr [rsp + 0x20]
0x7fffeafd43ff:	mov		rcx, qword ptr [rsp + 0x60]
0x7fffeafd4404:	mov		qword ptr [rcx], rax
0x7fffeafd4407:	mov		rax, qword ptr [rsp + 0x28]
0x7fffeafd440c:	mov		rcx, qword ptr [rsp + 0x60]
0x7fffeafd4411:	mov		dword ptr [rcx + 0x88], eax
0x7fffeafd4417:	mov		rcx, qword ptr [rsp + 0x60]
0x7fffeafd441c:	add		rcx, 8
0x7fffeafd4423:	lea		rdx, [rsp + 0x20]
0x7fffeafd4428:	add		rdx, 0x18
0x7fffeafd442f:	mov		rdi, rcx
0x7fffeafd4432:	mov		rsi, rdx
0x7fffeafd4435:	mov		edx, 8
0x7fffeafd443a:	call		0x7fffeafd2590
disassembling symbol '.LBB2_16':
textAddr: 0x7fffeafd443f, textSize: 8
0x7fffeafd443f:	mov		dword ptr [rsp + 0x74], 0
disassembling symbol '.LBB2_17':
textAddr: 0x7fffeafd4447, textSize: 9
0x7fffeafd4447:	mov		eax, dword ptr [rsp + 0x74]
0x7fffeafd444b:	add		rsp, 0x78
0x7fffeafd444f:	ret		
disassembling symbol 'a_or_l':
textAddr: 0x7fffeafd4450, textSize: 32
0x7fffeafd4450:	mov		qword ptr [rsp - 8], rdi
0x7fffeafd4455:	mov		qword ptr [rsp - 0x10], rsi
0x7fffeafd445a:	mov		rax, qword ptr [rsp - 8]
0x7fffeafd445f:	mov		rcx, qword ptr [rsp - 0x10]
0x7fffeafd4464:	lock or		qword ptr [rax], rcx
0x7fffeafd4468:	ret		
0x7fffeafd4469:	nop		dword ptr [rax]
disassembling symbol '__syscall4':
textAddr: 0x7fffeafd4470, textSize: 80
0x7fffeafd4470:	mov		qword ptr [rsp - 8], rdi
0x7fffeafd4475:	mov		qword ptr [rsp - 0x10], rsi
0x7fffeafd447a:	mov		qword ptr [rsp - 0x18], rdx
0x7fffeafd447f:	mov		qword ptr [rsp - 0x20], rcx
0x7fffeafd4484:	mov		qword ptr [rsp - 0x28], r8
0x7fffeafd4489:	mov		rax, qword ptr [rsp - 0x28]
0x7fffeafd448e:	mov		qword ptr [rsp - 0x38], rax
0x7fffeafd4493:	mov		rax, qword ptr [rsp - 8]
0x7fffeafd4498:	mov		rdi, qword ptr [rsp - 0x10]
0x7fffeafd449d:	mov		rsi, qword ptr [rsp - 0x18]
0x7fffeafd44a2:	mov		rdx, qword ptr [rsp - 0x20]
0x7fffeafd44a7:	mov		r10, qword ptr [rsp - 0x38]
0x7fffeafd44ac:	syscall		
0x7fffeafd44ae:	mov		qword ptr [rsp - 0x30], rax
0x7fffeafd44b3:	mov		rax, qword ptr [rsp - 0x30]
0x7fffeafd44b8:	ret		
0x7fffeafd44b9:	nop		dword ptr [rax]
disassembling symbol '__sigaction':
textAddr: 0x7fffeafd44c0, textSize: 88
0x7fffeafd44c0:	sub		rsp, 0x18
0x7fffeafd44c4:	mov		dword ptr [rsp + 0x10], edi
0x7fffeafd44c8:	mov		qword ptr [rsp + 8], rsi
0x7fffeafd44cd:	mov		qword ptr [rsp], rdx
0x7fffeafd44d1:	mov		eax, dword ptr [rsp + 0x10]
0x7fffeafd44d5:	sub		eax, 0x20
0x7fffeafd44d8:	cmp		eax, 3
0x7fffeafd44db:	jae		0x7fffeafd44f9
0x7fffeafd44e1:	call		0x7fffeafc3cb0
0x7fffeafd44e6:	mov		dword ptr [rax], 0x16
0x7fffeafd44ec:	mov		dword ptr [rsp + 0x14], 0xffffffff
0x7fffeafd44f4:	jmp		0x7fffeafd450f
0x7fffeafd44f9:	mov		edi, dword ptr [rsp + 0x10]
0x7fffeafd44fd:	mov		rsi, qword ptr [rsp + 8]
0x7fffeafd4502:	mov		rdx, qword ptr [rsp]
0x7fffeafd4506:	call		0x7fffeafd4240
0x7fffeafd450b:	mov		dword ptr [rsp + 0x14], eax
0x7fffeafd450f:	mov		eax, dword ptr [rsp + 0x14]
0x7fffeafd4513:	add		rsp, 0x18
0x7fffeafd4517:	ret		
disassembling symbol '.LBB5_2':
textAddr: 0x7fffeafd44f9, textSize: 22
0x7fffeafd44f9:	mov		edi, dword ptr [rsp + 0x10]
0x7fffeafd44fd:	mov		rsi, qword ptr [rsp + 8]
0x7fffeafd4502:	mov		rdx, qword ptr [rsp]
0x7fffeafd4506:	call		0x7fffeafd4240
0x7fffeafd450b:	mov		dword ptr [rsp + 0x14], eax
disassembling symbol '.LBB5_3':
textAddr: 0x7fffeafd450f, textSize: 17
0x7fffeafd450f:	mov		eax, dword ptr [rsp + 0x14]
0x7fffeafd4513:	add		rsp, 0x18
0x7fffeafd4517:	ret		
0x7fffeafd4518:	add		byte ptr [rax], al
0x7fffeafd451a:	add		byte ptr [rax], al
0x7fffeafd451c:	add		byte ptr [rax], al
0x7fffeafd451e:	add		byte ptr [rax], al
disassembling symbol 'sigfillset':
textAddr: 0x7fffeafd4520, textSize: 26
0x7fffeafd4520:	xor		eax, eax
0x7fffeafd4522:	mov		qword ptr [rsp - 8], rdi
0x7fffeafd4527:	mov		rcx, qword ptr [rsp - 8]
0x7fffeafd452c:	movabs		rdx, 0xfffffffc7fffffff
0x7fffeafd4536:	mov		qword ptr [rcx], rdx
0x7fffeafd4539:	ret		
disassembling symbol '_start':
textAddr: 0x7fffeafd4540, textSize: 84
0x7fffeafd4540:	pop		r13
0x7fffeafd4542:	movabs		r14, 0x7fffedbeaf58
0x7fffeafd454c:	mov		qword ptr [r14], r13
0x7fffeafd454f:	movabs		r14, 0x7fffedbeaf60
0x7fffeafd4559:	mov		qword ptr [r14], rsp
0x7fffeafd455c:	movabs		r14, 0x7fffedbeaf68
0x7fffeafd4566:	mov		qword ptr [r14], rbp
0x7fffeafd4569:	movabs		rsp, 0x7fffecfeacc0
0x7fffeafd4573:	add		rsp, 0x400000
0x7fffeafd457a:	movabs		r15, 0x7fffecfeaca8
0x7fffeafd4584:	movabs		r14, 0x7fffeafc3ca8
0x7fffeafd458e:	push		rax
0x7fffeafd458f:	jmp		0x7fffeafc7fd0
disassembling symbol 'strerror':
textAddr: 0x7fffeafd45a0, textSize: 221
0x7fffeafd45a0:	mov		dword ptr [rsp - 4], edi
0x7fffeafd45a4:	mov		dword ptr [rsp - 0x14], 0
0x7fffeafd45ac:	xor		eax, eax
0x7fffeafd45ae:	movsxd		rcx, dword ptr [rsp - 0x14]
0x7fffeafd45b3:	lea		rdx, [rip + 0x2c16c36]
0x7fffeafd45ba:	movzx		esi, byte ptr [rdx + rcx]
0x7fffeafd45be:	cmp		esi, 0
0x7fffeafd45c1:	mov		byte ptr [rsp - 0x15], al
0x7fffeafd45c5:	je		0x7fffeafd45e8
0x7fffeafd45cb:	movsxd		rax, dword ptr [rsp - 0x14]
0x7fffeafd45d0:	lea		rcx, [rip + 0x2c16c19]
0x7fffeafd45d7:	movzx		edx, byte ptr [rcx + rax]
0x7fffeafd45db:	cmp		edx, dword ptr [rsp - 4]
0x7fffeafd45df:	setne		sil
0x7fffeafd45e3:	mov		byte ptr [rsp - 0x15], sil
0x7fffeafd45e8:	mov		al, byte ptr [rsp - 0x15]
0x7fffeafd45ec:	test		al, 1
0x7fffeafd45ee:	jne		0x7fffeafd45f9
0x7fffeafd45f4:	jmp		0x7fffeafd460e
0x7fffeafd45f9:	jmp		0x7fffeafd45fe
0x7fffeafd45fe:	mov		eax, dword ptr [rsp - 0x14]
0x7fffeafd4602:	add		eax, 1
0x7fffeafd4605:	mov		dword ptr [rsp - 0x14], eax
0x7fffeafd4609:	jmp		0x7fffeafd45ac
0x7fffeafd460e:	lea		rax, [rip + 0x2c16c3b]
0x7fffeafd4615:	mov		qword ptr [rsp - 0x10], rax
0x7fffeafd461a:	cmp		dword ptr [rsp - 0x14], 0
0x7fffeafd461f:	je		0x7fffeafd4677
0x7fffeafd4625:	jmp		0x7fffeafd462a
0x7fffeafd462a:	mov		rax, qword ptr [rsp - 0x10]
0x7fffeafd462f:	cmp		byte ptr [rax], 0
0x7fffeafd4632:	je		0x7fffeafd4652
0x7fffeafd4638:	jmp		0x7fffeafd463d
0x7fffeafd463d:	mov		rax, qword ptr [rsp - 0x10]
0x7fffeafd4642:	add		rax, 1
0x7fffeafd4648:	mov		qword ptr [rsp - 0x10], rax
0x7fffeafd464d:	jmp		0x7fffeafd462a
0x7fffeafd4652:	jmp		0x7fffeafd4657
0x7fffeafd4657:	mov		rax, qword ptr [rsp - 0x10]
0x7fffeafd465c:	add		rax, 1
0x7fffeafd4662:	mov		qword ptr [rsp - 0x10], rax
0x7fffeafd4667:	mov		ecx, dword ptr [rsp - 0x14]
0x7fffeafd466b:	add		ecx, -1
0x7fffeafd466e:	mov		dword ptr [rsp - 0x14], ecx
0x7fffeafd4672:	jmp		0x7fffeafd461a
0x7fffeafd4677:	mov		rax, qword ptr [rsp - 0x10]
0x7fffeafd467c:	ret		
disassembling symbol '.LBB0_1':
textAddr: 0x7fffeafd45ac, textSize: 60
0x7fffeafd45ac:	xor		eax, eax
0x7fffeafd45ae:	movsxd		rcx, dword ptr [rsp - 0x14]
0x7fffeafd45b3:	lea		rdx, [rip + 0x2c16c36]
0x7fffeafd45ba:	movzx		esi, byte ptr [rdx + rcx]
0x7fffeafd45be:	cmp		esi, 0
0x7fffeafd45c1:	mov		byte ptr [rsp - 0x15], al
0x7fffeafd45c5:	je		0x7fffeafd45e8
0x7fffeafd45cb:	movsxd		rax, dword ptr [rsp - 0x14]
0x7fffeafd45d0:	lea		rcx, [rip + 0x2c16c19]
0x7fffeafd45d7:	movzx		edx, byte ptr [rcx + rax]
0x7fffeafd45db:	cmp		edx, dword ptr [rsp - 4]
0x7fffeafd45df:	setne		sil
0x7fffeafd45e3:	mov		byte ptr [rsp - 0x15], sil
disassembling symbol '.LBB0_3':
textAddr: 0x7fffeafd45e8, textSize: 17
0x7fffeafd45e8:	mov		al, byte ptr [rsp - 0x15]
0x7fffeafd45ec:	test		al, 1
0x7fffeafd45ee:	jne		0x7fffeafd45f9
0x7fffeafd45f4:	jmp		0x7fffeafd460e
disassembling symbol '.LBB0_4':
textAddr: 0x7fffeafd45f9, textSize: 5
0x7fffeafd45f9:	jmp		0x7fffeafd45fe
disassembling symbol '.LBB0_5':
textAddr: 0x7fffeafd45fe, textSize: 16
0x7fffeafd45fe:	mov		eax, dword ptr [rsp - 0x14]
0x7fffeafd4602:	add		eax, 1
0x7fffeafd4605:	mov		dword ptr [rsp - 0x14], eax
0x7fffeafd4609:	jmp		0x7fffeafd45ac
disassembling symbol '.LBB0_6':
textAddr: 0x7fffeafd460e, textSize: 12
0x7fffeafd460e:	lea		rax, [rip + 0x2c16c3b]
0x7fffeafd4615:	mov		qword ptr [rsp - 0x10], rax
disassembling symbol '.LBB0_7':
textAddr: 0x7fffeafd461a, textSize: 16
0x7fffeafd461a:	cmp		dword ptr [rsp - 0x14], 0
0x7fffeafd461f:	je		0x7fffeafd4677
0x7fffeafd4625:	jmp		0x7fffeafd462a
disassembling symbol '.LBB0_9':
textAddr: 0x7fffeafd462a, textSize: 19
0x7fffeafd462a:	mov		rax, qword ptr [rsp - 0x10]
0x7fffeafd462f:	cmp		byte ptr [rax], 0
0x7fffeafd4632:	je		0x7fffeafd4652
0x7fffeafd4638:	jmp		0x7fffeafd463d
disassembling symbol '.LBB0_11':
textAddr: 0x7fffeafd463d, textSize: 21
0x7fffeafd463d:	mov		rax, qword ptr [rsp - 0x10]
0x7fffeafd4642:	add		rax, 1
0x7fffeafd4648:	mov		qword ptr [rsp - 0x10], rax
0x7fffeafd464d:	jmp		0x7fffeafd462a
disassembling symbol '.LBB0_12':
textAddr: 0x7fffeafd4652, textSize: 5
0x7fffeafd4652:	jmp		0x7fffeafd4657
disassembling symbol '.LBB0_13':
textAddr: 0x7fffeafd4657, textSize: 32
0x7fffeafd4657:	mov		rax, qword ptr [rsp - 0x10]
0x7fffeafd465c:	add		rax, 1
0x7fffeafd4662:	mov		qword ptr [rsp - 0x10], rax
0x7fffeafd4667:	mov		ecx, dword ptr [rsp - 0x14]
0x7fffeafd466b:	add		ecx, -1
0x7fffeafd466e:	mov		dword ptr [rsp - 0x14], ecx
0x7fffeafd4672:	jmp		0x7fffeafd461a
disassembling symbol '.LBB0_14':
textAddr: 0x7fffeafd4677, textSize: 9
0x7fffeafd4677:	mov		rax, qword ptr [rsp - 0x10]
0x7fffeafd467c:	ret		
0x7fffeafd467d:	add		byte ptr [rax], al
disassembling symbol '__syscall_cp_asm':
textAddr: 0x7fffeafd4680, textSize: 56
0x7fffeafd4680:	mov		eax, dword ptr [rdi]
0x7fffeafd4682:	test		eax, eax
0x7fffeafd4684:	jne		0x7fffeafc4d10
0x7fffeafd468a:	jmp		0x7fffeafd468f
0x7fffeafd468f:	mov		r11, rdi
0x7fffeafd4692:	mov		rax, rsi
0x7fffeafd4695:	mov		rdi, rdx
0x7fffeafd4698:	mov		rsi, rcx
0x7fffeafd469b:	mov		rdx, r8
0x7fffeafd469e:	mov		r10, r9
0x7fffeafd46a1:	mov		r8, qword ptr [rsp + 8]
0x7fffeafd46a6:	mov		r9, qword ptr [rsp + 0x10]
0x7fffeafd46ab:	mov		qword ptr [rsp + 8], r11
0x7fffeafd46b0:	syscall		
0x7fffeafd46b2:	jmp		0x7fffeafd46b7
0x7fffeafd46b7:	ret		
disassembling symbol '__cp_begin':
textAddr: 0x7fffeafd4680, textSize: 15
0x7fffeafd4680:	mov		eax, dword ptr [rdi]
0x7fffeafd4682:	test		eax, eax
0x7fffeafd4684:	jne		0x7fffeafc4d10
0x7fffeafd468a:	jmp		0x7fffeafd468f
disassembling symbol 'BB0':
textAddr: 0x7fffeafd468f, textSize: 40
0x7fffeafd468f:	mov		r11, rdi
0x7fffeafd4692:	mov		rax, rsi
0x7fffeafd4695:	mov		rdi, rdx
0x7fffeafd4698:	mov		rsi, rcx
0x7fffeafd469b:	mov		rdx, r8
0x7fffeafd469e:	mov		r10, r9
0x7fffeafd46a1:	mov		r8, qword ptr [rsp + 8]
0x7fffeafd46a6:	mov		r9, qword ptr [rsp + 0x10]
0x7fffeafd46ab:	mov		qword ptr [rsp + 8], r11
0x7fffeafd46b0:	syscall		
0x7fffeafd46b2:	jmp		0x7fffeafd46b7
disassembling symbol '__cp_end':
textAddr: 0x7fffeafd46b7, textSize: 9
0x7fffeafd46b7:	ret		
0x7fffeafd46b8:	add		byte ptr [rax], al
0x7fffeafd46ba:	add		byte ptr [rax], al
0x7fffeafd46bc:	add		byte ptr [rax], al
0x7fffeafd46be:	add		byte ptr [rax], al
disassembling symbol '__syscall_ret':
textAddr: 0x7fffeafd46c0, textSize: 38
0x7fffeafd46c0:	push		rbx
0x7fffeafd46c1:	mov		rbx, rdi
0x7fffeafd46c4:	cmp		rdi, -0xfff
0x7fffeafd46cb:	jb		0x7fffeafd46e1
0x7fffeafd46d1:	neg		ebx
0x7fffeafd46d3:	call		0x7fffeafc3cb0
0x7fffeafd46d8:	mov		dword ptr [rax], ebx
0x7fffeafd46da:	mov		rbx, -1
0x7fffeafd46e1:	mov		rax, rbx
0x7fffeafd46e4:	pop		rbx
0x7fffeafd46e5:	ret		
disassembling symbol '.LBB0_2':
textAddr: 0x7fffeafd46e1, textSize: 15
0x7fffeafd46e1:	mov		rax, rbx
0x7fffeafd46e4:	pop		rbx
0x7fffeafd46e5:	ret		
0x7fffeafd46e6:	add		byte ptr [rax], al
0x7fffeafd46e8:	add		byte ptr [rax], al
0x7fffeafd46ea:	add		byte ptr [rax], al
0x7fffeafd46ec:	add		byte ptr [rax], al
0x7fffeafd46ee:	add		byte ptr [rax], al
disassembling symbol 'sysconf':
textAddr: 0x7fffeafd46f0, textSize: 688
0x7fffeafd46f0:	sub		rsp, 0xd8
0x7fffeafd46f7:	mov		dword ptr [rsp + 0xcc], edi
0x7fffeafd46fe:	movsxd		rax, dword ptr [rsp + 0xcc]
0x7fffeafd4706:	cmp		rax, 0xf9
0x7fffeafd470c:	jbe		0x7fffeafd472e
0x7fffeafd4712:	call		0x7fffeafc3cb0
0x7fffeafd4717:	mov		dword ptr [rax], 0x16
0x7fffeafd471d:	mov		qword ptr [rsp + 0xd0], -1
0x7fffeafd4729:	jmp		0x7fffeafd498a
0x7fffeafd472e:	movsxd		rax, dword ptr [rsp + 0xcc]
0x7fffeafd4736:	lea		rcx, [rip + 0x2c17223]
0x7fffeafd473d:	movsx		edx, word ptr [rcx + rax*2]
0x7fffeafd4741:	cmp		edx, -2
0x7fffeafd4744:	jne		0x7fffeafd475b
0x7fffeafd474a:	mov		qword ptr [rsp + 0xd0], 0x31069
0x7fffeafd4756:	jmp		0x7fffeafd498a
0x7fffeafd475b:	movsxd		rax, dword ptr [rsp + 0xcc]
0x7fffeafd4763:	lea		rcx, [rip + 0x2c171f6]
0x7fffeafd476a:	movsx		edx, word ptr [rcx + rax*2]
0x7fffeafd476e:	cmp		edx, -3
0x7fffeafd4771:	jne		0x7fffeafd47e5
0x7fffeafd4777:	cmp		dword ptr [rsp + 0xcc], 0
0x7fffeafd477f:	jne		0x7fffeafd4796
0x7fffeafd4785:	mov		qword ptr [rsp + 0xd0], 0x20000
0x7fffeafd4791:	jmp		0x7fffeafd498a
0x7fffeafd4796:	cmp		dword ptr [rsp + 0xcc], 0x21
0x7fffeafd479e:	jne		0x7fffeafd47b5
0x7fffeafd47a4:	mov		qword ptr [rsp + 0xd0], 0x7fffffff
0x7fffeafd47b0:	jmp		0x7fffeafd498a
0x7fffeafd47b5:	cmp		dword ptr [rsp + 0xcc], 0x1c
0x7fffeafd47bd:	jne		0x7fffeafd47d4
0x7fffeafd47c3:	mov		qword ptr [rsp + 0xd0], 0x8000
0x7fffeafd47cf:	jmp		0x7fffeafd498a
0x7fffeafd47d4:	mov		qword ptr [rsp + 0xd0], 0x1000
0x7fffeafd47e0:	jmp		0x7fffeafd498a
0x7fffeafd47e5:	movsxd		rax, dword ptr [rsp + 0xcc]
0x7fffeafd47ed:	lea		rcx, [rip + 0x2c1716c]
0x7fffeafd47f4:	movsx		edx, word ptr [rcx + rax*2]
0x7fffeafd47f8:	cmp		edx, -4
0x7fffeafd47fb:	jne		0x7fffeafd48da
0x7fffeafd4801:	xor		eax, eax
0x7fffeafd4803:	mov		esi, eax
0x7fffeafd4805:	lea		rcx, [rsp + 0x40]
0x7fffeafd480a:	xor		eax, eax
0x7fffeafd480c:	mov		rdx, rcx
0x7fffeafd480f:	mov		rdi, rdx
0x7fffeafd4812:	mov		qword ptr [rsp + 0x18], rsi
0x7fffeafd4817:	mov		esi, eax
0x7fffeafd4819:	mov		edx, 0x80
0x7fffeafd481e:	mov		qword ptr [rsp + 0x10], rdx
0x7fffeafd4823:	mov		qword ptr [rsp + 8], rcx
0x7fffeafd4828:	call		0x7fffeafd2a10
0x7fffeafd482d:	mov		byte ptr [rsp + 0x40], 1
0x7fffeafd4832:	mov		edi, 0xcc
0x7fffeafd4837:	mov		rsi, qword ptr [rsp + 0x18]
0x7fffeafd483c:	mov		rdx, qword ptr [rsp + 0x10]
0x7fffeafd4841:	mov		rcx, qword ptr [rsp + 8]
0x7fffeafd4846:	call		0x7fffeafd49a0
0x7fffeafd484b:	mov		dword ptr [rsp + 0x38], 0
0x7fffeafd4853:	mov		dword ptr [rsp + 0x3c], 0
0x7fffeafd485b:	movsxd		rax, dword ptr [rsp + 0x3c]
0x7fffeafd4860:	cmp		rax, 0x80
0x7fffeafd4866:	jae		0x7fffeafd48c8
0x7fffeafd486c:	jmp		0x7fffeafd4871
0x7fffeafd4871:	movsxd		rax, dword ptr [rsp + 0x3c]
0x7fffeafd4876:	cmp		byte ptr [rsp + rax + 0x40], 0
0x7fffeafd487b:	je		0x7fffeafd48b3
0x7fffeafd4881:	jmp		0x7fffeafd4886
0x7fffeafd4886:	movsxd		rax, dword ptr [rsp + 0x3c]
0x7fffeafd488b:	movzx		ecx, byte ptr [rsp + rax + 0x40]
0x7fffeafd4890:	sub		ecx, 1
0x7fffeafd4893:	movsxd		rax, dword ptr [rsp + 0x3c]
0x7fffeafd4898:	movzx		edx, byte ptr [rsp + rax + 0x40]
0x7fffeafd489d:	and		edx, ecx
0x7fffeafd489f:	mov		byte ptr [rsp + rax + 0x40], dl
0x7fffeafd48a3:	mov		ecx, dword ptr [rsp + 0x38]
0x7fffeafd48a7:	add		ecx, 1
0x7fffeafd48aa:	mov		dword ptr [rsp + 0x38], ecx
0x7fffeafd48ae:	jmp		0x7fffeafd4871
0x7fffeafd48b3:	jmp		0x7fffeafd48b8
0x7fffeafd48b8:	mov		eax, dword ptr [rsp + 0x3c]
0x7fffeafd48bc:	add		eax, 1
0x7fffeafd48bf:	mov		dword ptr [rsp + 0x3c], eax
0x7fffeafd48c3:	jmp		0x7fffeafd485b
0x7fffeafd48c8:	movsxd		rax, dword ptr [rsp + 0x38]
0x7fffeafd48cd:	mov		qword ptr [rsp + 0xd0], rax
0x7fffeafd48d5:	jmp		0x7fffeafd498a
0x7fffeafd48da:	movsxd		rax, dword ptr [rsp + 0xcc]
0x7fffeafd48e2:	lea		rcx, [rip + 0x2c17077]
0x7fffeafd48e9:	movsx		edx, word ptr [rcx + rax*2]
0x7fffeafd48ed:	cmp		edx, -3
0x7fffeafd48f0:	jge		0x7fffeafd495a
0x7fffeafd48f6:	lea		rdx, [rsp + 0x20]
0x7fffeafd48fb:	movsxd		rax, dword ptr [rsp + 0xcc]
0x7fffeafd4903:	lea		rcx, [rip + 0x2c17056]
0x7fffeafd490a:	movsx		esi, word ptr [rcx + rax*2]
0x7fffeafd490e:	and		esi, 0x3fff
0x7fffeafd4914:	movsxd		rsi, esi
0x7fffeafd4917:	mov		edi, 0x61
0x7fffeafd491c:	call		0x7fffeafd49e0
0x7fffeafd4921:	cmp		qword ptr [rsp + 0x20], 0
0x7fffeafd4927:	jge		0x7fffeafd4940
0x7fffeafd492d:	movabs		rax, 0x7fffffffffffffff
0x7fffeafd4937:	mov		qword ptr [rsp], rax
0x7fffeafd493b:	jmp		0x7fffeafd4949
0x7fffeafd4940:	mov		rax, qword ptr [rsp + 0x20]
0x7fffeafd4945:	mov		qword ptr [rsp], rax
0x7fffeafd4949:	mov		rax, qword ptr [rsp]
0x7fffeafd494d:	mov		qword ptr [rsp + 0xd0], rax
0x7fffeafd4955:	jmp		0x7fffeafd498a
0x7fffeafd495a:	jmp		0x7fffeafd495f
0x7fffeafd495f:	jmp		0x7fffeafd4964
0x7fffeafd4964:	jmp		0x7fffeafd4969
0x7fffeafd4969:	jmp		0x7fffeafd496e
0x7fffeafd496e:	movsxd		rax, dword ptr [rsp + 0xcc]
0x7fffeafd4976:	lea		rcx, [rip + 0x2c16fe3]
0x7fffeafd497d:	movsx		rax, word ptr [rcx + rax*2]
0x7fffeafd4982:	mov		qword ptr [rsp + 0xd0], rax
0x7fffeafd498a:	mov		rax, qword ptr [rsp + 0xd0]
0x7fffeafd4992:	add		rsp, 0xd8
0x7fffeafd4999:	ret		
0x7fffeafd499a:	nop		word ptr [rax + rax]
disassembling symbol '.LBB0_2':
textAddr: 0x7fffeafd472e, textSize: 45
0x7fffeafd472e:	movsxd		rax, dword ptr [rsp + 0xcc]
0x7fffeafd4736:	lea		rcx, [rip + 0x2c17223]
0x7fffeafd473d:	movsx		edx, word ptr [rcx + rax*2]
0x7fffeafd4741:	cmp		edx, -2
0x7fffeafd4744:	jne		0x7fffeafd475b
0x7fffeafd474a:	mov		qword ptr [rsp + 0xd0], 0x31069
0x7fffeafd4756:	jmp		0x7fffeafd498a
disassembling symbol '.LBB0_4':
textAddr: 0x7fffeafd475b, textSize: 59
0x7fffeafd475b:	movsxd		rax, dword ptr [rsp + 0xcc]
0x7fffeafd4763:	lea		rcx, [rip + 0x2c171f6]
0x7fffeafd476a:	movsx		edx, word ptr [rcx + rax*2]
0x7fffeafd476e:	cmp		edx, -3
0x7fffeafd4771:	jne		0x7fffeafd47e5
0x7fffeafd4777:	cmp		dword ptr [rsp + 0xcc], 0
0x7fffeafd477f:	jne		0x7fffeafd4796
0x7fffeafd4785:	mov		qword ptr [rsp + 0xd0], 0x20000
0x7fffeafd4791:	jmp		0x7fffeafd498a
disassembling symbol '.LBB0_7':
textAddr: 0x7fffeafd4796, textSize: 31
0x7fffeafd4796:	cmp		dword ptr [rsp + 0xcc], 0x21
0x7fffeafd479e:	jne		0x7fffeafd47b5
0x7fffeafd47a4:	mov		qword ptr [rsp + 0xd0], 0x7fffffff
0x7fffeafd47b0:	jmp		0x7fffeafd498a
disassembling symbol '.LBB0_9':
textAddr: 0x7fffeafd47b5, textSize: 31
0x7fffeafd47b5:	cmp		dword ptr [rsp + 0xcc], 0x1c
0x7fffeafd47bd:	jne		0x7fffeafd47d4
0x7fffeafd47c3:	mov		qword ptr [rsp + 0xd0], 0x8000
0x7fffeafd47cf:	jmp		0x7fffeafd498a
disassembling symbol '.LBB0_11':
textAddr: 0x7fffeafd47d4, textSize: 17
0x7fffeafd47d4:	mov		qword ptr [rsp + 0xd0], 0x1000
0x7fffeafd47e0:	jmp		0x7fffeafd498a
disassembling symbol '.LBB0_12':
textAddr: 0x7fffeafd47e5, textSize: 118
0x7fffeafd47e5:	movsxd		rax, dword ptr [rsp + 0xcc]
0x7fffeafd47ed:	lea		rcx, [rip + 0x2c1716c]
0x7fffeafd47f4:	movsx		edx, word ptr [rcx + rax*2]
0x7fffeafd47f8:	cmp		edx, -4
0x7fffeafd47fb:	jne		0x7fffeafd48da
0x7fffeafd4801:	xor		eax, eax
0x7fffeafd4803:	mov		esi, eax
0x7fffeafd4805:	lea		rcx, [rsp + 0x40]
0x7fffeafd480a:	xor		eax, eax
0x7fffeafd480c:	mov		rdx, rcx
0x7fffeafd480f:	mov		rdi, rdx
0x7fffeafd4812:	mov		qword ptr [rsp + 0x18], rsi
0x7fffeafd4817:	mov		esi, eax
0x7fffeafd4819:	mov		edx, 0x80
0x7fffeafd481e:	mov		qword ptr [rsp + 0x10], rdx
0x7fffeafd4823:	mov		qword ptr [rsp + 8], rcx
0x7fffeafd4828:	call		0x7fffeafd2a10
0x7fffeafd482d:	mov		byte ptr [rsp + 0x40], 1
0x7fffeafd4832:	mov		edi, 0xcc
0x7fffeafd4837:	mov		rsi, qword ptr [rsp + 0x18]
0x7fffeafd483c:	mov		rdx, qword ptr [rsp + 0x10]
0x7fffeafd4841:	mov		rcx, qword ptr [rsp + 8]
0x7fffeafd4846:	call		0x7fffeafd49a0
0x7fffeafd484b:	mov		dword ptr [rsp + 0x38], 0
0x7fffeafd4853:	mov		dword ptr [rsp + 0x3c], 0
disassembling symbol '.LBB0_14':
textAddr: 0x7fffeafd485b, textSize: 22
0x7fffeafd485b:	movsxd		rax, dword ptr [rsp + 0x3c]
0x7fffeafd4860:	cmp		rax, 0x80
0x7fffeafd4866:	jae		0x7fffeafd48c8
0x7fffeafd486c:	jmp		0x7fffeafd4871
disassembling symbol '.LBB0_16':
textAddr: 0x7fffeafd4871, textSize: 21
0x7fffeafd4871:	movsxd		rax, dword ptr [rsp + 0x3c]
0x7fffeafd4876:	cmp		byte ptr [rsp + rax + 0x40], 0
0x7fffeafd487b:	je		0x7fffeafd48b3
0x7fffeafd4881:	jmp		0x7fffeafd4886
disassembling symbol '.LBB0_18':
textAddr: 0x7fffeafd4886, textSize: 45
0x7fffeafd4886:	movsxd		rax, dword ptr [rsp + 0x3c]
0x7fffeafd488b:	movzx		ecx, byte ptr [rsp + rax + 0x40]
0x7fffeafd4890:	sub		ecx, 1
0x7fffeafd4893:	movsxd		rax, dword ptr [rsp + 0x3c]
0x7fffeafd4898:	movzx		edx, byte ptr [rsp + rax + 0x40]
0x7fffeafd489d:	and		edx, ecx
0x7fffeafd489f:	mov		byte ptr [rsp + rax + 0x40], dl
0x7fffeafd48a3:	mov		ecx, dword ptr [rsp + 0x38]
0x7fffeafd48a7:	add		ecx, 1
0x7fffeafd48aa:	mov		dword ptr [rsp + 0x38], ecx
0x7fffeafd48ae:	jmp		0x7fffeafd4871
disassembling symbol '.LBB0_19':
textAddr: 0x7fffeafd48b3, textSize: 5
0x7fffeafd48b3:	jmp		0x7fffeafd48b8
disassembling symbol '.LBB0_20':
textAddr: 0x7fffeafd48b8, textSize: 16
0x7fffeafd48b8:	mov		eax, dword ptr [rsp + 0x3c]
0x7fffeafd48bc:	add		eax, 1
0x7fffeafd48bf:	mov		dword ptr [rsp + 0x3c], eax
0x7fffeafd48c3:	jmp		0x7fffeafd485b
disassembling symbol '.LBB0_21':
textAddr: 0x7fffeafd48c8, textSize: 18
0x7fffeafd48c8:	movsxd		rax, dword ptr [rsp + 0x38]
0x7fffeafd48cd:	mov		qword ptr [rsp + 0xd0], rax
0x7fffeafd48d5:	jmp		0x7fffeafd498a
disassembling symbol '.LBB0_22':
textAddr: 0x7fffeafd48da, textSize: 102
0x7fffeafd48da:	movsxd		rax, dword ptr [rsp + 0xcc]
0x7fffeafd48e2:	lea		rcx, [rip + 0x2c17077]
0x7fffeafd48e9:	movsx		edx, word ptr [rcx + rax*2]
0x7fffeafd48ed:	cmp		edx, -3
0x7fffeafd48f0:	jge		0x7fffeafd495a
0x7fffeafd48f6:	lea		rdx, [rsp + 0x20]
0x7fffeafd48fb:	movsxd		rax, dword ptr [rsp + 0xcc]
0x7fffeafd4903:	lea		rcx, [rip + 0x2c17056]
0x7fffeafd490a:	movsx		esi, word ptr [rcx + rax*2]
0x7fffeafd490e:	and		esi, 0x3fff
0x7fffeafd4914:	movsxd		rsi, esi
0x7fffeafd4917:	mov		edi, 0x61
0x7fffeafd491c:	call		0x7fffeafd49e0
0x7fffeafd4921:	cmp		qword ptr [rsp + 0x20], 0
0x7fffeafd4927:	jge		0x7fffeafd4940
0x7fffeafd492d:	movabs		rax, 0x7fffffffffffffff
0x7fffeafd4937:	mov		qword ptr [rsp], rax
0x7fffeafd493b:	jmp		0x7fffeafd4949
disassembling symbol '.LBB0_25':
textAddr: 0x7fffeafd4940, textSize: 9
0x7fffeafd4940:	mov		rax, qword ptr [rsp + 0x20]
0x7fffeafd4945:	mov		qword ptr [rsp], rax
disassembling symbol '.LBB0_26':
textAddr: 0x7fffeafd4949, textSize: 17
0x7fffeafd4949:	mov		rax, qword ptr [rsp]
0x7fffeafd494d:	mov		qword ptr [rsp + 0xd0], rax
0x7fffeafd4955:	jmp		0x7fffeafd498a
disassembling symbol '.LBB0_27':
textAddr: 0x7fffeafd495a, textSize: 5
0x7fffeafd495a:	jmp		0x7fffeafd495f
disassembling symbol '.LBB0_28':
textAddr: 0x7fffeafd495f, textSize: 5
0x7fffeafd495f:	jmp		0x7fffeafd4964
disassembling symbol '.LBB0_29':
textAddr: 0x7fffeafd4964, textSize: 5
0x7fffeafd4964:	jmp		0x7fffeafd4969
disassembling symbol '.LBB0_30':
textAddr: 0x7fffeafd4969, textSize: 5
0x7fffeafd4969:	jmp		0x7fffeafd496e
disassembling symbol '.LBB0_31':
textAddr: 0x7fffeafd496e, textSize: 28
0x7fffeafd496e:	movsxd		rax, dword ptr [rsp + 0xcc]
0x7fffeafd4976:	lea		rcx, [rip + 0x2c16fe3]
0x7fffeafd497d:	movsx		rax, word ptr [rcx + rax*2]
0x7fffeafd4982:	mov		qword ptr [rsp + 0xd0], rax
disassembling symbol '.LBB0_32':
textAddr: 0x7fffeafd498a, textSize: 22
0x7fffeafd498a:	mov		rax, qword ptr [rsp + 0xd0]
0x7fffeafd4992:	add		rsp, 0xd8
0x7fffeafd4999:	ret		
0x7fffeafd499a:	nop		word ptr [rax + rax]
disassembling symbol '__syscall3':
textAddr: 0x7fffeafd49a0, textSize: 64
0x7fffeafd49a0:	mov		qword ptr [rsp - 8], rdi
0x7fffeafd49a5:	mov		qword ptr [rsp - 0x10], rsi
0x7fffeafd49aa:	mov		qword ptr [rsp - 0x18], rdx
0x7fffeafd49af:	mov		qword ptr [rsp - 0x20], rcx
0x7fffeafd49b4:	mov		rax, qword ptr [rsp - 8]
0x7fffeafd49b9:	mov		rdi, qword ptr [rsp - 0x10]
0x7fffeafd49be:	mov		rsi, qword ptr [rsp - 0x18]
0x7fffeafd49c3:	mov		rdx, qword ptr [rsp - 0x20]
0x7fffeafd49c8:	syscall		
0x7fffeafd49ca:	mov		qword ptr [rsp - 0x28], rax
0x7fffeafd49cf:	mov		rax, qword ptr [rsp - 0x28]
0x7fffeafd49d4:	ret		
0x7fffeafd49d5:	nop		word ptr cs:[rax + rax]
0x7fffeafd49df:	nop		
disassembling symbol '__syscall2':
textAddr: 0x7fffeafd49e0, textSize: 43
0x7fffeafd49e0:	mov		qword ptr [rsp - 8], rdi
0x7fffeafd49e5:	mov		qword ptr [rsp - 0x10], rsi
0x7fffeafd49ea:	mov		qword ptr [rsp - 0x18], rdx
0x7fffeafd49ef:	mov		rax, qword ptr [rsp - 8]
0x7fffeafd49f4:	mov		rdi, qword ptr [rsp - 0x10]
0x7fffeafd49f9:	mov		rsi, qword ptr [rsp - 0x18]
0x7fffeafd49fe:	syscall		
0x7fffeafd4a00:	mov		qword ptr [rsp - 0x20], rax
0x7fffeafd4a05:	mov		rax, qword ptr [rsp - 0x20]
0x7fffeafd4a0a:	ret		
disassembling symbol 'vfprintf':
textAddr: 0x7fffeafd4a10, textSize: 768
0x7fffeafd4a10:	sub		rsp, 0x1a8
0x7fffeafd4a17:	xor		eax, eax
0x7fffeafd4a19:	mov		ecx, eax
0x7fffeafd4a1b:	lea		r8, [rsp + 0x170]
0x7fffeafd4a23:	lea		r9, [rsp + 0x140]
0x7fffeafd4a2b:	lea		r10, [rsp + 0xa0]
0x7fffeafd4a33:	xor		eax, eax
0x7fffeafd4a35:	mov		qword ptr [rsp + 0x198], rdi
0x7fffeafd4a3d:	mov		qword ptr [rsp + 0x190], rsi
0x7fffeafd4a45:	mov		qword ptr [rsp + 0x188], rdx
0x7fffeafd4a4d:	mov		rdx, r9
0x7fffeafd4a50:	mov		rdi, rdx
0x7fffeafd4a53:	mov		esi, eax
0x7fffeafd4a55:	mov		edx, 0x28
0x7fffeafd4a5a:	mov		qword ptr [rsp + 0x30], rcx
0x7fffeafd4a5f:	mov		qword ptr [rsp + 0x28], r8
0x7fffeafd4a64:	mov		qword ptr [rsp + 0x20], r9
0x7fffeafd4a69:	mov		qword ptr [rsp + 0x18], r10
0x7fffeafd4a6e:	call		0x7fffeafd2a10
0x7fffeafd4a73:	mov		qword ptr [rsp + 0x48], 0
0x7fffeafd4a7c:	mov		rcx, qword ptr [rsp + 0x188]
0x7fffeafd4a84:	mov		rdx, qword ptr [rsp + 0x28]
0x7fffeafd4a89:	mov		rdi, qword ptr [rcx + 0x10]
0x7fffeafd4a8d:	mov		qword ptr [rdx + 0x10], rdi
0x7fffeafd4a91:	movups		xmm0, xmmword ptr [rcx]
0x7fffeafd4a94:	movups		xmmword ptr [rdx], xmm0
0x7fffeafd4a97:	mov		rsi, qword ptr [rsp + 0x190]
0x7fffeafd4a9f:	mov		rdi, qword ptr [rsp + 0x30]
0x7fffeafd4aa4:	mov		rdx, qword ptr [rsp + 0x28]
0x7fffeafd4aa9:	mov		rcx, qword ptr [rsp + 0x18]
0x7fffeafd4aae:	mov		r8, qword ptr [rsp + 0x20]
0x7fffeafd4ab3:	call		0x7fffeafd4d10
0x7fffeafd4ab8:	cmp		eax, 0
0x7fffeafd4abb:	jge		0x7fffeafd4ad9
0x7fffeafd4ac1:	lea		rax, [rsp + 0x170]
0x7fffeafd4ac9:	mov		dword ptr [rsp + 0x1a4], 0xffffffff
0x7fffeafd4ad4:	jmp		0x7fffeafd4cf4
0x7fffeafd4ad9:	mov		rax, qword ptr [rsp + 0x198]
0x7fffeafd4ae1:	cmp		dword ptr [rax + 0x8c], 0
0x7fffeafd4ae8:	jl		0x7fffeafd4b04
0x7fffeafd4aee:	mov		rdi, qword ptr [rsp + 0x198]
0x7fffeafd4af6:	call		0x7fffeafc4280
0x7fffeafd4afb:	mov		dword ptr [rsp + 0x14], eax
0x7fffeafd4aff:	jmp		0x7fffeafd4b0f
0x7fffeafd4b04:	xor		eax, eax
0x7fffeafd4b06:	mov		dword ptr [rsp + 0x14], eax
0x7fffeafd4b0a:	jmp		0x7fffeafd4b0f
0x7fffeafd4b0f:	mov		eax, dword ptr [rsp + 0x14]
0x7fffeafd4b13:	mov		dword ptr [rsp + 0x3c], eax
0x7fffeafd4b17:	mov		rcx, qword ptr [rsp + 0x198]
0x7fffeafd4b1f:	mov		eax, dword ptr [rcx]
0x7fffeafd4b21:	and		eax, 0x20
0x7fffeafd4b24:	mov		dword ptr [rsp + 0x44], eax
0x7fffeafd4b28:	mov		rcx, qword ptr [rsp + 0x198]
0x7fffeafd4b30:	movsx		eax, byte ptr [rcx + 0x8a]
0x7fffeafd4b37:	cmp		eax, 1
0x7fffeafd4b3a:	jge		0x7fffeafd4b4f
0x7fffeafd4b40:	mov		rax, qword ptr [rsp + 0x198]
0x7fffeafd4b48:	mov		ecx, dword ptr [rax]
0x7fffeafd4b4a:	and		ecx, 0xffffffdf
0x7fffeafd4b4d:	mov		dword ptr [rax], ecx
0x7fffeafd4b4f:	mov		rax, qword ptr [rsp + 0x198]
0x7fffeafd4b57:	cmp		qword ptr [rax + 0x60], 0
0x7fffeafd4b5c:	jne		0x7fffeafd4bbe
0x7fffeafd4b62:	lea		rax, [rsp + 0x50]
0x7fffeafd4b67:	mov		rcx, qword ptr [rsp + 0x198]
0x7fffeafd4b6f:	mov		rcx, qword ptr [rcx + 0x58]
0x7fffeafd4b73:	mov		qword ptr [rsp + 0x48], rcx
0x7fffeafd4b78:	mov		rcx, qword ptr [rsp + 0x198]
0x7fffeafd4b80:	mov		qword ptr [rcx + 0x58], rax
0x7fffeafd4b84:	mov		rcx, qword ptr [rsp + 0x198]
0x7fffeafd4b8c:	mov		qword ptr [rcx + 0x38], rax
0x7fffeafd4b90:	mov		rcx, qword ptr [rsp + 0x198]
0x7fffeafd4b98:	mov		qword ptr [rcx + 0x28], rax
0x7fffeafd4b9c:	mov		rcx, qword ptr [rsp + 0x198]
0x7fffeafd4ba4:	mov		qword ptr [rcx + 0x60], 0x50
0x7fffeafd4bac:	add		rax, 0x50
0x7fffeafd4bb2:	mov		rcx, qword ptr [rsp + 0x198]
0x7fffeafd4bba:	mov		qword ptr [rcx + 0x20], rax
0x7fffeafd4bbe:	lea		r8, [rsp + 0x140]
0x7fffeafd4bc6:	lea		rcx, [rsp + 0xa0]
0x7fffeafd4bce:	mov		rdi, qword ptr [rsp + 0x198]
0x7fffeafd4bd6:	mov		rsi, qword ptr [rsp + 0x190]
0x7fffeafd4bde:	lea		rdx, [rsp + 0x170]
0x7fffeafd4be6:	call		0x7fffeafd4d10
0x7fffeafd4beb:	mov		dword ptr [rsp + 0x40], eax
0x7fffeafd4bef:	cmp		qword ptr [rsp + 0x48], 0
0x7fffeafd4bf5:	je		0x7fffeafd4c91
0x7fffeafd4bfb:	xor		eax, eax
0x7fffeafd4bfd:	mov		ecx, eax
0x7fffeafd4bff:	mov		rdx, qword ptr [rsp + 0x198]
0x7fffeafd4c07:	mov		rdx, qword ptr [rdx + 0x48]
0x7fffeafd4c0b:	mov		rdi, qword ptr [rsp + 0x198]
0x7fffeafd4c13:	mov		rsi, rcx
0x7fffeafd4c16:	mov		qword ptr [rsp + 8], rdx
0x7fffeafd4c1b:	mov		rdx, rcx
0x7fffeafd4c1e:	mov		rcx, qword ptr [rsp + 8]
0x7fffeafd4c23:	call		rcx
0x7fffeafd4c25:	mov		rcx, qword ptr [rsp + 0x198]
0x7fffeafd4c2d:	cmp		qword ptr [rcx + 0x28], 0
0x7fffeafd4c32:	jne		0x7fffeafd4c40
0x7fffeafd4c38:	mov		dword ptr [rsp + 0x40], 0xffffffff
0x7fffeafd4c40:	mov		rax, qword ptr [rsp + 0x48]
0x7fffeafd4c45:	mov		rcx, qword ptr [rsp + 0x198]
0x7fffeafd4c4d:	mov		qword ptr [rcx + 0x58], rax
0x7fffeafd4c51:	mov		rax, qword ptr [rsp + 0x198]
0x7fffeafd4c59:	mov		qword ptr [rax + 0x60], 0
0x7fffeafd4c61:	mov		rax, qword ptr [rsp + 0x198]
0x7fffeafd4c69:	mov		qword ptr [rax + 0x20], 0
0x7fffeafd4c71:	mov		rax, qword ptr [rsp + 0x198]
0x7fffeafd4c79:	mov		qword ptr [rax + 0x38], 0
0x7fffeafd4c81:	mov		rax, qword ptr [rsp + 0x198]
0x7fffeafd4c89:	mov		qword ptr [rax + 0x28], 0
0x7fffeafd4c91:	mov		rax, qword ptr [rsp + 0x198]
0x7fffeafd4c99:	mov		ecx, dword ptr [rax]
0x7fffeafd4c9b:	and		ecx, 0x20
0x7fffeafd4c9e:	cmp		ecx, 0
0x7fffeafd4ca1:	je		0x7fffeafd4caf
0x7fffeafd4ca7:	mov		dword ptr [rsp + 0x40], 0xffffffff
0x7fffeafd4caf:	mov		eax, dword ptr [rsp + 0x44]
0x7fffeafd4cb3:	mov		rcx, qword ptr [rsp + 0x198]
0x7fffeafd4cbb:	or		eax, dword ptr [rcx]
0x7fffeafd4cbd:	mov		dword ptr [rcx], eax
0x7fffeafd4cbf:	cmp		dword ptr [rsp + 0x3c], 0
0x7fffeafd4cc4:	je		0x7fffeafd4cdc
0x7fffeafd4cca:	mov		rdi, qword ptr [rsp + 0x198]
0x7fffeafd4cd2:	call		0x7fffeafc4290
0x7fffeafd4cd7:	jmp		0x7fffeafd4ce1
0x7fffeafd4cdc:	jmp		0x7fffeafd4ce1
0x7fffeafd4ce1:	lea		rax, [rsp + 0x170]
0x7fffeafd4ce9:	mov		ecx, dword ptr [rsp + 0x40]
0x7fffeafd4ced:	mov		dword ptr [rsp + 0x1a4], ecx
0x7fffeafd4cf4:	mov		eax, dword ptr [rsp + 0x1a4]
0x7fffeafd4cfb:	add		rsp, 0x1a8
0x7fffeafd4d02:	ret		
0x7fffeafd4d03:	nop		word ptr cs:[rax + rax]
0x7fffeafd4d0d:	nop		dword ptr [rax]
disassembling symbol '.LBB0_2':
textAddr: 0x7fffeafd4ad9, textSize: 43
0x7fffeafd4ad9:	mov		rax, qword ptr [rsp + 0x198]
0x7fffeafd4ae1:	cmp		dword ptr [rax + 0x8c], 0
0x7fffeafd4ae8:	jl		0x7fffeafd4b04
0x7fffeafd4aee:	mov		rdi, qword ptr [rsp + 0x198]
0x7fffeafd4af6:	call		0x7fffeafc4280
0x7fffeafd4afb:	mov		dword ptr [rsp + 0x14], eax
0x7fffeafd4aff:	jmp		0x7fffeafd4b0f
disassembling symbol '.LBB0_4':
textAddr: 0x7fffeafd4b04, textSize: 11
0x7fffeafd4b04:	xor		eax, eax
0x7fffeafd4b06:	mov		dword ptr [rsp + 0x14], eax
0x7fffeafd4b0a:	jmp		0x7fffeafd4b0f
disassembling symbol '.LBB0_5':
textAddr: 0x7fffeafd4b0f, textSize: 64
0x7fffeafd4b0f:	mov		eax, dword ptr [rsp + 0x14]
0x7fffeafd4b13:	mov		dword ptr [rsp + 0x3c], eax
0x7fffeafd4b17:	mov		rcx, qword ptr [rsp + 0x198]
0x7fffeafd4b1f:	mov		eax, dword ptr [rcx]
0x7fffeafd4b21:	and		eax, 0x20
0x7fffeafd4b24:	mov		dword ptr [rsp + 0x44], eax
0x7fffeafd4b28:	mov		rcx, qword ptr [rsp + 0x198]
0x7fffeafd4b30:	movsx		eax, byte ptr [rcx + 0x8a]
0x7fffeafd4b37:	cmp		eax, 1
0x7fffeafd4b3a:	jge		0x7fffeafd4b4f
0x7fffeafd4b40:	mov		rax, qword ptr [rsp + 0x198]
0x7fffeafd4b48:	mov		ecx, dword ptr [rax]
0x7fffeafd4b4a:	and		ecx, 0xffffffdf
0x7fffeafd4b4d:	mov		dword ptr [rax], ecx
disassembling symbol '.LBB0_7':
textAddr: 0x7fffeafd4b4f, textSize: 111
0x7fffeafd4b4f:	mov		rax, qword ptr [rsp + 0x198]
0x7fffeafd4b57:	cmp		qword ptr [rax + 0x60], 0
0x7fffeafd4b5c:	jne		0x7fffeafd4bbe
0x7fffeafd4b62:	lea		rax, [rsp + 0x50]
0x7fffeafd4b67:	mov		rcx, qword ptr [rsp + 0x198]
0x7fffeafd4b6f:	mov		rcx, qword ptr [rcx + 0x58]
0x7fffeafd4b73:	mov		qword ptr [rsp + 0x48], rcx
0x7fffeafd4b78:	mov		rcx, qword ptr [rsp + 0x198]
0x7fffeafd4b80:	mov		qword ptr [rcx + 0x58], rax
0x7fffeafd4b84:	mov		rcx, qword ptr [rsp + 0x198]
0x7fffeafd4b8c:	mov		qword ptr [rcx + 0x38], rax
0x7fffeafd4b90:	mov		rcx, qword ptr [rsp + 0x198]
0x7fffeafd4b98:	mov		qword ptr [rcx + 0x28], rax
0x7fffeafd4b9c:	mov		rcx, qword ptr [rsp + 0x198]
0x7fffeafd4ba4:	mov		qword ptr [rcx + 0x60], 0x50
0x7fffeafd4bac:	add		rax, 0x50
0x7fffeafd4bb2:	mov		rcx, qword ptr [rsp + 0x198]
0x7fffeafd4bba:	mov		qword ptr [rcx + 0x20], rax
disassembling symbol '.LBB0_9':
textAddr: 0x7fffeafd4bbe, textSize: 130
0x7fffeafd4bbe:	lea		r8, [rsp + 0x140]
0x7fffeafd4bc6:	lea		rcx, [rsp + 0xa0]
0x7fffeafd4bce:	mov		rdi, qword ptr [rsp + 0x198]
0x7fffeafd4bd6:	mov		rsi, qword ptr [rsp + 0x190]
0x7fffeafd4bde:	lea		rdx, [rsp + 0x170]
0x7fffeafd4be6:	call		0x7fffeafd4d10
0x7fffeafd4beb:	mov		dword ptr [rsp + 0x40], eax
0x7fffeafd4bef:	cmp		qword ptr [rsp + 0x48], 0
0x7fffeafd4bf5:	je		0x7fffeafd4c91
0x7fffeafd4bfb:	xor		eax, eax
0x7fffeafd4bfd:	mov		ecx, eax
0x7fffeafd4bff:	mov		rdx, qword ptr [rsp + 0x198]
0x7fffeafd4c07:	mov		rdx, qword ptr [rdx + 0x48]
0x7fffeafd4c0b:	mov		rdi, qword ptr [rsp + 0x198]
0x7fffeafd4c13:	mov		rsi, rcx
0x7fffeafd4c16:	mov		qword ptr [rsp + 8], rdx
0x7fffeafd4c1b:	mov		rdx, rcx
0x7fffeafd4c1e:	mov		rcx, qword ptr [rsp + 8]
0x7fffeafd4c23:	call		rcx
0x7fffeafd4c25:	mov		rcx, qword ptr [rsp + 0x198]
0x7fffeafd4c2d:	cmp		qword ptr [rcx + 0x28], 0
0x7fffeafd4c32:	jne		0x7fffeafd4c40
0x7fffeafd4c38:	mov		dword ptr [rsp + 0x40], 0xffffffff
disassembling symbol '.LBB0_12':
textAddr: 0x7fffeafd4c40, textSize: 81
0x7fffeafd4c40:	mov		rax, qword ptr [rsp + 0x48]
0x7fffeafd4c45:	mov		rcx, qword ptr [rsp + 0x198]
0x7fffeafd4c4d:	mov		qword ptr [rcx + 0x58], rax
0x7fffeafd4c51:	mov		rax, qword ptr [rsp + 0x198]
0x7fffeafd4c59:	mov		qword ptr [rax + 0x60], 0
0x7fffeafd4c61:	mov		rax, qword ptr [rsp + 0x198]
0x7fffeafd4c69:	mov		qword ptr [rax + 0x20], 0
0x7fffeafd4c71:	mov		rax, qword ptr [rsp + 0x198]
0x7fffeafd4c79:	mov		qword ptr [rax + 0x38], 0
0x7fffeafd4c81:	mov		rax, qword ptr [rsp + 0x198]
0x7fffeafd4c89:	mov		qword ptr [rax + 0x28], 0
disassembling symbol '.LBB0_13':
textAddr: 0x7fffeafd4c91, textSize: 30
0x7fffeafd4c91:	mov		rax, qword ptr [rsp + 0x198]
0x7fffeafd4c99:	mov		ecx, dword ptr [rax]
0x7fffeafd4c9b:	and		ecx, 0x20
0x7fffeafd4c9e:	cmp		ecx, 0
0x7fffeafd4ca1:	je		0x7fffeafd4caf
0x7fffeafd4ca7:	mov		dword ptr [rsp + 0x40], 0xffffffff
disassembling symbol '.LBB0_15':
textAddr: 0x7fffeafd4caf, textSize: 45
0x7fffeafd4caf:	mov		eax, dword ptr [rsp + 0x44]
0x7fffeafd4cb3:	mov		rcx, qword ptr [rsp + 0x198]
0x7fffeafd4cbb:	or		eax, dword ptr [rcx]
0x7fffeafd4cbd:	mov		dword ptr [rcx], eax
0x7fffeafd4cbf:	cmp		dword ptr [rsp + 0x3c], 0
0x7fffeafd4cc4:	je		0x7fffeafd4cdc
0x7fffeafd4cca:	mov		rdi, qword ptr [rsp + 0x198]
0x7fffeafd4cd2:	call		0x7fffeafc4290
0x7fffeafd4cd7:	jmp		0x7fffeafd4ce1
disassembling symbol '.LBB0_17':
textAddr: 0x7fffeafd4cdc, textSize: 5
0x7fffeafd4cdc:	jmp		0x7fffeafd4ce1
disassembling symbol '.LBB0_18':
textAddr: 0x7fffeafd4ce1, textSize: 19
0x7fffeafd4ce1:	lea		rax, [rsp + 0x170]
0x7fffeafd4ce9:	mov		ecx, dword ptr [rsp + 0x40]
0x7fffeafd4ced:	mov		dword ptr [rsp + 0x1a4], ecx
disassembling symbol '.LBB0_19':
textAddr: 0x7fffeafd4cf4, textSize: 28
0x7fffeafd4cf4:	mov		eax, dword ptr [rsp + 0x1a4]
0x7fffeafd4cfb:	add		rsp, 0x1a8
0x7fffeafd4d02:	ret		
0x7fffeafd4d03:	nop		word ptr cs:[rax + rax]
0x7fffeafd4d0d:	nop		dword ptr [rax]
disassembling symbol 'printf_core':
textAddr: 0x7fffeafd4d10, textSize: 5424
0x7fffeafd4d10:	sub		rsp, 0x178
0x7fffeafd4d17:	mov		qword ptr [rsp + 0x168], rdi
0x7fffeafd4d1f:	mov		qword ptr [rsp + 0x160], rsi
0x7fffeafd4d27:	mov		qword ptr [rsp + 0x158], rdx
0x7fffeafd4d2f:	mov		qword ptr [rsp + 0x150], rcx
0x7fffeafd4d37:	mov		qword ptr [rsp + 0x148], r8
0x7fffeafd4d3f:	mov		rax, qword ptr [rsp + 0x160]
0x7fffeafd4d47:	mov		qword ptr [rsp + 0x130], rax
0x7fffeafd4d4f:	mov		dword ptr [rsp + 0x12c], 0
0x7fffeafd4d5a:	mov		dword ptr [rsp + 0x100], 0
0x7fffeafd4d65:	mov		dword ptr [rsp + 0xfc], 0
0x7fffeafd4d70:	cmp		dword ptr [rsp + 0x100], 0
0x7fffeafd4d78:	jl		0x7fffeafd4dce
0x7fffeafd4d7e:	mov		eax, dword ptr [rsp + 0xfc]
0x7fffeafd4d85:	mov		ecx, 0x7fffffff
0x7fffeafd4d8a:	sub		ecx, dword ptr [rsp + 0x100]
0x7fffeafd4d91:	cmp		eax, ecx
0x7fffeafd4d93:	jle		0x7fffeafd4db4
0x7fffeafd4d99:	call		0x7fffeafc3cb0
0x7fffeafd4d9e:	mov		dword ptr [rax], 0x4b
0x7fffeafd4da4:	mov		dword ptr [rsp + 0x100], 0xffffffff
0x7fffeafd4daf:	jmp		0x7fffeafd4dc9
0x7fffeafd4db4:	mov		eax, dword ptr [rsp + 0xfc]
0x7fffeafd4dbb:	add		eax, dword ptr [rsp + 0x100]
0x7fffeafd4dc2:	mov		dword ptr [rsp + 0x100], eax
0x7fffeafd4dc9:	jmp		0x7fffeafd4dce
0x7fffeafd4dce:	mov		rax, qword ptr [rsp + 0x130]
0x7fffeafd4dd6:	cmp		byte ptr [rax], 0
0x7fffeafd4dd9:	jne		0x7fffeafd4de4
0x7fffeafd4ddf:	jmp		0x7fffeafd60be
0x7fffeafd4de4:	mov		rax, qword ptr [rsp + 0x130]
0x7fffeafd4dec:	mov		qword ptr [rsp + 0x140], rax
0x7fffeafd4df4:	xor		eax, eax
0x7fffeafd4df6:	mov		rcx, qword ptr [rsp + 0x130]
0x7fffeafd4dfe:	movsx		edx, byte ptr [rcx]
0x7fffeafd4e01:	cmp		edx, 0
0x7fffeafd4e04:	mov		byte ptr [rsp + 0x9b], al
0x7fffeafd4e0b:	je		0x7fffeafd4e29
0x7fffeafd4e11:	mov		rax, qword ptr [rsp + 0x130]
0x7fffeafd4e19:	movsx		ecx, byte ptr [rax]
0x7fffeafd4e1c:	cmp		ecx, 0x25
0x7fffeafd4e1f:	setne		dl
0x7fffeafd4e22:	mov		byte ptr [rsp + 0x9b], dl
0x7fffeafd4e29:	mov		al, byte ptr [rsp + 0x9b]
0x7fffeafd4e30:	test		al, 1
0x7fffeafd4e32:	jne		0x7fffeafd4e3d
0x7fffeafd4e38:	jmp		0x7fffeafd4e5d
0x7fffeafd4e3d:	jmp		0x7fffeafd4e42
0x7fffeafd4e42:	mov		rax, qword ptr [rsp + 0x130]
0x7fffeafd4e4a:	add		rax, 1
0x7fffeafd4e50:	mov		qword ptr [rsp + 0x130], rax
0x7fffeafd4e58:	jmp		0x7fffeafd4df4
0x7fffeafd4e5d:	mov		rax, qword ptr [rsp + 0x130]
0x7fffeafd4e65:	mov		qword ptr [rsp + 0x138], rax
0x7fffeafd4e6d:	xor		eax, eax
0x7fffeafd4e6f:	mov		rcx, qword ptr [rsp + 0x130]
0x7fffeafd4e77:	movsx		edx, byte ptr [rcx]
0x7fffeafd4e7a:	cmp		edx, 0x25
0x7fffeafd4e7d:	mov		byte ptr [rsp + 0x9a], al
0x7fffeafd4e84:	jne		0x7fffeafd4ea3
0x7fffeafd4e8a:	mov		rax, qword ptr [rsp + 0x130]
0x7fffeafd4e92:	movsx		ecx, byte ptr [rax + 1]
0x7fffeafd4e96:	cmp		ecx, 0x25
0x7fffeafd4e99:	sete		dl
0x7fffeafd4e9c:	mov		byte ptr [rsp + 0x9a], dl
0x7fffeafd4ea3:	mov		al, byte ptr [rsp + 0x9a]
0x7fffeafd4eaa:	test		al, 1
0x7fffeafd4eac:	jne		0x7fffeafd4eb7
0x7fffeafd4eb2:	jmp		0x7fffeafd4eed
0x7fffeafd4eb7:	jmp		0x7fffeafd4ebc
0x7fffeafd4ebc:	mov		rax, qword ptr [rsp + 0x138]
0x7fffeafd4ec4:	add		rax, 1
0x7fffeafd4eca:	mov		qword ptr [rsp + 0x138], rax
0x7fffeafd4ed2:	mov		rax, qword ptr [rsp + 0x130]
0x7fffeafd4eda:	add		rax, 2
0x7fffeafd4ee0:	mov		qword ptr [rsp + 0x130], rax
0x7fffeafd4ee8:	jmp		0x7fffeafd4e6d
0x7fffeafd4eed:	mov		rax, qword ptr [rsp + 0x138]
0x7fffeafd4ef5:	mov		rcx, qword ptr [rsp + 0x140]
0x7fffeafd4efd:	sub		rax, rcx
0x7fffeafd4f00:	mov		dword ptr [rsp + 0xfc], eax
0x7fffeafd4f07:	cmp		qword ptr [rsp + 0x168], 0
0x7fffeafd4f10:	je		0x7fffeafd4f33
0x7fffeafd4f16:	mov		rdi, qword ptr [rsp + 0x168]
0x7fffeafd4f1e:	mov		rsi, qword ptr [rsp + 0x140]
0x7fffeafd4f26:	movsxd		rdx, dword ptr [rsp + 0xfc]
0x7fffeafd4f2e:	call		0x7fffeafd6240
0x7fffeafd4f33:	cmp		dword ptr [rsp + 0xfc], 0
0x7fffeafd4f3b:	je		0x7fffeafd4f46
0x7fffeafd4f41:	jmp		0x7fffeafd4d70
0x7fffeafd4f46:	mov		rax, qword ptr [rsp + 0x130]
0x7fffeafd4f4e:	movsx		ecx, byte ptr [rax + 1]
0x7fffeafd4f52:	sub		ecx, 0x30
0x7fffeafd4f55:	cmp		ecx, 0xa
0x7fffeafd4f58:	jae		0x7fffeafd4faf
0x7fffeafd4f5e:	mov		rax, qword ptr [rsp + 0x130]
0x7fffeafd4f66:	movsx		ecx, byte ptr [rax + 2]
0x7fffeafd4f6a:	cmp		ecx, 0x24
0x7fffeafd4f6d:	jne		0x7fffeafd4faf
0x7fffeafd4f73:	mov		dword ptr [rsp + 0x12c], 1
0x7fffeafd4f7e:	mov		rax, qword ptr [rsp + 0x130]
0x7fffeafd4f86:	movsx		ecx, byte ptr [rax + 1]
0x7fffeafd4f8a:	sub		ecx, 0x30
0x7fffeafd4f8d:	mov		dword ptr [rsp + 0x10c], ecx
0x7fffeafd4f94:	mov		rax, qword ptr [rsp + 0x130]
0x7fffeafd4f9c:	add		rax, 3
0x7fffeafd4fa2:	mov		qword ptr [rsp + 0x130], rax
0x7fffeafd4faa:	jmp		0x7fffeafd4fd0
0x7fffeafd4faf:	mov		dword ptr [rsp + 0x10c], 0xffffffff
0x7fffeafd4fba:	mov		rax, qword ptr [rsp + 0x130]
0x7fffeafd4fc2:	add		rax, 1
0x7fffeafd4fc8:	mov		qword ptr [rsp + 0x130], rax
0x7fffeafd4fd0:	mov		dword ptr [rsp + 0x128], 0
0x7fffeafd4fdb:	xor		eax, eax
0x7fffeafd4fdd:	mov		rcx, qword ptr [rsp + 0x130]
0x7fffeafd4fe5:	movsx		edx, byte ptr [rcx]
0x7fffeafd4fe8:	sub		edx, 0x20
0x7fffeafd4feb:	cmp		edx, 0x20
0x7fffeafd4fee:	mov		byte ptr [rsp + 0x99], al
0x7fffeafd4ff5:	jae		0x7fffeafd5023
0x7fffeafd4ffb:	mov		rax, qword ptr [rsp + 0x130]
0x7fffeafd5003:	movsx		ecx, byte ptr [rax]
0x7fffeafd5006:	sub		ecx, 0x20
0x7fffeafd5009:	mov		edx, 1
0x7fffeafd500e:	shl		edx, cl
0x7fffeafd5010:	and		edx, 0x12889
0x7fffeafd5016:	cmp		edx, 0
0x7fffeafd5019:	setne		cl
0x7fffeafd501c:	mov		byte ptr [rsp + 0x99], cl
0x7fffeafd5023:	mov		al, byte ptr [rsp + 0x99]
0x7fffeafd502a:	test		al, 1
0x7fffeafd502c:	jne		0x7fffeafd5037
0x7fffeafd5032:	jmp		0x7fffeafd5075
0x7fffeafd5037:	mov		rax, qword ptr [rsp + 0x130]
0x7fffeafd503f:	movsx		ecx, byte ptr [rax]
0x7fffeafd5042:	sub		ecx, 0x20
0x7fffeafd5045:	mov		edx, 1
0x7fffeafd504a:	shl		edx, cl
0x7fffeafd504c:	or		edx, dword ptr [rsp + 0x128]
0x7fffeafd5053:	mov		dword ptr [rsp + 0x128], edx
0x7fffeafd505a:	mov		rax, qword ptr [rsp + 0x130]
0x7fffeafd5062:	add		rax, 1
0x7fffeafd5068:	mov		qword ptr [rsp + 0x130], rax
0x7fffeafd5070:	jmp		0x7fffeafd4fdb
0x7fffeafd5075:	mov		rax, qword ptr [rsp + 0x130]
0x7fffeafd507d:	movsx		ecx, byte ptr [rax]
0x7fffeafd5080:	cmp		ecx, 0x2a
0x7fffeafd5083:	jne		0x7fffeafd5243
0x7fffeafd5089:	mov		rax, qword ptr [rsp + 0x130]
0x7fffeafd5091:	movsx		ecx, byte ptr [rax + 1]
0x7fffeafd5095:	sub		ecx, 0x30
0x7fffeafd5098:	cmp		ecx, 0xa
0x7fffeafd509b:	jae		0x7fffeafd5129
0x7fffeafd50a1:	mov		rax, qword ptr [rsp + 0x130]
0x7fffeafd50a9:	movsx		ecx, byte ptr [rax + 2]
0x7fffeafd50ad:	cmp		ecx, 0x24
0x7fffeafd50b0:	jne		0x7fffeafd5129
0x7fffeafd50b6:	mov		dword ptr [rsp + 0x12c], 1
0x7fffeafd50c1:	mov		rax, qword ptr [rsp + 0x148]
0x7fffeafd50c9:	mov		rcx, qword ptr [rsp + 0x130]
0x7fffeafd50d1:	movsx		edx, byte ptr [rcx + 1]
0x7fffeafd50d5:	sub		edx, 0x30
0x7fffeafd50d8:	movsxd		rcx, edx
0x7fffeafd50db:	mov		dword ptr [rax + rcx*4], 0xa
0x7fffeafd50e2:	mov		rax, qword ptr [rsp + 0x150]
0x7fffeafd50ea:	mov		rcx, qword ptr [rsp + 0x130]
0x7fffeafd50f2:	movsx		edx, byte ptr [rcx + 1]
0x7fffeafd50f6:	sub		edx, 0x30
0x7fffeafd50f9:	movsxd		rcx, edx
0x7fffeafd50fc:	shl		rcx, 4
0x7fffeafd5100:	add		rax, rcx
0x7fffeafd5103:	mov		rax, qword ptr [rax]
0x7fffeafd5106:	mov		dword ptr [rsp + 0x124], eax
0x7fffeafd510d:	mov		rcx, qword ptr [rsp + 0x130]
0x7fffeafd5115:	add		rcx, 3
0x7fffeafd511c:	mov		qword ptr [rsp + 0x130], rcx
0x7fffeafd5124:	jmp		0x7fffeafd520c
0x7fffeafd5129:	cmp		dword ptr [rsp + 0x12c], 0
0x7fffeafd5131:	jne		0x7fffeafd51f7
0x7fffeafd5137:	cmp		qword ptr [rsp + 0x168], 0
0x7fffeafd5140:	je		0x7fffeafd51c5
0x7fffeafd5146:	mov		rax, qword ptr [rsp + 0x158]
0x7fffeafd514e:	mov		ecx, dword ptr [rax]
0x7fffeafd5150:	cmp		ecx, 0x28
0x7fffeafd5153:	mov		qword ptr [rsp + 0x90], rax
0x7fffeafd515b:	mov		dword ptr [rsp + 0x8c], ecx
0x7fffeafd5162:	ja		0x7fffeafd5190
0x7fffeafd5168:	mov		eax, dword ptr [rsp + 0x8c]
0x7fffeafd516f:	movsxd		rcx, eax
0x7fffeafd5172:	mov		rdx, qword ptr [rsp + 0x90]
0x7fffeafd517a:	add		rcx, qword ptr [rdx + 0x10]
0x7fffeafd517e:	add		eax, 8
0x7fffeafd5181:	mov		dword ptr [rdx], eax
0x7fffeafd5183:	mov		qword ptr [rsp + 0x80], rcx
0x7fffeafd518b:	jmp		0x7fffeafd51b2
0x7fffeafd5190:	mov		rax, qword ptr [rsp + 0x90]
0x7fffeafd5198:	mov		rcx, qword ptr [rax + 8]
0x7fffeafd519c:	mov		rdx, rcx
0x7fffeafd519f:	add		rcx, 8
0x7fffeafd51a6:	mov		qword ptr [rax + 8], rcx
0x7fffeafd51aa:	mov		qword ptr [rsp + 0x80], rdx
0x7fffeafd51b2:	mov		rax, qword ptr [rsp + 0x80]
0x7fffeafd51ba:	mov		ecx, dword ptr [rax]
0x7fffeafd51bc:	mov		dword ptr [rsp + 0x7c], ecx
0x7fffeafd51c0:	jmp		0x7fffeafd51d0
0x7fffeafd51c5:	xor		eax, eax
0x7fffeafd51c7:	mov		dword ptr [rsp + 0x7c], eax
0x7fffeafd51cb:	jmp		0x7fffeafd51d0
0x7fffeafd51d0:	mov		eax, dword ptr [rsp + 0x7c]
0x7fffeafd51d4:	mov		dword ptr [rsp + 0x124], eax
0x7fffeafd51db:	mov		rcx, qword ptr [rsp + 0x130]
0x7fffeafd51e3:	add		rcx, 1
0x7fffeafd51ea:	mov		qword ptr [rsp + 0x130], rcx
0x7fffeafd51f2:	jmp		0x7fffeafd5207
0x7fffeafd51f7:	mov		dword ptr [rsp + 0x174], 0xffffffff
0x7fffeafd5202:	jmp		0x7fffeafd6225
0x7fffeafd5207:	jmp		0x7fffeafd520c
0x7fffeafd520c:	cmp		dword ptr [rsp + 0x124], 0
0x7fffeafd5214:	jge		0x7fffeafd523e
0x7fffeafd521a:	xor		eax, eax
0x7fffeafd521c:	mov		ecx, dword ptr [rsp + 0x128]
0x7fffeafd5223:	or		ecx, 0x2000
0x7fffeafd5229:	mov		dword ptr [rsp + 0x128], ecx
0x7fffeafd5230:	sub		eax, dword ptr [rsp + 0x124]
0x7fffeafd5237:	mov		dword ptr [rsp + 0x124], eax
0x7fffeafd523e:	jmp		0x7fffeafd5275
0x7fffeafd5243:	lea		rdi, [rsp + 0x130]
0x7fffeafd524b:	call		0x7fffeafd6280
0x7fffeafd5250:	mov		dword ptr [rsp + 0x124], eax
0x7fffeafd5257:	cmp		eax, 0
0x7fffeafd525a:	jge		0x7fffeafd5270
0x7fffeafd5260:	mov		dword ptr [rsp + 0x174], 0xffffffff
0x7fffeafd526b:	jmp		0x7fffeafd6225
0x7fffeafd5270:	jmp		0x7fffeafd5275
0x7fffeafd5275:	mov		rax, qword ptr [rsp + 0x130]
0x7fffeafd527d:	movsx		ecx, byte ptr [rax]
0x7fffeafd5280:	cmp		ecx, 0x2e
0x7fffeafd5283:	jne		0x7fffeafd5403
0x7fffeafd5289:	mov		rax, qword ptr [rsp + 0x130]
0x7fffeafd5291:	movsx		ecx, byte ptr [rax + 1]
0x7fffeafd5295:	cmp		ecx, 0x2a
0x7fffeafd5298:	jne		0x7fffeafd5403
0x7fffeafd529e:	mov		rax, qword ptr [rsp + 0x130]
0x7fffeafd52a6:	movsx		ecx, byte ptr [rax + 2]
0x7fffeafd52aa:	sub		ecx, 0x30
0x7fffeafd52ad:	cmp		ecx, 0xa
0x7fffeafd52b0:	jae		0x7fffeafd5333
0x7fffeafd52b6:	mov		rax, qword ptr [rsp + 0x130]
0x7fffeafd52be:	movsx		ecx, byte ptr [rax + 3]
0x7fffeafd52c2:	cmp		ecx, 0x24
0x7fffeafd52c5:	jne		0x7fffeafd5333
0x7fffeafd52cb:	mov		rax, qword ptr [rsp + 0x148]
0x7fffeafd52d3:	mov		rcx, qword ptr [rsp + 0x130]
0x7fffeafd52db:	movsx		edx, byte ptr [rcx + 2]
0x7fffeafd52df:	sub		edx, 0x30
0x7fffeafd52e2:	movsxd		rcx, edx
0x7fffeafd52e5:	mov		dword ptr [rax + rcx*4], 0xa
0x7fffeafd52ec:	mov		rax, qword ptr [rsp + 0x150]
0x7fffeafd52f4:	mov		rcx, qword ptr [rsp + 0x130]
0x7fffeafd52fc:	movsx		edx, byte ptr [rcx + 2]
0x7fffeafd5300:	sub		edx, 0x30
0x7fffeafd5303:	movsxd		rcx, edx
0x7fffeafd5306:	shl		rcx, 4
0x7fffeafd530a:	add		rax, rcx
0x7fffeafd530d:	mov		rax, qword ptr [rax]
0x7fffeafd5310:	mov		dword ptr [rsp + 0x120], eax
0x7fffeafd5317:	mov		rcx, qword ptr [rsp + 0x130]
0x7fffeafd531f:	add		rcx, 4
0x7fffeafd5326:	mov		qword ptr [rsp + 0x130], rcx
0x7fffeafd532e:	jmp		0x7fffeafd53fe
0x7fffeafd5333:	cmp		dword ptr [rsp + 0x12c], 0
0x7fffeafd533b:	jne		0x7fffeafd53e9
0x7fffeafd5341:	cmp		qword ptr [rsp + 0x168], 0
0x7fffeafd534a:	je		0x7fffeafd53b7
0x7fffeafd5350:	mov		rax, qword ptr [rsp + 0x158]
0x7fffeafd5358:	mov		ecx, dword ptr [rax]
0x7fffeafd535a:	cmp		ecx, 0x28
0x7fffeafd535d:	mov		qword ptr [rsp + 0x70], rax
0x7fffeafd5362:	mov		dword ptr [rsp + 0x6c], ecx
0x7fffeafd5366:	ja		0x7fffeafd538b
0x7fffeafd536c:	mov		eax, dword ptr [rsp + 0x6c]
0x7fffeafd5370:	movsxd		rcx, eax
0x7fffeafd5373:	mov		rdx, qword ptr [rsp + 0x70]
0x7fffeafd5378:	add		rcx, qword ptr [rdx + 0x10]
0x7fffeafd537c:	add		eax, 8
0x7fffeafd537f:	mov		dword ptr [rdx], eax
0x7fffeafd5381:	mov		qword ptr [rsp + 0x60], rcx
0x7fffeafd5386:	jmp		0x7fffeafd53a7
0x7fffeafd538b:	mov		rax, qword ptr [rsp + 0x70]
0x7fffeafd5390:	mov		rcx, qword ptr [rax + 8]
0x7fffeafd5394:	mov		rdx, rcx
0x7fffeafd5397:	add		rcx, 8
0x7fffeafd539e:	mov		qword ptr [rax + 8], rcx
0x7fffeafd53a2:	mov		qword ptr [rsp + 0x60], rdx
0x7fffeafd53a7:	mov		rax, qword ptr [rsp + 0x60]
0x7fffeafd53ac:	mov		ecx, dword ptr [rax]
0x7fffeafd53ae:	mov		dword ptr [rsp + 0x5c], ecx
0x7fffeafd53b2:	jmp		0x7fffeafd53c2
0x7fffeafd53b7:	xor		eax, eax
0x7fffeafd53b9:	mov		dword ptr [rsp + 0x5c], eax
0x7fffeafd53bd:	jmp		0x7fffeafd53c2
0x7fffeafd53c2:	mov		eax, dword ptr [rsp + 0x5c]
0x7fffeafd53c6:	mov		dword ptr [rsp + 0x120], eax
0x7fffeafd53cd:	mov		rcx, qword ptr [rsp + 0x130]
0x7fffeafd53d5:	add		rcx, 2
0x7fffeafd53dc:	mov		qword ptr [rsp + 0x130], rcx
0x7fffeafd53e4:	jmp		0x7fffeafd53f9
0x7fffeafd53e9:	mov		dword ptr [rsp + 0x174], 0xffffffff
0x7fffeafd53f4:	jmp		0x7fffeafd6225
0x7fffeafd53f9:	jmp		0x7fffeafd53fe
0x7fffeafd53fe:	jmp		0x7fffeafd5456
0x7fffeafd5403:	mov		rax, qword ptr [rsp + 0x130]
0x7fffeafd540b:	movsx		ecx, byte ptr [rax]
0x7fffeafd540e:	cmp		ecx, 0x2e
0x7fffeafd5411:	jne		0x7fffeafd5446
0x7fffeafd5417:	mov		rax, qword ptr [rsp + 0x130]
0x7fffeafd541f:	add		rax, 1
0x7fffeafd5425:	mov		qword ptr [rsp + 0x130], rax
0x7fffeafd542d:	lea		rdi, [rsp + 0x130]
0x7fffeafd5435:	call		0x7fffeafd6280
0x7fffeafd543a:	mov		dword ptr [rsp + 0x120], eax
0x7fffeafd5441:	jmp		0x7fffeafd5451
0x7fffeafd5446:	mov		dword ptr [rsp + 0x120], 0xffffffff
0x7fffeafd5451:	jmp		0x7fffeafd5456
0x7fffeafd5456:	mov		dword ptr [rsp + 0x108], 0
0x7fffeafd5461:	mov		rax, qword ptr [rsp + 0x130]
0x7fffeafd5469:	movsx		ecx, byte ptr [rax]
0x7fffeafd546c:	sub		ecx, 0x41
0x7fffeafd546f:	cmp		ecx, 0x39
0x7fffeafd5472:	jbe		0x7fffeafd5488
0x7fffeafd5478:	mov		dword ptr [rsp + 0x174], 0xffffffff
0x7fffeafd5483:	jmp		0x7fffeafd6225
0x7fffeafd5488:	lea		rax, [rip + 0x2c16801]
0x7fffeafd548f:	mov		ecx, dword ptr [rsp + 0x108]
0x7fffeafd5496:	mov		dword ptr [rsp + 0x104], ecx
0x7fffeafd549d:	mov		ecx, dword ptr [rsp + 0x108]
0x7fffeafd54a4:	mov		edx, ecx
0x7fffeafd54a6:	imul		rdx, rdx, 0x3a
0x7fffeafd54ad:	add		rax, rdx
0x7fffeafd54b0:	mov		rdx, qword ptr [rsp + 0x130]
0x7fffeafd54b8:	mov		rsi, rdx
0x7fffeafd54bb:	add		rsi, 1
0x7fffeafd54c2:	mov		qword ptr [rsp + 0x130], rsi
0x7fffeafd54ca:	movsx		ecx, byte ptr [rdx]
0x7fffeafd54cd:	sub		ecx, 0x41
0x7fffeafd54d0:	movsxd		rdx, ecx
0x7fffeafd54d3:	movzx		ecx, byte ptr [rax + rdx]
0x7fffeafd54d7:	mov		dword ptr [rsp + 0x108], ecx
0x7fffeafd54de:	mov		eax, dword ptr [rsp + 0x108]
0x7fffeafd54e5:	sub		eax, 1
0x7fffeafd54e8:	cmp		eax, 8
0x7fffeafd54eb:	jb		0x7fffeafd5461
0x7fffeafd54f1:	cmp		dword ptr [rsp + 0x108], 0
0x7fffeafd54f9:	jne		0x7fffeafd550f
0x7fffeafd54ff:	mov		dword ptr [rsp + 0x174], 0xffffffff
0x7fffeafd550a:	jmp		0x7fffeafd6225
0x7fffeafd550f:	cmp		dword ptr [rsp + 0x108], 0x15
0x7fffeafd5517:	jne		0x7fffeafd5540
0x7fffeafd551d:	cmp		dword ptr [rsp + 0x10c], 0
0x7fffeafd5525:	jl		0x7fffeafd553b
0x7fffeafd552b:	mov		dword ptr [rsp + 0x174], 0xffffffff
0x7fffeafd5536:	jmp		0x7fffeafd6225
0x7fffeafd553b:	jmp		0x7fffeafd55e5
0x7fffeafd5540:	cmp		dword ptr [rsp + 0x10c], 0
0x7fffeafd5548:	jl		0x7fffeafd559b
0x7fffeafd554e:	mov		eax, dword ptr [rsp + 0x108]
0x7fffeafd5555:	mov		rcx, qword ptr [rsp + 0x148]
0x7fffeafd555d:	movsxd		rdx, dword ptr [rsp + 0x10c]
0x7fffeafd5565:	mov		dword ptr [rcx + rdx*4], eax
0x7fffeafd5568:	mov		rcx, qword ptr [rsp + 0x150]
0x7fffeafd5570:	movsxd		rdx, dword ptr [rsp + 0x10c]
0x7fffeafd5578:	shl		rdx, 4
0x7fffeafd557c:	add		rcx, rdx
0x7fffeafd557f:	mov		rdx, qword ptr [rcx]
0x7fffeafd5582:	mov		qword ptr [rsp + 0x110], rdx
0x7fffeafd558a:	mov		rcx, qword ptr [rcx + 8]
0x7fffeafd558e:	mov		qword ptr [rsp + 0x118], rcx
0x7fffeafd5596:	jmp		0x7fffeafd55e0
0x7fffeafd559b:	cmp		qword ptr [rsp + 0x168], 0
0x7fffeafd55a4:	je		0x7fffeafd55cb
0x7fffeafd55aa:	mov		esi, dword ptr [rsp + 0x108]
0x7fffeafd55b1:	mov		rdx, qword ptr [rsp + 0x158]
0x7fffeafd55b9:	lea		rdi, [rsp + 0x110]
0x7fffeafd55c1:	call		0x7fffeafd62e0
0x7fffeafd55c6:	jmp		0x7fffeafd55db
0x7fffeafd55cb:	mov		dword ptr [rsp + 0x174], 0
0x7fffeafd55d6:	jmp		0x7fffeafd6225
0x7fffeafd55db:	jmp		0x7fffeafd55e0
0x7fffeafd55e0:	jmp		0x7fffeafd55e5
0x7fffeafd55e5:	cmp		qword ptr [rsp + 0x168], 0
0x7fffeafd55ee:	jne		0x7fffeafd55f9
0x7fffeafd55f4:	jmp		0x7fffeafd4d70
0x7fffeafd55f9:	lea		rax, [rsp + 0xc0]
0x7fffeafd5601:	add		rax, 0x2b
0x7fffeafd5607:	mov		qword ptr [rsp + 0x138], rax
0x7fffeafd560f:	lea		rax, [rip + 0x2c1693f]
0x7fffeafd5616:	mov		qword ptr [rsp + 0xb8], rax
0x7fffeafd561e:	mov		dword ptr [rsp + 0xb0], 0
0x7fffeafd5629:	mov		rax, qword ptr [rsp + 0x130]
0x7fffeafd5631:	movsx		ecx, byte ptr [rax - 1]
0x7fffeafd5635:	mov		dword ptr [rsp + 0xb4], ecx
0x7fffeafd563c:	cmp		dword ptr [rsp + 0x104], 0
0x7fffeafd5644:	je		0x7fffeafd566e
0x7fffeafd564a:	mov		eax, dword ptr [rsp + 0xb4]
0x7fffeafd5651:	and		eax, 0xf
0x7fffeafd5654:	cmp		eax, 3
0x7fffeafd5657:	jne		0x7fffeafd566e
0x7fffeafd565d:	mov		eax, dword ptr [rsp + 0xb4]
0x7fffeafd5664:	and		eax, 0xffffffdf
0x7fffeafd5667:	mov		dword ptr [rsp + 0xb4], eax
0x7fffeafd566e:	mov		eax, dword ptr [rsp + 0x128]
0x7fffeafd5675:	and		eax, 0x2000
0x7fffeafd567a:	cmp		eax, 0
0x7fffeafd567d:	je		0x7fffeafd5696
0x7fffeafd5683:	mov		eax, dword ptr [rsp + 0x128]
0x7fffeafd568a:	and		eax, 0xfffeffff
0x7fffeafd568f:	mov		dword ptr [rsp + 0x128], eax
0x7fffeafd5696:	mov		eax, dword ptr [rsp + 0xb4]
0x7fffeafd569d:	add		eax, -0x41
0x7fffeafd56a0:	mov		ecx, eax
0x7fffeafd56a2:	sub		eax, 0x37
0x7fffeafd56a5:	mov		qword ptr [rsp + 0x50], rcx
0x7fffeafd56aa:	ja		0x7fffeafd5f12
0x7fffeafd56b0:	lea		rax, [rip + 0x2c164a9]
0x7fffeafd56b7:	mov		rcx, qword ptr [rsp + 0x50]
0x7fffeafd56bc:	movsxd		rdx, dword ptr [rax + rcx*4]
0x7fffeafd56c0:	add		rdx, rax
0x7fffeafd56c3:	jmp		rdx
0x7fffeafd56c5:	mov		eax, dword ptr [rsp + 0x104]
0x7fffeafd56cc:	mov		ecx, eax
0x7fffeafd56ce:	mov		rdx, rcx
0x7fffeafd56d1:	sub		rdx, 7
0x7fffeafd56d5:	mov		qword ptr [rsp + 0x48], rcx
0x7fffeafd56da:	ja		0x7fffeafd5793
0x7fffeafd56e0:	lea		rax, [rip + 0x2c16559]
0x7fffeafd56e7:	mov		rcx, qword ptr [rsp + 0x48]
0x7fffeafd56ec:	movsxd		rdx, dword ptr [rax + rcx*4]
0x7fffeafd56f0:	add		rdx, rax
0x7fffeafd56f3:	jmp		rdx
0x7fffeafd56f5:	mov		eax, dword ptr [rsp + 0x100]
0x7fffeafd56fc:	mov		rcx, qword ptr [rsp + 0x110]
0x7fffeafd5704:	mov		dword ptr [rcx], eax
0x7fffeafd5706:	jmp		0x7fffeafd5793
0x7fffeafd570b:	movsxd		rax, dword ptr [rsp + 0x100]
0x7fffeafd5713:	mov		rcx, qword ptr [rsp + 0x110]
0x7fffeafd571b:	mov		qword ptr [rcx], rax
0x7fffeafd571e:	jmp		0x7fffeafd5793
0x7fffeafd5723:	movsxd		rax, dword ptr [rsp + 0x100]
0x7fffeafd572b:	mov		rcx, qword ptr [rsp + 0x110]
0x7fffeafd5733:	mov		qword ptr [rcx], rax
0x7fffeafd5736:	jmp		0x7fffeafd5793
0x7fffeafd573b:	mov		eax, dword ptr [rsp + 0x100]
0x7fffeafd5742:	mov		rcx, qword ptr [rsp + 0x110]
0x7fffeafd574a:	mov		word ptr [rcx], ax
0x7fffeafd574d:	jmp		0x7fffeafd5793
0x7fffeafd5752:	mov		eax, dword ptr [rsp + 0x100]
0x7fffeafd5759:	mov		rcx, qword ptr [rsp + 0x110]
0x7fffeafd5761:	mov		byte ptr [rcx], al
0x7fffeafd5763:	jmp		0x7fffeafd5793
0x7fffeafd5768:	movsxd		rax, dword ptr [rsp + 0x100]
0x7fffeafd5770:	mov		rcx, qword ptr [rsp + 0x110]
0x7fffeafd5778:	mov		qword ptr [rcx], rax
0x7fffeafd577b:	jmp		0x7fffeafd5793
0x7fffeafd5780:	movsxd		rax, dword ptr [rsp + 0x100]
0x7fffeafd5788:	mov		rcx, qword ptr [rsp + 0x110]
0x7fffeafd5790:	mov		qword ptr [rcx], rax
0x7fffeafd5793:	jmp		0x7fffeafd4d70
0x7fffeafd5798:	movsxd		rax, dword ptr [rsp + 0x120]
0x7fffeafd57a0:	cmp		rax, 0x10
0x7fffeafd57a4:	jbe		0x7fffeafd57bc
0x7fffeafd57aa:	movsxd		rax, dword ptr [rsp + 0x120]
0x7fffeafd57b2:	mov		qword ptr [rsp + 0x40], rax
0x7fffeafd57b7:	jmp		0x7fffeafd57cb
0x7fffeafd57bc:	mov		eax, 0x10
0x7fffeafd57c1:	mov		qword ptr [rsp + 0x40], rax
0x7fffeafd57c6:	jmp		0x7fffeafd57cb
0x7fffeafd57cb:	mov		rax, qword ptr [rsp + 0x40]
0x7fffeafd57d0:	mov		dword ptr [rsp + 0x120], eax
0x7fffeafd57d7:	mov		dword ptr [rsp + 0xb4], 0x78
0x7fffeafd57e2:	mov		eax, dword ptr [rsp + 0x128]
0x7fffeafd57e9:	or		eax, 8
0x7fffeafd57ec:	mov		dword ptr [rsp + 0x128], eax
0x7fffeafd57f3:	mov		rdi, qword ptr [rsp + 0x110]
0x7fffeafd57fb:	mov		rsi, qword ptr [rsp + 0x138]
0x7fffeafd5803:	mov		eax, dword ptr [rsp + 0xb4]
0x7fffeafd580a:	and		eax, 0x20
0x7fffeafd580d:	mov		edx, eax
0x7fffeafd580f:	call		0x7fffeafd6870
0x7fffeafd5814:	mov		qword ptr [rsp + 0x140], rax
0x7fffeafd581c:	cmp		qword ptr [rsp + 0x110], 0
0x7fffeafd5825:	je		0x7fffeafd5869
0x7fffeafd582b:	mov		eax, dword ptr [rsp + 0x128]
0x7fffeafd5832:	and		eax, 8
0x7fffeafd5835:	cmp		eax, 0
0x7fffeafd5838:	je		0x7fffeafd5869
0x7fffeafd583e:	mov		eax, dword ptr [rsp + 0xb4]
0x7fffeafd5845:	sar		eax, 4
0x7fffeafd5848:	mov		rcx, qword ptr [rsp + 0xb8]
0x7fffeafd5850:	movsxd		rdx, eax
0x7fffeafd5853:	add		rcx, rdx
0x7fffeafd5856:	mov		qword ptr [rsp + 0xb8], rcx
0x7fffeafd585e:	mov		dword ptr [rsp + 0xb0], 2
0x7fffeafd5869:	xor		eax, eax
0x7fffeafd586b:	test		al, 1
0x7fffeafd586d:	jne		0x7fffeafd5878
0x7fffeafd5873:	jmp		0x7fffeafd58fd
0x7fffeafd5878:	jmp		0x7fffeafd587d
0x7fffeafd587d:	mov		rdi, qword ptr [rsp + 0x110]
0x7fffeafd5885:	mov		rsi, qword ptr [rsp + 0x138]
0x7fffeafd588d:	call		0x7fffeafd68e0
0x7fffeafd5892:	mov		qword ptr [rsp + 0x140], rax
0x7fffeafd589a:	mov		ecx, dword ptr [rsp + 0x128]
0x7fffeafd58a1:	and		ecx, 8
0x7fffeafd58a4:	cmp		ecx, 0
0x7fffeafd58a7:	je		0x7fffeafd58f8
0x7fffeafd58ad:	movsxd		rax, dword ptr [rsp + 0x120]
0x7fffeafd58b5:	mov		rcx, qword ptr [rsp + 0x138]
0x7fffeafd58bd:	mov		rdx, qword ptr [rsp + 0x140]
0x7fffeafd58c5:	sub		rcx, rdx
0x7fffeafd58c8:	add		rcx, 1
0x7fffeafd58cf:	cmp		rax, rcx
0x7fffeafd58d2:	jge		0x7fffeafd58f8
0x7fffeafd58d8:	mov		rax, qword ptr [rsp + 0x138]
0x7fffeafd58e0:	mov		rcx, qword ptr [rsp + 0x140]
0x7fffeafd58e8:	sub		rax, rcx
0x7fffeafd58eb:	add		rax, 1
0x7fffeafd58f1:	mov		dword ptr [rsp + 0x120], eax
0x7fffeafd58f8:	jmp		0x7fffeafd58fd
0x7fffeafd58fd:	xor		eax, eax
0x7fffeafd58ff:	test		al, 1
0x7fffeafd5901:	jne		0x7fffeafd590c
0x7fffeafd5907:	jmp		0x7fffeafd59e2
0x7fffeafd590c:	jmp		0x7fffeafd5911
0x7fffeafd5911:	mov		dword ptr [rsp + 0xb0], 1
0x7fffeafd591c:	movabs		rax, 0x7fffffffffffffff
0x7fffeafd5926:	cmp		qword ptr [rsp + 0x110], rax
0x7fffeafd592e:	jbe		0x7fffeafd594d
0x7fffeafd5934:	xor		eax, eax
0x7fffeafd5936:	mov		ecx, eax
0x7fffeafd5938:	sub		rcx, qword ptr [rsp + 0x110]
0x7fffeafd5940:	mov		qword ptr [rsp + 0x110], rcx
0x7fffeafd5948:	jmp		0x7fffeafd59c0
0x7fffeafd594d:	mov		eax, dword ptr [rsp + 0x128]
0x7fffeafd5954:	and		eax, 0x800
0x7fffeafd5959:	cmp		eax, 0
0x7fffeafd595c:	je		0x7fffeafd597d
0x7fffeafd5962:	mov		rax, qword ptr [rsp + 0xb8]
0x7fffeafd596a:	add		rax, 1
0x7fffeafd5970:	mov		qword ptr [rsp + 0xb8], rax
0x7fffeafd5978:	jmp		0x7fffeafd59bb
0x7fffeafd597d:	mov		eax, dword ptr [rsp + 0x128]
0x7fffeafd5984:	and		eax, 1
0x7fffeafd5987:	cmp		eax, 0
0x7fffeafd598a:	je		0x7fffeafd59ab
0x7fffeafd5990:	mov		rax, qword ptr [rsp + 0xb8]
0x7fffeafd5998:	add		rax, 2
0x7fffeafd599e:	mov		qword ptr [rsp + 0xb8], rax
0x7fffeafd59a6:	jmp		0x7fffeafd59b6
0x7fffeafd59ab:	mov		dword ptr [rsp + 0xb0], 0
0x7fffeafd59b6:	jmp		0x7fffeafd59bb
0x7fffeafd59bb:	jmp		0x7fffeafd59c0
0x7fffeafd59c0:	jmp		0x7fffeafd59c5
0x7fffeafd59c5:	mov		rdi, qword ptr [rsp + 0x110]
0x7fffeafd59cd:	mov		rsi, qword ptr [rsp + 0x138]
0x7fffeafd59d5:	call		0x7fffeafd6940
0x7fffeafd59da:	mov		qword ptr [rsp + 0x140], rax
0x7fffeafd59e2:	cmp		dword ptr [rsp + 0x120], 0
0x7fffeafd59ea:	jl		0x7fffeafd5a03
0x7fffeafd59f0:	mov		eax, dword ptr [rsp + 0x128]
0x7fffeafd59f7:	and		eax, 0xfffeffff
0x7fffeafd59fc:	mov		dword ptr [rsp + 0x128], eax
0x7fffeafd5a03:	cmp		qword ptr [rsp + 0x110], 0
0x7fffeafd5a0c:	jne		0x7fffeafd5a35
0x7fffeafd5a12:	cmp		dword ptr [rsp + 0x120], 0
0x7fffeafd5a1a:	jne		0x7fffeafd5a35
0x7fffeafd5a20:	mov		rax, qword ptr [rsp + 0x138]
0x7fffeafd5a28:	mov		qword ptr [rsp + 0x140], rax
0x7fffeafd5a30:	jmp		0x7fffeafd5f12
0x7fffeafd5a35:	movsxd		rax, dword ptr [rsp + 0x120]
0x7fffeafd5a3d:	mov		rcx, qword ptr [rsp + 0x138]
0x7fffeafd5a45:	mov		rdx, qword ptr [rsp + 0x140]
0x7fffeafd5a4d:	sub		rcx, rdx
0x7fffeafd5a50:	cmp		qword ptr [rsp + 0x110], 0
0x7fffeafd5a59:	setne		sil
0x7fffeafd5a5d:	xor		sil, 0xff
0x7fffeafd5a61:	and		sil, 1
0x7fffeafd5a65:	movzx		edi, sil
0x7fffeafd5a69:	movsxd		rdx, edi
0x7fffeafd5a6c:	add		rcx, rdx
0x7fffeafd5a6f:	cmp		rax, rcx
0x7fffeafd5a72:	jle		0x7fffeafd5a8a
0x7fffeafd5a78:	movsxd		rax, dword ptr [rsp + 0x120]
0x7fffeafd5a80:	mov		qword ptr [rsp + 0x38], rax
0x7fffeafd5a85:	jmp		0x7fffeafd5abd
0x7fffeafd5a8a:	mov		rax, qword ptr [rsp + 0x138]
0x7fffeafd5a92:	mov		rcx, qword ptr [rsp + 0x140]
0x7fffeafd5a9a:	sub		rax, rcx
0x7fffeafd5a9d:	cmp		qword ptr [rsp + 0x110], 0
0x7fffeafd5aa6:	setne		dl
0x7fffeafd5aa9:	xor		dl, 0xff
0x7fffeafd5aac:	and		dl, 1
0x7fffeafd5aaf:	movzx		esi, dl
0x7fffeafd5ab2:	movsxd		rcx, esi
0x7fffeafd5ab5:	add		rax, rcx
0x7fffeafd5ab8:	mov		qword ptr [rsp + 0x38], rax
0x7fffeafd5abd:	mov		rax, qword ptr [rsp + 0x38]
0x7fffeafd5ac2:	mov		dword ptr [rsp + 0x120], eax
0x7fffeafd5ac9:	jmp		0x7fffeafd5f12
0x7fffeafd5ace:	mov		rax, qword ptr [rsp + 0x110]
0x7fffeafd5ad6:	mov		rcx, qword ptr [rsp + 0x138]
0x7fffeafd5ade:	mov		dword ptr [rsp + 0x120], 1
0x7fffeafd5ae9:	mov		rdx, rcx
0x7fffeafd5aec:	add		rdx, -1
0x7fffeafd5af3:	mov		qword ptr [rsp + 0x140], rdx
0x7fffeafd5afb:	mov		byte ptr [rcx - 1], al
0x7fffeafd5afe:	mov		esi, dword ptr [rsp + 0x128]
0x7fffeafd5b05:	and		esi, 0xfffeffff
0x7fffeafd5b0b:	mov		dword ptr [rsp + 0x128], esi
0x7fffeafd5b12:	jmp		0x7fffeafd5f12
0x7fffeafd5b17:	mov		al, 1
0x7fffeafd5b19:	test		al, 1
0x7fffeafd5b1b:	jne		0x7fffeafd5b26
0x7fffeafd5b21:	jmp		0x7fffeafd5b3f
0x7fffeafd5b26:	call		0x7fffeafc3cb0
0x7fffeafd5b2b:	mov		edi, dword ptr [rax]
0x7fffeafd5b2d:	call		0x7fffeafd45a0
0x7fffeafd5b32:	mov		qword ptr [rsp + 0x140], rax
0x7fffeafd5b3a:	jmp		0x7fffeafd5b83
0x7fffeafd5b3f:	jmp		0x7fffeafd5b44
0x7fffeafd5b44:	cmp		qword ptr [rsp + 0x110], 0
0x7fffeafd5b4d:	je		0x7fffeafd5b65
0x7fffeafd5b53:	mov		rax, qword ptr [rsp + 0x110]
0x7fffeafd5b5b:	mov		qword ptr [rsp + 0x30], rax
0x7fffeafd5b60:	jmp		0x7fffeafd5b76
0x7fffeafd5b65:	lea		rax, [rip + 0x2c163f3]
0x7fffeafd5b6c:	mov		qword ptr [rsp + 0x30], rax
0x7fffeafd5b71:	jmp		0x7fffeafd5b76
0x7fffeafd5b76:	mov		rax, qword ptr [rsp + 0x30]
0x7fffeafd5b7b:	mov		qword ptr [rsp + 0x140], rax
0x7fffeafd5b83:	xor		esi, esi
0x7fffeafd5b85:	mov		rdi, qword ptr [rsp + 0x140]
0x7fffeafd5b8d:	movsxd		rdx, dword ptr [rsp + 0x120]
0x7fffeafd5b95:	call		0x7fffeafd24b0
0x7fffeafd5b9a:	mov		qword ptr [rsp + 0x138], rax
0x7fffeafd5ba2:	cmp		qword ptr [rsp + 0x138], 0
0x7fffeafd5bab:	jne		0x7fffeafd5bd1
0x7fffeafd5bb1:	mov		rax, qword ptr [rsp + 0x140]
0x7fffeafd5bb9:	movsxd		rcx, dword ptr [rsp + 0x120]
0x7fffeafd5bc1:	add		rax, rcx
0x7fffeafd5bc4:	mov		qword ptr [rsp + 0x138], rax
0x7fffeafd5bcc:	jmp		0x7fffeafd5beb
0x7fffeafd5bd1:	mov		rax, qword ptr [rsp + 0x138]
0x7fffeafd5bd9:	mov		rcx, qword ptr [rsp + 0x140]
0x7fffeafd5be1:	sub		rax, rcx
0x7fffeafd5be4:	mov		dword ptr [rsp + 0x120], eax
0x7fffeafd5beb:	mov		eax, dword ptr [rsp + 0x128]
0x7fffeafd5bf2:	and		eax, 0xfffeffff
0x7fffeafd5bf7:	mov		dword ptr [rsp + 0x128], eax
0x7fffeafd5bfe:	jmp		0x7fffeafd5f12
0x7fffeafd5c03:	lea		rax, [rsp + 0xa8]
0x7fffeafd5c0b:	mov		rcx, qword ptr [rsp + 0x110]
0x7fffeafd5c13:	mov		dword ptr [rsp + 0xa8], ecx
0x7fffeafd5c1a:	mov		dword ptr [rsp + 0xac], 0
0x7fffeafd5c25:	mov		qword ptr [rsp + 0x110], rax
0x7fffeafd5c2d:	mov		dword ptr [rsp + 0x120], 0xffffffff
0x7fffeafd5c38:	mov		rax, qword ptr [rsp + 0x110]
0x7fffeafd5c40:	mov		qword ptr [rsp + 0xa0], rax
0x7fffeafd5c48:	mov		dword ptr [rsp + 0xfc], 0
0x7fffeafd5c53:	mov		dword ptr [rsp + 0xf8], 0
0x7fffeafd5c5e:	xor		eax, eax
0x7fffeafd5c60:	mov		ecx, dword ptr [rsp + 0xf8]
0x7fffeafd5c67:	mov		edx, dword ptr [rsp + 0x120]
0x7fffeafd5c6e:	add		edx, 0
0x7fffeafd5c71:	cmp		ecx, edx
0x7fffeafd5c73:	mov		byte ptr [rsp + 0x2f], al
0x7fffeafd5c77:	jae		0x7fffeafd5cf4
0x7fffeafd5c7d:	xor		eax, eax
0x7fffeafd5c7f:	mov		rcx, qword ptr [rsp + 0xa0]
0x7fffeafd5c87:	cmp		dword ptr [rcx], 0
0x7fffeafd5c8a:	mov		byte ptr [rsp + 0x2f], al
0x7fffeafd5c8e:	je		0x7fffeafd5cf4
0x7fffeafd5c94:	lea		rdi, [rsp + 0x9c]
0x7fffeafd5c9c:	mov		rax, qword ptr [rsp + 0xa0]
0x7fffeafd5ca4:	mov		rcx, rax
0x7fffeafd5ca7:	add		rcx, 4
0x7fffeafd5cae:	mov		qword ptr [rsp + 0xa0], rcx
0x7fffeafd5cb6:	mov		esi, dword ptr [rax]
0x7fffeafd5cb8:	call		0x7fffeafd8fb0
0x7fffeafd5cbd:	xor		edx, edx
0x7fffeafd5cbf:	mov		dword ptr [rsp + 0xfc], eax
0x7fffeafd5cc6:	cmp		eax, 0
0x7fffeafd5cc9:	mov		byte ptr [rsp + 0x2f], dl
0x7fffeafd5ccd:	jl		0x7fffeafd5cf4
0x7fffeafd5cd3:	mov		eax, dword ptr [rsp + 0xfc]
0x7fffeafd5cda:	mov		ecx, dword ptr [rsp + 0x120]
0x7fffeafd5ce1:	add		ecx, 0
0x7fffeafd5ce4:	sub		ecx, dword ptr [rsp + 0xf8]
0x7fffeafd5ceb:	cmp		eax, ecx
0x7fffeafd5ced:	setbe		dl
0x7fffeafd5cf0:	mov		byte ptr [rsp + 0x2f], dl
0x7fffeafd5cf4:	mov		al, byte ptr [rsp + 0x2f]
0x7fffeafd5cf8:	test		al, 1
0x7fffeafd5cfa:	jne		0x7fffeafd5d05
0x7fffeafd5d00:	jmp		0x7fffeafd5d24
0x7fffeafd5d05:	jmp		0x7fffeafd5d0a
0x7fffeafd5d0a:	mov		eax, dword ptr [rsp + 0xfc]
0x7fffeafd5d11:	add		eax, dword ptr [rsp + 0xf8]
0x7fffeafd5d18:	mov		dword ptr [rsp + 0xf8], eax
0x7fffeafd5d1f:	jmp		0x7fffeafd5c5e
0x7fffeafd5d24:	cmp		dword ptr [rsp + 0xfc], 0
0x7fffeafd5d2c:	jge		0x7fffeafd5d42
0x7fffeafd5d32:	mov		dword ptr [rsp + 0x174], 0xffffffff
0x7fffeafd5d3d:	jmp		0x7fffeafd6225
0x7fffeafd5d42:	mov		eax, dword ptr [rsp + 0xf8]
0x7fffeafd5d49:	mov		dword ptr [rsp + 0x120], eax
0x7fffeafd5d50:	mov		rdi, qword ptr [rsp + 0x168]
0x7fffeafd5d58:	mov		edx, dword ptr [rsp + 0x124]
0x7fffeafd5d5f:	mov		ecx, dword ptr [rsp + 0x120]
0x7fffeafd5d66:	mov		r8d, dword ptr [rsp + 0x128]
0x7fffeafd5d6e:	mov		esi, 0x20
0x7fffeafd5d73:	call		0x7fffeafd6a10
0x7fffeafd5d78:	mov		rdi, qword ptr [rsp + 0x110]
0x7fffeafd5d80:	mov		qword ptr [rsp + 0xa0], rdi
0x7fffeafd5d88:	mov		dword ptr [rsp + 0xf8], 0
0x7fffeafd5d93:	xor		eax, eax
0x7fffeafd5d95:	mov		ecx, dword ptr [rsp + 0xf8]
0x7fffeafd5d9c:	mov		edx, dword ptr [rsp + 0x120]
0x7fffeafd5da3:	add		edx, 0
0x7fffeafd5da6:	cmp		ecx, edx
0x7fffeafd5da8:	mov		byte ptr [rsp + 0x2e], al
0x7fffeafd5dac:	jae		0x7fffeafd5e1a
0x7fffeafd5db2:	xor		eax, eax
0x7fffeafd5db4:	mov		rcx, qword ptr [rsp + 0xa0]
0x7fffeafd5dbc:	cmp		dword ptr [rcx], 0
0x7fffeafd5dbf:	mov		byte ptr [rsp + 0x2e], al
0x7fffeafd5dc3:	je		0x7fffeafd5e1a
0x7fffeafd5dc9:	lea		rdi, [rsp + 0x9c]
0x7fffeafd5dd1:	mov		eax, dword ptr [rsp + 0xf8]
0x7fffeafd5dd8:	mov		rcx, qword ptr [rsp + 0xa0]
0x7fffeafd5de0:	mov		rdx, rcx
0x7fffeafd5de3:	add		rdx, 4
0x7fffeafd5dea:	mov		qword ptr [rsp + 0xa0], rdx
0x7fffeafd5df2:	mov		esi, dword ptr [rcx]
0x7fffeafd5df4:	mov		dword ptr [rsp + 0x28], eax
0x7fffeafd5df8:	call		0x7fffeafd8fb0
0x7fffeafd5dfd:	mov		dword ptr [rsp + 0xfc], eax
0x7fffeafd5e04:	mov		esi, dword ptr [rsp + 0x28]
0x7fffeafd5e08:	add		esi, eax
0x7fffeafd5e0a:	cmp		esi, dword ptr [rsp + 0x120]
0x7fffeafd5e11:	setle		r8b
0x7fffeafd5e15:	mov		byte ptr [rsp + 0x2e], r8b
0x7fffeafd5e1a:	mov		al, byte ptr [rsp + 0x2e]
0x7fffeafd5e1e:	test		al, 1
0x7fffeafd5e20:	jne		0x7fffeafd5e2b
0x7fffeafd5e26:	jmp		0x7fffeafd5e62
0x7fffeafd5e2b:	lea		rsi, [rsp + 0x9c]
0x7fffeafd5e33:	mov		rdi, qword ptr [rsp + 0x168]
0x7fffeafd5e3b:	movsxd		rdx, dword ptr [rsp + 0xfc]
0x7fffeafd5e43:	call		0x7fffeafd6240
0x7fffeafd5e48:	mov		eax, dword ptr [rsp + 0xfc]
0x7fffeafd5e4f:	add		eax, dword ptr [rsp + 0xf8]
0x7fffeafd5e56:	mov		dword ptr [rsp + 0xf8], eax
0x7fffeafd5e5d:	jmp		0x7fffeafd5d93
0x7fffeafd5e62:	mov		rdi, qword ptr [rsp + 0x168]
0x7fffeafd5e6a:	mov		edx, dword ptr [rsp + 0x124]
0x7fffeafd5e71:	mov		ecx, dword ptr [rsp + 0x120]
0x7fffeafd5e78:	mov		eax, dword ptr [rsp + 0x128]
0x7fffeafd5e7f:	xor		eax, 0x2000
0x7fffeafd5e84:	mov		esi, 0x20
0x7fffeafd5e89:	mov		r8d, eax
0x7fffeafd5e8c:	call		0x7fffeafd6a10
0x7fffeafd5e91:	mov		eax, dword ptr [rsp + 0x124]
0x7fffeafd5e98:	cmp		eax, dword ptr [rsp + 0x120]
0x7fffeafd5e9f:	jle		0x7fffeafd5eb5
0x7fffeafd5ea5:	mov		eax, dword ptr [rsp + 0x124]
0x7fffeafd5eac:	mov		dword ptr [rsp + 0x24], eax
0x7fffeafd5eb0:	jmp		0x7fffeafd5ec0
0x7fffeafd5eb5:	mov		eax, dword ptr [rsp + 0x120]
0x7fffeafd5ebc:	mov		dword ptr [rsp + 0x24], eax
0x7fffeafd5ec0:	mov		eax, dword ptr [rsp + 0x24]
0x7fffeafd5ec4:	mov		dword ptr [rsp + 0xfc], eax
0x7fffeafd5ecb:	jmp		0x7fffeafd4d70
0x7fffeafd5ed0:	mov		rdi, qword ptr [rsp + 0x168]
0x7fffeafd5ed8:	fld		xword ptr [rsp + 0x110]
0x7fffeafd5edf:	mov		esi, dword ptr [rsp + 0x124]
0x7fffeafd5ee6:	mov		edx, dword ptr [rsp + 0x120]
0x7fffeafd5eed:	mov		ecx, dword ptr [rsp + 0x128]
0x7fffeafd5ef4:	mov		r8d, dword ptr [rsp + 0xb4]
0x7fffeafd5efc:	mov		rax, rsp
0x7fffeafd5eff:	fstp		xword ptr [rax]
0x7fffeafd5f01:	call		0x7fffeafd6b50
0x7fffeafd5f06:	mov		dword ptr [rsp + 0xfc], eax
0x7fffeafd5f0d:	jmp		0x7fffeafd4d70
0x7fffeafd5f12:	movsxd		rax, dword ptr [rsp + 0x120]
0x7fffeafd5f1a:	mov		rcx, qword ptr [rsp + 0x138]
0x7fffeafd5f22:	mov		rdx, qword ptr [rsp + 0x140]
0x7fffeafd5f2a:	sub		rcx, rdx
0x7fffeafd5f2d:	cmp		rax, rcx
0x7fffeafd5f30:	jge		0x7fffeafd5f50
0x7fffeafd5f36:	mov		rax, qword ptr [rsp + 0x138]
0x7fffeafd5f3e:	mov		rcx, qword ptr [rsp + 0x140]
0x7fffeafd5f46:	sub		rax, rcx
0x7fffeafd5f49:	mov		dword ptr [rsp + 0x120], eax
0x7fffeafd5f50:	mov		eax, dword ptr [rsp + 0x124]
0x7fffeafd5f57:	mov		ecx, dword ptr [rsp + 0xb0]
0x7fffeafd5f5e:	add		ecx, dword ptr [rsp + 0x120]
0x7fffeafd5f65:	cmp		eax, ecx
0x7fffeafd5f67:	jge		0x7fffeafd5f82
0x7fffeafd5f6d:	mov		eax, dword ptr [rsp + 0xb0]
0x7fffeafd5f74:	add		eax, dword ptr [rsp + 0x120]
0x7fffeafd5f7b:	mov		dword ptr [rsp + 0x124], eax
0x7fffeafd5f82:	mov		rdi, qword ptr [rsp + 0x168]
0x7fffeafd5f8a:	mov		edx, dword ptr [rsp + 0x124]
0x7fffeafd5f91:	mov		eax, dword ptr [rsp + 0xb0]
0x7fffeafd5f98:	add		eax, dword ptr [rsp + 0x120]
0x7fffeafd5f9f:	mov		r8d, dword ptr [rsp + 0x128]
0x7fffeafd5fa7:	mov		esi, 0x20
0x7fffeafd5fac:	mov		ecx, eax
0x7fffeafd5fae:	call		0x7fffeafd6a10
0x7fffeafd5fb3:	mov		rdi, qword ptr [rsp + 0x168]
0x7fffeafd5fbb:	mov		rsi, qword ptr [rsp + 0xb8]
0x7fffeafd5fc3:	movsxd		rdx, dword ptr [rsp + 0xb0]
0x7fffeafd5fcb:	call		0x7fffeafd6240
0x7fffeafd5fd0:	mov		rdi, qword ptr [rsp + 0x168]
0x7fffeafd5fd8:	mov		edx, dword ptr [rsp + 0x124]
0x7fffeafd5fdf:	mov		eax, dword ptr [rsp + 0xb0]
0x7fffeafd5fe6:	add		eax, dword ptr [rsp + 0x120]
0x7fffeafd5fed:	mov		ecx, dword ptr [rsp + 0x128]
0x7fffeafd5ff4:	xor		ecx, 0x10000
0x7fffeafd5ffa:	mov		esi, 0x30
0x7fffeafd5fff:	mov		dword ptr [rsp + 0x20], ecx
0x7fffeafd6003:	mov		ecx, eax
0x7fffeafd6005:	mov		r8d, dword ptr [rsp + 0x20]
0x7fffeafd600a:	call		0x7fffeafd6a10
0x7fffeafd600f:	xor		r8d, r8d
0x7fffeafd6012:	mov		rdi, qword ptr [rsp + 0x168]
0x7fffeafd601a:	mov		edx, dword ptr [rsp + 0x120]
0x7fffeafd6021:	mov		r9, qword ptr [rsp + 0x138]
0x7fffeafd6029:	mov		r10, qword ptr [rsp + 0x140]
0x7fffeafd6031:	sub		r9, r10
0x7fffeafd6034:	mov		esi, 0x30
0x7fffeafd6039:	mov		ecx, r9d
0x7fffeafd603c:	call		0x7fffeafd6a10
0x7fffeafd6041:	mov		rdi, qword ptr [rsp + 0x168]
0x7fffeafd6049:	mov		rsi, qword ptr [rsp + 0x140]
0x7fffeafd6051:	mov		r10, qword ptr [rsp + 0x138]
0x7fffeafd6059:	mov		r11, qword ptr [rsp + 0x140]
0x7fffeafd6061:	sub		r10, r11
0x7fffeafd6064:	mov		rdx, r10
0x7fffeafd6067:	call		0x7fffeafd6240
0x7fffeafd606c:	mov		rdi, qword ptr [rsp + 0x168]
0x7fffeafd6074:	mov		edx, dword ptr [rsp + 0x124]
0x7fffeafd607b:	mov		eax, dword ptr [rsp + 0xb0]
0x7fffeafd6082:	add		eax, dword ptr [rsp + 0x120]
0x7fffeafd6089:	mov		ecx, dword ptr [rsp + 0x128]
0x7fffeafd6090:	xor		ecx, 0x2000
0x7fffeafd6096:	mov		esi, 0x20
0x7fffeafd609b:	mov		dword ptr [rsp + 0x1c], ecx
0x7fffeafd609f:	mov		ecx, eax
0x7fffeafd60a1:	mov		r8d, dword ptr [rsp + 0x1c]
0x7fffeafd60a6:	call		0x7fffeafd6a10
0x7fffeafd60ab:	mov		eax, dword ptr [rsp + 0x124]
0x7fffeafd60b2:	mov		dword ptr [rsp + 0xfc], eax
0x7fffeafd60b9:	jmp		0x7fffeafd4d70
0x7fffeafd60be:	cmp		qword ptr [rsp + 0x168], 0
0x7fffeafd60c7:	je		0x7fffeafd60e0
0x7fffeafd60cd:	mov		eax, dword ptr [rsp + 0x100]
0x7fffeafd60d4:	mov		dword ptr [rsp + 0x174], eax
0x7fffeafd60db:	jmp		0x7fffeafd6225
0x7fffeafd60e0:	cmp		dword ptr [rsp + 0x12c], 0
0x7fffeafd60e8:	jne		0x7fffeafd60fe
0x7fffeafd60ee:	mov		dword ptr [rsp + 0x174], 0
0x7fffeafd60f9:	jmp		0x7fffeafd6225
0x7fffeafd60fe:	mov		dword ptr [rsp + 0xf8], 1
0x7fffeafd6109:	xor		eax, eax
0x7fffeafd610b:	cmp		dword ptr [rsp + 0xf8], 9
0x7fffeafd6113:	mov		byte ptr [rsp + 0x1b], al
0x7fffeafd6117:	jg		0x7fffeafd6138
0x7fffeafd611d:	mov		rax, qword ptr [rsp + 0x148]
0x7fffeafd6125:	movsxd		rcx, dword ptr [rsp + 0xf8]
0x7fffeafd612d:	cmp		dword ptr [rax + rcx*4], 0
0x7fffeafd6131:	setne		dl
0x7fffeafd6134:	mov		byte ptr [rsp + 0x1b], dl
0x7fffeafd6138:	mov		al, byte ptr [rsp + 0x1b]
0x7fffeafd613c:	test		al, 1
0x7fffeafd613e:	jne		0x7fffeafd6149
0x7fffeafd6144:	jmp		0x7fffeafd6199
0x7fffeafd6149:	mov		rax, qword ptr [rsp + 0x150]
0x7fffeafd6151:	movsxd		rcx, dword ptr [rsp + 0xf8]
0x7fffeafd6159:	shl		rcx, 4
0x7fffeafd615d:	add		rax, rcx
0x7fffeafd6160:	mov		rcx, qword ptr [rsp + 0x148]
0x7fffeafd6168:	movsxd		rdx, dword ptr [rsp + 0xf8]
0x7fffeafd6170:	mov		esi, dword ptr [rcx + rdx*4]
0x7fffeafd6173:	mov		rdx, qword ptr [rsp + 0x158]
0x7fffeafd617b:	mov		rdi, rax
0x7fffeafd617e:	call		0x7fffeafd62e0
0x7fffeafd6183:	mov		eax, dword ptr [rsp + 0xf8]
0x7fffeafd618a:	add		eax, 1
0x7fffeafd618d:	mov		dword ptr [rsp + 0xf8], eax
0x7fffeafd6194:	jmp		0x7fffeafd6109
0x7fffeafd6199:	jmp		0x7fffeafd619e
0x7fffeafd619e:	xor		eax, eax
0x7fffeafd61a0:	cmp		dword ptr [rsp + 0xf8], 9
0x7fffeafd61a8:	mov		byte ptr [rsp + 0x1a], al
0x7fffeafd61ac:	jg		0x7fffeafd61d0
0x7fffeafd61b2:	mov		rax, qword ptr [rsp + 0x148]
0x7fffeafd61ba:	movsxd		rcx, dword ptr [rsp + 0xf8]
0x7fffeafd61c2:	cmp		dword ptr [rax + rcx*4], 0
0x7fffeafd61c6:	setne		dl
0x7fffeafd61c9:	xor		dl, 0xff
0x7fffeafd61cc:	mov		byte ptr [rsp + 0x1a], dl
0x7fffeafd61d0:	mov		al, byte ptr [rsp + 0x1a]
0x7fffeafd61d4:	test		al, 1
0x7fffeafd61d6:	jne		0x7fffeafd61e1
0x7fffeafd61dc:	jmp		0x7fffeafd61fc
0x7fffeafd61e1:	jmp		0x7fffeafd61e6
0x7fffeafd61e6:	mov		eax, dword ptr [rsp + 0xf8]
0x7fffeafd61ed:	add		eax, 1
0x7fffeafd61f0:	mov		dword ptr [rsp + 0xf8], eax
0x7fffeafd61f7:	jmp		0x7fffeafd619e
0x7fffeafd61fc:	cmp		dword ptr [rsp + 0xf8], 9
0x7fffeafd6204:	jg		0x7fffeafd621a
0x7fffeafd620a:	mov		dword ptr [rsp + 0x174], 0xffffffff
0x7fffeafd6215:	jmp		0x7fffeafd6225
0x7fffeafd621a:	mov		dword ptr [rsp + 0x174], 1
0x7fffeafd6225:	mov		eax, dword ptr [rsp + 0x174]
0x7fffeafd622c:	add		rsp, 0x178
0x7fffeafd6233:	ret		
0x7fffeafd6234:	nop		word ptr cs:[rax + rax]
0x7fffeafd623e:	nop		
disassembling symbol '.LBB1_1':
textAddr: 0x7fffeafd4d70, textSize: 68
0x7fffeafd4d70:	cmp		dword ptr [rsp + 0x100], 0
0x7fffeafd4d78:	jl		0x7fffeafd4dce
0x7fffeafd4d7e:	mov		eax, dword ptr [rsp + 0xfc]
0x7fffeafd4d85:	mov		ecx, 0x7fffffff
0x7fffeafd4d8a:	sub		ecx, dword ptr [rsp + 0x100]
0x7fffeafd4d91:	cmp		eax, ecx
0x7fffeafd4d93:	jle		0x7fffeafd4db4
0x7fffeafd4d99:	call		0x7fffeafc3cb0
0x7fffeafd4d9e:	mov		dword ptr [rax], 0x4b
0x7fffeafd4da4:	mov		dword ptr [rsp + 0x100], 0xffffffff
0x7fffeafd4daf:	jmp		0x7fffeafd4dc9
disassembling symbol '.LBB1_4':
textAddr: 0x7fffeafd4db4, textSize: 21
0x7fffeafd4db4:	mov		eax, dword ptr [rsp + 0xfc]
0x7fffeafd4dbb:	add		eax, dword ptr [rsp + 0x100]
0x7fffeafd4dc2:	mov		dword ptr [rsp + 0x100], eax
disassembling symbol '.LBB1_5':
textAddr: 0x7fffeafd4dc9, textSize: 5
0x7fffeafd4dc9:	jmp		0x7fffeafd4dce
disassembling symbol '.LBB1_6':
textAddr: 0x7fffeafd4dce, textSize: 22
0x7fffeafd4dce:	mov		rax, qword ptr [rsp + 0x130]
0x7fffeafd4dd6:	cmp		byte ptr [rax], 0
0x7fffeafd4dd9:	jne		0x7fffeafd4de4
0x7fffeafd4ddf:	jmp		0x7fffeafd60be
disassembling symbol '.LBB1_8':
textAddr: 0x7fffeafd4de4, textSize: 16
0x7fffeafd4de4:	mov		rax, qword ptr [rsp + 0x130]
0x7fffeafd4dec:	mov		qword ptr [rsp + 0x140], rax
disassembling symbol '.LBB1_9':
textAddr: 0x7fffeafd4df4, textSize: 53
0x7fffeafd4df4:	xor		eax, eax
0x7fffeafd4df6:	mov		rcx, qword ptr [rsp + 0x130]
0x7fffeafd4dfe:	movsx		edx, byte ptr [rcx]
0x7fffeafd4e01:	cmp		edx, 0
0x7fffeafd4e04:	mov		byte ptr [rsp + 0x9b], al
0x7fffeafd4e0b:	je		0x7fffeafd4e29
0x7fffeafd4e11:	mov		rax, qword ptr [rsp + 0x130]
0x7fffeafd4e19:	movsx		ecx, byte ptr [rax]
0x7fffeafd4e1c:	cmp		ecx, 0x25
0x7fffeafd4e1f:	setne		dl
0x7fffeafd4e22:	mov		byte ptr [rsp + 0x9b], dl
disassembling symbol '.LBB1_11':
textAddr: 0x7fffeafd4e29, textSize: 20
0x7fffeafd4e29:	mov		al, byte ptr [rsp + 0x9b]
0x7fffeafd4e30:	test		al, 1
0x7fffeafd4e32:	jne		0x7fffeafd4e3d
0x7fffeafd4e38:	jmp		0x7fffeafd4e5d
disassembling symbol '.LBB1_12':
textAddr: 0x7fffeafd4e3d, textSize: 5
0x7fffeafd4e3d:	jmp		0x7fffeafd4e42
disassembling symbol '.LBB1_13':
textAddr: 0x7fffeafd4e42, textSize: 27
0x7fffeafd4e42:	mov		rax, qword ptr [rsp + 0x130]
0x7fffeafd4e4a:	add		rax, 1
0x7fffeafd4e50:	mov		qword ptr [rsp + 0x130], rax
0x7fffeafd4e58:	jmp		0x7fffeafd4df4
disassembling symbol '.LBB1_14':
textAddr: 0x7fffeafd4e5d, textSize: 16
0x7fffeafd4e5d:	mov		rax, qword ptr [rsp + 0x130]
0x7fffeafd4e65:	mov		qword ptr [rsp + 0x138], rax
disassembling symbol '.LBB1_15':
textAddr: 0x7fffeafd4e6d, textSize: 54
0x7fffeafd4e6d:	xor		eax, eax
0x7fffeafd4e6f:	mov		rcx, qword ptr [rsp + 0x130]
0x7fffeafd4e77:	movsx		edx, byte ptr [rcx]
0x7fffeafd4e7a:	cmp		edx, 0x25
0x7fffeafd4e7d:	mov		byte ptr [rsp + 0x9a], al
0x7fffeafd4e84:	jne		0x7fffeafd4ea3
0x7fffeafd4e8a:	mov		rax, qword ptr [rsp + 0x130]
0x7fffeafd4e92:	movsx		ecx, byte ptr [rax + 1]
0x7fffeafd4e96:	cmp		ecx, 0x25
0x7fffeafd4e99:	sete		dl
0x7fffeafd4e9c:	mov		byte ptr [rsp + 0x9a], dl
disassembling symbol '.LBB1_17':
textAddr: 0x7fffeafd4ea3, textSize: 20
0x7fffeafd4ea3:	mov		al, byte ptr [rsp + 0x9a]
0x7fffeafd4eaa:	test		al, 1
0x7fffeafd4eac:	jne		0x7fffeafd4eb7
0x7fffeafd4eb2:	jmp		0x7fffeafd4eed
disassembling symbol '.LBB1_18':
textAddr: 0x7fffeafd4eb7, textSize: 5
0x7fffeafd4eb7:	jmp		0x7fffeafd4ebc
disassembling symbol '.LBB1_19':
textAddr: 0x7fffeafd4ebc, textSize: 49
0x7fffeafd4ebc:	mov		rax, qword ptr [rsp + 0x138]
0x7fffeafd4ec4:	add		rax, 1
0x7fffeafd4eca:	mov		qword ptr [rsp + 0x138], rax
0x7fffeafd4ed2:	mov		rax, qword ptr [rsp + 0x130]
0x7fffeafd4eda:	add		rax, 2
0x7fffeafd4ee0:	mov		qword ptr [rsp + 0x130], rax
0x7fffeafd4ee8:	jmp		0x7fffeafd4e6d
disassembling symbol '.LBB1_20':
textAddr: 0x7fffeafd4eed, textSize: 70
0x7fffeafd4eed:	mov		rax, qword ptr [rsp + 0x138]
0x7fffeafd4ef5:	mov		rcx, qword ptr [rsp + 0x140]
0x7fffeafd4efd:	sub		rax, rcx
0x7fffeafd4f00:	mov		dword ptr [rsp + 0xfc], eax
0x7fffeafd4f07:	cmp		qword ptr [rsp + 0x168], 0
0x7fffeafd4f10:	je		0x7fffeafd4f33
0x7fffeafd4f16:	mov		rdi, qword ptr [rsp + 0x168]
0x7fffeafd4f1e:	mov		rsi, qword ptr [rsp + 0x140]
0x7fffeafd4f26:	movsxd		rdx, dword ptr [rsp + 0xfc]
0x7fffeafd4f2e:	call		0x7fffeafd6240
disassembling symbol '.LBB1_22':
textAddr: 0x7fffeafd4f33, textSize: 19
0x7fffeafd4f33:	cmp		dword ptr [rsp + 0xfc], 0
0x7fffeafd4f3b:	je		0x7fffeafd4f46
0x7fffeafd4f41:	jmp		0x7fffeafd4d70
disassembling symbol '.LBB1_24':
textAddr: 0x7fffeafd4f46, textSize: 105
0x7fffeafd4f46:	mov		rax, qword ptr [rsp + 0x130]
0x7fffeafd4f4e:	movsx		ecx, byte ptr [rax + 1]
0x7fffeafd4f52:	sub		ecx, 0x30
0x7fffeafd4f55:	cmp		ecx, 0xa
0x7fffeafd4f58:	jae		0x7fffeafd4faf
0x7fffeafd4f5e:	mov		rax, qword ptr [rsp + 0x130]
0x7fffeafd4f66:	movsx		ecx, byte ptr [rax + 2]
0x7fffeafd4f6a:	cmp		ecx, 0x24
0x7fffeafd4f6d:	jne		0x7fffeafd4faf
0x7fffeafd4f73:	mov		dword ptr [rsp + 0x12c], 1
0x7fffeafd4f7e:	mov		rax, qword ptr [rsp + 0x130]
0x7fffeafd4f86:	movsx		ecx, byte ptr [rax + 1]
0x7fffeafd4f8a:	sub		ecx, 0x30
0x7fffeafd4f8d:	mov		dword ptr [rsp + 0x10c], ecx
0x7fffeafd4f94:	mov		rax, qword ptr [rsp + 0x130]
0x7fffeafd4f9c:	add		rax, 3
0x7fffeafd4fa2:	mov		qword ptr [rsp + 0x130], rax
0x7fffeafd4faa:	jmp		0x7fffeafd4fd0
disassembling symbol '.LBB1_27':
textAddr: 0x7fffeafd4faf, textSize: 33
0x7fffeafd4faf:	mov		dword ptr [rsp + 0x10c], 0xffffffff
0x7fffeafd4fba:	mov		rax, qword ptr [rsp + 0x130]
0x7fffeafd4fc2:	add		rax, 1
0x7fffeafd4fc8:	mov		qword ptr [rsp + 0x130], rax
disassembling symbol '.LBB1_28':
textAddr: 0x7fffeafd4fd0, textSize: 11
0x7fffeafd4fd0:	mov		dword ptr [rsp + 0x128], 0
disassembling symbol '.LBB1_29':
textAddr: 0x7fffeafd4fdb, textSize: 72
0x7fffeafd4fdb:	xor		eax, eax
0x7fffeafd4fdd:	mov		rcx, qword ptr [rsp + 0x130]
0x7fffeafd4fe5:	movsx		edx, byte ptr [rcx]
0x7fffeafd4fe8:	sub		edx, 0x20
0x7fffeafd4feb:	cmp		edx, 0x20
0x7fffeafd4fee:	mov		byte ptr [rsp + 0x99], al
0x7fffeafd4ff5:	jae		0x7fffeafd5023
0x7fffeafd4ffb:	mov		rax, qword ptr [rsp + 0x130]
0x7fffeafd5003:	movsx		ecx, byte ptr [rax]
0x7fffeafd5006:	sub		ecx, 0x20
0x7fffeafd5009:	mov		edx, 1
0x7fffeafd500e:	shl		edx, cl
0x7fffeafd5010:	and		edx, 0x12889
0x7fffeafd5016:	cmp		edx, 0
0x7fffeafd5019:	setne		cl
0x7fffeafd501c:	mov		byte ptr [rsp + 0x99], cl
disassembling symbol '.LBB1_31':
textAddr: 0x7fffeafd5023, textSize: 20
0x7fffeafd5023:	mov		al, byte ptr [rsp + 0x99]
0x7fffeafd502a:	test		al, 1
0x7fffeafd502c:	jne		0x7fffeafd5037
0x7fffeafd5032:	jmp		0x7fffeafd5075
disassembling symbol '.LBB1_32':
textAddr: 0x7fffeafd5037, textSize: 62
0x7fffeafd5037:	mov		rax, qword ptr [rsp + 0x130]
0x7fffeafd503f:	movsx		ecx, byte ptr [rax]
0x7fffeafd5042:	sub		ecx, 0x20
0x7fffeafd5045:	mov		edx, 1
0x7fffeafd504a:	shl		edx, cl
0x7fffeafd504c:	or		edx, dword ptr [rsp + 0x128]
0x7fffeafd5053:	mov		dword ptr [rsp + 0x128], edx
0x7fffeafd505a:	mov		rax, qword ptr [rsp + 0x130]
0x7fffeafd5062:	add		rax, 1
0x7fffeafd5068:	mov		qword ptr [rsp + 0x130], rax
0x7fffeafd5070:	jmp		0x7fffeafd4fdb
disassembling symbol '.LBB1_34':
textAddr: 0x7fffeafd5075, textSize: 180
0x7fffeafd5075:	mov		rax, qword ptr [rsp + 0x130]
0x7fffeafd507d:	movsx		ecx, byte ptr [rax]
0x7fffeafd5080:	cmp		ecx, 0x2a
0x7fffeafd5083:	jne		0x7fffeafd5243
0x7fffeafd5089:	mov		rax, qword ptr [rsp + 0x130]
0x7fffeafd5091:	movsx		ecx, byte ptr [rax + 1]
0x7fffeafd5095:	sub		ecx, 0x30
0x7fffeafd5098:	cmp		ecx, 0xa
0x7fffeafd509b:	jae		0x7fffeafd5129
0x7fffeafd50a1:	mov		rax, qword ptr [rsp + 0x130]
0x7fffeafd50a9:	movsx		ecx, byte ptr [rax + 2]
0x7fffeafd50ad:	cmp		ecx, 0x24
0x7fffeafd50b0:	jne		0x7fffeafd5129
0x7fffeafd50b6:	mov		dword ptr [rsp + 0x12c], 1
0x7fffeafd50c1:	mov		rax, qword ptr [rsp + 0x148]
0x7fffeafd50c9:	mov		rcx, qword ptr [rsp + 0x130]
0x7fffeafd50d1:	movsx		edx, byte ptr [rcx + 1]
0x7fffeafd50d5:	sub		edx, 0x30
0x7fffeafd50d8:	movsxd		rcx, edx
0x7fffeafd50db:	mov		dword ptr [rax + rcx*4], 0xa
0x7fffeafd50e2:	mov		rax, qword ptr [rsp + 0x150]
0x7fffeafd50ea:	mov		rcx, qword ptr [rsp + 0x130]
0x7fffeafd50f2:	movsx		edx, byte ptr [rcx + 1]
0x7fffeafd50f6:	sub		edx, 0x30
0x7fffeafd50f9:	movsxd		rcx, edx
0x7fffeafd50fc:	shl		rcx, 4
0x7fffeafd5100:	add		rax, rcx
0x7fffeafd5103:	mov		rax, qword ptr [rax]
0x7fffeafd5106:	mov		dword ptr [rsp + 0x124], eax
0x7fffeafd510d:	mov		rcx, qword ptr [rsp + 0x130]
0x7fffeafd5115:	add		rcx, 3
0x7fffeafd511c:	mov		qword ptr [rsp + 0x130], rcx
0x7fffeafd5124:	jmp		0x7fffeafd520c
disassembling symbol '.LBB1_38':
textAddr: 0x7fffeafd5129, textSize: 103
0x7fffeafd5129:	cmp		dword ptr [rsp + 0x12c], 0
0x7fffeafd5131:	jne		0x7fffeafd51f7
0x7fffeafd5137:	cmp		qword ptr [rsp + 0x168], 0
0x7fffeafd5140:	je		0x7fffeafd51c5
0x7fffeafd5146:	mov		rax, qword ptr [rsp + 0x158]
0x7fffeafd514e:	mov		ecx, dword ptr [rax]
0x7fffeafd5150:	cmp		ecx, 0x28
0x7fffeafd5153:	mov		qword ptr [rsp + 0x90], rax
0x7fffeafd515b:	mov		dword ptr [rsp + 0x8c], ecx
0x7fffeafd5162:	ja		0x7fffeafd5190
0x7fffeafd5168:	mov		eax, dword ptr [rsp + 0x8c]
0x7fffeafd516f:	movsxd		rcx, eax
0x7fffeafd5172:	mov		rdx, qword ptr [rsp + 0x90]
0x7fffeafd517a:	add		rcx, qword ptr [rdx + 0x10]
0x7fffeafd517e:	add		eax, 8
0x7fffeafd5181:	mov		dword ptr [rdx], eax
0x7fffeafd5183:	mov		qword ptr [rsp + 0x80], rcx
0x7fffeafd518b:	jmp		0x7fffeafd51b2
disassembling symbol '.LBB1_42':
textAddr: 0x7fffeafd5190, textSize: 34
0x7fffeafd5190:	mov		rax, qword ptr [rsp + 0x90]
0x7fffeafd5198:	mov		rcx, qword ptr [rax + 8]
0x7fffeafd519c:	mov		rdx, rcx
0x7fffeafd519f:	add		rcx, 8
0x7fffeafd51a6:	mov		qword ptr [rax + 8], rcx
0x7fffeafd51aa:	mov		qword ptr [rsp + 0x80], rdx
disassembling symbol '.LBB1_43':
textAddr: 0x7fffeafd51b2, textSize: 19
0x7fffeafd51b2:	mov		rax, qword ptr [rsp + 0x80]
0x7fffeafd51ba:	mov		ecx, dword ptr [rax]
0x7fffeafd51bc:	mov		dword ptr [rsp + 0x7c], ecx
0x7fffeafd51c0:	jmp		0x7fffeafd51d0
disassembling symbol '.LBB1_44':
textAddr: 0x7fffeafd51c5, textSize: 11
0x7fffeafd51c5:	xor		eax, eax
0x7fffeafd51c7:	mov		dword ptr [rsp + 0x7c], eax
0x7fffeafd51cb:	jmp		0x7fffeafd51d0
disassembling symbol '.LBB1_45':
textAddr: 0x7fffeafd51d0, textSize: 39
0x7fffeafd51d0:	mov		eax, dword ptr [rsp + 0x7c]
0x7fffeafd51d4:	mov		dword ptr [rsp + 0x124], eax
0x7fffeafd51db:	mov		rcx, qword ptr [rsp + 0x130]
0x7fffeafd51e3:	add		rcx, 1
0x7fffeafd51ea:	mov		qword ptr [rsp + 0x130], rcx
0x7fffeafd51f2:	jmp		0x7fffeafd5207
disassembling symbol '.LBB1_46':
textAddr: 0x7fffeafd51f7, textSize: 16
0x7fffeafd51f7:	mov		dword ptr [rsp + 0x174], 0xffffffff
0x7fffeafd5202:	jmp		0x7fffeafd6225
disassembling symbol '.LBB1_47':
textAddr: 0x7fffeafd5207, textSize: 5
0x7fffeafd5207:	jmp		0x7fffeafd520c
disassembling symbol '.LBB1_48':
textAddr: 0x7fffeafd520c, textSize: 50
0x7fffeafd520c:	cmp		dword ptr [rsp + 0x124], 0
0x7fffeafd5214:	jge		0x7fffeafd523e
0x7fffeafd521a:	xor		eax, eax
0x7fffeafd521c:	mov		ecx, dword ptr [rsp + 0x128]
0x7fffeafd5223:	or		ecx, 0x2000
0x7fffeafd5229:	mov		dword ptr [rsp + 0x128], ecx
0x7fffeafd5230:	sub		eax, dword ptr [rsp + 0x124]
0x7fffeafd5237:	mov		dword ptr [rsp + 0x124], eax
disassembling symbol '.LBB1_50':
textAddr: 0x7fffeafd523e, textSize: 5
0x7fffeafd523e:	jmp		0x7fffeafd5275
disassembling symbol '.LBB1_51':
textAddr: 0x7fffeafd5243, textSize: 45
0x7fffeafd5243:	lea		rdi, [rsp + 0x130]
0x7fffeafd524b:	call		0x7fffeafd6280
0x7fffeafd5250:	mov		dword ptr [rsp + 0x124], eax
0x7fffeafd5257:	cmp		eax, 0
0x7fffeafd525a:	jge		0x7fffeafd5270
0x7fffeafd5260:	mov		dword ptr [rsp + 0x174], 0xffffffff
0x7fffeafd526b:	jmp		0x7fffeafd6225
disassembling symbol '.LBB1_53':
textAddr: 0x7fffeafd5270, textSize: 5
0x7fffeafd5270:	jmp		0x7fffeafd5275
disassembling symbol '.LBB1_54':
textAddr: 0x7fffeafd5275, textSize: 190
0x7fffeafd5275:	mov		rax, qword ptr [rsp + 0x130]
0x7fffeafd527d:	movsx		ecx, byte ptr [rax]
0x7fffeafd5280:	cmp		ecx, 0x2e
0x7fffeafd5283:	jne		0x7fffeafd5403
0x7fffeafd5289:	mov		rax, qword ptr [rsp + 0x130]
0x7fffeafd5291:	movsx		ecx, byte ptr [rax + 1]
0x7fffeafd5295:	cmp		ecx, 0x2a
0x7fffeafd5298:	jne		0x7fffeafd5403
0x7fffeafd529e:	mov		rax, qword ptr [rsp + 0x130]
0x7fffeafd52a6:	movsx		ecx, byte ptr [rax + 2]
0x7fffeafd52aa:	sub		ecx, 0x30
0x7fffeafd52ad:	cmp		ecx, 0xa
0x7fffeafd52b0:	jae		0x7fffeafd5333
0x7fffeafd52b6:	mov		rax, qword ptr [rsp + 0x130]
0x7fffeafd52be:	movsx		ecx, byte ptr [rax + 3]
0x7fffeafd52c2:	cmp		ecx, 0x24
0x7fffeafd52c5:	jne		0x7fffeafd5333
0x7fffeafd52cb:	mov		rax, qword ptr [rsp + 0x148]
0x7fffeafd52d3:	mov		rcx, qword ptr [rsp + 0x130]
0x7fffeafd52db:	movsx		edx, byte ptr [rcx + 2]
0x7fffeafd52df:	sub		edx, 0x30
0x7fffeafd52e2:	movsxd		rcx, edx
0x7fffeafd52e5:	mov		dword ptr [rax + rcx*4], 0xa
0x7fffeafd52ec:	mov		rax, qword ptr [rsp + 0x150]
0x7fffeafd52f4:	mov		rcx, qword ptr [rsp + 0x130]
0x7fffeafd52fc:	movsx		edx, byte ptr [rcx + 2]
0x7fffeafd5300:	sub		edx, 0x30
0x7fffeafd5303:	movsxd		rcx, edx
0x7fffeafd5306:	shl		rcx, 4
0x7fffeafd530a:	add		rax, rcx
0x7fffeafd530d:	mov		rax, qword ptr [rax]
0x7fffeafd5310:	mov		dword ptr [rsp + 0x120], eax
0x7fffeafd5317:	mov		rcx, qword ptr [rsp + 0x130]
0x7fffeafd531f:	add		rcx, 4
0x7fffeafd5326:	mov		qword ptr [rsp + 0x130], rcx
0x7fffeafd532e:	jmp		0x7fffeafd53fe
disassembling symbol '.LBB1_59':
textAddr: 0x7fffeafd5333, textSize: 88
0x7fffeafd5333:	cmp		dword ptr [rsp + 0x12c], 0
0x7fffeafd533b:	jne		0x7fffeafd53e9
0x7fffeafd5341:	cmp		qword ptr [rsp + 0x168], 0
0x7fffeafd534a:	je		0x7fffeafd53b7
0x7fffeafd5350:	mov		rax, qword ptr [rsp + 0x158]
0x7fffeafd5358:	mov		ecx, dword ptr [rax]
0x7fffeafd535a:	cmp		ecx, 0x28
0x7fffeafd535d:	mov		qword ptr [rsp + 0x70], rax
0x7fffeafd5362:	mov		dword ptr [rsp + 0x6c], ecx
0x7fffeafd5366:	ja		0x7fffeafd538b
0x7fffeafd536c:	mov		eax, dword ptr [rsp + 0x6c]
0x7fffeafd5370:	movsxd		rcx, eax
0x7fffeafd5373:	mov		rdx, qword ptr [rsp + 0x70]
0x7fffeafd5378:	add		rcx, qword ptr [rdx + 0x10]
0x7fffeafd537c:	add		eax, 8
0x7fffeafd537f:	mov		dword ptr [rdx], eax
0x7fffeafd5381:	mov		qword ptr [rsp + 0x60], rcx
0x7fffeafd5386:	jmp		0x7fffeafd53a7
disassembling symbol '.LBB1_63':
textAddr: 0x7fffeafd538b, textSize: 28
0x7fffeafd538b:	mov		rax, qword ptr [rsp + 0x70]
0x7fffeafd5390:	mov		rcx, qword ptr [rax + 8]
0x7fffeafd5394:	mov		rdx, rcx
0x7fffeafd5397:	add		rcx, 8
0x7fffeafd539e:	mov		qword ptr [rax + 8], rcx
0x7fffeafd53a2:	mov		qword ptr [rsp + 0x60], rdx
disassembling symbol '.LBB1_64':
textAddr: 0x7fffeafd53a7, textSize: 16
0x7fffeafd53a7:	mov		rax, qword ptr [rsp + 0x60]
0x7fffeafd53ac:	mov		ecx, dword ptr [rax]
0x7fffeafd53ae:	mov		dword ptr [rsp + 0x5c], ecx
0x7fffeafd53b2:	jmp		0x7fffeafd53c2
disassembling symbol '.LBB1_65':
textAddr: 0x7fffeafd53b7, textSize: 11
0x7fffeafd53b7:	xor		eax, eax
0x7fffeafd53b9:	mov		dword ptr [rsp + 0x5c], eax
0x7fffeafd53bd:	jmp		0x7fffeafd53c2
disassembling symbol '.LBB1_66':
textAddr: 0x7fffeafd53c2, textSize: 39
0x7fffeafd53c2:	mov		eax, dword ptr [rsp + 0x5c]
0x7fffeafd53c6:	mov		dword ptr [rsp + 0x120], eax
0x7fffeafd53cd:	mov		rcx, qword ptr [rsp + 0x130]
0x7fffeafd53d5:	add		rcx, 2
0x7fffeafd53dc:	mov		qword ptr [rsp + 0x130], rcx
0x7fffeafd53e4:	jmp		0x7fffeafd53f9
disassembling symbol '.LBB1_67':
textAddr: 0x7fffeafd53e9, textSize: 16
0x7fffeafd53e9:	mov		dword ptr [rsp + 0x174], 0xffffffff
0x7fffeafd53f4:	jmp		0x7fffeafd6225
disassembling symbol '.LBB1_68':
textAddr: 0x7fffeafd53f9, textSize: 5
0x7fffeafd53f9:	jmp		0x7fffeafd53fe
disassembling symbol '.LBB1_69':
textAddr: 0x7fffeafd53fe, textSize: 5
0x7fffeafd53fe:	jmp		0x7fffeafd5456
disassembling symbol '.LBB1_70':
textAddr: 0x7fffeafd5403, textSize: 67
0x7fffeafd5403:	mov		rax, qword ptr [rsp + 0x130]
0x7fffeafd540b:	movsx		ecx, byte ptr [rax]
0x7fffeafd540e:	cmp		ecx, 0x2e
0x7fffeafd5411:	jne		0x7fffeafd5446
0x7fffeafd5417:	mov		rax, qword ptr [rsp + 0x130]
0x7fffeafd541f:	add		rax, 1
0x7fffeafd5425:	mov		qword ptr [rsp + 0x130], rax
0x7fffeafd542d:	lea		rdi, [rsp + 0x130]
0x7fffeafd5435:	call		0x7fffeafd6280
0x7fffeafd543a:	mov		dword ptr [rsp + 0x120], eax
0x7fffeafd5441:	jmp		0x7fffeafd5451
disassembling symbol '.LBB1_72':
textAddr: 0x7fffeafd5446, textSize: 11
0x7fffeafd5446:	mov		dword ptr [rsp + 0x120], 0xffffffff
disassembling symbol '.LBB1_73':
textAddr: 0x7fffeafd5451, textSize: 5
0x7fffeafd5451:	jmp		0x7fffeafd5456
disassembling symbol '.LBB1_74':
textAddr: 0x7fffeafd5456, textSize: 11
0x7fffeafd5456:	mov		dword ptr [rsp + 0x108], 0
disassembling symbol '.LBB1_75':
textAddr: 0x7fffeafd5461, textSize: 39
0x7fffeafd5461:	mov		rax, qword ptr [rsp + 0x130]
0x7fffeafd5469:	movsx		ecx, byte ptr [rax]
0x7fffeafd546c:	sub		ecx, 0x41
0x7fffeafd546f:	cmp		ecx, 0x39
0x7fffeafd5472:	jbe		0x7fffeafd5488
0x7fffeafd5478:	mov		dword ptr [rsp + 0x174], 0xffffffff
0x7fffeafd5483:	jmp		0x7fffeafd6225
disassembling symbol '.LBB1_77':
textAddr: 0x7fffeafd5488, textSize: 135
0x7fffeafd5488:	lea		rax, [rip + 0x2c16801]
0x7fffeafd548f:	mov		ecx, dword ptr [rsp + 0x108]
0x7fffeafd5496:	mov		dword ptr [rsp + 0x104], ecx
0x7fffeafd549d:	mov		ecx, dword ptr [rsp + 0x108]
0x7fffeafd54a4:	mov		edx, ecx
0x7fffeafd54a6:	imul		rdx, rdx, 0x3a
0x7fffeafd54ad:	add		rax, rdx
0x7fffeafd54b0:	mov		rdx, qword ptr [rsp + 0x130]
0x7fffeafd54b8:	mov		rsi, rdx
0x7fffeafd54bb:	add		rsi, 1
0x7fffeafd54c2:	mov		qword ptr [rsp + 0x130], rsi
0x7fffeafd54ca:	movsx		ecx, byte ptr [rdx]
0x7fffeafd54cd:	sub		ecx, 0x41
0x7fffeafd54d0:	movsxd		rdx, ecx
0x7fffeafd54d3:	movzx		ecx, byte ptr [rax + rdx]
0x7fffeafd54d7:	mov		dword ptr [rsp + 0x108], ecx
0x7fffeafd54de:	mov		eax, dword ptr [rsp + 0x108]
0x7fffeafd54e5:	sub		eax, 1
0x7fffeafd54e8:	cmp		eax, 8
0x7fffeafd54eb:	jb		0x7fffeafd5461
0x7fffeafd54f1:	cmp		dword ptr [rsp + 0x108], 0
0x7fffeafd54f9:	jne		0x7fffeafd550f
0x7fffeafd54ff:	mov		dword ptr [rsp + 0x174], 0xffffffff
0x7fffeafd550a:	jmp		0x7fffeafd6225
disassembling symbol '.LBB1_81':
textAddr: 0x7fffeafd550f, textSize: 44
0x7fffeafd550f:	cmp		dword ptr [rsp + 0x108], 0x15
0x7fffeafd5517:	jne		0x7fffeafd5540
0x7fffeafd551d:	cmp		dword ptr [rsp + 0x10c], 0
0x7fffeafd5525:	jl		0x7fffeafd553b
0x7fffeafd552b:	mov		dword ptr [rsp + 0x174], 0xffffffff
0x7fffeafd5536:	jmp		0x7fffeafd6225
disassembling symbol '.LBB1_84':
textAddr: 0x7fffeafd553b, textSize: 5
0x7fffeafd553b:	jmp		0x7fffeafd55e5
disassembling symbol '.LBB1_85':
textAddr: 0x7fffeafd5540, textSize: 91
0x7fffeafd5540:	cmp		dword ptr [rsp + 0x10c], 0
0x7fffeafd5548:	jl		0x7fffeafd559b
0x7fffeafd554e:	mov		eax, dword ptr [rsp + 0x108]
0x7fffeafd5555:	mov		rcx, qword ptr [rsp + 0x148]
0x7fffeafd555d:	movsxd		rdx, dword ptr [rsp + 0x10c]
0x7fffeafd5565:	mov		dword ptr [rcx + rdx*4], eax
0x7fffeafd5568:	mov		rcx, qword ptr [rsp + 0x150]
0x7fffeafd5570:	movsxd		rdx, dword ptr [rsp + 0x10c]
0x7fffeafd5578:	shl		rdx, 4
0x7fffeafd557c:	add		rcx, rdx
0x7fffeafd557f:	mov		rdx, qword ptr [rcx]
0x7fffeafd5582:	mov		qword ptr [rsp + 0x110], rdx
0x7fffeafd558a:	mov		rcx, qword ptr [rcx + 8]
0x7fffeafd558e:	mov		qword ptr [rsp + 0x118], rcx
0x7fffeafd5596:	jmp		0x7fffeafd55e0
disassembling symbol '.LBB1_87':
textAddr: 0x7fffeafd559b, textSize: 48
0x7fffeafd559b:	cmp		qword ptr [rsp + 0x168], 0
0x7fffeafd55a4:	je		0x7fffeafd55cb
0x7fffeafd55aa:	mov		esi, dword ptr [rsp + 0x108]
0x7fffeafd55b1:	mov		rdx, qword ptr [rsp + 0x158]
0x7fffeafd55b9:	lea		rdi, [rsp + 0x110]
0x7fffeafd55c1:	call		0x7fffeafd62e0
0x7fffeafd55c6:	jmp		0x7fffeafd55db
disassembling symbol '.LBB1_89':
textAddr: 0x7fffeafd55cb, textSize: 16
0x7fffeafd55cb:	mov		dword ptr [rsp + 0x174], 0
0x7fffeafd55d6:	jmp		0x7fffeafd6225
disassembling symbol '.LBB1_90':
textAddr: 0x7fffeafd55db, textSize: 5
0x7fffeafd55db:	jmp		0x7fffeafd55e0
disassembling symbol '.LBB1_91':
textAddr: 0x7fffeafd55e0, textSize: 5
0x7fffeafd55e0:	jmp		0x7fffeafd55e5
disassembling symbol '.LBB1_92':
textAddr: 0x7fffeafd55e5, textSize: 20
0x7fffeafd55e5:	cmp		qword ptr [rsp + 0x168], 0
0x7fffeafd55ee:	jne		0x7fffeafd55f9
0x7fffeafd55f4:	jmp		0x7fffeafd4d70
disassembling symbol '.LBB1_94':
textAddr: 0x7fffeafd55f9, textSize: 117
0x7fffeafd55f9:	lea		rax, [rsp + 0xc0]
0x7fffeafd5601:	add		rax, 0x2b
0x7fffeafd5607:	mov		qword ptr [rsp + 0x138], rax
0x7fffeafd560f:	lea		rax, [rip + 0x2c1693f]
0x7fffeafd5616:	mov		qword ptr [rsp + 0xb8], rax
0x7fffeafd561e:	mov		dword ptr [rsp + 0xb0], 0
0x7fffeafd5629:	mov		rax, qword ptr [rsp + 0x130]
0x7fffeafd5631:	movsx		ecx, byte ptr [rax - 1]
0x7fffeafd5635:	mov		dword ptr [rsp + 0xb4], ecx
0x7fffeafd563c:	cmp		dword ptr [rsp + 0x104], 0
0x7fffeafd5644:	je		0x7fffeafd566e
0x7fffeafd564a:	mov		eax, dword ptr [rsp + 0xb4]
0x7fffeafd5651:	and		eax, 0xf
0x7fffeafd5654:	cmp		eax, 3
0x7fffeafd5657:	jne		0x7fffeafd566e
0x7fffeafd565d:	mov		eax, dword ptr [rsp + 0xb4]
0x7fffeafd5664:	and		eax, 0xffffffdf
0x7fffeafd5667:	mov		dword ptr [rsp + 0xb4], eax
disassembling symbol '.LBB1_97':
textAddr: 0x7fffeafd566e, textSize: 40
0x7fffeafd566e:	mov		eax, dword ptr [rsp + 0x128]
0x7fffeafd5675:	and		eax, 0x2000
0x7fffeafd567a:	cmp		eax, 0
0x7fffeafd567d:	je		0x7fffeafd5696
0x7fffeafd5683:	mov		eax, dword ptr [rsp + 0x128]
0x7fffeafd568a:	and		eax, 0xfffeffff
0x7fffeafd568f:	mov		dword ptr [rsp + 0x128], eax
disassembling symbol '.LBB1_99':
textAddr: 0x7fffeafd5696, textSize: 47
0x7fffeafd5696:	mov		eax, dword ptr [rsp + 0xb4]
0x7fffeafd569d:	add		eax, -0x41
0x7fffeafd56a0:	mov		ecx, eax
0x7fffeafd56a2:	sub		eax, 0x37
0x7fffeafd56a5:	mov		qword ptr [rsp + 0x50], rcx
0x7fffeafd56aa:	ja		0x7fffeafd5f12
0x7fffeafd56b0:	lea		rax, [rip + 0x2c164a9]
0x7fffeafd56b7:	mov		rcx, qword ptr [rsp + 0x50]
0x7fffeafd56bc:	movsxd		rdx, dword ptr [rax + rcx*4]
0x7fffeafd56c0:	add		rdx, rax
0x7fffeafd56c3:	jmp		rdx
disassembling symbol '.LBB1_100':
textAddr: 0x7fffeafd56c5, textSize: 48
0x7fffeafd56c5:	mov		eax, dword ptr [rsp + 0x104]
0x7fffeafd56cc:	mov		ecx, eax
0x7fffeafd56ce:	mov		rdx, rcx
0x7fffeafd56d1:	sub		rdx, 7
0x7fffeafd56d5:	mov		qword ptr [rsp + 0x48], rcx
0x7fffeafd56da:	ja		0x7fffeafd5793
0x7fffeafd56e0:	lea		rax, [rip + 0x2c16559]
0x7fffeafd56e7:	mov		rcx, qword ptr [rsp + 0x48]
0x7fffeafd56ec:	movsxd		rdx, dword ptr [rax + rcx*4]
0x7fffeafd56f0:	add		rdx, rax
0x7fffeafd56f3:	jmp		rdx
disassembling symbol '.LBB1_101':
textAddr: 0x7fffeafd56f5, textSize: 22
0x7fffeafd56f5:	mov		eax, dword ptr [rsp + 0x100]
0x7fffeafd56fc:	mov		rcx, qword ptr [rsp + 0x110]
0x7fffeafd5704:	mov		dword ptr [rcx], eax
0x7fffeafd5706:	jmp		0x7fffeafd5793
disassembling symbol '.LBB1_102':
textAddr: 0x7fffeafd570b, textSize: 24
0x7fffeafd570b:	movsxd		rax, dword ptr [rsp + 0x100]
0x7fffeafd5713:	mov		rcx, qword ptr [rsp + 0x110]
0x7fffeafd571b:	mov		qword ptr [rcx], rax
0x7fffeafd571e:	jmp		0x7fffeafd5793
disassembling symbol '.LBB1_103':
textAddr: 0x7fffeafd5723, textSize: 24
0x7fffeafd5723:	movsxd		rax, dword ptr [rsp + 0x100]
0x7fffeafd572b:	mov		rcx, qword ptr [rsp + 0x110]
0x7fffeafd5733:	mov		qword ptr [rcx], rax
0x7fffeafd5736:	jmp		0x7fffeafd5793
disassembling symbol '.LBB1_104':
textAddr: 0x7fffeafd573b, textSize: 23
0x7fffeafd573b:	mov		eax, dword ptr [rsp + 0x100]
0x7fffeafd5742:	mov		rcx, qword ptr [rsp + 0x110]
0x7fffeafd574a:	mov		word ptr [rcx], ax
0x7fffeafd574d:	jmp		0x7fffeafd5793
disassembling symbol '.LBB1_105':
textAddr: 0x7fffeafd5752, textSize: 22
0x7fffeafd5752:	mov		eax, dword ptr [rsp + 0x100]
0x7fffeafd5759:	mov		rcx, qword ptr [rsp + 0x110]
0x7fffeafd5761:	mov		byte ptr [rcx], al
0x7fffeafd5763:	jmp		0x7fffeafd5793
disassembling symbol '.LBB1_106':
textAddr: 0x7fffeafd5768, textSize: 24
0x7fffeafd5768:	movsxd		rax, dword ptr [rsp + 0x100]
0x7fffeafd5770:	mov		rcx, qword ptr [rsp + 0x110]
0x7fffeafd5778:	mov		qword ptr [rcx], rax
0x7fffeafd577b:	jmp		0x7fffeafd5793
disassembling symbol '.LBB1_107':
textAddr: 0x7fffeafd5780, textSize: 19
0x7fffeafd5780:	movsxd		rax, dword ptr [rsp + 0x100]
0x7fffeafd5788:	mov		rcx, qword ptr [rsp + 0x110]
0x7fffeafd5790:	mov		qword ptr [rcx], rax
disassembling symbol '.LBB1_108':
textAddr: 0x7fffeafd5793, textSize: 5
0x7fffeafd5793:	jmp		0x7fffeafd4d70
disassembling symbol '.LBB1_109':
textAddr: 0x7fffeafd5798, textSize: 36
0x7fffeafd5798:	movsxd		rax, dword ptr [rsp + 0x120]
0x7fffeafd57a0:	cmp		rax, 0x10
0x7fffeafd57a4:	jbe		0x7fffeafd57bc
0x7fffeafd57aa:	movsxd		rax, dword ptr [rsp + 0x120]
0x7fffeafd57b2:	mov		qword ptr [rsp + 0x40], rax
0x7fffeafd57b7:	jmp		0x7fffeafd57cb
disassembling symbol '.LBB1_111':
textAddr: 0x7fffeafd57bc, textSize: 15
0x7fffeafd57bc:	mov		eax, 0x10
0x7fffeafd57c1:	mov		qword ptr [rsp + 0x40], rax
0x7fffeafd57c6:	jmp		0x7fffeafd57cb
disassembling symbol '.LBB1_112':
textAddr: 0x7fffeafd57cb, textSize: 40
0x7fffeafd57cb:	mov		rax, qword ptr [rsp + 0x40]
0x7fffeafd57d0:	mov		dword ptr [rsp + 0x120], eax
0x7fffeafd57d7:	mov		dword ptr [rsp + 0xb4], 0x78
0x7fffeafd57e2:	mov		eax, dword ptr [rsp + 0x128]
0x7fffeafd57e9:	or		eax, 8
0x7fffeafd57ec:	mov		dword ptr [rsp + 0x128], eax
disassembling symbol '.LBB1_113':
textAddr: 0x7fffeafd57f3, textSize: 118
0x7fffeafd57f3:	mov		rdi, qword ptr [rsp + 0x110]
0x7fffeafd57fb:	mov		rsi, qword ptr [rsp + 0x138]
0x7fffeafd5803:	mov		eax, dword ptr [rsp + 0xb4]
0x7fffeafd580a:	and		eax, 0x20
0x7fffeafd580d:	mov		edx, eax
0x7fffeafd580f:	call		0x7fffeafd6870
0x7fffeafd5814:	mov		qword ptr [rsp + 0x140], rax
0x7fffeafd581c:	cmp		qword ptr [rsp + 0x110], 0
0x7fffeafd5825:	je		0x7fffeafd5869
0x7fffeafd582b:	mov		eax, dword ptr [rsp + 0x128]
0x7fffeafd5832:	and		eax, 8
0x7fffeafd5835:	cmp		eax, 0
0x7fffeafd5838:	je		0x7fffeafd5869
0x7fffeafd583e:	mov		eax, dword ptr [rsp + 0xb4]
0x7fffeafd5845:	sar		eax, 4
0x7fffeafd5848:	mov		rcx, qword ptr [rsp + 0xb8]
0x7fffeafd5850:	movsxd		rdx, eax
0x7fffeafd5853:	add		rcx, rdx
0x7fffeafd5856:	mov		qword ptr [rsp + 0xb8], rcx
0x7fffeafd585e:	mov		dword ptr [rsp + 0xb0], 2
disassembling symbol '.LBB1_116':
textAddr: 0x7fffeafd5869, textSize: 15
0x7fffeafd5869:	xor		eax, eax
0x7fffeafd586b:	test		al, 1
0x7fffeafd586d:	jne		0x7fffeafd5878
0x7fffeafd5873:	jmp		0x7fffeafd58fd
disassembling symbol '.LBB1_117':
textAddr: 0x7fffeafd5878, textSize: 5
0x7fffeafd5878:	jmp		0x7fffeafd587d
disassembling symbol '.LBB1_118':
textAddr: 0x7fffeafd587d, textSize: 123
0x7fffeafd587d:	mov		rdi, qword ptr [rsp + 0x110]
0x7fffeafd5885:	mov		rsi, qword ptr [rsp + 0x138]
0x7fffeafd588d:	call		0x7fffeafd68e0
0x7fffeafd5892:	mov		qword ptr [rsp + 0x140], rax
0x7fffeafd589a:	mov		ecx, dword ptr [rsp + 0x128]
0x7fffeafd58a1:	and		ecx, 8
0x7fffeafd58a4:	cmp		ecx, 0
0x7fffeafd58a7:	je		0x7fffeafd58f8
0x7fffeafd58ad:	movsxd		rax, dword ptr [rsp + 0x120]
0x7fffeafd58b5:	mov		rcx, qword ptr [rsp + 0x138]
0x7fffeafd58bd:	mov		rdx, qword ptr [rsp + 0x140]
0x7fffeafd58c5:	sub		rcx, rdx
0x7fffeafd58c8:	add		rcx, 1
0x7fffeafd58cf:	cmp		rax, rcx
0x7fffeafd58d2:	jge		0x7fffeafd58f8
0x7fffeafd58d8:	mov		rax, qword ptr [rsp + 0x138]
0x7fffeafd58e0:	mov		rcx, qword ptr [rsp + 0x140]
0x7fffeafd58e8:	sub		rax, rcx
0x7fffeafd58eb:	add		rax, 1
0x7fffeafd58f1:	mov		dword ptr [rsp + 0x120], eax
disassembling symbol '.LBB1_121':
textAddr: 0x7fffeafd58f8, textSize: 5
0x7fffeafd58f8:	jmp		0x7fffeafd58fd
disassembling symbol '.LBB1_122':
textAddr: 0x7fffeafd58fd, textSize: 15
0x7fffeafd58fd:	xor		eax, eax
0x7fffeafd58ff:	test		al, 1
0x7fffeafd5901:	jne		0x7fffeafd590c
0x7fffeafd5907:	jmp		0x7fffeafd59e2
disassembling symbol '.LBB1_123':
textAddr: 0x7fffeafd590c, textSize: 5
0x7fffeafd590c:	jmp		0x7fffeafd5911
disassembling symbol '.LBB1_124':
textAddr: 0x7fffeafd5911, textSize: 60
0x7fffeafd5911:	mov		dword ptr [rsp + 0xb0], 1
0x7fffeafd591c:	movabs		rax, 0x7fffffffffffffff
0x7fffeafd5926:	cmp		qword ptr [rsp + 0x110], rax
0x7fffeafd592e:	jbe		0x7fffeafd594d
0x7fffeafd5934:	xor		eax, eax
0x7fffeafd5936:	mov		ecx, eax
0x7fffeafd5938:	sub		rcx, qword ptr [rsp + 0x110]
0x7fffeafd5940:	mov		qword ptr [rsp + 0x110], rcx
0x7fffeafd5948:	jmp		0x7fffeafd59c0
disassembling symbol '.LBB1_126':
textAddr: 0x7fffeafd594d, textSize: 48
0x7fffeafd594d:	mov		eax, dword ptr [rsp + 0x128]
0x7fffeafd5954:	and		eax, 0x800
0x7fffeafd5959:	cmp		eax, 0
0x7fffeafd595c:	je		0x7fffeafd597d
0x7fffeafd5962:	mov		rax, qword ptr [rsp + 0xb8]
0x7fffeafd596a:	add		rax, 1
0x7fffeafd5970:	mov		qword ptr [rsp + 0xb8], rax
0x7fffeafd5978:	jmp		0x7fffeafd59bb
disassembling symbol '.LBB1_128':
textAddr: 0x7fffeafd597d, textSize: 46
0x7fffeafd597d:	mov		eax, dword ptr [rsp + 0x128]
0x7fffeafd5984:	and		eax, 1
0x7fffeafd5987:	cmp		eax, 0
0x7fffeafd598a:	je		0x7fffeafd59ab
0x7fffeafd5990:	mov		rax, qword ptr [rsp + 0xb8]
0x7fffeafd5998:	add		rax, 2
0x7fffeafd599e:	mov		qword ptr [rsp + 0xb8], rax
0x7fffeafd59a6:	jmp		0x7fffeafd59b6
disassembling symbol '.LBB1_130':
textAddr: 0x7fffeafd59ab, textSize: 11
0x7fffeafd59ab:	mov		dword ptr [rsp + 0xb0], 0
disassembling symbol '.LBB1_131':
textAddr: 0x7fffeafd59b6, textSize: 5
0x7fffeafd59b6:	jmp		0x7fffeafd59bb
disassembling symbol '.LBB1_132':
textAddr: 0x7fffeafd59bb, textSize: 5
0x7fffeafd59bb:	jmp		0x7fffeafd59c0
disassembling symbol '.LBB1_133':
textAddr: 0x7fffeafd59c0, textSize: 5
0x7fffeafd59c0:	jmp		0x7fffeafd59c5
disassembling symbol '.LBB1_134':
textAddr: 0x7fffeafd59c5, textSize: 29
0x7fffeafd59c5:	mov		rdi, qword ptr [rsp + 0x110]
0x7fffeafd59cd:	mov		rsi, qword ptr [rsp + 0x138]
0x7fffeafd59d5:	call		0x7fffeafd6940
0x7fffeafd59da:	mov		qword ptr [rsp + 0x140], rax
disassembling symbol '.LBB1_135':
textAddr: 0x7fffeafd59e2, textSize: 33
0x7fffeafd59e2:	cmp		dword ptr [rsp + 0x120], 0
0x7fffeafd59ea:	jl		0x7fffeafd5a03
0x7fffeafd59f0:	mov		eax, dword ptr [rsp + 0x128]
0x7fffeafd59f7:	and		eax, 0xfffeffff
0x7fffeafd59fc:	mov		dword ptr [rsp + 0x128], eax
disassembling symbol '.LBB1_137':
textAddr: 0x7fffeafd5a03, textSize: 50
0x7fffeafd5a03:	cmp		qword ptr [rsp + 0x110], 0
0x7fffeafd5a0c:	jne		0x7fffeafd5a35
0x7fffeafd5a12:	cmp		dword ptr [rsp + 0x120], 0
0x7fffeafd5a1a:	jne		0x7fffeafd5a35
0x7fffeafd5a20:	mov		rax, qword ptr [rsp + 0x138]
0x7fffeafd5a28:	mov		qword ptr [rsp + 0x140], rax
0x7fffeafd5a30:	jmp		0x7fffeafd5f12
disassembling symbol '.LBB1_140':
textAddr: 0x7fffeafd5a35, textSize: 85
0x7fffeafd5a35:	movsxd		rax, dword ptr [rsp + 0x120]
0x7fffeafd5a3d:	mov		rcx, qword ptr [rsp + 0x138]
0x7fffeafd5a45:	mov		rdx, qword ptr [rsp + 0x140]
0x7fffeafd5a4d:	sub		rcx, rdx
0x7fffeafd5a50:	cmp		qword ptr [rsp + 0x110], 0
0x7fffeafd5a59:	setne		sil
0x7fffeafd5a5d:	xor		sil, 0xff
0x7fffeafd5a61:	and		sil, 1
0x7fffeafd5a65:	movzx		edi, sil
0x7fffeafd5a69:	movsxd		rdx, edi
0x7fffeafd5a6c:	add		rcx, rdx
0x7fffeafd5a6f:	cmp		rax, rcx
0x7fffeafd5a72:	jle		0x7fffeafd5a8a
0x7fffeafd5a78:	movsxd		rax, dword ptr [rsp + 0x120]
0x7fffeafd5a80:	mov		qword ptr [rsp + 0x38], rax
0x7fffeafd5a85:	jmp		0x7fffeafd5abd
disassembling symbol '.LBB1_142':
textAddr: 0x7fffeafd5a8a, textSize: 51
0x7fffeafd5a8a:	mov		rax, qword ptr [rsp + 0x138]
0x7fffeafd5a92:	mov		rcx, qword ptr [rsp + 0x140]
0x7fffeafd5a9a:	sub		rax, rcx
0x7fffeafd5a9d:	cmp		qword ptr [rsp + 0x110], 0
0x7fffeafd5aa6:	setne		dl
0x7fffeafd5aa9:	xor		dl, 0xff
0x7fffeafd5aac:	and		dl, 1
0x7fffeafd5aaf:	movzx		esi, dl
0x7fffeafd5ab2:	movsxd		rcx, esi
0x7fffeafd5ab5:	add		rax, rcx
0x7fffeafd5ab8:	mov		qword ptr [rsp + 0x38], rax
disassembling symbol '.LBB1_143':
textAddr: 0x7fffeafd5abd, textSize: 17
0x7fffeafd5abd:	mov		rax, qword ptr [rsp + 0x38]
0x7fffeafd5ac2:	mov		dword ptr [rsp + 0x120], eax
0x7fffeafd5ac9:	jmp		0x7fffeafd5f12
disassembling symbol '.LBB1_144':
textAddr: 0x7fffeafd5ace, textSize: 73
0x7fffeafd5ace:	mov		rax, qword ptr [rsp + 0x110]
0x7fffeafd5ad6:	mov		rcx, qword ptr [rsp + 0x138]
0x7fffeafd5ade:	mov		dword ptr [rsp + 0x120], 1
0x7fffeafd5ae9:	mov		rdx, rcx
0x7fffeafd5aec:	add		rdx, -1
0x7fffeafd5af3:	mov		qword ptr [rsp + 0x140], rdx
0x7fffeafd5afb:	mov		byte ptr [rcx - 1], al
0x7fffeafd5afe:	mov		esi, dword ptr [rsp + 0x128]
0x7fffeafd5b05:	and		esi, 0xfffeffff
0x7fffeafd5b0b:	mov		dword ptr [rsp + 0x128], esi
0x7fffeafd5b12:	jmp		0x7fffeafd5f12
disassembling symbol '.LBB1_145':
textAddr: 0x7fffeafd5b17, textSize: 15
0x7fffeafd5b17:	mov		al, 1
0x7fffeafd5b19:	test		al, 1
0x7fffeafd5b1b:	jne		0x7fffeafd5b26
0x7fffeafd5b21:	jmp		0x7fffeafd5b3f
disassembling symbol '.LBB1_146':
textAddr: 0x7fffeafd5b26, textSize: 25
0x7fffeafd5b26:	call		0x7fffeafc3cb0
0x7fffeafd5b2b:	mov		edi, dword ptr [rax]
0x7fffeafd5b2d:	call		0x7fffeafd45a0
0x7fffeafd5b32:	mov		qword ptr [rsp + 0x140], rax
0x7fffeafd5b3a:	jmp		0x7fffeafd5b83
disassembling symbol '.LBB1_147':
textAddr: 0x7fffeafd5b3f, textSize: 5
0x7fffeafd5b3f:	jmp		0x7fffeafd5b44
disassembling symbol '.LBB1_148':
textAddr: 0x7fffeafd5b44, textSize: 33
0x7fffeafd5b44:	cmp		qword ptr [rsp + 0x110], 0
0x7fffeafd5b4d:	je		0x7fffeafd5b65
0x7fffeafd5b53:	mov		rax, qword ptr [rsp + 0x110]
0x7fffeafd5b5b:	mov		qword ptr [rsp + 0x30], rax
0x7fffeafd5b60:	jmp		0x7fffeafd5b76
disassembling symbol '.LBB1_150':
textAddr: 0x7fffeafd5b65, textSize: 17
0x7fffeafd5b65:	lea		rax, [rip + 0x2c163f3]
0x7fffeafd5b6c:	mov		qword ptr [rsp + 0x30], rax
0x7fffeafd5b71:	jmp		0x7fffeafd5b76
disassembling symbol '.LBB1_151':
textAddr: 0x7fffeafd5b76, textSize: 13
0x7fffeafd5b76:	mov		rax, qword ptr [rsp + 0x30]
0x7fffeafd5b7b:	mov		qword ptr [rsp + 0x140], rax
disassembling symbol '.LBB1_152':
textAddr: 0x7fffeafd5b83, textSize: 78
0x7fffeafd5b83:	xor		esi, esi
0x7fffeafd5b85:	mov		rdi, qword ptr [rsp + 0x140]
0x7fffeafd5b8d:	movsxd		rdx, dword ptr [rsp + 0x120]
0x7fffeafd5b95:	call		0x7fffeafd24b0
0x7fffeafd5b9a:	mov		qword ptr [rsp + 0x138], rax
0x7fffeafd5ba2:	cmp		qword ptr [rsp + 0x138], 0
0x7fffeafd5bab:	jne		0x7fffeafd5bd1
0x7fffeafd5bb1:	mov		rax, qword ptr [rsp + 0x140]
0x7fffeafd5bb9:	movsxd		rcx, dword ptr [rsp + 0x120]
0x7fffeafd5bc1:	add		rax, rcx
0x7fffeafd5bc4:	mov		qword ptr [rsp + 0x138], rax
0x7fffeafd5bcc:	jmp		0x7fffeafd5beb
disassembling symbol '.LBB1_154':
textAddr: 0x7fffeafd5bd1, textSize: 26
0x7fffeafd5bd1:	mov		rax, qword ptr [rsp + 0x138]
0x7fffeafd5bd9:	mov		rcx, qword ptr [rsp + 0x140]
0x7fffeafd5be1:	sub		rax, rcx
0x7fffeafd5be4:	mov		dword ptr [rsp + 0x120], eax
disassembling symbol '.LBB1_155':
textAddr: 0x7fffeafd5beb, textSize: 24
0x7fffeafd5beb:	mov		eax, dword ptr [rsp + 0x128]
0x7fffeafd5bf2:	and		eax, 0xfffeffff
0x7fffeafd5bf7:	mov		dword ptr [rsp + 0x128], eax
0x7fffeafd5bfe:	jmp		0x7fffeafd5f12
disassembling symbol '.LBB1_156':
textAddr: 0x7fffeafd5c03, textSize: 53
0x7fffeafd5c03:	lea		rax, [rsp + 0xa8]
0x7fffeafd5c0b:	mov		rcx, qword ptr [rsp + 0x110]
0x7fffeafd5c13:	mov		dword ptr [rsp + 0xa8], ecx
0x7fffeafd5c1a:	mov		dword ptr [rsp + 0xac], 0
0x7fffeafd5c25:	mov		qword ptr [rsp + 0x110], rax
0x7fffeafd5c2d:	mov		dword ptr [rsp + 0x120], 0xffffffff
disassembling symbol '.LBB1_157':
textAddr: 0x7fffeafd5c38, textSize: 38
0x7fffeafd5c38:	mov		rax, qword ptr [rsp + 0x110]
0x7fffeafd5c40:	mov		qword ptr [rsp + 0xa0], rax
0x7fffeafd5c48:	mov		dword ptr [rsp + 0xfc], 0
0x7fffeafd5c53:	mov		dword ptr [rsp + 0xf8], 0
disassembling symbol '.LBB1_158':
textAddr: 0x7fffeafd5c5e, textSize: 150
0x7fffeafd5c5e:	xor		eax, eax
0x7fffeafd5c60:	mov		ecx, dword ptr [rsp + 0xf8]
0x7fffeafd5c67:	mov		edx, dword ptr [rsp + 0x120]
0x7fffeafd5c6e:	add		edx, 0
0x7fffeafd5c71:	cmp		ecx, edx
0x7fffeafd5c73:	mov		byte ptr [rsp + 0x2f], al
0x7fffeafd5c77:	jae		0x7fffeafd5cf4
0x7fffeafd5c7d:	xor		eax, eax
0x7fffeafd5c7f:	mov		rcx, qword ptr [rsp + 0xa0]
0x7fffeafd5c87:	cmp		dword ptr [rcx], 0
0x7fffeafd5c8a:	mov		byte ptr [rsp + 0x2f], al
0x7fffeafd5c8e:	je		0x7fffeafd5cf4
0x7fffeafd5c94:	lea		rdi, [rsp + 0x9c]
0x7fffeafd5c9c:	mov		rax, qword ptr [rsp + 0xa0]
0x7fffeafd5ca4:	mov		rcx, rax
0x7fffeafd5ca7:	add		rcx, 4
0x7fffeafd5cae:	mov		qword ptr [rsp + 0xa0], rcx
0x7fffeafd5cb6:	mov		esi, dword ptr [rax]
0x7fffeafd5cb8:	call		0x7fffeafd8fb0
0x7fffeafd5cbd:	xor		edx, edx
0x7fffeafd5cbf:	mov		dword ptr [rsp + 0xfc], eax
0x7fffeafd5cc6:	cmp		eax, 0
0x7fffeafd5cc9:	mov		byte ptr [rsp + 0x2f], dl
0x7fffeafd5ccd:	jl		0x7fffeafd5cf4
0x7fffeafd5cd3:	mov		eax, dword ptr [rsp + 0xfc]
0x7fffeafd5cda:	mov		ecx, dword ptr [rsp + 0x120]
0x7fffeafd5ce1:	add		ecx, 0
0x7fffeafd5ce4:	sub		ecx, dword ptr [rsp + 0xf8]
0x7fffeafd5ceb:	cmp		eax, ecx
0x7fffeafd5ced:	setbe		dl
0x7fffeafd5cf0:	mov		byte ptr [rsp + 0x2f], dl
disassembling symbol '.LBB1_162':
textAddr: 0x7fffeafd5cf4, textSize: 17
0x7fffeafd5cf4:	mov		al, byte ptr [rsp + 0x2f]
0x7fffeafd5cf8:	test		al, 1
0x7fffeafd5cfa:	jne		0x7fffeafd5d05
0x7fffeafd5d00:	jmp		0x7fffeafd5d24
disassembling symbol '.LBB1_163':
textAddr: 0x7fffeafd5d05, textSize: 5
0x7fffeafd5d05:	jmp		0x7fffeafd5d0a
disassembling symbol '.LBB1_164':
textAddr: 0x7fffeafd5d0a, textSize: 26
0x7fffeafd5d0a:	mov		eax, dword ptr [rsp + 0xfc]
0x7fffeafd5d11:	add		eax, dword ptr [rsp + 0xf8]
0x7fffeafd5d18:	mov		dword ptr [rsp + 0xf8], eax
0x7fffeafd5d1f:	jmp		0x7fffeafd5c5e
disassembling symbol '.LBB1_165':
textAddr: 0x7fffeafd5d24, textSize: 30
0x7fffeafd5d24:	cmp		dword ptr [rsp + 0xfc], 0
0x7fffeafd5d2c:	jge		0x7fffeafd5d42
0x7fffeafd5d32:	mov		dword ptr [rsp + 0x174], 0xffffffff
0x7fffeafd5d3d:	jmp		0x7fffeafd6225
disassembling symbol '.LBB1_167':
textAddr: 0x7fffeafd5d42, textSize: 81
0x7fffeafd5d42:	mov		eax, dword ptr [rsp + 0xf8]
0x7fffeafd5d49:	mov		dword ptr [rsp + 0x120], eax
0x7fffeafd5d50:	mov		rdi, qword ptr [rsp + 0x168]
0x7fffeafd5d58:	mov		edx, dword ptr [rsp + 0x124]
0x7fffeafd5d5f:	mov		ecx, dword ptr [rsp + 0x120]
0x7fffeafd5d66:	mov		r8d, dword ptr [rsp + 0x128]
0x7fffeafd5d6e:	mov		esi, 0x20
0x7fffeafd5d73:	call		0x7fffeafd6a10
0x7fffeafd5d78:	mov		rdi, qword ptr [rsp + 0x110]
0x7fffeafd5d80:	mov		qword ptr [rsp + 0xa0], rdi
0x7fffeafd5d88:	mov		dword ptr [rsp + 0xf8], 0
disassembling symbol '.LBB1_168':
textAddr: 0x7fffeafd5d93, textSize: 135
0x7fffeafd5d93:	xor		eax, eax
0x7fffeafd5d95:	mov		ecx, dword ptr [rsp + 0xf8]
0x7fffeafd5d9c:	mov		edx, dword ptr [rsp + 0x120]
0x7fffeafd5da3:	add		edx, 0
0x7fffeafd5da6:	cmp		ecx, edx
0x7fffeafd5da8:	mov		byte ptr [rsp + 0x2e], al
0x7fffeafd5dac:	jae		0x7fffeafd5e1a
0x7fffeafd5db2:	xor		eax, eax
0x7fffeafd5db4:	mov		rcx, qword ptr [rsp + 0xa0]
0x7fffeafd5dbc:	cmp		dword ptr [rcx], 0
0x7fffeafd5dbf:	mov		byte ptr [rsp + 0x2e], al
0x7fffeafd5dc3:	je		0x7fffeafd5e1a
0x7fffeafd5dc9:	lea		rdi, [rsp + 0x9c]
0x7fffeafd5dd1:	mov		eax, dword ptr [rsp + 0xf8]
0x7fffeafd5dd8:	mov		rcx, qword ptr [rsp + 0xa0]
0x7fffeafd5de0:	mov		rdx, rcx
0x7fffeafd5de3:	add		rdx, 4
0x7fffeafd5dea:	mov		qword ptr [rsp + 0xa0], rdx
0x7fffeafd5df2:	mov		esi, dword ptr [rcx]
0x7fffeafd5df4:	mov		dword ptr [rsp + 0x28], eax
0x7fffeafd5df8:	call		0x7fffeafd8fb0
0x7fffeafd5dfd:	mov		dword ptr [rsp + 0xfc], eax
0x7fffeafd5e04:	mov		esi, dword ptr [rsp + 0x28]
0x7fffeafd5e08:	add		esi, eax
0x7fffeafd5e0a:	cmp		esi, dword ptr [rsp + 0x120]
0x7fffeafd5e11:	setle		r8b
0x7fffeafd5e15:	mov		byte ptr [rsp + 0x2e], r8b
disassembling symbol '.LBB1_171':
textAddr: 0x7fffeafd5e1a, textSize: 17
0x7fffeafd5e1a:	mov		al, byte ptr [rsp + 0x2e]
0x7fffeafd5e1e:	test		al, 1
0x7fffeafd5e20:	jne		0x7fffeafd5e2b
0x7fffeafd5e26:	jmp		0x7fffeafd5e62
disassembling symbol '.LBB1_172':
textAddr: 0x7fffeafd5e2b, textSize: 55
0x7fffeafd5e2b:	lea		rsi, [rsp + 0x9c]
0x7fffeafd5e33:	mov		rdi, qword ptr [rsp + 0x168]
0x7fffeafd5e3b:	movsxd		rdx, dword ptr [rsp + 0xfc]
0x7fffeafd5e43:	call		0x7fffeafd6240
0x7fffeafd5e48:	mov		eax, dword ptr [rsp + 0xfc]
0x7fffeafd5e4f:	add		eax, dword ptr [rsp + 0xf8]
0x7fffeafd5e56:	mov		dword ptr [rsp + 0xf8], eax
0x7fffeafd5e5d:	jmp		0x7fffeafd5d93
disassembling symbol '.LBB1_174':
textAddr: 0x7fffeafd5e62, textSize: 83
0x7fffeafd5e62:	mov		rdi, qword ptr [rsp + 0x168]
0x7fffeafd5e6a:	mov		edx, dword ptr [rsp + 0x124]
0x7fffeafd5e71:	mov		ecx, dword ptr [rsp + 0x120]
0x7fffeafd5e78:	mov		eax, dword ptr [rsp + 0x128]
0x7fffeafd5e7f:	xor		eax, 0x2000
0x7fffeafd5e84:	mov		esi, 0x20
0x7fffeafd5e89:	mov		r8d, eax
0x7fffeafd5e8c:	call		0x7fffeafd6a10
0x7fffeafd5e91:	mov		eax, dword ptr [rsp + 0x124]
0x7fffeafd5e98:	cmp		eax, dword ptr [rsp + 0x120]
0x7fffeafd5e9f:	jle		0x7fffeafd5eb5
0x7fffeafd5ea5:	mov		eax, dword ptr [rsp + 0x124]
0x7fffeafd5eac:	mov		dword ptr [rsp + 0x24], eax
0x7fffeafd5eb0:	jmp		0x7fffeafd5ec0
disassembling symbol '.LBB1_176':
textAddr: 0x7fffeafd5eb5, textSize: 11
0x7fffeafd5eb5:	mov		eax, dword ptr [rsp + 0x120]
0x7fffeafd5ebc:	mov		dword ptr [rsp + 0x24], eax
disassembling symbol '.LBB1_177':
textAddr: 0x7fffeafd5ec0, textSize: 16
0x7fffeafd5ec0:	mov		eax, dword ptr [rsp + 0x24]
0x7fffeafd5ec4:	mov		dword ptr [rsp + 0xfc], eax
0x7fffeafd5ecb:	jmp		0x7fffeafd4d70
disassembling symbol '.LBB1_178':
textAddr: 0x7fffeafd5ed0, textSize: 66
0x7fffeafd5ed0:	mov		rdi, qword ptr [rsp + 0x168]
0x7fffeafd5ed8:	fld		xword ptr [rsp + 0x110]
0x7fffeafd5edf:	mov		esi, dword ptr [rsp + 0x124]
0x7fffeafd5ee6:	mov		edx, dword ptr [rsp + 0x120]
0x7fffeafd5eed:	mov		ecx, dword ptr [rsp + 0x128]
0x7fffeafd5ef4:	mov		r8d, dword ptr [rsp + 0xb4]
0x7fffeafd5efc:	mov		rax, rsp
0x7fffeafd5eff:	fstp		xword ptr [rax]
0x7fffeafd5f01:	call		0x7fffeafd6b50
0x7fffeafd5f06:	mov		dword ptr [rsp + 0xfc], eax
0x7fffeafd5f0d:	jmp		0x7fffeafd4d70
disassembling symbol '.LBB1_179':
textAddr: 0x7fffeafd5f12, textSize: 62
0x7fffeafd5f12:	movsxd		rax, dword ptr [rsp + 0x120]
0x7fffeafd5f1a:	mov		rcx, qword ptr [rsp + 0x138]
0x7fffeafd5f22:	mov		rdx, qword ptr [rsp + 0x140]
0x7fffeafd5f2a:	sub		rcx, rdx
0x7fffeafd5f2d:	cmp		rax, rcx
0x7fffeafd5f30:	jge		0x7fffeafd5f50
0x7fffeafd5f36:	mov		rax, qword ptr [rsp + 0x138]
0x7fffeafd5f3e:	mov		rcx, qword ptr [rsp + 0x140]
0x7fffeafd5f46:	sub		rax, rcx
0x7fffeafd5f49:	mov		dword ptr [rsp + 0x120], eax
disassembling symbol '.LBB1_181':
textAddr: 0x7fffeafd5f50, textSize: 50
0x7fffeafd5f50:	mov		eax, dword ptr [rsp + 0x124]
0x7fffeafd5f57:	mov		ecx, dword ptr [rsp + 0xb0]
0x7fffeafd5f5e:	add		ecx, dword ptr [rsp + 0x120]
0x7fffeafd5f65:	cmp		eax, ecx
0x7fffeafd5f67:	jge		0x7fffeafd5f82
0x7fffeafd5f6d:	mov		eax, dword ptr [rsp + 0xb0]
0x7fffeafd5f74:	add		eax, dword ptr [rsp + 0x120]
0x7fffeafd5f7b:	mov		dword ptr [rsp + 0x124], eax
disassembling symbol '.LBB1_183':
textAddr: 0x7fffeafd5f82, textSize: 316
0x7fffeafd5f82:	mov		rdi, qword ptr [rsp + 0x168]
0x7fffeafd5f8a:	mov		edx, dword ptr [rsp + 0x124]
0x7fffeafd5f91:	mov		eax, dword ptr [rsp + 0xb0]
0x7fffeafd5f98:	add		eax, dword ptr [rsp + 0x120]
0x7fffeafd5f9f:	mov		r8d, dword ptr [rsp + 0x128]
0x7fffeafd5fa7:	mov		esi, 0x20
0x7fffeafd5fac:	mov		ecx, eax
0x7fffeafd5fae:	call		0x7fffeafd6a10
0x7fffeafd5fb3:	mov		rdi, qword ptr [rsp + 0x168]
0x7fffeafd5fbb:	mov		rsi, qword ptr [rsp + 0xb8]
0x7fffeafd5fc3:	movsxd		rdx, dword ptr [rsp + 0xb0]
0x7fffeafd5fcb:	call		0x7fffeafd6240
0x7fffeafd5fd0:	mov		rdi, qword ptr [rsp + 0x168]
0x7fffeafd5fd8:	mov		edx, dword ptr [rsp + 0x124]
0x7fffeafd5fdf:	mov		eax, dword ptr [rsp + 0xb0]
0x7fffeafd5fe6:	add		eax, dword ptr [rsp + 0x120]
0x7fffeafd5fed:	mov		ecx, dword ptr [rsp + 0x128]
0x7fffeafd5ff4:	xor		ecx, 0x10000
0x7fffeafd5ffa:	mov		esi, 0x30
0x7fffeafd5fff:	mov		dword ptr [rsp + 0x20], ecx
0x7fffeafd6003:	mov		ecx, eax
0x7fffeafd6005:	mov		r8d, dword ptr [rsp + 0x20]
0x7fffeafd600a:	call		0x7fffeafd6a10
0x7fffeafd600f:	xor		r8d, r8d
0x7fffeafd6012:	mov		rdi, qword ptr [rsp + 0x168]
0x7fffeafd601a:	mov		edx, dword ptr [rsp + 0x120]
0x7fffeafd6021:	mov		r9, qword ptr [rsp + 0x138]
0x7fffeafd6029:	mov		r10, qword ptr [rsp + 0x140]
0x7fffeafd6031:	sub		r9, r10
0x7fffeafd6034:	mov		esi, 0x30
0x7fffeafd6039:	mov		ecx, r9d
0x7fffeafd603c:	call		0x7fffeafd6a10
0x7fffeafd6041:	mov		rdi, qword ptr [rsp + 0x168]
0x7fffeafd6049:	mov		rsi, qword ptr [rsp + 0x140]
0x7fffeafd6051:	mov		r10, qword ptr [rsp + 0x138]
0x7fffeafd6059:	mov		r11, qword ptr [rsp + 0x140]
0x7fffeafd6061:	sub		r10, r11
0x7fffeafd6064:	mov		rdx, r10
0x7fffeafd6067:	call		0x7fffeafd6240
0x7fffeafd606c:	mov		rdi, qword ptr [rsp + 0x168]
0x7fffeafd6074:	mov		edx, dword ptr [rsp + 0x124]
0x7fffeafd607b:	mov		eax, dword ptr [rsp + 0xb0]
0x7fffeafd6082:	add		eax, dword ptr [rsp + 0x120]
0x7fffeafd6089:	mov		ecx, dword ptr [rsp + 0x128]
0x7fffeafd6090:	xor		ecx, 0x2000
0x7fffeafd6096:	mov		esi, 0x20
0x7fffeafd609b:	mov		dword ptr [rsp + 0x1c], ecx
0x7fffeafd609f:	mov		ecx, eax
0x7fffeafd60a1:	mov		r8d, dword ptr [rsp + 0x1c]
0x7fffeafd60a6:	call		0x7fffeafd6a10
0x7fffeafd60ab:	mov		eax, dword ptr [rsp + 0x124]
0x7fffeafd60b2:	mov		dword ptr [rsp + 0xfc], eax
0x7fffeafd60b9:	jmp		0x7fffeafd4d70
disassembling symbol '.LBB1_184':
textAddr: 0x7fffeafd60be, textSize: 34
0x7fffeafd60be:	cmp		qword ptr [rsp + 0x168], 0
0x7fffeafd60c7:	je		0x7fffeafd60e0
0x7fffeafd60cd:	mov		eax, dword ptr [rsp + 0x100]
0x7fffeafd60d4:	mov		dword ptr [rsp + 0x174], eax
0x7fffeafd60db:	jmp		0x7fffeafd6225
disassembling symbol '.LBB1_186':
textAddr: 0x7fffeafd60e0, textSize: 30
0x7fffeafd60e0:	cmp		dword ptr [rsp + 0x12c], 0
0x7fffeafd60e8:	jne		0x7fffeafd60fe
0x7fffeafd60ee:	mov		dword ptr [rsp + 0x174], 0
0x7fffeafd60f9:	jmp		0x7fffeafd6225
disassembling symbol '.LBB1_188':
textAddr: 0x7fffeafd60fe, textSize: 11
0x7fffeafd60fe:	mov		dword ptr [rsp + 0xf8], 1
disassembling symbol '.LBB1_189':
textAddr: 0x7fffeafd6109, textSize: 47
0x7fffeafd6109:	xor		eax, eax
0x7fffeafd610b:	cmp		dword ptr [rsp + 0xf8], 9
0x7fffeafd6113:	mov		byte ptr [rsp + 0x1b], al
0x7fffeafd6117:	jg		0x7fffeafd6138
0x7fffeafd611d:	mov		rax, qword ptr [rsp + 0x148]
0x7fffeafd6125:	movsxd		rcx, dword ptr [rsp + 0xf8]
0x7fffeafd612d:	cmp		dword ptr [rax + rcx*4], 0
0x7fffeafd6131:	setne		dl
0x7fffeafd6134:	mov		byte ptr [rsp + 0x1b], dl
disassembling symbol '.LBB1_191':
textAddr: 0x7fffeafd6138, textSize: 17
0x7fffeafd6138:	mov		al, byte ptr [rsp + 0x1b]
0x7fffeafd613c:	test		al, 1
0x7fffeafd613e:	jne		0x7fffeafd6149
0x7fffeafd6144:	jmp		0x7fffeafd6199
disassembling symbol '.LBB1_192':
textAddr: 0x7fffeafd6149, textSize: 80
0x7fffeafd6149:	mov		rax, qword ptr [rsp + 0x150]
0x7fffeafd6151:	movsxd		rcx, dword ptr [rsp + 0xf8]
0x7fffeafd6159:	shl		rcx, 4
0x7fffeafd615d:	add		rax, rcx
0x7fffeafd6160:	mov		rcx, qword ptr [rsp + 0x148]
0x7fffeafd6168:	movsxd		rdx, dword ptr [rsp + 0xf8]
0x7fffeafd6170:	mov		esi, dword ptr [rcx + rdx*4]
0x7fffeafd6173:	mov		rdx, qword ptr [rsp + 0x158]
0x7fffeafd617b:	mov		rdi, rax
0x7fffeafd617e:	call		0x7fffeafd62e0
0x7fffeafd6183:	mov		eax, dword ptr [rsp + 0xf8]
0x7fffeafd618a:	add		eax, 1
0x7fffeafd618d:	mov		dword ptr [rsp + 0xf8], eax
0x7fffeafd6194:	jmp		0x7fffeafd6109
disassembling symbol '.LBB1_194':
textAddr: 0x7fffeafd6199, textSize: 5
0x7fffeafd6199:	jmp		0x7fffeafd619e
disassembling symbol '.LBB1_195':
textAddr: 0x7fffeafd619e, textSize: 50
0x7fffeafd619e:	xor		eax, eax
0x7fffeafd61a0:	cmp		dword ptr [rsp + 0xf8], 9
0x7fffeafd61a8:	mov		byte ptr [rsp + 0x1a], al
0x7fffeafd61ac:	jg		0x7fffeafd61d0
0x7fffeafd61b2:	mov		rax, qword ptr [rsp + 0x148]
0x7fffeafd61ba:	movsxd		rcx, dword ptr [rsp + 0xf8]
0x7fffeafd61c2:	cmp		dword ptr [rax + rcx*4], 0
0x7fffeafd61c6:	setne		dl
0x7fffeafd61c9:	xor		dl, 0xff
0x7fffeafd61cc:	mov		byte ptr [rsp + 0x1a], dl
disassembling symbol '.LBB1_197':
textAddr: 0x7fffeafd61d0, textSize: 17
0x7fffeafd61d0:	mov		al, byte ptr [rsp + 0x1a]
0x7fffeafd61d4:	test		al, 1
0x7fffeafd61d6:	jne		0x7fffeafd61e1
0x7fffeafd61dc:	jmp		0x7fffeafd61fc
disassembling symbol '.LBB1_198':
textAddr: 0x7fffeafd61e1, textSize: 5
0x7fffeafd61e1:	jmp		0x7fffeafd61e6
disassembling symbol '.LBB1_199':
textAddr: 0x7fffeafd61e6, textSize: 22
0x7fffeafd61e6:	mov		eax, dword ptr [rsp + 0xf8]
0x7fffeafd61ed:	add		eax, 1
0x7fffeafd61f0:	mov		dword ptr [rsp + 0xf8], eax
0x7fffeafd61f7:	jmp		0x7fffeafd619e
disassembling symbol '.LBB1_200':
textAddr: 0x7fffeafd61fc, textSize: 30
0x7fffeafd61fc:	cmp		dword ptr [rsp + 0xf8], 9
0x7fffeafd6204:	jg		0x7fffeafd621a
0x7fffeafd620a:	mov		dword ptr [rsp + 0x174], 0xffffffff
0x7fffeafd6215:	jmp		0x7fffeafd6225
disassembling symbol '.LBB1_202':
textAddr: 0x7fffeafd621a, textSize: 11
0x7fffeafd621a:	mov		dword ptr [rsp + 0x174], 1
disassembling symbol '.LBB1_203':
textAddr: 0x7fffeafd6225, textSize: 27
0x7fffeafd6225:	mov		eax, dword ptr [rsp + 0x174]
0x7fffeafd622c:	add		rsp, 0x178
0x7fffeafd6233:	ret		
0x7fffeafd6234:	nop		word ptr cs:[rax + rax]
0x7fffeafd623e:	nop		
disassembling symbol 'out':
textAddr: 0x7fffeafd6240, textSize: 64
0x7fffeafd6240:	sub		rsp, 0x18
0x7fffeafd6244:	mov		qword ptr [rsp + 0x10], rdi
0x7fffeafd6249:	mov		qword ptr [rsp + 8], rsi
0x7fffeafd624e:	mov		qword ptr [rsp], rdx
0x7fffeafd6252:	mov		rax, qword ptr [rsp + 0x10]
0x7fffeafd6257:	mov		ecx, dword ptr [rax]
0x7fffeafd6259:	and		ecx, 0x20
0x7fffeafd625c:	cmp		ecx, 0
0x7fffeafd625f:	jne		0x7fffeafd6278
0x7fffeafd6265:	mov		rdi, qword ptr [rsp + 8]
0x7fffeafd626a:	mov		rsi, qword ptr [rsp]
0x7fffeafd626e:	mov		rdx, qword ptr [rsp + 0x10]
0x7fffeafd6273:	call		0x7fffeafc8450
0x7fffeafd6278:	add		rsp, 0x18
0x7fffeafd627c:	ret		
0x7fffeafd627d:	nop		dword ptr [rax]
disassembling symbol '.LBB2_2':
textAddr: 0x7fffeafd6278, textSize: 8
0x7fffeafd6278:	add		rsp, 0x18
0x7fffeafd627c:	ret		
0x7fffeafd627d:	nop		dword ptr [rax]
disassembling symbol 'getint':
textAddr: 0x7fffeafd6280, textSize: 96
0x7fffeafd6280:	mov		qword ptr [rsp - 8], rdi
0x7fffeafd6285:	mov		dword ptr [rsp - 0xc], 0
0x7fffeafd628d:	mov		rax, qword ptr [rsp - 8]
0x7fffeafd6292:	mov		rax, qword ptr [rax]
0x7fffeafd6295:	movsx		ecx, byte ptr [rax]
0x7fffeafd6298:	sub		ecx, 0x30
0x7fffeafd629b:	cmp		ecx, 0xa
0x7fffeafd629e:	jae		0x7fffeafd62d4
0x7fffeafd62a4:	imul		eax, dword ptr [rsp - 0xc], 0xa
0x7fffeafd62a9:	mov		rcx, qword ptr [rsp - 8]
0x7fffeafd62ae:	mov		rcx, qword ptr [rcx]
0x7fffeafd62b1:	movsx		edx, byte ptr [rcx]
0x7fffeafd62b4:	sub		edx, 0x30
0x7fffeafd62b7:	add		eax, edx
0x7fffeafd62b9:	mov		dword ptr [rsp - 0xc], eax
0x7fffeafd62bd:	mov		rax, qword ptr [rsp - 8]
0x7fffeafd62c2:	mov		rcx, qword ptr [rax]
0x7fffeafd62c5:	add		rcx, 1
0x7fffeafd62cc:	mov		qword ptr [rax], rcx
0x7fffeafd62cf:	jmp		0x7fffeafd628d
0x7fffeafd62d4:	mov		eax, dword ptr [rsp - 0xc]
0x7fffeafd62d8:	ret		
0x7fffeafd62d9:	nop		dword ptr [rax]
disassembling symbol '.LBB3_1':
textAddr: 0x7fffeafd628d, textSize: 71
0x7fffeafd628d:	mov		rax, qword ptr [rsp - 8]
0x7fffeafd6292:	mov		rax, qword ptr [rax]
0x7fffeafd6295:	movsx		ecx, byte ptr [rax]
0x7fffeafd6298:	sub		ecx, 0x30
0x7fffeafd629b:	cmp		ecx, 0xa
0x7fffeafd629e:	jae		0x7fffeafd62d4
0x7fffeafd62a4:	imul		eax, dword ptr [rsp - 0xc], 0xa
0x7fffeafd62a9:	mov		rcx, qword ptr [rsp - 8]
0x7fffeafd62ae:	mov		rcx, qword ptr [rcx]
0x7fffeafd62b1:	movsx		edx, byte ptr [rcx]
0x7fffeafd62b4:	sub		edx, 0x30
0x7fffeafd62b7:	add		eax, edx
0x7fffeafd62b9:	mov		dword ptr [rsp - 0xc], eax
0x7fffeafd62bd:	mov		rax, qword ptr [rsp - 8]
0x7fffeafd62c2:	mov		rcx, qword ptr [rax]
0x7fffeafd62c5:	add		rcx, 1
0x7fffeafd62cc:	mov		qword ptr [rax], rcx
0x7fffeafd62cf:	jmp		0x7fffeafd628d
disassembling symbol '.LBB3_4':
textAddr: 0x7fffeafd62d4, textSize: 12
0x7fffeafd62d4:	mov		eax, dword ptr [rsp - 0xc]
0x7fffeafd62d8:	ret		
0x7fffeafd62d9:	nop		dword ptr [rax]
disassembling symbol 'pop_arg':
textAddr: 0x7fffeafd62e0, textSize: 1424
0x7fffeafd62e0:	sub		rsp, 0xb0
0x7fffeafd62e7:	mov		qword ptr [rsp + 0xa8], rdi
0x7fffeafd62ef:	mov		dword ptr [rsp + 0xa4], esi
0x7fffeafd62f6:	mov		qword ptr [rsp + 0x98], rdx
0x7fffeafd62fe:	cmp		dword ptr [rsp + 0xa4], 0x16
0x7fffeafd6306:	jbe		0x7fffeafd6311
0x7fffeafd630c:	jmp		0x7fffeafd6867
0x7fffeafd6311:	mov		eax, dword ptr [rsp + 0xa4]
0x7fffeafd6318:	add		eax, -9
0x7fffeafd631b:	mov		ecx, eax
0x7fffeafd631d:	sub		eax, 0xb
0x7fffeafd6320:	mov		qword ptr [rsp + 0x90], rcx
0x7fffeafd6328:	ja		0x7fffeafd6867
0x7fffeafd632e:	lea		rax, [rip + 0x2c1592b]
0x7fffeafd6335:	mov		rcx, qword ptr [rsp + 0x90]
0x7fffeafd633d:	movsxd		rdx, dword ptr [rax + rcx*4]
0x7fffeafd6341:	add		rdx, rax
0x7fffeafd6344:	jmp		rdx
0x7fffeafd6346:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd634e:	mov		ecx, dword ptr [rax]
0x7fffeafd6350:	cmp		ecx, 0x28
0x7fffeafd6353:	mov		qword ptr [rsp + 0x88], rax
0x7fffeafd635b:	mov		dword ptr [rsp + 0x84], ecx
0x7fffeafd6362:	ja		0x7fffeafd638d
0x7fffeafd6368:	mov		eax, dword ptr [rsp + 0x84]
0x7fffeafd636f:	movsxd		rcx, eax
0x7fffeafd6372:	mov		rdx, qword ptr [rsp + 0x88]
0x7fffeafd637a:	add		rcx, qword ptr [rdx + 0x10]
0x7fffeafd637e:	add		eax, 8
0x7fffeafd6381:	mov		dword ptr [rdx], eax
0x7fffeafd6383:	mov		qword ptr [rsp + 0x78], rcx
0x7fffeafd6388:	jmp		0x7fffeafd63ac
0x7fffeafd638d:	mov		rax, qword ptr [rsp + 0x88]
0x7fffeafd6395:	mov		rcx, qword ptr [rax + 8]
0x7fffeafd6399:	mov		rdx, rcx
0x7fffeafd639c:	add		rcx, 8
0x7fffeafd63a3:	mov		qword ptr [rax + 8], rcx
0x7fffeafd63a7:	mov		qword ptr [rsp + 0x78], rdx
0x7fffeafd63ac:	mov		rax, qword ptr [rsp + 0x78]
0x7fffeafd63b1:	mov		rax, qword ptr [rax]
0x7fffeafd63b4:	mov		rcx, qword ptr [rsp + 0xa8]
0x7fffeafd63bc:	mov		qword ptr [rcx], rax
0x7fffeafd63bf:	jmp		0x7fffeafd6867
0x7fffeafd63c4:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd63cc:	mov		ecx, dword ptr [rax]
0x7fffeafd63ce:	cmp		ecx, 0x28
0x7fffeafd63d1:	mov		qword ptr [rsp + 0x70], rax
0x7fffeafd63d6:	mov		dword ptr [rsp + 0x6c], ecx
0x7fffeafd63da:	ja		0x7fffeafd63ff
0x7fffeafd63e0:	mov		eax, dword ptr [rsp + 0x6c]
0x7fffeafd63e4:	movsxd		rcx, eax
0x7fffeafd63e7:	mov		rdx, qword ptr [rsp + 0x70]
0x7fffeafd63ec:	add		rcx, qword ptr [rdx + 0x10]
0x7fffeafd63f0:	add		eax, 8
0x7fffeafd63f3:	mov		dword ptr [rdx], eax
0x7fffeafd63f5:	mov		qword ptr [rsp + 0x60], rcx
0x7fffeafd63fa:	jmp		0x7fffeafd641b
0x7fffeafd63ff:	mov		rax, qword ptr [rsp + 0x70]
0x7fffeafd6404:	mov		rcx, qword ptr [rax + 8]
0x7fffeafd6408:	mov		rdx, rcx
0x7fffeafd640b:	add		rcx, 8
0x7fffeafd6412:	mov		qword ptr [rax + 8], rcx
0x7fffeafd6416:	mov		qword ptr [rsp + 0x60], rdx
0x7fffeafd641b:	mov		rax, qword ptr [rsp + 0x60]
0x7fffeafd6420:	movsxd		rax, dword ptr [rax]
0x7fffeafd6423:	mov		rcx, qword ptr [rsp + 0xa8]
0x7fffeafd642b:	mov		qword ptr [rcx], rax
0x7fffeafd642e:	jmp		0x7fffeafd6867
0x7fffeafd6433:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd643b:	mov		ecx, dword ptr [rax]
0x7fffeafd643d:	cmp		ecx, 0x28
0x7fffeafd6440:	mov		qword ptr [rsp + 0x58], rax
0x7fffeafd6445:	mov		dword ptr [rsp + 0x54], ecx
0x7fffeafd6449:	ja		0x7fffeafd646e
0x7fffeafd644f:	mov		eax, dword ptr [rsp + 0x54]
0x7fffeafd6453:	movsxd		rcx, eax
0x7fffeafd6456:	mov		rdx, qword ptr [rsp + 0x58]
0x7fffeafd645b:	add		rcx, qword ptr [rdx + 0x10]
0x7fffeafd645f:	add		eax, 8
0x7fffeafd6462:	mov		dword ptr [rdx], eax
0x7fffeafd6464:	mov		qword ptr [rsp + 0x48], rcx
0x7fffeafd6469:	jmp		0x7fffeafd648a
0x7fffeafd646e:	mov		rax, qword ptr [rsp + 0x58]
0x7fffeafd6473:	mov		rcx, qword ptr [rax + 8]
0x7fffeafd6477:	mov		rdx, rcx
0x7fffeafd647a:	add		rcx, 8
0x7fffeafd6481:	mov		qword ptr [rax + 8], rcx
0x7fffeafd6485:	mov		qword ptr [rsp + 0x48], rdx
0x7fffeafd648a:	mov		rax, qword ptr [rsp + 0x48]
0x7fffeafd648f:	mov		ecx, dword ptr [rax]
0x7fffeafd6491:	mov		eax, ecx
0x7fffeafd6493:	mov		rdx, qword ptr [rsp + 0xa8]
0x7fffeafd649b:	mov		qword ptr [rdx], rax
0x7fffeafd649e:	jmp		0x7fffeafd6867
0x7fffeafd64a3:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd64ab:	mov		ecx, dword ptr [rax]
0x7fffeafd64ad:	cmp		ecx, 0x28
0x7fffeafd64b0:	mov		qword ptr [rsp + 0x40], rax
0x7fffeafd64b5:	mov		dword ptr [rsp + 0x3c], ecx
0x7fffeafd64b9:	ja		0x7fffeafd64de
0x7fffeafd64bf:	mov		eax, dword ptr [rsp + 0x3c]
0x7fffeafd64c3:	movsxd		rcx, eax
0x7fffeafd64c6:	mov		rdx, qword ptr [rsp + 0x40]
0x7fffeafd64cb:	add		rcx, qword ptr [rdx + 0x10]
0x7fffeafd64cf:	add		eax, 8
0x7fffeafd64d2:	mov		dword ptr [rdx], eax
0x7fffeafd64d4:	mov		qword ptr [rsp + 0x30], rcx
0x7fffeafd64d9:	jmp		0x7fffeafd64fa
0x7fffeafd64de:	mov		rax, qword ptr [rsp + 0x40]
0x7fffeafd64e3:	mov		rcx, qword ptr [rax + 8]
0x7fffeafd64e7:	mov		rdx, rcx
0x7fffeafd64ea:	add		rcx, 8
0x7fffeafd64f1:	mov		qword ptr [rax + 8], rcx
0x7fffeafd64f5:	mov		qword ptr [rsp + 0x30], rdx
0x7fffeafd64fa:	mov		rax, qword ptr [rsp + 0x30]
0x7fffeafd64ff:	mov		rax, qword ptr [rax]
0x7fffeafd6502:	mov		rcx, qword ptr [rsp + 0xa8]
0x7fffeafd650a:	mov		qword ptr [rcx], rax
0x7fffeafd650d:	jmp		0x7fffeafd6867
0x7fffeafd6512:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd651a:	mov		ecx, dword ptr [rax]
0x7fffeafd651c:	cmp		ecx, 0x28
0x7fffeafd651f:	mov		qword ptr [rsp + 0x28], rax
0x7fffeafd6524:	mov		dword ptr [rsp + 0x24], ecx
0x7fffeafd6528:	ja		0x7fffeafd654d
0x7fffeafd652e:	mov		eax, dword ptr [rsp + 0x24]
0x7fffeafd6532:	movsxd		rcx, eax
0x7fffeafd6535:	mov		rdx, qword ptr [rsp + 0x28]
0x7fffeafd653a:	add		rcx, qword ptr [rdx + 0x10]
0x7fffeafd653e:	add		eax, 8
0x7fffeafd6541:	mov		dword ptr [rdx], eax
0x7fffeafd6543:	mov		qword ptr [rsp + 0x18], rcx
0x7fffeafd6548:	jmp		0x7fffeafd6569
0x7fffeafd654d:	mov		rax, qword ptr [rsp + 0x28]
0x7fffeafd6552:	mov		rcx, qword ptr [rax + 8]
0x7fffeafd6556:	mov		rdx, rcx
0x7fffeafd6559:	add		rcx, 8
0x7fffeafd6560:	mov		qword ptr [rax + 8], rcx
0x7fffeafd6564:	mov		qword ptr [rsp + 0x18], rdx
0x7fffeafd6569:	mov		rax, qword ptr [rsp + 0x18]
0x7fffeafd656e:	mov		rax, qword ptr [rax]
0x7fffeafd6571:	mov		rcx, qword ptr [rsp + 0xa8]
0x7fffeafd6579:	mov		qword ptr [rcx], rax
0x7fffeafd657c:	jmp		0x7fffeafd6867
0x7fffeafd6581:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd6589:	mov		ecx, dword ptr [rax]
0x7fffeafd658b:	cmp		ecx, 0x28
0x7fffeafd658e:	mov		qword ptr [rsp + 0x10], rax
0x7fffeafd6593:	mov		dword ptr [rsp + 0xc], ecx
0x7fffeafd6597:	ja		0x7fffeafd65bb
0x7fffeafd659d:	mov		eax, dword ptr [rsp + 0xc]
0x7fffeafd65a1:	movsxd		rcx, eax
0x7fffeafd65a4:	mov		rdx, qword ptr [rsp + 0x10]
0x7fffeafd65a9:	add		rcx, qword ptr [rdx + 0x10]
0x7fffeafd65ad:	add		eax, 8
0x7fffeafd65b0:	mov		dword ptr [rdx], eax
0x7fffeafd65b2:	mov		qword ptr [rsp], rcx
0x7fffeafd65b6:	jmp		0x7fffeafd65d6
0x7fffeafd65bb:	mov		rax, qword ptr [rsp + 0x10]
0x7fffeafd65c0:	mov		rcx, qword ptr [rax + 8]
0x7fffeafd65c4:	mov		rdx, rcx
0x7fffeafd65c7:	add		rcx, 8
0x7fffeafd65ce:	mov		qword ptr [rax + 8], rcx
0x7fffeafd65d2:	mov		qword ptr [rsp], rdx
0x7fffeafd65d6:	mov		rax, qword ptr [rsp]
0x7fffeafd65da:	mov		rax, qword ptr [rax]
0x7fffeafd65dd:	mov		rcx, qword ptr [rsp + 0xa8]
0x7fffeafd65e5:	mov		qword ptr [rcx], rax
0x7fffeafd65e8:	jmp		0x7fffeafd6867
0x7fffeafd65ed:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd65f5:	mov		ecx, dword ptr [rax]
0x7fffeafd65f7:	cmp		ecx, 0x28
0x7fffeafd65fa:	mov		qword ptr [rsp - 8], rax
0x7fffeafd65ff:	mov		dword ptr [rsp - 0xc], ecx
0x7fffeafd6603:	ja		0x7fffeafd6628
0x7fffeafd6609:	mov		eax, dword ptr [rsp - 0xc]
0x7fffeafd660d:	movsxd		rcx, eax
0x7fffeafd6610:	mov		rdx, qword ptr [rsp - 8]
0x7fffeafd6615:	add		rcx, qword ptr [rdx + 0x10]
0x7fffeafd6619:	add		eax, 8
0x7fffeafd661c:	mov		dword ptr [rdx], eax
0x7fffeafd661e:	mov		qword ptr [rsp - 0x18], rcx
0x7fffeafd6623:	jmp		0x7fffeafd6644
0x7fffeafd6628:	mov		rax, qword ptr [rsp - 8]
0x7fffeafd662d:	mov		rcx, qword ptr [rax + 8]
0x7fffeafd6631:	mov		rdx, rcx
0x7fffeafd6634:	add		rcx, 8
0x7fffeafd663b:	mov		qword ptr [rax + 8], rcx
0x7fffeafd663f:	mov		qword ptr [rsp - 0x18], rdx
0x7fffeafd6644:	mov		rax, qword ptr [rsp - 0x18]
0x7fffeafd6649:	mov		ecx, dword ptr [rax]
0x7fffeafd664b:	movsx		rax, cx
0x7fffeafd664f:	mov		rdx, qword ptr [rsp + 0xa8]
0x7fffeafd6657:	mov		qword ptr [rdx], rax
0x7fffeafd665a:	jmp		0x7fffeafd6867
0x7fffeafd665f:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd6667:	mov		ecx, dword ptr [rax]
0x7fffeafd6669:	cmp		ecx, 0x28
0x7fffeafd666c:	mov		qword ptr [rsp - 0x20], rax
0x7fffeafd6671:	mov		dword ptr [rsp - 0x24], ecx
0x7fffeafd6675:	ja		0x7fffeafd669a
0x7fffeafd667b:	mov		eax, dword ptr [rsp - 0x24]
0x7fffeafd667f:	movsxd		rcx, eax
0x7fffeafd6682:	mov		rdx, qword ptr [rsp - 0x20]
0x7fffeafd6687:	add		rcx, qword ptr [rdx + 0x10]
0x7fffeafd668b:	add		eax, 8
0x7fffeafd668e:	mov		dword ptr [rdx], eax
0x7fffeafd6690:	mov		qword ptr [rsp - 0x30], rcx
0x7fffeafd6695:	jmp		0x7fffeafd66b6
0x7fffeafd669a:	mov		rax, qword ptr [rsp - 0x20]
0x7fffeafd669f:	mov		rcx, qword ptr [rax + 8]
0x7fffeafd66a3:	mov		rdx, rcx
0x7fffeafd66a6:	add		rcx, 8
0x7fffeafd66ad:	mov		qword ptr [rax + 8], rcx
0x7fffeafd66b1:	mov		qword ptr [rsp - 0x30], rdx
0x7fffeafd66b6:	mov		rax, qword ptr [rsp - 0x30]
0x7fffeafd66bb:	mov		ecx, dword ptr [rax]
0x7fffeafd66bd:	movzx		edx, cx
0x7fffeafd66c0:	mov		eax, edx
0x7fffeafd66c2:	mov		rsi, qword ptr [rsp + 0xa8]
0x7fffeafd66ca:	mov		qword ptr [rsi], rax
0x7fffeafd66cd:	jmp		0x7fffeafd6867
0x7fffeafd66d2:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd66da:	mov		ecx, dword ptr [rax]
0x7fffeafd66dc:	cmp		ecx, 0x28
0x7fffeafd66df:	mov		qword ptr [rsp - 0x38], rax
0x7fffeafd66e4:	mov		dword ptr [rsp - 0x3c], ecx
0x7fffeafd66e8:	ja		0x7fffeafd670d
0x7fffeafd66ee:	mov		eax, dword ptr [rsp - 0x3c]
0x7fffeafd66f2:	movsxd		rcx, eax
0x7fffeafd66f5:	mov		rdx, qword ptr [rsp - 0x38]
0x7fffeafd66fa:	add		rcx, qword ptr [rdx + 0x10]
0x7fffeafd66fe:	add		eax, 8
0x7fffeafd6701:	mov		dword ptr [rdx], eax
0x7fffeafd6703:	mov		qword ptr [rsp - 0x48], rcx
0x7fffeafd6708:	jmp		0x7fffeafd6729
0x7fffeafd670d:	mov		rax, qword ptr [rsp - 0x38]
0x7fffeafd6712:	mov		rcx, qword ptr [rax + 8]
0x7fffeafd6716:	mov		rdx, rcx
0x7fffeafd6719:	add		rcx, 8
0x7fffeafd6720:	mov		qword ptr [rax + 8], rcx
0x7fffeafd6724:	mov		qword ptr [rsp - 0x48], rdx
0x7fffeafd6729:	mov		rax, qword ptr [rsp - 0x48]
0x7fffeafd672e:	mov		ecx, dword ptr [rax]
0x7fffeafd6730:	movsx		rax, cl
0x7fffeafd6734:	mov		rdx, qword ptr [rsp + 0xa8]
0x7fffeafd673c:	mov		qword ptr [rdx], rax
0x7fffeafd673f:	jmp		0x7fffeafd6867
0x7fffeafd6744:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd674c:	mov		ecx, dword ptr [rax]
0x7fffeafd674e:	cmp		ecx, 0x28
0x7fffeafd6751:	mov		qword ptr [rsp - 0x50], rax
0x7fffeafd6756:	mov		dword ptr [rsp - 0x54], ecx
0x7fffeafd675a:	ja		0x7fffeafd677f
0x7fffeafd6760:	mov		eax, dword ptr [rsp - 0x54]
0x7fffeafd6764:	movsxd		rcx, eax
0x7fffeafd6767:	mov		rdx, qword ptr [rsp - 0x50]
0x7fffeafd676c:	add		rcx, qword ptr [rdx + 0x10]
0x7fffeafd6770:	add		eax, 8
0x7fffeafd6773:	mov		dword ptr [rdx], eax
0x7fffeafd6775:	mov		qword ptr [rsp - 0x60], rcx
0x7fffeafd677a:	jmp		0x7fffeafd679b
0x7fffeafd677f:	mov		rax, qword ptr [rsp - 0x50]
0x7fffeafd6784:	mov		rcx, qword ptr [rax + 8]
0x7fffeafd6788:	mov		rdx, rcx
0x7fffeafd678b:	add		rcx, 8
0x7fffeafd6792:	mov		qword ptr [rax + 8], rcx
0x7fffeafd6796:	mov		qword ptr [rsp - 0x60], rdx
0x7fffeafd679b:	mov		rax, qword ptr [rsp - 0x60]
0x7fffeafd67a0:	mov		ecx, dword ptr [rax]
0x7fffeafd67a2:	movzx		edx, cl
0x7fffeafd67a5:	mov		eax, edx
0x7fffeafd67a7:	mov		rsi, qword ptr [rsp + 0xa8]
0x7fffeafd67af:	mov		qword ptr [rsi], rax
0x7fffeafd67b2:	jmp		0x7fffeafd6867
0x7fffeafd67b7:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd67bf:	mov		rcx, rax
0x7fffeafd67c2:	add		rcx, 4
0x7fffeafd67c9:	mov		edx, dword ptr [rax + 4]
0x7fffeafd67cc:	cmp		edx, 0xa0
0x7fffeafd67d2:	mov		qword ptr [rsp - 0x68], rax
0x7fffeafd67d7:	mov		qword ptr [rsp - 0x70], rcx
0x7fffeafd67dc:	mov		dword ptr [rsp - 0x74], edx
0x7fffeafd67e0:	ja		0x7fffeafd680a
0x7fffeafd67e6:	mov		eax, dword ptr [rsp - 0x74]
0x7fffeafd67ea:	movsxd		rcx, eax
0x7fffeafd67ed:	mov		rdx, qword ptr [rsp - 0x68]
0x7fffeafd67f2:	add		rcx, qword ptr [rdx + 0x10]
0x7fffeafd67f6:	add		eax, 0x10
0x7fffeafd67f9:	mov		rsi, qword ptr [rsp - 0x70]
0x7fffeafd67fe:	mov		dword ptr [rsi], eax
0x7fffeafd6800:	mov		qword ptr [rsp - 0x80], rcx
0x7fffeafd6805:	jmp		0x7fffeafd6826
0x7fffeafd680a:	mov		rax, qword ptr [rsp - 0x68]
0x7fffeafd680f:	mov		rcx, qword ptr [rax + 8]
0x7fffeafd6813:	mov		rdx, rcx
0x7fffeafd6816:	add		rcx, 8
0x7fffeafd681d:	mov		qword ptr [rax + 8], rcx
0x7fffeafd6821:	mov		qword ptr [rsp - 0x80], rdx
0x7fffeafd6826:	mov		rax, qword ptr [rsp - 0x80]
0x7fffeafd682b:	fld		qword ptr [rax]
0x7fffeafd682d:	mov		rax, qword ptr [rsp + 0xa8]
0x7fffeafd6835:	fstp		xword ptr [rax]
0x7fffeafd6837:	jmp		0x7fffeafd6867
0x7fffeafd683c:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd6844:	mov		rcx, qword ptr [rax + 8]
0x7fffeafd6848:	add		rcx, 0xf
0x7fffeafd684c:	and		rcx, 0xfffffffffffffff0
0x7fffeafd6850:	mov		rdx, rcx
0x7fffeafd6853:	add		rdx, 0x10
0x7fffeafd6857:	mov		qword ptr [rax + 8], rdx
0x7fffeafd685b:	fld		xword ptr [rcx]
0x7fffeafd685d:	mov		rax, qword ptr [rsp + 0xa8]
0x7fffeafd6865:	fstp		xword ptr [rax]
0x7fffeafd6867:	add		rsp, 0xb0
0x7fffeafd686e:	ret		
0x7fffeafd686f:	nop		
disassembling symbol '.LBB4_2':
textAddr: 0x7fffeafd6311, textSize: 53
0x7fffeafd6311:	mov		eax, dword ptr [rsp + 0xa4]
0x7fffeafd6318:	add		eax, -9
0x7fffeafd631b:	mov		ecx, eax
0x7fffeafd631d:	sub		eax, 0xb
0x7fffeafd6320:	mov		qword ptr [rsp + 0x90], rcx
0x7fffeafd6328:	ja		0x7fffeafd6867
0x7fffeafd632e:	lea		rax, [rip + 0x2c1592b]
0x7fffeafd6335:	mov		rcx, qword ptr [rsp + 0x90]
0x7fffeafd633d:	movsxd		rdx, dword ptr [rax + rcx*4]
0x7fffeafd6341:	add		rdx, rax
0x7fffeafd6344:	jmp		rdx
disassembling symbol '.LBB4_3':
textAddr: 0x7fffeafd6346, textSize: 71
0x7fffeafd6346:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd634e:	mov		ecx, dword ptr [rax]
0x7fffeafd6350:	cmp		ecx, 0x28
0x7fffeafd6353:	mov		qword ptr [rsp + 0x88], rax
0x7fffeafd635b:	mov		dword ptr [rsp + 0x84], ecx
0x7fffeafd6362:	ja		0x7fffeafd638d
0x7fffeafd6368:	mov		eax, dword ptr [rsp + 0x84]
0x7fffeafd636f:	movsxd		rcx, eax
0x7fffeafd6372:	mov		rdx, qword ptr [rsp + 0x88]
0x7fffeafd637a:	add		rcx, qword ptr [rdx + 0x10]
0x7fffeafd637e:	add		eax, 8
0x7fffeafd6381:	mov		dword ptr [rdx], eax
0x7fffeafd6383:	mov		qword ptr [rsp + 0x78], rcx
0x7fffeafd6388:	jmp		0x7fffeafd63ac
disassembling symbol '.LBB4_5':
textAddr: 0x7fffeafd638d, textSize: 31
0x7fffeafd638d:	mov		rax, qword ptr [rsp + 0x88]
0x7fffeafd6395:	mov		rcx, qword ptr [rax + 8]
0x7fffeafd6399:	mov		rdx, rcx
0x7fffeafd639c:	add		rcx, 8
0x7fffeafd63a3:	mov		qword ptr [rax + 8], rcx
0x7fffeafd63a7:	mov		qword ptr [rsp + 0x78], rdx
disassembling symbol '.LBB4_6':
textAddr: 0x7fffeafd63ac, textSize: 24
0x7fffeafd63ac:	mov		rax, qword ptr [rsp + 0x78]
0x7fffeafd63b1:	mov		rax, qword ptr [rax]
0x7fffeafd63b4:	mov		rcx, qword ptr [rsp + 0xa8]
0x7fffeafd63bc:	mov		qword ptr [rcx], rax
0x7fffeafd63bf:	jmp		0x7fffeafd6867
disassembling symbol '.LBB4_7':
textAddr: 0x7fffeafd63c4, textSize: 59
0x7fffeafd63c4:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd63cc:	mov		ecx, dword ptr [rax]
0x7fffeafd63ce:	cmp		ecx, 0x28
0x7fffeafd63d1:	mov		qword ptr [rsp + 0x70], rax
0x7fffeafd63d6:	mov		dword ptr [rsp + 0x6c], ecx
0x7fffeafd63da:	ja		0x7fffeafd63ff
0x7fffeafd63e0:	mov		eax, dword ptr [rsp + 0x6c]
0x7fffeafd63e4:	movsxd		rcx, eax
0x7fffeafd63e7:	mov		rdx, qword ptr [rsp + 0x70]
0x7fffeafd63ec:	add		rcx, qword ptr [rdx + 0x10]
0x7fffeafd63f0:	add		eax, 8
0x7fffeafd63f3:	mov		dword ptr [rdx], eax
0x7fffeafd63f5:	mov		qword ptr [rsp + 0x60], rcx
0x7fffeafd63fa:	jmp		0x7fffeafd641b
disassembling symbol '.LBB4_9':
textAddr: 0x7fffeafd63ff, textSize: 28
0x7fffeafd63ff:	mov		rax, qword ptr [rsp + 0x70]
0x7fffeafd6404:	mov		rcx, qword ptr [rax + 8]
0x7fffeafd6408:	mov		rdx, rcx
0x7fffeafd640b:	add		rcx, 8
0x7fffeafd6412:	mov		qword ptr [rax + 8], rcx
0x7fffeafd6416:	mov		qword ptr [rsp + 0x60], rdx
disassembling symbol '.LBB4_10':
textAddr: 0x7fffeafd641b, textSize: 24
0x7fffeafd641b:	mov		rax, qword ptr [rsp + 0x60]
0x7fffeafd6420:	movsxd		rax, dword ptr [rax]
0x7fffeafd6423:	mov		rcx, qword ptr [rsp + 0xa8]
0x7fffeafd642b:	mov		qword ptr [rcx], rax
0x7fffeafd642e:	jmp		0x7fffeafd6867
disassembling symbol '.LBB4_11':
textAddr: 0x7fffeafd6433, textSize: 59
0x7fffeafd6433:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd643b:	mov		ecx, dword ptr [rax]
0x7fffeafd643d:	cmp		ecx, 0x28
0x7fffeafd6440:	mov		qword ptr [rsp + 0x58], rax
0x7fffeafd6445:	mov		dword ptr [rsp + 0x54], ecx
0x7fffeafd6449:	ja		0x7fffeafd646e
0x7fffeafd644f:	mov		eax, dword ptr [rsp + 0x54]
0x7fffeafd6453:	movsxd		rcx, eax
0x7fffeafd6456:	mov		rdx, qword ptr [rsp + 0x58]
0x7fffeafd645b:	add		rcx, qword ptr [rdx + 0x10]
0x7fffeafd645f:	add		eax, 8
0x7fffeafd6462:	mov		dword ptr [rdx], eax
0x7fffeafd6464:	mov		qword ptr [rsp + 0x48], rcx
0x7fffeafd6469:	jmp		0x7fffeafd648a
disassembling symbol '.LBB4_13':
textAddr: 0x7fffeafd646e, textSize: 28
0x7fffeafd646e:	mov		rax, qword ptr [rsp + 0x58]
0x7fffeafd6473:	mov		rcx, qword ptr [rax + 8]
0x7fffeafd6477:	mov		rdx, rcx
0x7fffeafd647a:	add		rcx, 8
0x7fffeafd6481:	mov		qword ptr [rax + 8], rcx
0x7fffeafd6485:	mov		qword ptr [rsp + 0x48], rdx
disassembling symbol '.LBB4_14':
textAddr: 0x7fffeafd648a, textSize: 25
0x7fffeafd648a:	mov		rax, qword ptr [rsp + 0x48]
0x7fffeafd648f:	mov		ecx, dword ptr [rax]
0x7fffeafd6491:	mov		eax, ecx
0x7fffeafd6493:	mov		rdx, qword ptr [rsp + 0xa8]
0x7fffeafd649b:	mov		qword ptr [rdx], rax
0x7fffeafd649e:	jmp		0x7fffeafd6867
disassembling symbol '.LBB4_15':
textAddr: 0x7fffeafd64a3, textSize: 59
0x7fffeafd64a3:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd64ab:	mov		ecx, dword ptr [rax]
0x7fffeafd64ad:	cmp		ecx, 0x28
0x7fffeafd64b0:	mov		qword ptr [rsp + 0x40], rax
0x7fffeafd64b5:	mov		dword ptr [rsp + 0x3c], ecx
0x7fffeafd64b9:	ja		0x7fffeafd64de
0x7fffeafd64bf:	mov		eax, dword ptr [rsp + 0x3c]
0x7fffeafd64c3:	movsxd		rcx, eax
0x7fffeafd64c6:	mov		rdx, qword ptr [rsp + 0x40]
0x7fffeafd64cb:	add		rcx, qword ptr [rdx + 0x10]
0x7fffeafd64cf:	add		eax, 8
0x7fffeafd64d2:	mov		dword ptr [rdx], eax
0x7fffeafd64d4:	mov		qword ptr [rsp + 0x30], rcx
0x7fffeafd64d9:	jmp		0x7fffeafd64fa
disassembling symbol '.LBB4_17':
textAddr: 0x7fffeafd64de, textSize: 28
0x7fffeafd64de:	mov		rax, qword ptr [rsp + 0x40]
0x7fffeafd64e3:	mov		rcx, qword ptr [rax + 8]
0x7fffeafd64e7:	mov		rdx, rcx
0x7fffeafd64ea:	add		rcx, 8
0x7fffeafd64f1:	mov		qword ptr [rax + 8], rcx
0x7fffeafd64f5:	mov		qword ptr [rsp + 0x30], rdx
disassembling symbol '.LBB4_18':
textAddr: 0x7fffeafd64fa, textSize: 24
0x7fffeafd64fa:	mov		rax, qword ptr [rsp + 0x30]
0x7fffeafd64ff:	mov		rax, qword ptr [rax]
0x7fffeafd6502:	mov		rcx, qword ptr [rsp + 0xa8]
0x7fffeafd650a:	mov		qword ptr [rcx], rax
0x7fffeafd650d:	jmp		0x7fffeafd6867
disassembling symbol '.LBB4_19':
textAddr: 0x7fffeafd6512, textSize: 59
0x7fffeafd6512:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd651a:	mov		ecx, dword ptr [rax]
0x7fffeafd651c:	cmp		ecx, 0x28
0x7fffeafd651f:	mov		qword ptr [rsp + 0x28], rax
0x7fffeafd6524:	mov		dword ptr [rsp + 0x24], ecx
0x7fffeafd6528:	ja		0x7fffeafd654d
0x7fffeafd652e:	mov		eax, dword ptr [rsp + 0x24]
0x7fffeafd6532:	movsxd		rcx, eax
0x7fffeafd6535:	mov		rdx, qword ptr [rsp + 0x28]
0x7fffeafd653a:	add		rcx, qword ptr [rdx + 0x10]
0x7fffeafd653e:	add		eax, 8
0x7fffeafd6541:	mov		dword ptr [rdx], eax
0x7fffeafd6543:	mov		qword ptr [rsp + 0x18], rcx
0x7fffeafd6548:	jmp		0x7fffeafd6569
disassembling symbol '.LBB4_21':
textAddr: 0x7fffeafd654d, textSize: 28
0x7fffeafd654d:	mov		rax, qword ptr [rsp + 0x28]
0x7fffeafd6552:	mov		rcx, qword ptr [rax + 8]
0x7fffeafd6556:	mov		rdx, rcx
0x7fffeafd6559:	add		rcx, 8
0x7fffeafd6560:	mov		qword ptr [rax + 8], rcx
0x7fffeafd6564:	mov		qword ptr [rsp + 0x18], rdx
disassembling symbol '.LBB4_22':
textAddr: 0x7fffeafd6569, textSize: 24
0x7fffeafd6569:	mov		rax, qword ptr [rsp + 0x18]
0x7fffeafd656e:	mov		rax, qword ptr [rax]
0x7fffeafd6571:	mov		rcx, qword ptr [rsp + 0xa8]
0x7fffeafd6579:	mov		qword ptr [rcx], rax
0x7fffeafd657c:	jmp		0x7fffeafd6867
disassembling symbol '.LBB4_23':
textAddr: 0x7fffeafd6581, textSize: 58
0x7fffeafd6581:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd6589:	mov		ecx, dword ptr [rax]
0x7fffeafd658b:	cmp		ecx, 0x28
0x7fffeafd658e:	mov		qword ptr [rsp + 0x10], rax
0x7fffeafd6593:	mov		dword ptr [rsp + 0xc], ecx
0x7fffeafd6597:	ja		0x7fffeafd65bb
0x7fffeafd659d:	mov		eax, dword ptr [rsp + 0xc]
0x7fffeafd65a1:	movsxd		rcx, eax
0x7fffeafd65a4:	mov		rdx, qword ptr [rsp + 0x10]
0x7fffeafd65a9:	add		rcx, qword ptr [rdx + 0x10]
0x7fffeafd65ad:	add		eax, 8
0x7fffeafd65b0:	mov		dword ptr [rdx], eax
0x7fffeafd65b2:	mov		qword ptr [rsp], rcx
0x7fffeafd65b6:	jmp		0x7fffeafd65d6
disassembling symbol '.LBB4_25':
textAddr: 0x7fffeafd65bb, textSize: 27
0x7fffeafd65bb:	mov		rax, qword ptr [rsp + 0x10]
0x7fffeafd65c0:	mov		rcx, qword ptr [rax + 8]
0x7fffeafd65c4:	mov		rdx, rcx
0x7fffeafd65c7:	add		rcx, 8
0x7fffeafd65ce:	mov		qword ptr [rax + 8], rcx
0x7fffeafd65d2:	mov		qword ptr [rsp], rdx
disassembling symbol '.LBB4_26':
textAddr: 0x7fffeafd65d6, textSize: 23
0x7fffeafd65d6:	mov		rax, qword ptr [rsp]
0x7fffeafd65da:	mov		rax, qword ptr [rax]
0x7fffeafd65dd:	mov		rcx, qword ptr [rsp + 0xa8]
0x7fffeafd65e5:	mov		qword ptr [rcx], rax
0x7fffeafd65e8:	jmp		0x7fffeafd6867
disassembling symbol '.LBB4_27':
textAddr: 0x7fffeafd65ed, textSize: 59
0x7fffeafd65ed:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd65f5:	mov		ecx, dword ptr [rax]
0x7fffeafd65f7:	cmp		ecx, 0x28
0x7fffeafd65fa:	mov		qword ptr [rsp - 8], rax
0x7fffeafd65ff:	mov		dword ptr [rsp - 0xc], ecx
0x7fffeafd6603:	ja		0x7fffeafd6628
0x7fffeafd6609:	mov		eax, dword ptr [rsp - 0xc]
0x7fffeafd660d:	movsxd		rcx, eax
0x7fffeafd6610:	mov		rdx, qword ptr [rsp - 8]
0x7fffeafd6615:	add		rcx, qword ptr [rdx + 0x10]
0x7fffeafd6619:	add		eax, 8
0x7fffeafd661c:	mov		dword ptr [rdx], eax
0x7fffeafd661e:	mov		qword ptr [rsp - 0x18], rcx
0x7fffeafd6623:	jmp		0x7fffeafd6644
disassembling symbol '.LBB4_29':
textAddr: 0x7fffeafd6628, textSize: 28
0x7fffeafd6628:	mov		rax, qword ptr [rsp - 8]
0x7fffeafd662d:	mov		rcx, qword ptr [rax + 8]
0x7fffeafd6631:	mov		rdx, rcx
0x7fffeafd6634:	add		rcx, 8
0x7fffeafd663b:	mov		qword ptr [rax + 8], rcx
0x7fffeafd663f:	mov		qword ptr [rsp - 0x18], rdx
disassembling symbol '.LBB4_30':
textAddr: 0x7fffeafd6644, textSize: 27
0x7fffeafd6644:	mov		rax, qword ptr [rsp - 0x18]
0x7fffeafd6649:	mov		ecx, dword ptr [rax]
0x7fffeafd664b:	movsx		rax, cx
0x7fffeafd664f:	mov		rdx, qword ptr [rsp + 0xa8]
0x7fffeafd6657:	mov		qword ptr [rdx], rax
0x7fffeafd665a:	jmp		0x7fffeafd6867
disassembling symbol '.LBB4_31':
textAddr: 0x7fffeafd665f, textSize: 59
0x7fffeafd665f:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd6667:	mov		ecx, dword ptr [rax]
0x7fffeafd6669:	cmp		ecx, 0x28
0x7fffeafd666c:	mov		qword ptr [rsp - 0x20], rax
0x7fffeafd6671:	mov		dword ptr [rsp - 0x24], ecx
0x7fffeafd6675:	ja		0x7fffeafd669a
0x7fffeafd667b:	mov		eax, dword ptr [rsp - 0x24]
0x7fffeafd667f:	movsxd		rcx, eax
0x7fffeafd6682:	mov		rdx, qword ptr [rsp - 0x20]
0x7fffeafd6687:	add		rcx, qword ptr [rdx + 0x10]
0x7fffeafd668b:	add		eax, 8
0x7fffeafd668e:	mov		dword ptr [rdx], eax
0x7fffeafd6690:	mov		qword ptr [rsp - 0x30], rcx
0x7fffeafd6695:	jmp		0x7fffeafd66b6
disassembling symbol '.LBB4_33':
textAddr: 0x7fffeafd669a, textSize: 28
0x7fffeafd669a:	mov		rax, qword ptr [rsp - 0x20]
0x7fffeafd669f:	mov		rcx, qword ptr [rax + 8]
0x7fffeafd66a3:	mov		rdx, rcx
0x7fffeafd66a6:	add		rcx, 8
0x7fffeafd66ad:	mov		qword ptr [rax + 8], rcx
0x7fffeafd66b1:	mov		qword ptr [rsp - 0x30], rdx
disassembling symbol '.LBB4_34':
textAddr: 0x7fffeafd66b6, textSize: 28
0x7fffeafd66b6:	mov		rax, qword ptr [rsp - 0x30]
0x7fffeafd66bb:	mov		ecx, dword ptr [rax]
0x7fffeafd66bd:	movzx		edx, cx
0x7fffeafd66c0:	mov		eax, edx
0x7fffeafd66c2:	mov		rsi, qword ptr [rsp + 0xa8]
0x7fffeafd66ca:	mov		qword ptr [rsi], rax
0x7fffeafd66cd:	jmp		0x7fffeafd6867
disassembling symbol '.LBB4_35':
textAddr: 0x7fffeafd66d2, textSize: 59
0x7fffeafd66d2:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd66da:	mov		ecx, dword ptr [rax]
0x7fffeafd66dc:	cmp		ecx, 0x28
0x7fffeafd66df:	mov		qword ptr [rsp - 0x38], rax
0x7fffeafd66e4:	mov		dword ptr [rsp - 0x3c], ecx
0x7fffeafd66e8:	ja		0x7fffeafd670d
0x7fffeafd66ee:	mov		eax, dword ptr [rsp - 0x3c]
0x7fffeafd66f2:	movsxd		rcx, eax
0x7fffeafd66f5:	mov		rdx, qword ptr [rsp - 0x38]
0x7fffeafd66fa:	add		rcx, qword ptr [rdx + 0x10]
0x7fffeafd66fe:	add		eax, 8
0x7fffeafd6701:	mov		dword ptr [rdx], eax
0x7fffeafd6703:	mov		qword ptr [rsp - 0x48], rcx
0x7fffeafd6708:	jmp		0x7fffeafd6729
disassembling symbol '.LBB4_37':
textAddr: 0x7fffeafd670d, textSize: 28
0x7fffeafd670d:	mov		rax, qword ptr [rsp - 0x38]
0x7fffeafd6712:	mov		rcx, qword ptr [rax + 8]
0x7fffeafd6716:	mov		rdx, rcx
0x7fffeafd6719:	add		rcx, 8
0x7fffeafd6720:	mov		qword ptr [rax + 8], rcx
0x7fffeafd6724:	mov		qword ptr [rsp - 0x48], rdx
disassembling symbol '.LBB4_38':
textAddr: 0x7fffeafd6729, textSize: 27
0x7fffeafd6729:	mov		rax, qword ptr [rsp - 0x48]
0x7fffeafd672e:	mov		ecx, dword ptr [rax]
0x7fffeafd6730:	movsx		rax, cl
0x7fffeafd6734:	mov		rdx, qword ptr [rsp + 0xa8]
0x7fffeafd673c:	mov		qword ptr [rdx], rax
0x7fffeafd673f:	jmp		0x7fffeafd6867
disassembling symbol '.LBB4_39':
textAddr: 0x7fffeafd6744, textSize: 59
0x7fffeafd6744:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd674c:	mov		ecx, dword ptr [rax]
0x7fffeafd674e:	cmp		ecx, 0x28
0x7fffeafd6751:	mov		qword ptr [rsp - 0x50], rax
0x7fffeafd6756:	mov		dword ptr [rsp - 0x54], ecx
0x7fffeafd675a:	ja		0x7fffeafd677f
0x7fffeafd6760:	mov		eax, dword ptr [rsp - 0x54]
0x7fffeafd6764:	movsxd		rcx, eax
0x7fffeafd6767:	mov		rdx, qword ptr [rsp - 0x50]
0x7fffeafd676c:	add		rcx, qword ptr [rdx + 0x10]
0x7fffeafd6770:	add		eax, 8
0x7fffeafd6773:	mov		dword ptr [rdx], eax
0x7fffeafd6775:	mov		qword ptr [rsp - 0x60], rcx
0x7fffeafd677a:	jmp		0x7fffeafd679b
disassembling symbol '.LBB4_41':
textAddr: 0x7fffeafd677f, textSize: 28
0x7fffeafd677f:	mov		rax, qword ptr [rsp - 0x50]
0x7fffeafd6784:	mov		rcx, qword ptr [rax + 8]
0x7fffeafd6788:	mov		rdx, rcx
0x7fffeafd678b:	add		rcx, 8
0x7fffeafd6792:	mov		qword ptr [rax + 8], rcx
0x7fffeafd6796:	mov		qword ptr [rsp - 0x60], rdx
disassembling symbol '.LBB4_42':
textAddr: 0x7fffeafd679b, textSize: 28
0x7fffeafd679b:	mov		rax, qword ptr [rsp - 0x60]
0x7fffeafd67a0:	mov		ecx, dword ptr [rax]
0x7fffeafd67a2:	movzx		edx, cl
0x7fffeafd67a5:	mov		eax, edx
0x7fffeafd67a7:	mov		rsi, qword ptr [rsp + 0xa8]
0x7fffeafd67af:	mov		qword ptr [rsi], rax
0x7fffeafd67b2:	jmp		0x7fffeafd6867
disassembling symbol '.LBB4_43':
textAddr: 0x7fffeafd67b7, textSize: 83
0x7fffeafd67b7:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd67bf:	mov		rcx, rax
0x7fffeafd67c2:	add		rcx, 4
0x7fffeafd67c9:	mov		edx, dword ptr [rax + 4]
0x7fffeafd67cc:	cmp		edx, 0xa0
0x7fffeafd67d2:	mov		qword ptr [rsp - 0x68], rax
0x7fffeafd67d7:	mov		qword ptr [rsp - 0x70], rcx
0x7fffeafd67dc:	mov		dword ptr [rsp - 0x74], edx
0x7fffeafd67e0:	ja		0x7fffeafd680a
0x7fffeafd67e6:	mov		eax, dword ptr [rsp - 0x74]
0x7fffeafd67ea:	movsxd		rcx, eax
0x7fffeafd67ed:	mov		rdx, qword ptr [rsp - 0x68]
0x7fffeafd67f2:	add		rcx, qword ptr [rdx + 0x10]
0x7fffeafd67f6:	add		eax, 0x10
0x7fffeafd67f9:	mov		rsi, qword ptr [rsp - 0x70]
0x7fffeafd67fe:	mov		dword ptr [rsi], eax
0x7fffeafd6800:	mov		qword ptr [rsp - 0x80], rcx
0x7fffeafd6805:	jmp		0x7fffeafd6826
disassembling symbol '.LBB4_45':
textAddr: 0x7fffeafd680a, textSize: 28
0x7fffeafd680a:	mov		rax, qword ptr [rsp - 0x68]
0x7fffeafd680f:	mov		rcx, qword ptr [rax + 8]
0x7fffeafd6813:	mov		rdx, rcx
0x7fffeafd6816:	add		rcx, 8
0x7fffeafd681d:	mov		qword ptr [rax + 8], rcx
0x7fffeafd6821:	mov		qword ptr [rsp - 0x80], rdx
disassembling symbol '.LBB4_46':
textAddr: 0x7fffeafd6826, textSize: 22
0x7fffeafd6826:	mov		rax, qword ptr [rsp - 0x80]
0x7fffeafd682b:	fld		qword ptr [rax]
0x7fffeafd682d:	mov		rax, qword ptr [rsp + 0xa8]
0x7fffeafd6835:	fstp		xword ptr [rax]
0x7fffeafd6837:	jmp		0x7fffeafd6867
disassembling symbol '.LBB4_47':
textAddr: 0x7fffeafd683c, textSize: 43
0x7fffeafd683c:	mov		rax, qword ptr [rsp + 0x98]
0x7fffeafd6844:	mov		rcx, qword ptr [rax + 8]
0x7fffeafd6848:	add		rcx, 0xf
0x7fffeafd684c:	and		rcx, 0xfffffffffffffff0
0x7fffeafd6850:	mov		rdx, rcx
0x7fffeafd6853:	add		rdx, 0x10
0x7fffeafd6857:	mov		qword ptr [rax + 8], rdx
0x7fffeafd685b:	fld		xword ptr [rcx]
0x7fffeafd685d:	mov		rax, qword ptr [rsp + 0xa8]
0x7fffeafd6865:	fstp		xword ptr [rax]
disassembling symbol '.LBB4_48':
textAddr: 0x7fffeafd6867, textSize: 9
0x7fffeafd6867:	add		rsp, 0xb0
0x7fffeafd686e:	ret		
0x7fffeafd686f:	nop		
disassembling symbol 'fmt_x':
textAddr: 0x7fffeafd6870, textSize: 112
0x7fffeafd6870:	mov		qword ptr [rsp - 8], rdi
0x7fffeafd6875:	mov		qword ptr [rsp - 0x10], rsi
0x7fffeafd687a:	mov		dword ptr [rsp - 0x14], edx
0x7fffeafd687e:	cmp		qword ptr [rsp - 8], 0
0x7fffeafd6884:	je		0x7fffeafd68ce
0x7fffeafd688a:	mov		rax, qword ptr [rsp - 8]
0x7fffeafd688f:	and		rax, 0xf
0x7fffeafd6895:	lea		rcx, [rip + 0x2c155c4]
0x7fffeafd689c:	movsx		edx, byte ptr [rcx + rax]
0x7fffeafd68a0:	or		edx, dword ptr [rsp - 0x14]
0x7fffeafd68a4:	mov		rax, qword ptr [rsp - 0x10]
0x7fffeafd68a9:	mov		rcx, rax
0x7fffeafd68ac:	add		rcx, -1
0x7fffeafd68b3:	mov		qword ptr [rsp - 0x10], rcx
0x7fffeafd68b8:	mov		byte ptr [rax - 1], dl
0x7fffeafd68bb:	mov		rax, qword ptr [rsp - 8]
0x7fffeafd68c0:	shr		rax, 4
0x7fffeafd68c4:	mov		qword ptr [rsp - 8], rax
0x7fffeafd68c9:	jmp		0x7fffeafd687e
0x7fffeafd68ce:	mov		rax, qword ptr [rsp - 0x10]
0x7fffeafd68d3:	ret		
0x7fffeafd68d4:	nop		word ptr cs:[rax + rax]
0x7fffeafd68de:	nop		
disassembling symbol '.LBB5_1':
textAddr: 0x7fffeafd687e, textSize: 80
0x7fffeafd687e:	cmp		qword ptr [rsp - 8], 0
0x7fffeafd6884:	je		0x7fffeafd68ce
0x7fffeafd688a:	mov		rax, qword ptr [rsp - 8]
0x7fffeafd688f:	and		rax, 0xf
0x7fffeafd6895:	lea		rcx, [rip + 0x2c155c4]
0x7fffeafd689c:	movsx		edx, byte ptr [rcx + rax]
0x7fffeafd68a0:	or		edx, dword ptr [rsp - 0x14]
0x7fffeafd68a4:	mov		rax, qword ptr [rsp - 0x10]
0x7fffeafd68a9:	mov		rcx, rax
0x7fffeafd68ac:	add		rcx, -1
0x7fffeafd68b3:	mov		qword ptr [rsp - 0x10], rcx
0x7fffeafd68b8:	mov		byte ptr [rax - 1], dl
0x7fffeafd68bb:	mov		rax, qword ptr [rsp - 8]
0x7fffeafd68c0:	shr		rax, 4
0x7fffeafd68c4:	mov		qword ptr [rsp - 8], rax
0x7fffeafd68c9:	jmp		0x7fffeafd687e
disassembling symbol '.LBB5_4':
textAddr: 0x7fffeafd68ce, textSize: 18
0x7fffeafd68ce:	mov		rax, qword ptr [rsp - 0x10]
0x7fffeafd68d3:	ret		
0x7fffeafd68d4:	nop		word ptr cs:[rax + rax]
0x7fffeafd68de:	nop		
disassembling symbol 'fmt_o':
textAddr: 0x7fffeafd68e0, textSize: 96
0x7fffeafd68e0:	mov		qword ptr [rsp - 8], rdi
0x7fffeafd68e5:	mov		qword ptr [rsp - 0x10], rsi
0x7fffeafd68ea:	cmp		qword ptr [rsp - 8], 0
0x7fffeafd68f0:	je		0x7fffeafd6931
0x7fffeafd68f6:	mov		rax, qword ptr [rsp - 8]
0x7fffeafd68fb:	and		rax, 7
0x7fffeafd6901:	add		rax, 0x30
0x7fffeafd6907:	mov		rcx, qword ptr [rsp - 0x10]
0x7fffeafd690c:	mov		rdx, rcx
0x7fffeafd690f:	add		rdx, -1
0x7fffeafd6916:	mov		qword ptr [rsp - 0x10], rdx
0x7fffeafd691b:	mov		byte ptr [rcx - 1], al
0x7fffeafd691e:	mov		rax, qword ptr [rsp - 8]
0x7fffeafd6923:	shr		rax, 3
0x7fffeafd6927:	mov		qword ptr [rsp - 8], rax
0x7fffeafd692c:	jmp		0x7fffeafd68ea
0x7fffeafd6931:	mov		rax, qword ptr [rsp - 0x10]
0x7fffeafd6936:	ret		
0x7fffeafd6937:	nop		word ptr [rax + rax]
disassembling symbol '.LBB6_1':
textAddr: 0x7fffeafd68ea, textSize: 71
0x7fffeafd68ea:	cmp		qword ptr [rsp - 8], 0
0x7fffeafd68f0:	je		0x7fffeafd6931
0x7fffeafd68f6:	mov		rax, qword ptr [rsp - 8]
0x7fffeafd68fb:	and		rax, 7
0x7fffeafd6901:	add		rax, 0x30
0x7fffeafd6907:	mov		rcx, qword ptr [rsp - 0x10]
0x7fffeafd690c:	mov		rdx, rcx
0x7fffeafd690f:	add		rdx, -1
0x7fffeafd6916:	mov		qword ptr [rsp - 0x10], rdx
0x7fffeafd691b:	mov		byte ptr [rcx - 1], al
0x7fffeafd691e:	mov		rax, qword ptr [rsp - 8]
0x7fffeafd6923:	shr		rax, 3
0x7fffeafd6927:	mov		qword ptr [rsp - 8], rax
0x7fffeafd692c:	jmp		0x7fffeafd68ea
disassembling symbol '.LBB6_4':
textAddr: 0x7fffeafd6931, textSize: 15
0x7fffeafd6931:	mov		rax, qword ptr [rsp - 0x10]
0x7fffeafd6936:	ret		
0x7fffeafd6937:	nop		word ptr [rax + rax]
disassembling symbol 'fmt_u':
textAddr: 0x7fffeafd6940, textSize: 208
0x7fffeafd6940:	mov		qword ptr [rsp - 8], rdi
0x7fffeafd6945:	mov		qword ptr [rsp - 0x10], rsi
0x7fffeafd694a:	cmp		qword ptr [rsp - 8], -1
0x7fffeafd6950:	jbe		0x7fffeafd69a0
0x7fffeafd6956:	mov		rax, qword ptr [rsp - 8]
0x7fffeafd695b:	xor		ecx, ecx
0x7fffeafd695d:	mov		edx, ecx
0x7fffeafd695f:	mov		esi, 0xa
0x7fffeafd6964:	div		rsi
0x7fffeafd6967:	add		rdx, 0x30
0x7fffeafd696e:	mov		rsi, qword ptr [rsp - 0x10]
0x7fffeafd6973:	mov		rdi, rsi
0x7fffeafd6976:	add		rdi, -1
0x7fffeafd697d:	mov		qword ptr [rsp - 0x10], rdi
0x7fffeafd6982:	mov		byte ptr [rsi - 1], dl
0x7fffeafd6985:	mov		rax, qword ptr [rsp - 8]
0x7fffeafd698a:	xor		ecx, ecx
0x7fffeafd698c:	mov		edx, ecx
0x7fffeafd698e:	mov		esi, 0xa
0x7fffeafd6993:	div		rsi
0x7fffeafd6996:	mov		qword ptr [rsp - 8], rax
0x7fffeafd699b:	jmp		0x7fffeafd694a
0x7fffeafd69a0:	mov		rax, qword ptr [rsp - 8]
0x7fffeafd69a5:	mov		qword ptr [rsp - 0x18], rax
0x7fffeafd69aa:	cmp		qword ptr [rsp - 0x18], 0
0x7fffeafd69b0:	je		0x7fffeafd6a00
0x7fffeafd69b6:	mov		rax, qword ptr [rsp - 0x18]
0x7fffeafd69bb:	xor		ecx, ecx
0x7fffeafd69bd:	mov		edx, ecx
0x7fffeafd69bf:	mov		esi, 0xa
0x7fffeafd69c4:	div		rsi
0x7fffeafd69c7:	add		rdx, 0x30
0x7fffeafd69ce:	mov		rsi, qword ptr [rsp - 0x10]
0x7fffeafd69d3:	mov		rdi, rsi
0x7fffeafd69d6:	add		rdi, -1
0x7fffeafd69dd:	mov		qword ptr [rsp - 0x10], rdi
0x7fffeafd69e2:	mov		byte ptr [rsi - 1], dl
0x7fffeafd69e5:	mov		rax, qword ptr [rsp - 0x18]
0x7fffeafd69ea:	xor		ecx, ecx
0x7fffeafd69ec:	mov		edx, ecx
0x7fffeafd69ee:	mov		esi, 0xa
0x7fffeafd69f3:	div		rsi
0x7fffeafd69f6:	mov		qword ptr [rsp - 0x18], rax
0x7fffeafd69fb:	jmp		0x7fffeafd69aa
0x7fffeafd6a00:	mov		rax, qword ptr [rsp - 0x10]
0x7fffeafd6a05:	ret		
0x7fffeafd6a06:	nop		word ptr cs:[rax + rax]
disassembling symbol '.LBB7_1':
textAddr: 0x7fffeafd694a, textSize: 86
0x7fffeafd694a:	cmp		qword ptr [rsp - 8], -1
0x7fffeafd6950:	jbe		0x7fffeafd69a0
0x7fffeafd6956:	mov		rax, qword ptr [rsp - 8]
0x7fffeafd695b:	xor		ecx, ecx
0x7fffeafd695d:	mov		edx, ecx
0x7fffeafd695f:	mov		esi, 0xa
0x7fffeafd6964:	div		rsi
0x7fffeafd6967:	add		rdx, 0x30
0x7fffeafd696e:	mov		rsi, qword ptr [rsp - 0x10]
0x7fffeafd6973:	mov		rdi, rsi
0x7fffeafd6976:	add		rdi, -1
0x7fffeafd697d:	mov		qword ptr [rsp - 0x10], rdi
0x7fffeafd6982:	mov		byte ptr [rsi - 1], dl
0x7fffeafd6985:	mov		rax, qword ptr [rsp - 8]
0x7fffeafd698a:	xor		ecx, ecx
0x7fffeafd698c:	mov		edx, ecx
0x7fffeafd698e:	mov		esi, 0xa
0x7fffeafd6993:	div		rsi
0x7fffeafd6996:	mov		qword ptr [rsp - 8], rax
0x7fffeafd699b:	jmp		0x7fffeafd694a
disassembling symbol '.LBB7_4':
textAddr: 0x7fffeafd69a0, textSize: 10
0x7fffeafd69a0:	mov		rax, qword ptr [rsp - 8]
0x7fffeafd69a5:	mov		qword ptr [rsp - 0x18], rax
disassembling symbol '.LBB7_5':
textAddr: 0x7fffeafd69aa, textSize: 86
0x7fffeafd69aa:	cmp		qword ptr [rsp - 0x18], 0
0x7fffeafd69b0:	je		0x7fffeafd6a00
0x7fffeafd69b6:	mov		rax, qword ptr [rsp - 0x18]
0x7fffeafd69bb:	xor		ecx, ecx
0x7fffeafd69bd:	mov		edx, ecx
0x7fffeafd69bf:	mov		esi, 0xa
0x7fffeafd69c4:	div		rsi
0x7fffeafd69c7:	add		rdx, 0x30
0x7fffeafd69ce:	mov		rsi, qword ptr [rsp - 0x10]
0x7fffeafd69d3:	mov		rdi, rsi
0x7fffeafd69d6:	add		rdi, -1
0x7fffeafd69dd:	mov		qword ptr [rsp - 0x10], rdi
0x7fffeafd69e2:	mov		byte ptr [rsi - 1], dl
0x7fffeafd69e5:	mov		rax, qword ptr [rsp - 0x18]
0x7fffeafd69ea:	xor		ecx, ecx
0x7fffeafd69ec:	mov		edx, ecx
0x7fffeafd69ee:	mov		esi, 0xa
0x7fffeafd69f3:	div		rsi
0x7fffeafd69f6:	mov		qword ptr [rsp - 0x18], rax
0x7fffeafd69fb:	jmp		0x7fffeafd69aa
disassembling symbol '.LBB7_8':
textAddr: 0x7fffeafd6a00, textSize: 16
0x7fffeafd6a00:	mov		rax, qword ptr [rsp - 0x10]
0x7fffeafd6a05:	ret		
0x7fffeafd6a06:	nop		word ptr cs:[rax + rax]
disassembling symbol 'pad':
textAddr: 0x7fffeafd6a10, textSize: 320
0x7fffeafd6a10:	sub		rsp, 0x138
0x7fffeafd6a17:	mov		qword ptr [rsp + 0x130], rdi
0x7fffeafd6a1f:	mov		byte ptr [rsp + 0x12f], sil
0x7fffeafd6a27:	mov		dword ptr [rsp + 0x128], edx
0x7fffeafd6a2e:	mov		dword ptr [rsp + 0x124], ecx
0x7fffeafd6a35:	mov		dword ptr [rsp + 0x120], r8d
0x7fffeafd6a3d:	mov		eax, dword ptr [rsp + 0x120]
0x7fffeafd6a44:	and		eax, 0x12000
0x7fffeafd6a49:	cmp		eax, 0
0x7fffeafd6a4c:	jne		0x7fffeafd6a66
0x7fffeafd6a52:	mov		eax, dword ptr [rsp + 0x124]
0x7fffeafd6a59:	cmp		eax, dword ptr [rsp + 0x128]
0x7fffeafd6a60:	jl		0x7fffeafd6a6b
0x7fffeafd6a66:	jmp		0x7fffeafd6b3c
0x7fffeafd6a6b:	lea		rdi, [rsp + 0x20]
0x7fffeafd6a70:	mov		eax, dword ptr [rsp + 0x128]
0x7fffeafd6a77:	sub		eax, dword ptr [rsp + 0x124]
0x7fffeafd6a7e:	mov		dword ptr [rsp + 0x124], eax
0x7fffeafd6a85:	movsx		esi, byte ptr [rsp + 0x12f]
0x7fffeafd6a8d:	movsxd		rcx, dword ptr [rsp + 0x124]
0x7fffeafd6a95:	cmp		rcx, 0x100
0x7fffeafd6a9c:	mov		qword ptr [rsp + 0x18], rdi
0x7fffeafd6aa1:	mov		dword ptr [rsp + 0x14], esi
0x7fffeafd6aa5:	jbe		0x7fffeafd6aba
0x7fffeafd6aab:	mov		eax, 0x100
0x7fffeafd6ab0:	mov		qword ptr [rsp + 8], rax
0x7fffeafd6ab5:	jmp		0x7fffeafd6ac7
0x7fffeafd6aba:	movsxd		rax, dword ptr [rsp + 0x124]
0x7fffeafd6ac2:	mov		qword ptr [rsp + 8], rax
0x7fffeafd6ac7:	mov		rax, qword ptr [rsp + 8]
0x7fffeafd6acc:	mov		rdi, qword ptr [rsp + 0x18]
0x7fffeafd6ad1:	mov		esi, dword ptr [rsp + 0x14]
0x7fffeafd6ad5:	mov		rdx, rax
0x7fffeafd6ad8:	call		0x7fffeafd2a10
0x7fffeafd6add:	movsxd		rax, dword ptr [rsp + 0x124]
0x7fffeafd6ae5:	cmp		rax, 0x100
0x7fffeafd6aeb:	jb		0x7fffeafd6b22
0x7fffeafd6af1:	lea		rsi, [rsp + 0x20]
0x7fffeafd6af6:	mov		rdi, qword ptr [rsp + 0x130]
0x7fffeafd6afe:	mov		edx, 0x100
0x7fffeafd6b03:	call		0x7fffeafd6240
0x7fffeafd6b08:	movsxd		rax, dword ptr [rsp + 0x124]
0x7fffeafd6b10:	sub		rax, 0x100
0x7fffeafd6b16:	mov		dword ptr [rsp + 0x124], eax
0x7fffeafd6b1d:	jmp		0x7fffeafd6add
0x7fffeafd6b22:	lea		rsi, [rsp + 0x20]
0x7fffeafd6b27:	mov		rdi, qword ptr [rsp + 0x130]
0x7fffeafd6b2f:	movsxd		rdx, dword ptr [rsp + 0x124]
0x7fffeafd6b37:	call		0x7fffeafd6240
0x7fffeafd6b3c:	add		rsp, 0x138
0x7fffeafd6b43:	ret		
0x7fffeafd6b44:	nop		word ptr cs:[rax + rax]
0x7fffeafd6b4e:	nop		
disassembling symbol '.LBB8_2':
textAddr: 0x7fffeafd6a66, textSize: 5
0x7fffeafd6a66:	jmp		0x7fffeafd6b3c
disassembling symbol '.LBB8_3':
textAddr: 0x7fffeafd6a6b, textSize: 79
0x7fffeafd6a6b:	lea		rdi, [rsp + 0x20]
0x7fffeafd6a70:	mov		eax, dword ptr [rsp + 0x128]
0x7fffeafd6a77:	sub		eax, dword ptr [rsp + 0x124]
0x7fffeafd6a7e:	mov		dword ptr [rsp + 0x124], eax
0x7fffeafd6a85:	movsx		esi, byte ptr [rsp + 0x12f]
0x7fffeafd6a8d:	movsxd		rcx, dword ptr [rsp + 0x124]
0x7fffeafd6a95:	cmp		rcx, 0x100
0x7fffeafd6a9c:	mov		qword ptr [rsp + 0x18], rdi
0x7fffeafd6aa1:	mov		dword ptr [rsp + 0x14], esi
0x7fffeafd6aa5:	jbe		0x7fffeafd6aba
0x7fffeafd6aab:	mov		eax, 0x100
0x7fffeafd6ab0:	mov		qword ptr [rsp + 8], rax
0x7fffeafd6ab5:	jmp		0x7fffeafd6ac7
disassembling symbol '.LBB8_5':
textAddr: 0x7fffeafd6aba, textSize: 13
0x7fffeafd6aba:	movsxd		rax, dword ptr [rsp + 0x124]
0x7fffeafd6ac2:	mov		qword ptr [rsp + 8], rax
disassembling symbol '.LBB8_6':
textAddr: 0x7fffeafd6ac7, textSize: 22
0x7fffeafd6ac7:	mov		rax, qword ptr [rsp + 8]
0x7fffeafd6acc:	mov		rdi, qword ptr [rsp + 0x18]
0x7fffeafd6ad1:	mov		esi, dword ptr [rsp + 0x14]
0x7fffeafd6ad5:	mov		rdx, rax
0x7fffeafd6ad8:	call		0x7fffeafd2a10
disassembling symbol '.LBB8_7':
textAddr: 0x7fffeafd6add, textSize: 69
0x7fffeafd6add:	movsxd		rax, dword ptr [rsp + 0x124]
0x7fffeafd6ae5:	cmp		rax, 0x100
0x7fffeafd6aeb:	jb		0x7fffeafd6b22
0x7fffeafd6af1:	lea		rsi, [rsp + 0x20]
0x7fffeafd6af6:	mov		rdi, qword ptr [rsp + 0x130]
0x7fffeafd6afe:	mov		edx, 0x100
0x7fffeafd6b03:	call		0x7fffeafd6240
0x7fffeafd6b08:	movsxd		rax, dword ptr [rsp + 0x124]
0x7fffeafd6b10:	sub		rax, 0x100
0x7fffeafd6b16:	mov		dword ptr [rsp + 0x124], eax
0x7fffeafd6b1d:	jmp		0x7fffeafd6add
disassembling symbol '.LBB8_10':
textAddr: 0x7fffeafd6b22, textSize: 26
0x7fffeafd6b22:	lea		rsi, [rsp + 0x20]
0x7fffeafd6b27:	mov		rdi, qword ptr [rsp + 0x130]
0x7fffeafd6b2f:	movsxd		rdx, dword ptr [rsp + 0x124]
0x7fffeafd6b37:	call		0x7fffeafd6240
disassembling symbol '.LBB8_11':
textAddr: 0x7fffeafd6b3c, textSize: 20
0x7fffeafd6b3c:	add		rsp, 0x138
0x7fffeafd6b43:	ret		
0x7fffeafd6b44:	nop		word ptr cs:[rax + rax]
0x7fffeafd6b4e:	nop		
disassembling symbol 'fmt_fp':
textAddr: 0x7fffeafd6b50, textSize: 8720
0x7fffeafd6b50:	sub		rsp, 0x1f48
0x7fffeafd6b57:	fld		xword ptr [rsp + 0x1f50]
0x7fffeafd6b5e:	xor		eax, eax
0x7fffeafd6b60:	mov		qword ptr [rsp + 0x1f38], rdi
0x7fffeafd6b68:	fstp		xword ptr [rsp + 0x1f20]
0x7fffeafd6b6f:	mov		dword ptr [rsp + 0x1f1c], esi
0x7fffeafd6b76:	mov		dword ptr [rsp + 0x1f18], edx
0x7fffeafd6b7d:	mov		dword ptr [rsp + 0x1f14], ecx
0x7fffeafd6b84:	mov		dword ptr [rsp + 0x1f10], r8d
0x7fffeafd6b8c:	mov		dword ptr [rsp + 0x23c], 0
0x7fffeafd6b97:	lea		rdi, [rip + 0x2c153c8]
0x7fffeafd6b9e:	mov		qword ptr [rsp + 0x200], rdi
0x7fffeafd6ba6:	lea		rdi, [rsp + 0x1f0]
0x7fffeafd6bae:	add		rdi, 0xc
0x7fffeafd6bb5:	mov		qword ptr [rsp + 0x1e8], rdi
0x7fffeafd6bbd:	mov		dword ptr [rsp + 0x1fc], 1
0x7fffeafd6bc8:	test		al, 1
0x7fffeafd6bca:	jne		0x7fffeafd6bd5
0x7fffeafd6bd0:	jmp		0x7fffeafd6c02
0x7fffeafd6bd5:	fld		xword ptr [rsp + 0x1f20]
0x7fffeafd6bdc:	fstp		dword ptr [rsp + 0x13c]
0x7fffeafd6be3:	movss		xmm0, dword ptr [rsp + 0x13c]
0x7fffeafd6bec:	call		0x7fffeafd8d60
0x7fffeafd6bf1:	shr		eax, 0x1f
0x7fffeafd6bf4:	cmp		eax, 0
0x7fffeafd6bf7:	jne		0x7fffeafd6c59
0x7fffeafd6bfd:	jmp		0x7fffeafd6c6e
0x7fffeafd6c02:	xor		eax, eax
0x7fffeafd6c04:	test		al, 1
0x7fffeafd6c06:	jne		0x7fffeafd6c11
0x7fffeafd6c0c:	jmp		0x7fffeafd6c3f
0x7fffeafd6c11:	fld		xword ptr [rsp + 0x1f20]
0x7fffeafd6c18:	fstp		qword ptr [rsp + 0x140]
0x7fffeafd6c1f:	movsd		xmm0, qword ptr [rsp + 0x140]
0x7fffeafd6c28:	call		0x7fffeafd8d80
0x7fffeafd6c2d:	shr		rax, 0x3f
0x7fffeafd6c31:	cmp		eax, 0
0x7fffeafd6c34:	jne		0x7fffeafd6c59
0x7fffeafd6c3a:	jmp		0x7fffeafd6c6e
0x7fffeafd6c3f:	fld		xword ptr [rsp + 0x1f20]
0x7fffeafd6c46:	mov		rax, rsp
0x7fffeafd6c49:	fstp		xword ptr [rax]
0x7fffeafd6c4b:	call		0x7fffeafc42b0
0x7fffeafd6c50:	cmp		eax, 0
0x7fffeafd6c53:	je		0x7fffeafd6c6e
0x7fffeafd6c59:	fld		xword ptr [rsp + 0x1f20]
0x7fffeafd6c60:	fchs		
0x7fffeafd6c62:	fstp		xword ptr [rsp + 0x1f20]
0x7fffeafd6c69:	jmp		0x7fffeafd6cf7
0x7fffeafd6c6e:	mov		eax, dword ptr [rsp + 0x1f14]
0x7fffeafd6c75:	and		eax, 0x800
0x7fffeafd6c7a:	cmp		eax, 0
0x7fffeafd6c7d:	je		0x7fffeafd6c9e
0x7fffeafd6c83:	mov		rax, qword ptr [rsp + 0x200]
0x7fffeafd6c8b:	add		rax, 3
0x7fffeafd6c91:	mov		qword ptr [rsp + 0x200], rax
0x7fffeafd6c99:	jmp		0x7fffeafd6cf2
0x7fffeafd6c9e:	mov		eax, dword ptr [rsp + 0x1f14]
0x7fffeafd6ca5:	and		eax, 1
0x7fffeafd6ca8:	cmp		eax, 0
0x7fffeafd6cab:	je		0x7fffeafd6ccc
0x7fffeafd6cb1:	mov		rax, qword ptr [rsp + 0x200]
0x7fffeafd6cb9:	add		rax, 6
0x7fffeafd6cbf:	mov		qword ptr [rsp + 0x200], rax
0x7fffeafd6cc7:	jmp		0x7fffeafd6ced
0x7fffeafd6ccc:	mov		rax, qword ptr [rsp + 0x200]
0x7fffeafd6cd4:	add		rax, 1
0x7fffeafd6cda:	mov		qword ptr [rsp + 0x200], rax
0x7fffeafd6ce2:	mov		dword ptr [rsp + 0x1fc], 0
0x7fffeafd6ced:	jmp		0x7fffeafd6cf2
0x7fffeafd6cf2:	jmp		0x7fffeafd6cf7
0x7fffeafd6cf7:	xor		eax, eax
0x7fffeafd6cf9:	test		al, 1
0x7fffeafd6cfb:	jne		0x7fffeafd6d06
0x7fffeafd6d01:	jmp		0x7fffeafd6d37
0x7fffeafd6d06:	fld		xword ptr [rsp + 0x1f20]
0x7fffeafd6d0d:	fstp		dword ptr [rsp + 0x12c]
0x7fffeafd6d14:	movss		xmm0, dword ptr [rsp + 0x12c]
0x7fffeafd6d1d:	call		0x7fffeafd8d60
0x7fffeafd6d22:	and		eax, 0x7fffffff
0x7fffeafd6d27:	cmp		eax, 0x7f800000
0x7fffeafd6d2c:	jb		0x7fffeafd6f13
0x7fffeafd6d32:	jmp		0x7fffeafd6da1
0x7fffeafd6d37:	xor		eax, eax
0x7fffeafd6d39:	test		al, 1
0x7fffeafd6d3b:	jne		0x7fffeafd6d46
0x7fffeafd6d41:	jmp		0x7fffeafd6d87
0x7fffeafd6d46:	fld		xword ptr [rsp + 0x1f20]
0x7fffeafd6d4d:	fstp		qword ptr [rsp + 0x130]
0x7fffeafd6d54:	movsd		xmm0, qword ptr [rsp + 0x130]
0x7fffeafd6d5d:	call		0x7fffeafd8d80
0x7fffeafd6d62:	movabs		rcx, 0x7fffffffffffffff
0x7fffeafd6d6c:	and		rax, rcx
0x7fffeafd6d6f:	movabs		rcx, 0x7ff0000000000000
0x7fffeafd6d79:	cmp		rax, rcx
0x7fffeafd6d7c:	jb		0x7fffeafd6f13
0x7fffeafd6d82:	jmp		0x7fffeafd6da1
0x7fffeafd6d87:	fld		xword ptr [rsp + 0x1f20]
0x7fffeafd6d8e:	mov		rax, rsp
0x7fffeafd6d91:	fstp		xword ptr [rax]
0x7fffeafd6d93:	call		0x7fffeafc3d10
0x7fffeafd6d98:	cmp		eax, 1
0x7fffeafd6d9b:	jg		0x7fffeafd6f13
0x7fffeafd6da1:	mov		eax, dword ptr [rsp + 0x1f10]
0x7fffeafd6da8:	lea		rcx, [rip + 0x2c151ca]
0x7fffeafd6daf:	lea		rdx, [rip + 0x2c151c7]
0x7fffeafd6db6:	test		al, 0x20
0x7fffeafd6db8:	cmovne		rdx, rcx
0x7fffeafd6dbc:	mov		qword ptr [rsp + 0x1d8], rdx
0x7fffeafd6dc4:	fld		xword ptr [rsp + 0x1f20]
0x7fffeafd6dcb:	fucomip		st(0)
0x7fffeafd6dcd:	jnp		0x7fffeafd6e0a
0x7fffeafd6dd3:	jmp		0x7fffeafd6dd8
0x7fffeafd6dd8:	mov		eax, dword ptr [rsp + 0x1f10]
0x7fffeafd6ddf:	and		eax, 0x20
0x7fffeafd6de2:	cmp		eax, 0
0x7fffeafd6de5:	lea		rcx, [rip + 0x2c15195]
0x7fffeafd6dec:	lea		rdx, [rip + 0x2c15192]
0x7fffeafd6df3:	cmovne		rdx, rcx
0x7fffeafd6df7:	mov		qword ptr [rsp + 0x1d8], rdx
0x7fffeafd6dff:	mov		dword ptr [rsp + 0x1fc], 0
0x7fffeafd6e0a:	mov		rdi, qword ptr [rsp + 0x1f38]
0x7fffeafd6e12:	mov		edx, dword ptr [rsp + 0x1f1c]
0x7fffeafd6e19:	mov		eax, dword ptr [rsp + 0x1fc]
0x7fffeafd6e20:	add		eax, 3
0x7fffeafd6e23:	mov		ecx, dword ptr [rsp + 0x1f14]
0x7fffeafd6e2a:	and		ecx, 0xfffeffff
0x7fffeafd6e30:	mov		esi, 0x20
0x7fffeafd6e35:	mov		dword ptr [rsp + 0x104], ecx
0x7fffeafd6e3c:	mov		ecx, eax
0x7fffeafd6e3e:	mov		r8d, dword ptr [rsp + 0x104]
0x7fffeafd6e46:	call		0x7fffeafd6a10
0x7fffeafd6e4b:	mov		rdi, qword ptr [rsp + 0x1f38]
0x7fffeafd6e53:	mov		rsi, qword ptr [rsp + 0x200]
0x7fffeafd6e5b:	movsxd		rdx, dword ptr [rsp + 0x1fc]
0x7fffeafd6e63:	call		0x7fffeafd6240
0x7fffeafd6e68:	mov		rdi, qword ptr [rsp + 0x1f38]
0x7fffeafd6e70:	mov		rsi, qword ptr [rsp + 0x1d8]
0x7fffeafd6e78:	mov		edx, 3
0x7fffeafd6e7d:	call		0x7fffeafd6240
0x7fffeafd6e82:	mov		rdi, qword ptr [rsp + 0x1f38]
0x7fffeafd6e8a:	mov		edx, dword ptr [rsp + 0x1f1c]
0x7fffeafd6e91:	mov		eax, dword ptr [rsp + 0x1fc]
0x7fffeafd6e98:	add		eax, 3
0x7fffeafd6e9b:	mov		ecx, dword ptr [rsp + 0x1f14]
0x7fffeafd6ea2:	xor		ecx, 0x2000
0x7fffeafd6ea8:	mov		esi, 0x20
0x7fffeafd6ead:	mov		dword ptr [rsp + 0x100], ecx
0x7fffeafd6eb4:	mov		ecx, eax
0x7fffeafd6eb6:	mov		r8d, dword ptr [rsp + 0x100]
0x7fffeafd6ebe:	call		0x7fffeafd6a10
0x7fffeafd6ec3:	mov		eax, dword ptr [rsp + 0x1f1c]
0x7fffeafd6eca:	mov		ecx, dword ptr [rsp + 0x1fc]
0x7fffeafd6ed1:	add		ecx, 3
0x7fffeafd6ed4:	cmp		eax, ecx
0x7fffeafd6ed6:	jle		0x7fffeafd6eef
0x7fffeafd6edc:	mov		eax, dword ptr [rsp + 0x1f1c]
0x7fffeafd6ee3:	mov		dword ptr [rsp + 0xfc], eax
0x7fffeafd6eea:	jmp		0x7fffeafd6f00
0x7fffeafd6eef:	mov		eax, dword ptr [rsp + 0x1fc]
0x7fffeafd6ef6:	add		eax, 3
0x7fffeafd6ef9:	mov		dword ptr [rsp + 0xfc], eax
0x7fffeafd6f00:	mov		eax, dword ptr [rsp + 0xfc]
0x7fffeafd6f07:	mov		dword ptr [rsp + 0x1f44], eax
0x7fffeafd6f0e:	jmp		0x7fffeafd8d48
0x7fffeafd6f13:	fld		xword ptr [rsp + 0x1f20]
0x7fffeafd6f1a:	mov		rax, rsp
0x7fffeafd6f1d:	fstp		xword ptr [rax]
0x7fffeafd6f1f:	lea		rdi, [rsp + 0x23c]
0x7fffeafd6f27:	call		0x7fffeafc8350
0x7fffeafd6f2c:	fadd		st(0), st(0)
0x7fffeafd6f2e:	fstp		xword ptr [rsp + 0x1f20]
0x7fffeafd6f35:	fld		xword ptr [rsp + 0x1f20]
0x7fffeafd6f3c:	fldz		
0x7fffeafd6f3e:	fxch		st(1)
0x7fffeafd6f40:	fucomip		st(1)
0x7fffeafd6f42:	fstp		st(0)
0x7fffeafd6f44:	jne		0x7fffeafd6f55
0x7fffeafd6f4a:	jp		0x7fffeafd6f55
0x7fffeafd6f50:	jmp		0x7fffeafd6f66
0x7fffeafd6f55:	mov		eax, dword ptr [rsp + 0x23c]
0x7fffeafd6f5c:	add		eax, -1
0x7fffeafd6f5f:	mov		dword ptr [rsp + 0x23c], eax
0x7fffeafd6f66:	mov		eax, dword ptr [rsp + 0x1f10]
0x7fffeafd6f6d:	or		eax, 0x20
0x7fffeafd6f70:	cmp		eax, 0x61
0x7fffeafd6f73:	jne		0x7fffeafd75a9
0x7fffeafd6f79:	fld		dword ptr [rip + 0x2c14f0d]
0x7fffeafd6f7f:	fstp		xword ptr [rsp + 0x1c0]
0x7fffeafd6f86:	mov		eax, dword ptr [rsp + 0x1f10]
0x7fffeafd6f8d:	and		eax, 0x20
0x7fffeafd6f90:	cmp		eax, 0
0x7fffeafd6f93:	je		0x7fffeafd6faf
0x7fffeafd6f99:	mov		rax, qword ptr [rsp + 0x200]
0x7fffeafd6fa1:	add		rax, 9
0x7fffeafd6fa7:	mov		qword ptr [rsp + 0x200], rax
0x7fffeafd6faf:	mov		eax, dword ptr [rsp + 0x1fc]
0x7fffeafd6fb6:	add		eax, 2
0x7fffeafd6fb9:	mov		dword ptr [rsp + 0x1fc], eax
0x7fffeafd6fc0:	cmp		dword ptr [rsp + 0x1f18], 0
0x7fffeafd6fc8:	jl		0x7fffeafd6fdc
0x7fffeafd6fce:	cmp		dword ptr [rsp + 0x1f18], 0xf
0x7fffeafd6fd6:	jl		0x7fffeafd6fec
0x7fffeafd6fdc:	mov		dword ptr [rsp + 0x1bc], 0
0x7fffeafd6fe7:	jmp		0x7fffeafd6fff
0x7fffeafd6fec:	mov		eax, 0xf
0x7fffeafd6ff1:	sub		eax, dword ptr [rsp + 0x1f18]
0x7fffeafd6ff8:	mov		dword ptr [rsp + 0x1bc], eax
0x7fffeafd6fff:	cmp		dword ptr [rsp + 0x1bc], 0
0x7fffeafd7007:	je		0x7fffeafd70e3
0x7fffeafd700d:	jmp		0x7fffeafd7012
0x7fffeafd7012:	mov		eax, dword ptr [rsp + 0x1bc]
0x7fffeafd7019:	mov		ecx, eax
0x7fffeafd701b:	add		ecx, -1
0x7fffeafd701e:	mov		dword ptr [rsp + 0x1bc], ecx
0x7fffeafd7025:	cmp		eax, 0
0x7fffeafd7028:	je		0x7fffeafd7049
0x7fffeafd702e:	fld		xword ptr [rsp + 0x1c0]
0x7fffeafd7035:	fld		dword ptr [rip + 0x2c14e55]
0x7fffeafd703b:	fmulp		st(1)
0x7fffeafd703d:	fstp		xword ptr [rsp + 0x1c0]
0x7fffeafd7044:	jmp		0x7fffeafd7012
0x7fffeafd7049:	mov		rax, qword ptr [rsp + 0x200]
0x7fffeafd7051:	movsx		ecx, byte ptr [rax]
0x7fffeafd7054:	cmp		ecx, 0x2d
0x7fffeafd7057:	jne		0x7fffeafd70b0
0x7fffeafd705d:	fld		xword ptr [rsp + 0x1f20]
0x7fffeafd7064:	fchs		
0x7fffeafd7066:	fstp		xword ptr [rsp + 0x1f20]
0x7fffeafd706d:	fld		xword ptr [rsp + 0x1c0]
0x7fffeafd7074:	fld		xword ptr [rsp + 0x1f20]
0x7fffeafd707b:	fsubrp		st(1)
0x7fffeafd707d:	fstp		xword ptr [rsp + 0x1f20]
0x7fffeafd7084:	fld		xword ptr [rsp + 0x1c0]
0x7fffeafd708b:	fld		xword ptr [rsp + 0x1f20]
0x7fffeafd7092:	faddp		st(1)
0x7fffeafd7094:	fstp		xword ptr [rsp + 0x1f20]
0x7fffeafd709b:	fld		xword ptr [rsp + 0x1f20]
0x7fffeafd70a2:	fchs		
0x7fffeafd70a4:	fstp		xword ptr [rsp + 0x1f20]
0x7fffeafd70ab:	jmp		0x7fffeafd70de
0x7fffeafd70b0:	fld		xword ptr [rsp + 0x1c0]
0x7fffeafd70b7:	fld		xword ptr [rsp + 0x1f20]
0x7fffeafd70be:	faddp		st(1)
0x7fffeafd70c0:	fstp		xword ptr [rsp + 0x1f20]
0x7fffeafd70c7:	fld		xword ptr [rsp + 0x1c0]
0x7fffeafd70ce:	fld		xword ptr [rsp + 0x1f20]
0x7fffeafd70d5:	fsubrp		st(1)
0x7fffeafd70d7:	fstp		xword ptr [rsp + 0x1f20]
0x7fffeafd70de:	jmp		0x7fffeafd70e3
0x7fffeafd70e3:	cmp		dword ptr [rsp + 0x23c], 0
0x7fffeafd70eb:	jge		0x7fffeafd7106
0x7fffeafd70f1:	xor		eax, eax
0x7fffeafd70f3:	sub		eax, dword ptr [rsp + 0x23c]
0x7fffeafd70fa:	mov		dword ptr [rsp + 0xf8], eax
0x7fffeafd7101:	jmp		0x7fffeafd7114
0x7fffeafd7106:	mov		eax, dword ptr [rsp + 0x23c]
0x7fffeafd710d:	mov		dword ptr [rsp + 0xf8], eax
0x7fffeafd7114:	mov		eax, dword ptr [rsp + 0xf8]
0x7fffeafd711b:	movsxd		rdi, eax
0x7fffeafd711e:	mov		rsi, qword ptr [rsp + 0x1e8]
0x7fffeafd7126:	call		0x7fffeafd6940
0x7fffeafd712b:	mov		qword ptr [rsp + 0x1e0], rax
0x7fffeafd7133:	mov		rax, qword ptr [rsp + 0x1e0]
0x7fffeafd713b:	cmp		rax, qword ptr [rsp + 0x1e8]
0x7fffeafd7143:	jne		0x7fffeafd7167
0x7fffeafd7149:	mov		rax, qword ptr [rsp + 0x1e0]
0x7fffeafd7151:	mov		rcx, rax
0x7fffeafd7154:	add		rcx, -1
0x7fffeafd715b:	mov		qword ptr [rsp + 0x1e0], rcx
0x7fffeafd7163:	mov		byte ptr [rax - 1], 0x30
0x7fffeafd7167:	lea		rax, [rsp + 0x210]
0x7fffeafd716f:	mov		ecx, dword ptr [rsp + 0x23c]
0x7fffeafd7176:	cmp		ecx, 0
0x7fffeafd7179:	mov		ecx, 0x2d
0x7fffeafd717e:	mov		edx, 0x2b
0x7fffeafd7183:	cmovl		edx, ecx
0x7fffeafd7186:	mov		rsi, qword ptr [rsp + 0x1e0]
0x7fffeafd718e:	mov		rdi, rsi
0x7fffeafd7191:	add		rdi, -1
0x7fffeafd7198:	mov		qword ptr [rsp + 0x1e0], rdi
0x7fffeafd71a0:	mov		byte ptr [rsi - 1], dl
0x7fffeafd71a3:	mov		ecx, dword ptr [rsp + 0x1f10]
0x7fffeafd71aa:	add		ecx, 0xf
0x7fffeafd71ad:	mov		rsi, qword ptr [rsp + 0x1e0]
0x7fffeafd71b5:	mov		rdi, rsi
0x7fffeafd71b8:	add		rdi, -1
0x7fffeafd71bf:	mov		qword ptr [rsp + 0x1e0], rdi
0x7fffeafd71c7:	mov		byte ptr [rsi - 1], cl
0x7fffeafd71ca:	mov		qword ptr [rsp + 0x208], rax
0x7fffeafd71d2:	lea		rax, [rsp + 0x210]
0x7fffeafd71da:	fld		xword ptr [rsp + 0x1f20]
0x7fffeafd71e1:	fnstcw		word ptr [rsp + 0x10e]
0x7fffeafd71e8:	movzx		ecx, word ptr [rsp + 0x10e]
0x7fffeafd71f0:	or		ecx, 0xc00
0x7fffeafd71f6:	mov		word ptr [rsp + 0x10c], cx
0x7fffeafd71fe:	fldcw		word ptr [rsp + 0x10c]
0x7fffeafd7205:	fistp		dword ptr [rsp + 0x110]
0x7fffeafd720c:	fldcw		word ptr [rsp + 0x10e]
0x7fffeafd7213:	mov		edx, dword ptr [rsp + 0x110]
0x7fffeafd721a:	mov		dword ptr [rsp + 0x1b8], edx
0x7fffeafd7221:	movsxd		rsi, dword ptr [rsp + 0x1b8]
0x7fffeafd7229:	lea		rdi, [rip + 0x2c14c30]
0x7fffeafd7230:	movzx		edx, byte ptr [rsi + rdi]
0x7fffeafd7234:	mov		r8d, dword ptr [rsp + 0x1f10]
0x7fffeafd723c:	and		r8d, 0x20
0x7fffeafd7240:	or		edx, r8d
0x7fffeafd7243:	mov		rsi, qword ptr [rsp + 0x208]
0x7fffeafd724b:	mov		rdi, rsi
0x7fffeafd724e:	add		rdi, 1
0x7fffeafd7252:	mov		qword ptr [rsp + 0x208], rdi
0x7fffeafd725a:	mov		byte ptr [rsi], dl
0x7fffeafd725c:	fld		xword ptr [rsp + 0x1f20]
0x7fffeafd7263:	mov		r8d, dword ptr [rsp + 0x1b8]
0x7fffeafd726b:	mov		dword ptr [rsp + 0x114], r8d
0x7fffeafd7273:	fild		dword ptr [rsp + 0x114]
0x7fffeafd727a:	fsubp		st(1)
0x7fffeafd727c:	fld		dword ptr [rip + 0x2c14c0e]
0x7fffeafd7282:	fmulp		st(1)
0x7fffeafd7284:	fstp		xword ptr [rsp + 0x1f20]
0x7fffeafd728b:	mov		rsi, qword ptr [rsp + 0x208]
0x7fffeafd7293:	sub		rsi, rax
0x7fffeafd7296:	cmp		rsi, 1
0x7fffeafd729a:	jne		0x7fffeafd72fe
0x7fffeafd72a0:	fld		xword ptr [rsp + 0x1f20]
0x7fffeafd72a7:	fldz		
0x7fffeafd72a9:	fxch		st(1)
0x7fffeafd72ab:	fucomip		st(1)
0x7fffeafd72ad:	fstp		st(0)
0x7fffeafd72af:	jne		0x7fffeafd72e1
0x7fffeafd72b5:	jp		0x7fffeafd72e1
0x7fffeafd72bb:	jmp		0x7fffeafd72c0
0x7fffeafd72c0:	cmp		dword ptr [rsp + 0x1f18], 0
0x7fffeafd72c8:	jg		0x7fffeafd72e1
0x7fffeafd72ce:	mov		eax, dword ptr [rsp + 0x1f14]
0x7fffeafd72d5:	and		eax, 8
0x7fffeafd72d8:	cmp		eax, 0
0x7fffeafd72db:	je		0x7fffeafd72fe
0x7fffeafd72e1:	mov		rax, qword ptr [rsp + 0x208]
0x7fffeafd72e9:	mov		rcx, rax
0x7fffeafd72ec:	add		rcx, 1
0x7fffeafd72f3:	mov		qword ptr [rsp + 0x208], rcx
0x7fffeafd72fb:	mov		byte ptr [rax], 0x2e
0x7fffeafd72fe:	jmp		0x7fffeafd7303
0x7fffeafd7303:	fld		xword ptr [rsp + 0x1f20]
0x7fffeafd730a:	fldz		
0x7fffeafd730c:	fxch		st(1)
0x7fffeafd730e:	fucomip		st(1)
0x7fffeafd7310:	fstp		st(0)
0x7fffeafd7312:	jne		0x7fffeafd71d2
0x7fffeafd7318:	jp		0x7fffeafd71d2
0x7fffeafd731e:	jmp		0x7fffeafd7323
0x7fffeafd7323:	cmp		dword ptr [rsp + 0x1f18], 0
0x7fffeafd732b:	je		0x7fffeafd738b
0x7fffeafd7331:	lea		rax, [rsp + 0x210]
0x7fffeafd7339:	mov		rcx, qword ptr [rsp + 0x208]
0x7fffeafd7341:	sub		rcx, rax
0x7fffeafd7344:	sub		rcx, 2
0x7fffeafd734b:	movsxd		rax, dword ptr [rsp + 0x1f18]
0x7fffeafd7353:	cmp		rcx, rax
0x7fffeafd7356:	jge		0x7fffeafd738b
0x7fffeafd735c:	mov		eax, dword ptr [rsp + 0x1f18]
0x7fffeafd7363:	add		eax, 2
0x7fffeafd7366:	movsxd		rcx, eax
0x7fffeafd7369:	mov		rdx, qword ptr [rsp + 0x1e8]
0x7fffeafd7371:	mov		rsi, qword ptr [rsp + 0x1e0]
0x7fffeafd7379:	sub		rdx, rsi
0x7fffeafd737c:	add		rcx, rdx
0x7fffeafd737f:	mov		dword ptr [rsp + 0x22c], ecx
0x7fffeafd7386:	jmp		0x7fffeafd73bb
0x7fffeafd738b:	lea		rax, [rsp + 0x210]
0x7fffeafd7393:	mov		rcx, qword ptr [rsp + 0x208]
0x7fffeafd739b:	sub		rcx, rax
0x7fffeafd739e:	mov		rax, qword ptr [rsp + 0x1e8]
0x7fffeafd73a6:	mov		rdx, qword ptr [rsp + 0x1e0]
0x7fffeafd73ae:	sub		rax, rdx
0x7fffeafd73b1:	add		rcx, rax
0x7fffeafd73b4:	mov		dword ptr [rsp + 0x22c], ecx
0x7fffeafd73bb:	mov		rdi, qword ptr [rsp + 0x1f38]
0x7fffeafd73c3:	mov		edx, dword ptr [rsp + 0x1f1c]
0x7fffeafd73ca:	mov		eax, dword ptr [rsp + 0x1fc]
0x7fffeafd73d1:	add		eax, dword ptr [rsp + 0x22c]
0x7fffeafd73d8:	mov		r8d, dword ptr [rsp + 0x1f14]
0x7fffeafd73e0:	mov		esi, 0x20
0x7fffeafd73e5:	mov		ecx, eax
0x7fffeafd73e7:	call		0x7fffeafd6a10
0x7fffeafd73ec:	mov		rdi, qword ptr [rsp + 0x1f38]
0x7fffeafd73f4:	mov		rsi, qword ptr [rsp + 0x200]
0x7fffeafd73fc:	movsxd		rdx, dword ptr [rsp + 0x1fc]
0x7fffeafd7404:	call		0x7fffeafd6240
0x7fffeafd7409:	mov		rdi, qword ptr [rsp + 0x1f38]
0x7fffeafd7411:	mov		edx, dword ptr [rsp + 0x1f1c]
0x7fffeafd7418:	mov		eax, dword ptr [rsp + 0x1fc]
0x7fffeafd741f:	add		eax, dword ptr [rsp + 0x22c]
0x7fffeafd7426:	mov		ecx, dword ptr [rsp + 0x1f14]
0x7fffeafd742d:	xor		ecx, 0x10000
0x7fffeafd7433:	mov		esi, 0x30
0x7fffeafd7438:	mov		dword ptr [rsp + 0xf4], ecx
0x7fffeafd743f:	mov		ecx, eax
0x7fffeafd7441:	mov		r8d, dword ptr [rsp + 0xf4]
0x7fffeafd7449:	call		0x7fffeafd6a10
0x7fffeafd744e:	lea		rdi, [rsp + 0x210]
0x7fffeafd7456:	mov		r9, qword ptr [rsp + 0x1f38]
0x7fffeafd745e:	mov		r10, qword ptr [rsp + 0x208]
0x7fffeafd7466:	sub		r10, rdi
0x7fffeafd7469:	mov		qword ptr [rsp + 0xe8], rdi
0x7fffeafd7471:	mov		rdi, r9
0x7fffeafd7474:	mov		rsi, qword ptr [rsp + 0xe8]
0x7fffeafd747c:	mov		rdx, r10
0x7fffeafd747f:	call		0x7fffeafd6240
0x7fffeafd7484:	xor		eax, eax
0x7fffeafd7486:	lea		rdx, [rsp + 0x210]
0x7fffeafd748e:	mov		rdi, qword ptr [rsp + 0x1f38]
0x7fffeafd7496:	movsxd		rsi, dword ptr [rsp + 0x22c]
0x7fffeafd749e:	mov		r9, qword ptr [rsp + 0x1e8]
0x7fffeafd74a6:	mov		r10, qword ptr [rsp + 0x1e0]
0x7fffeafd74ae:	sub		r9, r10
0x7fffeafd74b1:	sub		rsi, r9
0x7fffeafd74b4:	mov		r9, qword ptr [rsp + 0x208]
0x7fffeafd74bc:	sub		r9, rdx
0x7fffeafd74bf:	sub		rsi, r9
0x7fffeafd74c2:	mov		ecx, 0x30
0x7fffeafd74c7:	mov		dword ptr [rsp + 0xe4], esi
0x7fffeafd74ce:	mov		esi, ecx
0x7fffeafd74d0:	mov		edx, dword ptr [rsp + 0xe4]
0x7fffeafd74d7:	mov		ecx, eax
0x7fffeafd74d9:	mov		r8d, eax
0x7fffeafd74dc:	call		0x7fffeafd6a10
0x7fffeafd74e1:	mov		rdi, qword ptr [rsp + 0x1f38]
0x7fffeafd74e9:	mov		rsi, qword ptr [rsp + 0x1e0]
0x7fffeafd74f1:	mov		r9, qword ptr [rsp + 0x1e8]
0x7fffeafd74f9:	mov		r10, qword ptr [rsp + 0x1e0]
0x7fffeafd7501:	sub		r9, r10
0x7fffeafd7504:	mov		rdx, r9
0x7fffeafd7507:	call		0x7fffeafd6240
0x7fffeafd750c:	mov		rdi, qword ptr [rsp + 0x1f38]
0x7fffeafd7514:	mov		edx, dword ptr [rsp + 0x1f1c]
0x7fffeafd751b:	mov		eax, dword ptr [rsp + 0x1fc]
0x7fffeafd7522:	add		eax, dword ptr [rsp + 0x22c]
0x7fffeafd7529:	mov		ecx, dword ptr [rsp + 0x1f14]
0x7fffeafd7530:	xor		ecx, 0x2000
0x7fffeafd7536:	mov		esi, 0x20
0x7fffeafd753b:	mov		dword ptr [rsp + 0xe0], ecx
0x7fffeafd7542:	mov		ecx, eax
0x7fffeafd7544:	mov		r8d, dword ptr [rsp + 0xe0]
0x7fffeafd754c:	call		0x7fffeafd6a10
0x7fffeafd7551:	mov		eax, dword ptr [rsp + 0x1f1c]
0x7fffeafd7558:	mov		ecx, dword ptr [rsp + 0x1fc]
0x7fffeafd755f:	add		ecx, dword ptr [rsp + 0x22c]
0x7fffeafd7566:	cmp		eax, ecx
0x7fffeafd7568:	jle		0x7fffeafd7581
0x7fffeafd756e:	mov		eax, dword ptr [rsp + 0x1f1c]
0x7fffeafd7575:	mov		dword ptr [rsp + 0xdc], eax
0x7fffeafd757c:	jmp		0x7fffeafd7596
0x7fffeafd7581:	mov		eax, dword ptr [rsp + 0x1fc]
0x7fffeafd7588:	add		eax, dword ptr [rsp + 0x22c]
0x7fffeafd758f:	mov		dword ptr [rsp + 0xdc], eax
0x7fffeafd7596:	mov		eax, dword ptr [rsp + 0xdc]
0x7fffeafd759d:	mov		dword ptr [rsp + 0x1f44], eax
0x7fffeafd75a4:	jmp		0x7fffeafd8d48
0x7fffeafd75a9:	cmp		dword ptr [rsp + 0x1f18], 0
0x7fffeafd75b1:	jge		0x7fffeafd75c2
0x7fffeafd75b7:	mov		dword ptr [rsp + 0x1f18], 6
0x7fffeafd75c2:	fld		xword ptr [rsp + 0x1f20]
0x7fffeafd75c9:	fldz		
0x7fffeafd75cb:	fxch		st(1)
0x7fffeafd75cd:	fucomip		st(1)
0x7fffeafd75cf:	fstp		st(0)
0x7fffeafd75d1:	jne		0x7fffeafd75e2
0x7fffeafd75d7:	jp		0x7fffeafd75e2
0x7fffeafd75dd:	jmp		0x7fffeafd7609
0x7fffeafd75e2:	fld		xword ptr [rsp + 0x1f20]
0x7fffeafd75e9:	fld		dword ptr [rip + 0x2c14885]
0x7fffeafd75ef:	fmulp		st(1)
0x7fffeafd75f1:	fstp		xword ptr [rsp + 0x1f20]
0x7fffeafd75f8:	mov		eax, dword ptr [rsp + 0x23c]
0x7fffeafd75ff:	sub		eax, 0x1c
0x7fffeafd7602:	mov		dword ptr [rsp + 0x23c], eax
0x7fffeafd7609:	cmp		dword ptr [rsp + 0x23c], 0
0x7fffeafd7611:	jge		0x7fffeafd763c
0x7fffeafd7617:	lea		rax, [rsp + 0x260]
0x7fffeafd761f:	mov		qword ptr [rsp + 0x240], rax
0x7fffeafd7627:	mov		qword ptr [rsp + 0x248], rax
0x7fffeafd762f:	mov		qword ptr [rsp + 0x258], rax
0x7fffeafd7637:	jmp		0x7fffeafd766e
0x7fffeafd763c:	lea		rax, [rsp + 0x260]
0x7fffeafd7644:	add		rax, 0x1cac
0x7fffeafd764a:	add		rax, -0x100
0x7fffeafd7650:	add		rax, -4
0x7fffeafd7656:	mov		qword ptr [rsp + 0x240], rax
0x7fffeafd765e:	mov		qword ptr [rsp + 0x248], rax
0x7fffeafd7666:	mov		qword ptr [rsp + 0x258], rax
0x7fffeafd766e:	jmp		0x7fffeafd7673
0x7fffeafd7673:	fld		xword ptr [rsp + 0x1f20]
0x7fffeafd767a:	fnstcw		word ptr [rsp + 0x10a]
0x7fffeafd7681:	movzx		eax, word ptr [rsp + 0x10a]
0x7fffeafd7689:	or		eax, 0xc00
0x7fffeafd768e:	mov		word ptr [rsp + 0x108], ax
0x7fffeafd7696:	fldcw		word ptr [rsp + 0x108]
0x7fffeafd769d:	fistp		qword ptr [rsp + 0x120]
0x7fffeafd76a4:	fldcw		word ptr [rsp + 0x10a]
0x7fffeafd76ab:	mov		ecx, dword ptr [rsp + 0x120]
0x7fffeafd76b2:	mov		rdx, qword ptr [rsp + 0x240]
0x7fffeafd76ba:	mov		dword ptr [rdx], ecx
0x7fffeafd76bc:	fld		xword ptr [rsp + 0x1f20]
0x7fffeafd76c3:	mov		rdx, qword ptr [rsp + 0x240]
0x7fffeafd76cb:	mov		rsi, rdx
0x7fffeafd76ce:	add		rsi, 4
0x7fffeafd76d2:	mov		qword ptr [rsp + 0x240], rsi
0x7fffeafd76da:	mov		ecx, dword ptr [rdx]
0x7fffeafd76dc:	mov		edx, ecx
0x7fffeafd76de:	mov		qword ptr [rsp + 0x118], rdx
0x7fffeafd76e6:	fild		qword ptr [rsp + 0x118]
0x7fffeafd76ed:	fsubp		st(1)
0x7fffeafd76ef:	fld		dword ptr [rip + 0x2c14783]
0x7fffeafd76f5:	fmulp		st(1)
0x7fffeafd76f7:	fstp		xword ptr [rsp + 0x1f20]
0x7fffeafd76fe:	fld		xword ptr [rsp + 0x1f20]
0x7fffeafd7705:	fldz		
0x7fffeafd7707:	fxch		st(1)
0x7fffeafd7709:	fucomip		st(1)
0x7fffeafd770b:	fstp		st(0)
0x7fffeafd770d:	jne		0x7fffeafd7673
0x7fffeafd7713:	jp		0x7fffeafd7673
0x7fffeafd7719:	jmp		0x7fffeafd771e
0x7fffeafd771e:	jmp		0x7fffeafd7723
0x7fffeafd7723:	cmp		dword ptr [rsp + 0x23c], 0
0x7fffeafd772b:	jle		0x7fffeafd78da
0x7fffeafd7731:	mov		dword ptr [rsp + 0x1b4], 0
0x7fffeafd773c:	mov		eax, 0x1d
0x7fffeafd7741:	cmp		eax, dword ptr [rsp + 0x23c]
0x7fffeafd7748:	jge		0x7fffeafd775f
0x7fffeafd774e:	mov		eax, 0x1d
0x7fffeafd7753:	mov		dword ptr [rsp + 0xd8], eax
0x7fffeafd775a:	jmp		0x7fffeafd776d
0x7fffeafd775f:	mov		eax, dword ptr [rsp + 0x23c]
0x7fffeafd7766:	mov		dword ptr [rsp + 0xd8], eax
0x7fffeafd776d:	mov		eax, dword ptr [rsp + 0xd8]
0x7fffeafd7774:	mov		dword ptr [rsp + 0x1b0], eax
0x7fffeafd777b:	mov		rcx, qword ptr [rsp + 0x240]
0x7fffeafd7783:	add		rcx, -4
0x7fffeafd778a:	mov		qword ptr [rsp + 0x250], rcx
0x7fffeafd7792:	mov		rax, qword ptr [rsp + 0x250]
0x7fffeafd779a:	cmp		rax, qword ptr [rsp + 0x258]
0x7fffeafd77a2:	jb		0x7fffeafd7820
0x7fffeafd77a8:	mov		rax, qword ptr [rsp + 0x250]
0x7fffeafd77b0:	mov		ecx, dword ptr [rax]
0x7fffeafd77b2:	mov		eax, ecx
0x7fffeafd77b4:	mov		ecx, dword ptr [rsp + 0x1b0]
0x7fffeafd77bb:	shl		rax, cl
0x7fffeafd77be:	mov		edx, dword ptr [rsp + 0x1b4]
0x7fffeafd77c5:	mov		esi, edx
0x7fffeafd77c7:	add		rax, rsi
0x7fffeafd77ca:	mov		qword ptr [rsp + 0x1a8], rax
0x7fffeafd77d2:	mov		rax, qword ptr [rsp + 0x1a8]
0x7fffeafd77da:	xor		edx, edx
0x7fffeafd77dc:	mov		esi, 0x3b9aca00
0x7fffeafd77e1:	div		rsi
0x7fffeafd77e4:	mov		rdi, qword ptr [rsp + 0x250]
0x7fffeafd77ec:	mov		dword ptr [rdi], edx
0x7fffeafd77ee:	mov		rdi, qword ptr [rsp + 0x1a8]
0x7fffeafd77f6:	mov		rax, rdi
0x7fffeafd77f9:	xor		edx, edx
0x7fffeafd77fb:	div		rsi
0x7fffeafd77fe:	mov		dword ptr [rsp + 0x1b4], eax
0x7fffeafd7805:	mov		rax, qword ptr [rsp + 0x250]
0x7fffeafd780d:	add		rax, -4
0x7fffeafd7813:	mov		qword ptr [rsp + 0x250], rax
0x7fffeafd781b:	jmp		0x7fffeafd7792
0x7fffeafd7820:	cmp		dword ptr [rsp + 0x1b4], 0
0x7fffeafd7828:	je		0x7fffeafd7852
0x7fffeafd782e:	mov		eax, dword ptr [rsp + 0x1b4]
0x7fffeafd7835:	mov		rcx, qword ptr [rsp + 0x258]
0x7fffeafd783d:	mov		rdx, rcx
0x7fffeafd7840:	add		rdx, -4
0x7fffeafd7847:	mov		qword ptr [rsp + 0x258], rdx
0x7fffeafd784f:	mov		dword ptr [rcx - 4], eax
0x7fffeafd7852:	jmp		0x7fffeafd7857
0x7fffeafd7857:	xor		eax, eax
0x7fffeafd7859:	mov		rcx, qword ptr [rsp + 0x240]
0x7fffeafd7861:	cmp		rcx, qword ptr [rsp + 0x258]
0x7fffeafd7869:	mov		byte ptr [rsp + 0xd7], al
0x7fffeafd7870:	jbe		0x7fffeafd788f
0x7fffeafd7876:	mov		rax, qword ptr [rsp + 0x240]
0x7fffeafd787e:	cmp		dword ptr [rax - 4], 0
0x7fffeafd7882:	setne		cl
0x7fffeafd7885:	xor		cl, 0xff
0x7fffeafd7888:	mov		byte ptr [rsp + 0xd7], cl
0x7fffeafd788f:	mov		al, byte ptr [rsp + 0xd7]
0x7fffeafd7896:	test		al, 1
0x7fffeafd7898:	jne		0x7fffeafd78a3
0x7fffeafd789e:	jmp		0x7fffeafd78be
0x7fffeafd78a3:	mov		rax, qword ptr [rsp + 0x240]
0x7fffeafd78ab:	add		rax, -4
0x7fffeafd78b1:	mov		qword ptr [rsp + 0x240], rax
0x7fffeafd78b9:	jmp		0x7fffeafd7857
0x7fffeafd78be:	mov		eax, dword ptr [rsp + 0x1b0]
0x7fffeafd78c5:	mov		ecx, dword ptr [rsp + 0x23c]
0x7fffeafd78cc:	sub		ecx, eax
0x7fffeafd78ce:	mov		dword ptr [rsp + 0x23c], ecx
0x7fffeafd78d5:	jmp		0x7fffeafd7723
0x7fffeafd78da:	jmp		0x7fffeafd78df
0x7fffeafd78df:	cmp		dword ptr [rsp + 0x23c], 0
0x7fffeafd78e7:	jge		0x7fffeafd7b13
0x7fffeafd78ed:	xor		eax, eax
0x7fffeafd78ef:	mov		dword ptr [rsp + 0x1a4], 0
0x7fffeafd78fa:	sub		eax, dword ptr [rsp + 0x23c]
0x7fffeafd7901:	mov		ecx, 9
0x7fffeafd7906:	cmp		ecx, eax
0x7fffeafd7908:	jge		0x7fffeafd791f
0x7fffeafd790e:	mov		eax, 9
0x7fffeafd7913:	mov		dword ptr [rsp + 0xd0], eax
0x7fffeafd791a:	jmp		0x7fffeafd792f
0x7fffeafd791f:	xor		eax, eax
0x7fffeafd7921:	sub		eax, dword ptr [rsp + 0x23c]
0x7fffeafd7928:	mov		dword ptr [rsp + 0xd0], eax
0x7fffeafd792f:	mov		eax, dword ptr [rsp + 0xd0]
0x7fffeafd7936:	mov		dword ptr [rsp + 0x194], eax
0x7fffeafd793d:	mov		eax, dword ptr [rsp + 0x1f18]
0x7fffeafd7944:	add		eax, 0x15
0x7fffeafd7947:	add		eax, 8
0x7fffeafd794a:	cdq		
0x7fffeafd794b:	mov		ecx, 9
0x7fffeafd7950:	idiv		ecx
0x7fffeafd7952:	add		eax, 1
0x7fffeafd7955:	mov		dword ptr [rsp + 0x190], eax
0x7fffeafd795c:	mov		rsi, qword ptr [rsp + 0x258]
0x7fffeafd7964:	mov		qword ptr [rsp + 0x250], rsi
0x7fffeafd796c:	mov		rax, qword ptr [rsp + 0x250]
0x7fffeafd7974:	cmp		rax, qword ptr [rsp + 0x240]
0x7fffeafd797c:	jae		0x7fffeafd7a12
0x7fffeafd7982:	mov		rax, qword ptr [rsp + 0x250]
0x7fffeafd798a:	mov		ecx, dword ptr [rax]
0x7fffeafd798c:	mov		edx, dword ptr [rsp + 0x194]
0x7fffeafd7993:	mov		dword ptr [rsp + 0xcc], ecx
0x7fffeafd799a:	mov		ecx, edx
0x7fffeafd799c:	mov		edx, 1
0x7fffeafd79a1:	shl		edx, cl
0x7fffeafd79a3:	sub		edx, 1
0x7fffeafd79a6:	mov		esi, dword ptr [rsp + 0xcc]
0x7fffeafd79ad:	and		esi, edx
0x7fffeafd79af:	mov		dword ptr [rsp + 0x18c], esi
0x7fffeafd79b6:	mov		rax, qword ptr [rsp + 0x250]
0x7fffeafd79be:	mov		edx, dword ptr [rax]
0x7fffeafd79c0:	mov		ecx, dword ptr [rsp + 0x194]
0x7fffeafd79c7:	shr		edx, cl
0x7fffeafd79c9:	add		edx, dword ptr [rsp + 0x1a4]
0x7fffeafd79d0:	mov		rax, qword ptr [rsp + 0x250]
0x7fffeafd79d8:	mov		dword ptr [rax], edx
0x7fffeafd79da:	mov		ecx, dword ptr [rsp + 0x194]
0x7fffeafd79e1:	mov		edx, 0x3b9aca00
0x7fffeafd79e6:	sar		edx, cl
0x7fffeafd79e8:	imul		edx, dword ptr [rsp + 0x18c]
0x7fffeafd79f0:	mov		dword ptr [rsp + 0x1a4], edx
0x7fffeafd79f7:	mov		rax, qword ptr [rsp + 0x250]
0x7fffeafd79ff:	add		rax, 4
0x7fffeafd7a05:	mov		qword ptr [rsp + 0x250], rax
0x7fffeafd7a0d:	jmp		0x7fffeafd796c
0x7fffeafd7a12:	mov		rax, qword ptr [rsp + 0x258]
0x7fffeafd7a1a:	cmp		dword ptr [rax], 0
0x7fffeafd7a1d:	jne		0x7fffeafd7a39
0x7fffeafd7a23:	mov		rax, qword ptr [rsp + 0x258]
0x7fffeafd7a2b:	add		rax, 4
0x7fffeafd7a31:	mov		qword ptr [rsp + 0x258], rax
0x7fffeafd7a39:	cmp		dword ptr [rsp + 0x1a4], 0
0x7fffeafd7a41:	je		0x7fffeafd7a6a
0x7fffeafd7a47:	mov		eax, dword ptr [rsp + 0x1a4]
0x7fffeafd7a4e:	mov		rcx, qword ptr [rsp + 0x240]
0x7fffeafd7a56:	mov		rdx, rcx
0x7fffeafd7a59:	add		rdx, 4
0x7fffeafd7a60:	mov		qword ptr [rsp + 0x240], rdx
0x7fffeafd7a68:	mov		dword ptr [rcx], eax
0x7fffeafd7a6a:	mov		eax, dword ptr [rsp + 0x1f10]
0x7fffeafd7a71:	or		eax, 0x20
0x7fffeafd7a74:	cmp		eax, 0x66
0x7fffeafd7a77:	jne		0x7fffeafd7a92
0x7fffeafd7a7d:	mov		rax, qword ptr [rsp + 0x248]
0x7fffeafd7a85:	mov		qword ptr [rsp + 0xc0], rax
0x7fffeafd7a8d:	jmp		0x7fffeafd7aa2
0x7fffeafd7a92:	mov		rax, qword ptr [rsp + 0x258]
0x7fffeafd7a9a:	mov		qword ptr [rsp + 0xc0], rax
0x7fffeafd7aa2:	mov		rax, qword ptr [rsp + 0xc0]
0x7fffeafd7aaa:	mov		qword ptr [rsp + 0x198], rax
0x7fffeafd7ab2:	mov		rax, qword ptr [rsp + 0x240]
0x7fffeafd7aba:	mov		rcx, qword ptr [rsp + 0x198]
0x7fffeafd7ac2:	sub		rax, rcx
0x7fffeafd7ac5:	sar		rax, 2
0x7fffeafd7ac9:	movsxd		rcx, dword ptr [rsp + 0x190]
0x7fffeafd7ad1:	cmp		rax, rcx
0x7fffeafd7ad4:	jle		0x7fffeafd7af9
0x7fffeafd7ada:	mov		rax, qword ptr [rsp + 0x198]
0x7fffeafd7ae2:	movsxd		rcx, dword ptr [rsp + 0x190]
0x7fffeafd7aea:	shl		rcx, 2
0x7fffeafd7aee:	add		rax, rcx
0x7fffeafd7af1:	mov		qword ptr [rsp + 0x240], rax
0x7fffeafd7af9:	mov		eax, dword ptr [rsp + 0x194]
0x7fffeafd7b00:	add		eax, dword ptr [rsp + 0x23c]
0x7fffeafd7b07:	mov		dword ptr [rsp + 0x23c], eax
0x7fffeafd7b0e:	jmp		0x7fffeafd78df
0x7fffeafd7b13:	mov		rax, qword ptr [rsp + 0x258]
0x7fffeafd7b1b:	cmp		rax, qword ptr [rsp + 0x240]
0x7fffeafd7b23:	jae		0x7fffeafd7b9f
0x7fffeafd7b29:	mov		dword ptr [rsp + 0x234], 0xa
0x7fffeafd7b34:	mov		rax, qword ptr [rsp + 0x248]
0x7fffeafd7b3c:	mov		rcx, qword ptr [rsp + 0x258]
0x7fffeafd7b44:	sub		rax, rcx
0x7fffeafd7b47:	sar		rax, 2
0x7fffeafd7b4b:	imul		rax, rax, 9
0x7fffeafd7b52:	mov		dword ptr [rsp + 0x238], eax
0x7fffeafd7b59:	mov		rax, qword ptr [rsp + 0x258]
0x7fffeafd7b61:	mov		ecx, dword ptr [rax]
0x7fffeafd7b63:	cmp		ecx, dword ptr [rsp + 0x234]
0x7fffeafd7b6a:	jb		0x7fffeafd7b9a
0x7fffeafd7b70:	jmp		0x7fffeafd7b75
0x7fffeafd7b75:	imul		eax, dword ptr [rsp + 0x234], 0xa
0x7fffeafd7b7d:	mov		dword ptr [rsp + 0x234], eax
0x7fffeafd7b84:	mov		eax, dword ptr [rsp + 0x238]
0x7fffeafd7b8b:	add		eax, 1
0x7fffeafd7b8e:	mov		dword ptr [rsp + 0x238], eax
0x7fffeafd7b95:	jmp		0x7fffeafd7b59
0x7fffeafd7b9a:	jmp		0x7fffeafd7baa
0x7fffeafd7b9f:	mov		dword ptr [rsp + 0x238], 0
0x7fffeafd7baa:	xor		eax, eax
0x7fffeafd7bac:	mov		ecx, dword ptr [rsp + 0x1f18]
0x7fffeafd7bb3:	mov		edx, dword ptr [rsp + 0x1f10]
0x7fffeafd7bba:	or		edx, 0x20
0x7fffeafd7bbd:	cmp		edx, 0x66
0x7fffeafd7bc0:	setne		sil
0x7fffeafd7bc4:	and		sil, 1
0x7fffeafd7bc8:	movzx		edx, sil
0x7fffeafd7bcc:	imul		edx, dword ptr [rsp + 0x238]
0x7fffeafd7bd4:	sub		ecx, edx
0x7fffeafd7bd6:	mov		edx, dword ptr [rsp + 0x1f10]
0x7fffeafd7bdd:	or		edx, 0x20
0x7fffeafd7be0:	cmp		edx, 0x67
0x7fffeafd7be3:	mov		dword ptr [rsp + 0xbc], ecx
0x7fffeafd7bea:	mov		byte ptr [rsp + 0xbb], al
0x7fffeafd7bf1:	jne		0x7fffeafd7c09
0x7fffeafd7bf7:	cmp		dword ptr [rsp + 0x1f18], 0
0x7fffeafd7bff:	setne		al
0x7fffeafd7c02:	mov		byte ptr [rsp + 0xbb], al
0x7fffeafd7c09:	mov		al, byte ptr [rsp + 0xbb]
0x7fffeafd7c10:	and		al, 1
0x7fffeafd7c12:	movzx		ecx, al
0x7fffeafd7c15:	mov		edx, dword ptr [rsp + 0xbc]
0x7fffeafd7c1c:	sub		edx, ecx
0x7fffeafd7c1e:	mov		dword ptr [rsp + 0x230], edx
0x7fffeafd7c25:	movsxd		rsi, dword ptr [rsp + 0x230]
0x7fffeafd7c2d:	mov		rdi, qword ptr [rsp + 0x240]
0x7fffeafd7c35:	mov		r8, qword ptr [rsp + 0x248]
0x7fffeafd7c3d:	sub		rdi, r8
0x7fffeafd7c40:	sar		rdi, 2
0x7fffeafd7c44:	sub		rdi, 1
0x7fffeafd7c4b:	imul		rdi, rdi, 9
0x7fffeafd7c52:	cmp		rsi, rdi
0x7fffeafd7c55:	jge		0x7fffeafd801b
0x7fffeafd7c5b:	mov		rax, qword ptr [rsp + 0x248]
0x7fffeafd7c63:	add		rax, 4
0x7fffeafd7c69:	mov		ecx, dword ptr [rsp + 0x230]
0x7fffeafd7c70:	add		ecx, 0x24000
0x7fffeafd7c76:	mov		qword ptr [rsp + 0xb0], rax
0x7fffeafd7c7e:	mov		eax, ecx
0x7fffeafd7c80:	cdq		
0x7fffeafd7c81:	mov		ecx, 9
0x7fffeafd7c86:	idiv		ecx
0x7fffeafd7c88:	sub		eax, 0x4000
0x7fffeafd7c8d:	movsxd		rsi, eax
0x7fffeafd7c90:	shl		rsi, 2
0x7fffeafd7c94:	mov		rdi, qword ptr [rsp + 0xb0]
0x7fffeafd7c9c:	add		rdi, rsi
0x7fffeafd7c9f:	mov		qword ptr [rsp + 0x250], rdi
0x7fffeafd7ca7:	mov		eax, dword ptr [rsp + 0x230]
0x7fffeafd7cae:	add		eax, 0x24000
0x7fffeafd7cb3:	mov		dword ptr [rsp + 0x230], eax
0x7fffeafd7cba:	mov		eax, dword ptr [rsp + 0x230]
0x7fffeafd7cc1:	cdq		
0x7fffeafd7cc2:	idiv		ecx
0x7fffeafd7cc4:	mov		dword ptr [rsp + 0x230], edx
0x7fffeafd7ccb:	mov		dword ptr [rsp + 0x234], 0xa
0x7fffeafd7cd6:	mov		ecx, dword ptr [rsp + 0x230]
0x7fffeafd7cdd:	add		ecx, 1
0x7fffeafd7ce0:	mov		dword ptr [rsp + 0x230], ecx
0x7fffeafd7ce7:	cmp		dword ptr [rsp + 0x230], 9
0x7fffeafd7cef:	jge		0x7fffeafd7d1f
0x7fffeafd7cf5:	jmp		0x7fffeafd7cfa
0x7fffeafd7cfa:	imul		eax, dword ptr [rsp + 0x234], 0xa
0x7fffeafd7d02:	mov		dword ptr [rsp + 0x234], eax
0x7fffeafd7d09:	mov		eax, dword ptr [rsp + 0x230]
0x7fffeafd7d10:	add		eax, 1
0x7fffeafd7d13:	mov		dword ptr [rsp + 0x230], eax
0x7fffeafd7d1a:	jmp		0x7fffeafd7ce7
0x7fffeafd7d1f:	mov		rax, qword ptr [rsp + 0x250]
0x7fffeafd7d27:	mov		eax, dword ptr [rax]
0x7fffeafd7d29:	xor		edx, edx
0x7fffeafd7d2b:	div		dword ptr [rsp + 0x234]
0x7fffeafd7d32:	mov		dword ptr [rsp + 0x188], edx
0x7fffeafd7d39:	cmp		dword ptr [rsp + 0x188], 0
0x7fffeafd7d41:	jne		0x7fffeafd7d63
0x7fffeafd7d47:	mov		rax, qword ptr [rsp + 0x250]
0x7fffeafd7d4f:	add		rax, 4
0x7fffeafd7d55:	cmp		rax, qword ptr [rsp + 0x240]
0x7fffeafd7d5d:	je		0x7fffeafd7fe0
0x7fffeafd7d63:	fld		dword ptr [rip + 0x2c14113]
0x7fffeafd7d69:	fstp		xword ptr [rsp + 0x170]
0x7fffeafd7d70:	mov		rax, qword ptr [rsp + 0x250]
0x7fffeafd7d78:	mov		eax, dword ptr [rax]
0x7fffeafd7d7a:	xor		edx, edx
0x7fffeafd7d7c:	div		dword ptr [rsp + 0x234]
0x7fffeafd7d83:	and		eax, 1
0x7fffeafd7d86:	cmp		eax, 0
0x7fffeafd7d89:	je		0x7fffeafd7da5
0x7fffeafd7d8f:	fld		xword ptr [rsp + 0x170]
0x7fffeafd7d96:	fld		dword ptr [rip + 0x2c140e4]
0x7fffeafd7d9c:	faddp		st(1)
0x7fffeafd7d9e:	fstp		xword ptr [rsp + 0x170]
0x7fffeafd7da5:	mov		eax, dword ptr [rsp + 0x188]
0x7fffeafd7dac:	mov		ecx, dword ptr [rsp + 0x234]
0x7fffeafd7db3:	mov		dword ptr [rsp + 0xac], eax
0x7fffeafd7dba:	mov		eax, ecx
0x7fffeafd7dbc:	cdq		
0x7fffeafd7dbd:	mov		ecx, 2
0x7fffeafd7dc2:	idiv		ecx
0x7fffeafd7dc4:	mov		ecx, dword ptr [rsp + 0xac]
0x7fffeafd7dcb:	cmp		ecx, eax
0x7fffeafd7dcd:	jae		0x7fffeafd7de5
0x7fffeafd7dd3:	fld		dword ptr [rip + 0x2c140af]
0x7fffeafd7dd9:	fstp		xword ptr [rsp + 0x160]
0x7fffeafd7de0:	jmp		0x7fffeafd7e4f
0x7fffeafd7de5:	mov		eax, dword ptr [rsp + 0x188]
0x7fffeafd7dec:	mov		ecx, dword ptr [rsp + 0x234]
0x7fffeafd7df3:	mov		dword ptr [rsp + 0xa8], eax
0x7fffeafd7dfa:	mov		eax, ecx
0x7fffeafd7dfc:	cdq		
0x7fffeafd7dfd:	mov		ecx, 2
0x7fffeafd7e02:	idiv		ecx
0x7fffeafd7e04:	mov		ecx, dword ptr [rsp + 0xa8]
0x7fffeafd7e0b:	cmp		ecx, eax
0x7fffeafd7e0d:	jne		0x7fffeafd7e3d
0x7fffeafd7e13:	mov		rax, qword ptr [rsp + 0x250]
0x7fffeafd7e1b:	add		rax, 4
0x7fffeafd7e21:	cmp		rax, qword ptr [rsp + 0x240]
0x7fffeafd7e29:	jne		0x7fffeafd7e3d
0x7fffeafd7e2f:	fld1		
0x7fffeafd7e31:	fstp		xword ptr [rsp + 0x160]
0x7fffeafd7e38:	jmp		0x7fffeafd7e4a
0x7fffeafd7e3d:	fld		dword ptr [rip + 0x2c14041]
0x7fffeafd7e43:	fstp		xword ptr [rsp + 0x160]
0x7fffeafd7e4a:	jmp		0x7fffeafd7e4f
0x7fffeafd7e4f:	cmp		dword ptr [rsp + 0x1fc], 0
0x7fffeafd7e57:	je		0x7fffeafd7e91
0x7fffeafd7e5d:	mov		rax, qword ptr [rsp + 0x200]
0x7fffeafd7e65:	movsx		ecx, byte ptr [rax]
0x7fffeafd7e68:	cmp		ecx, 0x2d
0x7fffeafd7e6b:	jne		0x7fffeafd7e91
0x7fffeafd7e71:	fld		xword ptr [rsp + 0x170]
0x7fffeafd7e78:	fchs		
0x7fffeafd7e7a:	fstp		xword ptr [rsp + 0x170]
0x7fffeafd7e81:	fld		xword ptr [rsp + 0x160]
0x7fffeafd7e88:	fchs		
0x7fffeafd7e8a:	fstp		xword ptr [rsp + 0x160]
0x7fffeafd7e91:	mov		eax, dword ptr [rsp + 0x188]
0x7fffeafd7e98:	mov		rcx, qword ptr [rsp + 0x250]
0x7fffeafd7ea0:	mov		edx, dword ptr [rcx]
0x7fffeafd7ea2:	sub		edx, eax
0x7fffeafd7ea4:	mov		dword ptr [rcx], edx
0x7fffeafd7ea6:	fld		xword ptr [rsp + 0x170]
0x7fffeafd7ead:	fld		xword ptr [rsp + 0x160]
0x7fffeafd7eb4:	fadd		st(1)
0x7fffeafd7eb6:	fucomip		st(1)
0x7fffeafd7eb8:	fstp		st(0)
0x7fffeafd7eba:	jne		0x7fffeafd7ecb
0x7fffeafd7ec0:	jp		0x7fffeafd7ecb
0x7fffeafd7ec6:	jmp		0x7fffeafd7fdb
0x7fffeafd7ecb:	mov		rax, qword ptr [rsp + 0x250]
0x7fffeafd7ed3:	mov		ecx, dword ptr [rax]
0x7fffeafd7ed5:	add		ecx, dword ptr [rsp + 0x234]
0x7fffeafd7edc:	mov		rax, qword ptr [rsp + 0x250]
0x7fffeafd7ee4:	mov		dword ptr [rax], ecx
0x7fffeafd7ee6:	mov		rax, qword ptr [rsp + 0x250]
0x7fffeafd7eee:	cmp		dword ptr [rax], 0x3b9ac9ff
0x7fffeafd7ef4:	jbe		0x7fffeafd7f65
0x7fffeafd7efa:	mov		rax, qword ptr [rsp + 0x250]
0x7fffeafd7f02:	mov		rcx, rax
0x7fffeafd7f05:	add		rcx, -4
0x7fffeafd7f0c:	mov		qword ptr [rsp + 0x250], rcx
0x7fffeafd7f14:	mov		dword ptr [rax], 0
0x7fffeafd7f1a:	mov		rax, qword ptr [rsp + 0x250]
0x7fffeafd7f22:	cmp		rax, qword ptr [rsp + 0x258]
0x7fffeafd7f2a:	jae		0x7fffeafd7f51
0x7fffeafd7f30:	mov		rax, qword ptr [rsp + 0x258]
0x7fffeafd7f38:	mov		rcx, rax
0x7fffeafd7f3b:	add		rcx, -4
0x7fffeafd7f42:	mov		qword ptr [rsp + 0x258], rcx
0x7fffeafd7f4a:	mov		dword ptr [rax - 4], 0
0x7fffeafd7f51:	mov		rax, qword ptr [rsp + 0x250]
0x7fffeafd7f59:	mov		ecx, dword ptr [rax]
0x7fffeafd7f5b:	add		ecx, 1
0x7fffeafd7f5e:	mov		dword ptr [rax], ecx
0x7fffeafd7f60:	jmp		0x7fffeafd7ee6
0x7fffeafd7f65:	mov		dword ptr [rsp + 0x234], 0xa
0x7fffeafd7f70:	mov		rax, qword ptr [rsp + 0x248]
0x7fffeafd7f78:	mov		rcx, qword ptr [rsp + 0x258]
0x7fffeafd7f80:	sub		rax, rcx
0x7fffeafd7f83:	sar		rax, 2
0x7fffeafd7f87:	imul		rax, rax, 9
0x7fffeafd7f8e:	mov		dword ptr [rsp + 0x238], eax
0x7fffeafd7f95:	mov		rax, qword ptr [rsp + 0x258]
0x7fffeafd7f9d:	mov		ecx, dword ptr [rax]
0x7fffeafd7f9f:	cmp		ecx, dword ptr [rsp + 0x234]
0x7fffeafd7fa6:	jb		0x7fffeafd7fd6
0x7fffeafd7fac:	jmp		0x7fffeafd7fb1
0x7fffeafd7fb1:	imul		eax, dword ptr [rsp + 0x234], 0xa
0x7fffeafd7fb9:	mov		dword ptr [rsp + 0x234], eax
0x7fffeafd7fc0:	mov		eax, dword ptr [rsp + 0x238]
0x7fffeafd7fc7:	add		eax, 1
0x7fffeafd7fca:	mov		dword ptr [rsp + 0x238], eax
0x7fffeafd7fd1:	jmp		0x7fffeafd7f95
0x7fffeafd7fd6:	jmp		0x7fffeafd7fdb
0x7fffeafd7fdb:	jmp		0x7fffeafd7fe0
0x7fffeafd7fe0:	mov		rax, qword ptr [rsp + 0x240]
0x7fffeafd7fe8:	mov		rcx, qword ptr [rsp + 0x250]
0x7fffeafd7ff0:	add		rcx, 4
0x7fffeafd7ff7:	cmp		rax, rcx
0x7fffeafd7ffa:	jbe		0x7fffeafd8016
0x7fffeafd8000:	mov		rax, qword ptr [rsp + 0x250]
0x7fffeafd8008:	add		rax, 4
0x7fffeafd800e:	mov		qword ptr [rsp + 0x240], rax
0x7fffeafd8016:	jmp		0x7fffeafd801b
0x7fffeafd801b:	jmp		0x7fffeafd8020
0x7fffeafd8020:	xor		eax, eax
0x7fffeafd8022:	mov		rcx, qword ptr [rsp + 0x240]
0x7fffeafd802a:	cmp		rcx, qword ptr [rsp + 0x258]
0x7fffeafd8032:	mov		byte ptr [rsp + 0xa7], al
0x7fffeafd8039:	jbe		0x7fffeafd8058
0x7fffeafd803f:	mov		rax, qword ptr [rsp + 0x240]
0x7fffeafd8047:	cmp		dword ptr [rax - 4], 0
0x7fffeafd804b:	setne		cl
0x7fffeafd804e:	xor		cl, 0xff
0x7fffeafd8051:	mov		byte ptr [rsp + 0xa7], cl
0x7fffeafd8058:	mov		al, byte ptr [rsp + 0xa7]
0x7fffeafd805f:	test		al, 1
0x7fffeafd8061:	jne		0x7fffeafd806c
0x7fffeafd8067:	jmp		0x7fffeafd808c
0x7fffeafd806c:	jmp		0x7fffeafd8071
0x7fffeafd8071:	mov		rax, qword ptr [rsp + 0x240]
0x7fffeafd8079:	add		rax, -4
0x7fffeafd807f:	mov		qword ptr [rsp + 0x240], rax
0x7fffeafd8087:	jmp		0x7fffeafd8020
0x7fffeafd808c:	mov		eax, dword ptr [rsp + 0x1f10]
0x7fffeafd8093:	or		eax, 0x20
0x7fffeafd8096:	cmp		eax, 0x67
0x7fffeafd8099:	jne		0x7fffeafd84d5
0x7fffeafd809f:	cmp		dword ptr [rsp + 0x1f18], 0
0x7fffeafd80a7:	jne		0x7fffeafd80be
0x7fffeafd80ad:	mov		eax, dword ptr [rsp + 0x1f18]
0x7fffeafd80b4:	add		eax, 1
0x7fffeafd80b7:	mov		dword ptr [rsp + 0x1f18], eax
0x7fffeafd80be:	mov		eax, dword ptr [rsp + 0x1f18]
0x7fffeafd80c5:	cmp		eax, dword ptr [rsp + 0x238]
0x7fffeafd80cc:	jle		0x7fffeafd8110
0x7fffeafd80d2:	cmp		dword ptr [rsp + 0x238], -4
0x7fffeafd80da:	jl		0x7fffeafd8110
0x7fffeafd80e0:	mov		eax, dword ptr [rsp + 0x1f10]
0x7fffeafd80e7:	add		eax, -1
0x7fffeafd80ea:	mov		dword ptr [rsp + 0x1f10], eax
0x7fffeafd80f1:	mov		eax, dword ptr [rsp + 0x238]
0x7fffeafd80f8:	add		eax, 1
0x7fffeafd80fb:	mov		ecx, dword ptr [rsp + 0x1f18]
0x7fffeafd8102:	sub		ecx, eax
0x7fffeafd8104:	mov		dword ptr [rsp + 0x1f18], ecx
0x7fffeafd810b:	jmp		0x7fffeafd8132
0x7fffeafd8110:	mov		eax, dword ptr [rsp + 0x1f10]
0x7fffeafd8117:	sub		eax, 2
0x7fffeafd811a:	mov		dword ptr [rsp + 0x1f10], eax
0x7fffeafd8121:	mov		eax, dword ptr [rsp + 0x1f18]
0x7fffeafd8128:	add		eax, -1
0x7fffeafd812b:	mov		dword ptr [rsp + 0x1f18], eax
0x7fffeafd8132:	mov		eax, dword ptr [rsp + 0x1f14]
0x7fffeafd8139:	and		eax, 8
0x7fffeafd813c:	cmp		eax, 0
0x7fffeafd813f:	jne		0x7fffeafd84d0
0x7fffeafd8145:	mov		rax, qword ptr [rsp + 0x240]
0x7fffeafd814d:	cmp		rax, qword ptr [rsp + 0x258]
0x7fffeafd8155:	jbe		0x7fffeafd81cf
0x7fffeafd815b:	mov		rax, qword ptr [rsp + 0x240]
0x7fffeafd8163:	cmp		dword ptr [rax - 4], 0
0x7fffeafd8167:	je		0x7fffeafd81cf
0x7fffeafd816d:	mov		dword ptr [rsp + 0x234], 0xa
0x7fffeafd8178:	mov		dword ptr [rsp + 0x230], 0
0x7fffeafd8183:	mov		rax, qword ptr [rsp + 0x240]
0x7fffeafd818b:	mov		eax, dword ptr [rax - 4]
0x7fffeafd818e:	xor		edx, edx
0x7fffeafd8190:	div		dword ptr [rsp + 0x234]
0x7fffeafd8197:	cmp		edx, 0
0x7fffeafd819a:	jne		0x7fffeafd81ca
0x7fffeafd81a0:	jmp		0x7fffeafd81a5
0x7fffeafd81a5:	imul		eax, dword ptr [rsp + 0x234], 0xa
0x7fffeafd81ad:	mov		dword ptr [rsp + 0x234], eax
0x7fffeafd81b4:	mov		eax, dword ptr [rsp + 0x230]
0x7fffeafd81bb:	add		eax, 1
0x7fffeafd81be:	mov		dword ptr [rsp + 0x230], eax
0x7fffeafd81c5:	jmp		0x7fffeafd8183
0x7fffeafd81ca:	jmp		0x7fffeafd81da
0x7fffeafd81cf:	mov		dword ptr [rsp + 0x230], 9
0x7fffeafd81da:	mov		eax, dword ptr [rsp + 0x1f10]
0x7fffeafd81e1:	or		eax, 0x20
0x7fffeafd81e4:	cmp		eax, 0x66
0x7fffeafd81e7:	jne		0x7fffeafd8359
0x7fffeafd81ed:	xor		eax, eax
0x7fffeafd81ef:	mov		ecx, eax
0x7fffeafd81f1:	movsxd		rdx, dword ptr [rsp + 0x1f18]
0x7fffeafd81f9:	mov		rsi, qword ptr [rsp + 0x240]
0x7fffeafd8201:	mov		rdi, qword ptr [rsp + 0x248]
0x7fffeafd8209:	sub		rsi, rdi
0x7fffeafd820c:	sar		rsi, 2
0x7fffeafd8210:	sub		rsi, 1
0x7fffeafd8217:	imul		rsi, rsi, 9
0x7fffeafd821e:	movsxd		rdi, dword ptr [rsp + 0x230]
0x7fffeafd8226:	sub		rsi, rdi
0x7fffeafd8229:	cmp		rcx, rsi
0x7fffeafd822c:	mov		qword ptr [rsp + 0x98], rdx
0x7fffeafd8234:	jle		0x7fffeafd824b
0x7fffeafd823a:	xor		eax, eax
0x7fffeafd823c:	mov		ecx, eax
0x7fffeafd823e:	mov		qword ptr [rsp + 0x90], rcx
0x7fffeafd8246:	jmp		0x7fffeafd8282
0x7fffeafd824b:	mov		rax, qword ptr [rsp + 0x240]
0x7fffeafd8253:	mov		rcx, qword ptr [rsp + 0x248]
0x7fffeafd825b:	sub		rax, rcx
0x7fffeafd825e:	sar		rax, 2
0x7fffeafd8262:	sub		rax, 1
0x7fffeafd8268:	imul		rax, rax, 9
0x7fffeafd826f:	movsxd		rcx, dword ptr [rsp + 0x230]
0x7fffeafd8277:	sub		rax, rcx
0x7fffeafd827a:	mov		qword ptr [rsp + 0x90], rax
0x7fffeafd8282:	mov		rax, qword ptr [rsp + 0x90]
0x7fffeafd828a:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafd8292:	cmp		rcx, rax
0x7fffeafd8295:	jge		0x7fffeafd82b0
0x7fffeafd829b:	movsxd		rax, dword ptr [rsp + 0x1f18]
0x7fffeafd82a3:	mov		qword ptr [rsp + 0x88], rax
0x7fffeafd82ab:	jmp		0x7fffeafd8345
0x7fffeafd82b0:	xor		eax, eax
0x7fffeafd82b2:	mov		ecx, eax
0x7fffeafd82b4:	mov		rdx, qword ptr [rsp + 0x240]
0x7fffeafd82bc:	mov		rsi, qword ptr [rsp + 0x248]
0x7fffeafd82c4:	sub		rdx, rsi
0x7fffeafd82c7:	sar		rdx, 2
0x7fffeafd82cb:	sub		rdx, 1
0x7fffeafd82d2:	imul		rdx, rdx, 9
0x7fffeafd82d9:	movsxd		rsi, dword ptr [rsp + 0x230]
0x7fffeafd82e1:	sub		rdx, rsi
0x7fffeafd82e4:	cmp		rcx, rdx
0x7fffeafd82e7:	jle		0x7fffeafd82fe
0x7fffeafd82ed:	xor		eax, eax
0x7fffeafd82ef:	mov		ecx, eax
0x7fffeafd82f1:	mov		qword ptr [rsp + 0x80], rcx
0x7fffeafd82f9:	jmp		0x7fffeafd8335
0x7fffeafd82fe:	mov		rax, qword ptr [rsp + 0x240]
0x7fffeafd8306:	mov		rcx, qword ptr [rsp + 0x248]
0x7fffeafd830e:	sub		rax, rcx
0x7fffeafd8311:	sar		rax, 2
0x7fffeafd8315:	sub		rax, 1
0x7fffeafd831b:	imul		rax, rax, 9
0x7fffeafd8322:	movsxd		rcx, dword ptr [rsp + 0x230]
0x7fffeafd832a:	sub		rax, rcx
0x7fffeafd832d:	mov		qword ptr [rsp + 0x80], rax
0x7fffeafd8335:	mov		rax, qword ptr [rsp + 0x80]
0x7fffeafd833d:	mov		qword ptr [rsp + 0x88], rax
0x7fffeafd8345:	mov		rax, qword ptr [rsp + 0x88]
0x7fffeafd834d:	mov		dword ptr [rsp + 0x1f18], eax
0x7fffeafd8354:	jmp		0x7fffeafd84cb
0x7fffeafd8359:	xor		eax, eax
0x7fffeafd835b:	mov		ecx, eax
0x7fffeafd835d:	movsxd		rdx, dword ptr [rsp + 0x1f18]
0x7fffeafd8365:	mov		rsi, qword ptr [rsp + 0x240]
0x7fffeafd836d:	mov		rdi, qword ptr [rsp + 0x248]
0x7fffeafd8375:	sub		rsi, rdi
0x7fffeafd8378:	sar		rsi, 2
0x7fffeafd837c:	sub		rsi, 1
0x7fffeafd8383:	imul		rsi, rsi, 9
0x7fffeafd838a:	movsxd		rdi, dword ptr [rsp + 0x238]
0x7fffeafd8392:	add		rsi, rdi
0x7fffeafd8395:	movsxd		rdi, dword ptr [rsp + 0x230]
0x7fffeafd839d:	sub		rsi, rdi
0x7fffeafd83a0:	cmp		rcx, rsi
0x7fffeafd83a3:	mov		qword ptr [rsp + 0x78], rdx
0x7fffeafd83a8:	jle		0x7fffeafd83bc
0x7fffeafd83ae:	xor		eax, eax
0x7fffeafd83b0:	mov		ecx, eax
0x7fffeafd83b2:	mov		qword ptr [rsp + 0x70], rcx
0x7fffeafd83b7:	jmp		0x7fffeafd83fb
0x7fffeafd83bc:	mov		rax, qword ptr [rsp + 0x240]
0x7fffeafd83c4:	mov		rcx, qword ptr [rsp + 0x248]
0x7fffeafd83cc:	sub		rax, rcx
0x7fffeafd83cf:	sar		rax, 2
0x7fffeafd83d3:	sub		rax, 1
0x7fffeafd83d9:	imul		rax, rax, 9
0x7fffeafd83e0:	movsxd		rcx, dword ptr [rsp + 0x238]
0x7fffeafd83e8:	add		rax, rcx
0x7fffeafd83eb:	movsxd		rcx, dword ptr [rsp + 0x230]
0x7fffeafd83f3:	sub		rax, rcx
0x7fffeafd83f6:	mov		qword ptr [rsp + 0x70], rax
0x7fffeafd83fb:	mov		rax, qword ptr [rsp + 0x70]
0x7fffeafd8400:	mov		rcx, qword ptr [rsp + 0x78]
0x7fffeafd8405:	cmp		rcx, rax
0x7fffeafd8408:	jge		0x7fffeafd8420
0x7fffeafd840e:	movsxd		rax, dword ptr [rsp + 0x1f18]
0x7fffeafd8416:	mov		qword ptr [rsp + 0x68], rax
0x7fffeafd841b:	jmp		0x7fffeafd84bf
0x7fffeafd8420:	xor		eax, eax
0x7fffeafd8422:	mov		ecx, eax
0x7fffeafd8424:	mov		rdx, qword ptr [rsp + 0x240]
0x7fffeafd842c:	mov		rsi, qword ptr [rsp + 0x248]
0x7fffeafd8434:	sub		rdx, rsi
0x7fffeafd8437:	sar		rdx, 2
0x7fffeafd843b:	sub		rdx, 1
0x7fffeafd8442:	imul		rdx, rdx, 9
0x7fffeafd8449:	movsxd		rsi, dword ptr [rsp + 0x238]
0x7fffeafd8451:	add		rdx, rsi
0x7fffeafd8454:	movsxd		rsi, dword ptr [rsp + 0x230]
0x7fffeafd845c:	sub		rdx, rsi
0x7fffeafd845f:	cmp		rcx, rdx
0x7fffeafd8462:	jle		0x7fffeafd8476
0x7fffeafd8468:	xor		eax, eax
0x7fffeafd846a:	mov		ecx, eax
0x7fffeafd846c:	mov		qword ptr [rsp + 0x60], rcx
0x7fffeafd8471:	jmp		0x7fffeafd84b5
0x7fffeafd8476:	mov		rax, qword ptr [rsp + 0x240]
0x7fffeafd847e:	mov		rcx, qword ptr [rsp + 0x248]
0x7fffeafd8486:	sub		rax, rcx
0x7fffeafd8489:	sar		rax, 2
0x7fffeafd848d:	sub		rax, 1
0x7fffeafd8493:	imul		rax, rax, 9
0x7fffeafd849a:	movsxd		rcx, dword ptr [rsp + 0x238]
0x7fffeafd84a2:	add		rax, rcx
0x7fffeafd84a5:	movsxd		rcx, dword ptr [rsp + 0x230]
0x7fffeafd84ad:	sub		rax, rcx
0x7fffeafd84b0:	mov		qword ptr [rsp + 0x60], rax
0x7fffeafd84b5:	mov		rax, qword ptr [rsp + 0x60]
0x7fffeafd84ba:	mov		qword ptr [rsp + 0x68], rax
0x7fffeafd84bf:	mov		rax, qword ptr [rsp + 0x68]
0x7fffeafd84c4:	mov		dword ptr [rsp + 0x1f18], eax
0x7fffeafd84cb:	jmp		0x7fffeafd84d0
0x7fffeafd84d0:	jmp		0x7fffeafd84d5
0x7fffeafd84d5:	mov		eax, dword ptr [rsp + 0x1f18]
0x7fffeafd84dc:	add		eax, 1
0x7fffeafd84df:	cmp		dword ptr [rsp + 0x1f18], 0
0x7fffeafd84e7:	mov		cl, 1
0x7fffeafd84e9:	mov		dword ptr [rsp + 0x5c], eax
0x7fffeafd84ed:	mov		byte ptr [rsp + 0x5b], cl
0x7fffeafd84f1:	jne		0x7fffeafd850b
0x7fffeafd84f7:	mov		eax, dword ptr [rsp + 0x1f14]
0x7fffeafd84fe:	and		eax, 8
0x7fffeafd8501:	cmp		eax, 0
0x7fffeafd8504:	setne		cl
0x7fffeafd8507:	mov		byte ptr [rsp + 0x5b], cl
0x7fffeafd850b:	mov		al, byte ptr [rsp + 0x5b]
0x7fffeafd850f:	and		al, 1
0x7fffeafd8511:	movzx		ecx, al
0x7fffeafd8514:	mov		edx, dword ptr [rsp + 0x5c]
0x7fffeafd8518:	add		edx, ecx
0x7fffeafd851a:	mov		dword ptr [rsp + 0x22c], edx
0x7fffeafd8521:	mov		ecx, dword ptr [rsp + 0x1f10]
0x7fffeafd8528:	or		ecx, 0x20
0x7fffeafd852b:	cmp		ecx, 0x66
0x7fffeafd852e:	jne		0x7fffeafd855c
0x7fffeafd8534:	cmp		dword ptr [rsp + 0x238], 0
0x7fffeafd853c:	jle		0x7fffeafd8557
0x7fffeafd8542:	mov		eax, dword ptr [rsp + 0x238]
0x7fffeafd8549:	add		eax, dword ptr [rsp + 0x22c]
0x7fffeafd8550:	mov		dword ptr [rsp + 0x22c], eax
0x7fffeafd8557:	jmp		0x7fffeafd8660
0x7fffeafd855c:	cmp		dword ptr [rsp + 0x238], 0
0x7fffeafd8564:	jge		0x7fffeafd857c
0x7fffeafd856a:	xor		eax, eax
0x7fffeafd856c:	sub		eax, dword ptr [rsp + 0x238]
0x7fffeafd8573:	mov		dword ptr [rsp + 0x54], eax
0x7fffeafd8577:	jmp		0x7fffeafd8587
0x7fffeafd857c:	mov		eax, dword ptr [rsp + 0x238]
0x7fffeafd8583:	mov		dword ptr [rsp + 0x54], eax
0x7fffeafd8587:	mov		eax, dword ptr [rsp + 0x54]
0x7fffeafd858b:	movsxd		rdi, eax
0x7fffeafd858e:	mov		rsi, qword ptr [rsp + 0x1e8]
0x7fffeafd8596:	call		0x7fffeafd6940
0x7fffeafd859b:	mov		qword ptr [rsp + 0x1e0], rax
0x7fffeafd85a3:	mov		rax, qword ptr [rsp + 0x1e8]
0x7fffeafd85ab:	mov		rcx, qword ptr [rsp + 0x1e0]
0x7fffeafd85b3:	sub		rax, rcx
0x7fffeafd85b6:	cmp		rax, 2
0x7fffeafd85ba:	jge		0x7fffeafd85e3
0x7fffeafd85c0:	mov		rax, qword ptr [rsp + 0x1e0]
0x7fffeafd85c8:	mov		rcx, rax
0x7fffeafd85cb:	add		rcx, -1
0x7fffeafd85d2:	mov		qword ptr [rsp + 0x1e0], rcx
0x7fffeafd85da:	mov		byte ptr [rax - 1], 0x30
0x7fffeafd85de:	jmp		0x7fffeafd85a3
0x7fffeafd85e3:	mov		eax, dword ptr [rsp + 0x238]
0x7fffeafd85ea:	cmp		eax, 0
0x7fffeafd85ed:	mov		eax, 0x2d
0x7fffeafd85f2:	mov		ecx, 0x2b
0x7fffeafd85f7:	cmovl		ecx, eax
0x7fffeafd85fa:	mov		rdx, qword ptr [rsp + 0x1e0]
0x7fffeafd8602:	mov		rsi, rdx
0x7fffeafd8605:	add		rsi, -1
0x7fffeafd860c:	mov		qword ptr [rsp + 0x1e0], rsi
0x7fffeafd8614:	mov		byte ptr [rdx - 1], cl
0x7fffeafd8617:	mov		eax, dword ptr [rsp + 0x1f10]
0x7fffeafd861e:	mov		rdx, qword ptr [rsp + 0x1e0]
0x7fffeafd8626:	mov		rsi, rdx
0x7fffeafd8629:	add		rsi, -1
0x7fffeafd8630:	mov		qword ptr [rsp + 0x1e0], rsi
0x7fffeafd8638:	mov		byte ptr [rdx - 1], al
0x7fffeafd863b:	mov		rdx, qword ptr [rsp + 0x1e8]
0x7fffeafd8643:	mov		rsi, qword ptr [rsp + 0x1e0]
0x7fffeafd864b:	sub		rdx, rsi
0x7fffeafd864e:	movsxd		rsi, dword ptr [rsp + 0x22c]
0x7fffeafd8656:	add		rsi, rdx
0x7fffeafd8659:	mov		dword ptr [rsp + 0x22c], esi
0x7fffeafd8660:	mov		rdi, qword ptr [rsp + 0x1f38]
0x7fffeafd8668:	mov		edx, dword ptr [rsp + 0x1f1c]
0x7fffeafd866f:	mov		eax, dword ptr [rsp + 0x1fc]
0x7fffeafd8676:	add		eax, dword ptr [rsp + 0x22c]
0x7fffeafd867d:	mov		r8d, dword ptr [rsp + 0x1f14]
0x7fffeafd8685:	mov		esi, 0x20
0x7fffeafd868a:	mov		ecx, eax
0x7fffeafd868c:	call		0x7fffeafd6a10
0x7fffeafd8691:	mov		rdi, qword ptr [rsp + 0x1f38]
0x7fffeafd8699:	mov		rsi, qword ptr [rsp + 0x200]
0x7fffeafd86a1:	movsxd		rdx, dword ptr [rsp + 0x1fc]
0x7fffeafd86a9:	call		0x7fffeafd6240
0x7fffeafd86ae:	mov		rdi, qword ptr [rsp + 0x1f38]
0x7fffeafd86b6:	mov		edx, dword ptr [rsp + 0x1f1c]
0x7fffeafd86bd:	mov		eax, dword ptr [rsp + 0x1fc]
0x7fffeafd86c4:	add		eax, dword ptr [rsp + 0x22c]
0x7fffeafd86cb:	mov		ecx, dword ptr [rsp + 0x1f14]
0x7fffeafd86d2:	xor		ecx, 0x10000
0x7fffeafd86d8:	mov		esi, 0x30
0x7fffeafd86dd:	mov		dword ptr [rsp + 0x50], ecx
0x7fffeafd86e1:	mov		ecx, eax
0x7fffeafd86e3:	mov		r8d, dword ptr [rsp + 0x50]
0x7fffeafd86e8:	call		0x7fffeafd6a10
0x7fffeafd86ed:	mov		eax, dword ptr [rsp + 0x1f10]
0x7fffeafd86f4:	or		eax, 0x20
0x7fffeafd86f7:	cmp		eax, 0x66
0x7fffeafd86fa:	jne		0x7fffeafd89f3
0x7fffeafd8700:	mov		rax, qword ptr [rsp + 0x258]
0x7fffeafd8708:	cmp		rax, qword ptr [rsp + 0x248]
0x7fffeafd8710:	jbe		0x7fffeafd8726
0x7fffeafd8716:	mov		rax, qword ptr [rsp + 0x248]
0x7fffeafd871e:	mov		qword ptr [rsp + 0x258], rax
0x7fffeafd8726:	mov		rax, qword ptr [rsp + 0x258]
0x7fffeafd872e:	mov		qword ptr [rsp + 0x250], rax
0x7fffeafd8736:	mov		rax, qword ptr [rsp + 0x250]
0x7fffeafd873e:	cmp		rax, qword ptr [rsp + 0x248]
0x7fffeafd8746:	ja		0x7fffeafd8860
0x7fffeafd874c:	lea		rax, [rsp + 0x210]
0x7fffeafd8754:	mov		rcx, qword ptr [rsp + 0x250]
0x7fffeafd875c:	mov		edx, dword ptr [rcx]
0x7fffeafd875e:	mov		edi, edx
0x7fffeafd8760:	add		rax, 9
0x7fffeafd8766:	mov		rsi, rax
0x7fffeafd8769:	call		0x7fffeafd6940
0x7fffeafd876e:	mov		qword ptr [rsp + 0x158], rax
0x7fffeafd8776:	mov		rax, qword ptr [rsp + 0x250]
0x7fffeafd877e:	cmp		rax, qword ptr [rsp + 0x258]
0x7fffeafd8786:	je		0x7fffeafd87d2
0x7fffeafd878c:	jmp		0x7fffeafd8791
0x7fffeafd8791:	lea		rax, [rsp + 0x210]
0x7fffeafd8799:	mov		rcx, qword ptr [rsp + 0x158]
0x7fffeafd87a1:	cmp		rcx, rax
0x7fffeafd87a4:	jbe		0x7fffeafd87cd
0x7fffeafd87aa:	mov		rax, qword ptr [rsp + 0x158]
0x7fffeafd87b2:	mov		rcx, rax
0x7fffeafd87b5:	add		rcx, -1
0x7fffeafd87bc:	mov		qword ptr [rsp + 0x158], rcx
0x7fffeafd87c4:	mov		byte ptr [rax - 1], 0x30
0x7fffeafd87c8:	jmp		0x7fffeafd8791
0x7fffeafd87cd:	jmp		0x7fffeafd8814
0x7fffeafd87d2:	lea		rax, [rsp + 0x210]
0x7fffeafd87da:	mov		rcx, qword ptr [rsp + 0x158]
0x7fffeafd87e2:	add		rax, 9
0x7fffeafd87e8:	cmp		rcx, rax
0x7fffeafd87eb:	jne		0x7fffeafd880f
0x7fffeafd87f1:	mov		rax, qword ptr [rsp + 0x158]
0x7fffeafd87f9:	mov		rcx, rax
0x7fffeafd87fc:	add		rcx, -1
0x7fffeafd8803:	mov		qword ptr [rsp + 0x158], rcx
0x7fffeafd880b:	mov		byte ptr [rax - 1], 0x30
0x7fffeafd880f:	jmp		0x7fffeafd8814
0x7fffeafd8814:	lea		rax, [rsp + 0x210]
0x7fffeafd881c:	mov		rdi, qword ptr [rsp + 0x1f38]
0x7fffeafd8824:	mov		rsi, qword ptr [rsp + 0x158]
0x7fffeafd882c:	add		rax, 9
0x7fffeafd8832:	mov		rcx, qword ptr [rsp + 0x158]
0x7fffeafd883a:	sub		rax, rcx
0x7fffeafd883d:	mov		rdx, rax
0x7fffeafd8840:	call		0x7fffeafd6240
0x7fffeafd8845:	mov		rax, qword ptr [rsp + 0x250]
0x7fffeafd884d:	add		rax, 4
0x7fffeafd8853:	mov		qword ptr [rsp + 0x250], rax
0x7fffeafd885b:	jmp		0x7fffeafd8736
0x7fffeafd8860:	cmp		dword ptr [rsp + 0x1f18], 0
0x7fffeafd8868:	jne		0x7fffeafd8881
0x7fffeafd886e:	mov		eax, dword ptr [rsp + 0x1f14]
0x7fffeafd8875:	and		eax, 8
0x7fffeafd8878:	cmp		eax, 0
0x7fffeafd887b:	je		0x7fffeafd889a
0x7fffeafd8881:	mov		rdi, qword ptr [rsp + 0x1f38]
0x7fffeafd8889:	lea		rsi, [rip + 0x2c136f9]
0x7fffeafd8890:	mov		edx, 1
0x7fffeafd8895:	call		0x7fffeafd6240
0x7fffeafd889a:	jmp		0x7fffeafd889f
0x7fffeafd889f:	xor		eax, eax
0x7fffeafd88a1:	mov		rcx, qword ptr [rsp + 0x250]
0x7fffeafd88a9:	cmp		rcx, qword ptr [rsp + 0x240]
0x7fffeafd88b1:	mov		byte ptr [rsp + 0x4f], al
0x7fffeafd88b5:	jae		0x7fffeafd88ca
0x7fffeafd88bb:	cmp		dword ptr [rsp + 0x1f18], 0
0x7fffeafd88c3:	setg		al
0x7fffeafd88c6:	mov		byte ptr [rsp + 0x4f], al
0x7fffeafd88ca:	mov		al, byte ptr [rsp + 0x4f]
0x7fffeafd88ce:	test		al, 1
0x7fffeafd88d0:	jne		0x7fffeafd88db
0x7fffeafd88d6:	jmp		0x7fffeafd89c8
0x7fffeafd88db:	lea		rax, [rsp + 0x210]
0x7fffeafd88e3:	mov		rcx, qword ptr [rsp + 0x250]
0x7fffeafd88eb:	mov		edx, dword ptr [rcx]
0x7fffeafd88ed:	mov		edi, edx
0x7fffeafd88ef:	add		rax, 9
0x7fffeafd88f5:	mov		rsi, rax
0x7fffeafd88f8:	call		0x7fffeafd6940
0x7fffeafd88fd:	mov		qword ptr [rsp + 0x150], rax
0x7fffeafd8905:	lea		rax, [rsp + 0x210]
0x7fffeafd890d:	mov		rcx, qword ptr [rsp + 0x150]
0x7fffeafd8915:	cmp		rcx, rax
0x7fffeafd8918:	jbe		0x7fffeafd8941
0x7fffeafd891e:	mov		rax, qword ptr [rsp + 0x150]
0x7fffeafd8926:	mov		rcx, rax
0x7fffeafd8929:	add		rcx, -1
0x7fffeafd8930:	mov		qword ptr [rsp + 0x150], rcx
0x7fffeafd8938:	mov		byte ptr [rax - 1], 0x30
0x7fffeafd893c:	jmp		0x7fffeafd8905
0x7fffeafd8941:	mov		rdi, qword ptr [rsp + 0x1f38]
0x7fffeafd8949:	mov		rsi, qword ptr [rsp + 0x150]
0x7fffeafd8951:	mov		eax, 9
0x7fffeafd8956:	cmp		eax, dword ptr [rsp + 0x1f18]
0x7fffeafd895d:	mov		qword ptr [rsp + 0x40], rdi
0x7fffeafd8962:	mov		qword ptr [rsp + 0x38], rsi
0x7fffeafd8967:	jge		0x7fffeafd897b
0x7fffeafd896d:	mov		eax, 9
0x7fffeafd8972:	mov		dword ptr [rsp + 0x34], eax
0x7fffeafd8976:	jmp		0x7fffeafd8986
0x7fffeafd897b:	mov		eax, dword ptr [rsp + 0x1f18]
0x7fffeafd8982:	mov		dword ptr [rsp + 0x34], eax
0x7fffeafd8986:	mov		eax, dword ptr [rsp + 0x34]
0x7fffeafd898a:	movsxd		rdx, eax
0x7fffeafd898d:	mov		rdi, qword ptr [rsp + 0x40]
0x7fffeafd8992:	mov		rsi, qword ptr [rsp + 0x38]
0x7fffeafd8997:	call		0x7fffeafd6240
0x7fffeafd899c:	mov		rax, qword ptr [rsp + 0x250]
0x7fffeafd89a4:	add		rax, 4
0x7fffeafd89aa:	mov		qword ptr [rsp + 0x250], rax
0x7fffeafd89b2:	mov		ecx, dword ptr [rsp + 0x1f18]
0x7fffeafd89b9:	sub		ecx, 9
0x7fffeafd89bc:	mov		dword ptr [rsp + 0x1f18], ecx
0x7fffeafd89c3:	jmp		0x7fffeafd889f
0x7fffeafd89c8:	xor		r8d, r8d
0x7fffeafd89cb:	mov		rdi, qword ptr [rsp + 0x1f38]
0x7fffeafd89d3:	mov		eax, dword ptr [rsp + 0x1f18]
0x7fffeafd89da:	add		eax, 9
0x7fffeafd89dd:	mov		esi, 0x30
0x7fffeafd89e2:	mov		edx, eax
0x7fffeafd89e4:	mov		ecx, 9
0x7fffeafd89e9:	call		0x7fffeafd6a10
0x7fffeafd89ee:	jmp		0x7fffeafd8cbf
0x7fffeafd89f3:	mov		rax, qword ptr [rsp + 0x240]
0x7fffeafd89fb:	cmp		rax, qword ptr [rsp + 0x258]
0x7fffeafd8a03:	ja		0x7fffeafd8a1f
0x7fffeafd8a09:	mov		rax, qword ptr [rsp + 0x258]
0x7fffeafd8a11:	add		rax, 4
0x7fffeafd8a17:	mov		qword ptr [rsp + 0x240], rax
0x7fffeafd8a1f:	mov		rax, qword ptr [rsp + 0x258]
0x7fffeafd8a27:	mov		qword ptr [rsp + 0x250], rax
0x7fffeafd8a2f:	xor		eax, eax
0x7fffeafd8a31:	mov		rcx, qword ptr [rsp + 0x250]
0x7fffeafd8a39:	cmp		rcx, qword ptr [rsp + 0x240]
0x7fffeafd8a41:	mov		byte ptr [rsp + 0x33], al
0x7fffeafd8a45:	jae		0x7fffeafd8a5a
0x7fffeafd8a4b:	cmp		dword ptr [rsp + 0x1f18], 0
0x7fffeafd8a53:	setge		al
0x7fffeafd8a56:	mov		byte ptr [rsp + 0x33], al
0x7fffeafd8a5a:	mov		al, byte ptr [rsp + 0x33]
0x7fffeafd8a5e:	test		al, 1
0x7fffeafd8a60:	jne		0x7fffeafd8a6b
0x7fffeafd8a66:	jmp		0x7fffeafd8c6e
0x7fffeafd8a6b:	lea		rax, [rsp + 0x210]
0x7fffeafd8a73:	mov		rcx, qword ptr [rsp + 0x250]
0x7fffeafd8a7b:	mov		edx, dword ptr [rcx]
0x7fffeafd8a7d:	mov		edi, edx
0x7fffeafd8a7f:	add		rax, 9
0x7fffeafd8a85:	mov		rsi, rax
0x7fffeafd8a88:	call		0x7fffeafd6940
0x7fffeafd8a8d:	lea		rcx, [rsp + 0x210]
0x7fffeafd8a95:	mov		qword ptr [rsp + 0x148], rax
0x7fffeafd8a9d:	mov		rax, qword ptr [rsp + 0x148]
0x7fffeafd8aa5:	add		rcx, 9
0x7fffeafd8aac:	cmp		rax, rcx
0x7fffeafd8aaf:	jne		0x7fffeafd8ad3
0x7fffeafd8ab5:	mov		rax, qword ptr [rsp + 0x148]
0x7fffeafd8abd:	mov		rcx, rax
0x7fffeafd8ac0:	add		rcx, -1
0x7fffeafd8ac7:	mov		qword ptr [rsp + 0x148], rcx
0x7fffeafd8acf:	mov		byte ptr [rax - 1], 0x30
0x7fffeafd8ad3:	mov		rax, qword ptr [rsp + 0x250]
0x7fffeafd8adb:	cmp		rax, qword ptr [rsp + 0x258]
0x7fffeafd8ae3:	je		0x7fffeafd8b2f
0x7fffeafd8ae9:	jmp		0x7fffeafd8aee
0x7fffeafd8aee:	lea		rax, [rsp + 0x210]
0x7fffeafd8af6:	mov		rcx, qword ptr [rsp + 0x148]
0x7fffeafd8afe:	cmp		rcx, rax
0x7fffeafd8b01:	jbe		0x7fffeafd8b2a
0x7fffeafd8b07:	mov		rax, qword ptr [rsp + 0x148]
0x7fffeafd8b0f:	mov		rcx, rax
0x7fffeafd8b12:	add		rcx, -1
0x7fffeafd8b19:	mov		qword ptr [rsp + 0x148], rcx
0x7fffeafd8b21:	mov		byte ptr [rax - 1], 0x30
0x7fffeafd8b25:	jmp		0x7fffeafd8aee
0x7fffeafd8b2a:	jmp		0x7fffeafd8b9d
0x7fffeafd8b2f:	mov		rdi, qword ptr [rsp + 0x1f38]
0x7fffeafd8b37:	mov		rax, qword ptr [rsp + 0x148]
0x7fffeafd8b3f:	mov		rcx, rax
0x7fffeafd8b42:	add		rcx, 1
0x7fffeafd8b49:	mov		qword ptr [rsp + 0x148], rcx
0x7fffeafd8b51:	mov		rsi, rax
0x7fffeafd8b54:	mov		edx, 1
0x7fffeafd8b59:	call		0x7fffeafd6240
0x7fffeafd8b5e:	cmp		dword ptr [rsp + 0x1f18], 0
0x7fffeafd8b66:	jg		0x7fffeafd8b7f
0x7fffeafd8b6c:	mov		eax, dword ptr [rsp + 0x1f14]
0x7fffeafd8b73:	and		eax, 8
0x7fffeafd8b76:	cmp		eax, 0
0x7fffeafd8b79:	je		0x7fffeafd8b98
0x7fffeafd8b7f:	mov		rdi, qword ptr [rsp + 0x1f38]
0x7fffeafd8b87:	lea		rsi, [rip + 0x2c133fb]
0x7fffeafd8b8e:	mov		edx, 1
0x7fffeafd8b93:	call		0x7fffeafd6240
0x7fffeafd8b98:	jmp		0x7fffeafd8b9d
0x7fffeafd8b9d:	lea		rax, [rsp + 0x210]
0x7fffeafd8ba5:	mov		rdi, qword ptr [rsp + 0x1f38]
0x7fffeafd8bad:	mov		rsi, qword ptr [rsp + 0x148]
0x7fffeafd8bb5:	add		rax, 9
0x7fffeafd8bbb:	mov		rcx, qword ptr [rsp + 0x148]
0x7fffeafd8bc3:	sub		rax, rcx
0x7fffeafd8bc6:	movsxd		rcx, dword ptr [rsp + 0x1f18]
0x7fffeafd8bce:	cmp		rax, rcx
0x7fffeafd8bd1:	mov		qword ptr [rsp + 0x28], rdi
0x7fffeafd8bd6:	mov		qword ptr [rsp + 0x20], rsi
0x7fffeafd8bdb:	jge		0x7fffeafd8c04
0x7fffeafd8be1:	lea		rax, [rsp + 0x210]
0x7fffeafd8be9:	add		rax, 9
0x7fffeafd8bef:	mov		rcx, qword ptr [rsp + 0x148]
0x7fffeafd8bf7:	sub		rax, rcx
0x7fffeafd8bfa:	mov		qword ptr [rsp + 0x18], rax
0x7fffeafd8bff:	jmp		0x7fffeafd8c11
0x7fffeafd8c04:	movsxd		rax, dword ptr [rsp + 0x1f18]
0x7fffeafd8c0c:	mov		qword ptr [rsp + 0x18], rax
0x7fffeafd8c11:	mov		rax, qword ptr [rsp + 0x18]
0x7fffeafd8c16:	mov		rdi, qword ptr [rsp + 0x28]
0x7fffeafd8c1b:	mov		rsi, qword ptr [rsp + 0x20]
0x7fffeafd8c20:	mov		rdx, rax
0x7fffeafd8c23:	call		0x7fffeafd6240
0x7fffeafd8c28:	lea		rax, [rsp + 0x210]
0x7fffeafd8c30:	add		rax, 9
0x7fffeafd8c36:	mov		rcx, qword ptr [rsp + 0x148]
0x7fffeafd8c3e:	sub		rax, rcx
0x7fffeafd8c41:	movsxd		rcx, dword ptr [rsp + 0x1f18]
0x7fffeafd8c49:	sub		rcx, rax
0x7fffeafd8c4c:	mov		dword ptr [rsp + 0x1f18], ecx
0x7fffeafd8c53:	mov		rax, qword ptr [rsp + 0x250]
0x7fffeafd8c5b:	add		rax, 4
0x7fffeafd8c61:	mov		qword ptr [rsp + 0x250], rax
0x7fffeafd8c69:	jmp		0x7fffeafd8a2f
0x7fffeafd8c6e:	xor		r8d, r8d
0x7fffeafd8c71:	mov		rdi, qword ptr [rsp + 0x1f38]
0x7fffeafd8c79:	mov		eax, dword ptr [rsp + 0x1f18]
0x7fffeafd8c80:	add		eax, 0x12
0x7fffeafd8c83:	mov		esi, 0x30
0x7fffeafd8c88:	mov		edx, eax
0x7fffeafd8c8a:	mov		ecx, 0x12
0x7fffeafd8c8f:	call		0x7fffeafd6a10
0x7fffeafd8c94:	mov		rdi, qword ptr [rsp + 0x1f38]
0x7fffeafd8c9c:	mov		rsi, qword ptr [rsp + 0x1e0]
0x7fffeafd8ca4:	mov		r9, qword ptr [rsp + 0x1e8]
0x7fffeafd8cac:	mov		r10, qword ptr [rsp + 0x1e0]
0x7fffeafd8cb4:	sub		r9, r10
0x7fffeafd8cb7:	mov		rdx, r9
0x7fffeafd8cba:	call		0x7fffeafd6240
0x7fffeafd8cbf:	mov		rdi, qword ptr [rsp + 0x1f38]
0x7fffeafd8cc7:	mov		edx, dword ptr [rsp + 0x1f1c]
0x7fffeafd8cce:	mov		eax, dword ptr [rsp + 0x1fc]
0x7fffeafd8cd5:	add		eax, dword ptr [rsp + 0x22c]
0x7fffeafd8cdc:	mov		ecx, dword ptr [rsp + 0x1f14]
0x7fffeafd8ce3:	xor		ecx, 0x2000
0x7fffeafd8ce9:	mov		esi, 0x20
0x7fffeafd8cee:	mov		dword ptr [rsp + 0x14], ecx
0x7fffeafd8cf2:	mov		ecx, eax
0x7fffeafd8cf4:	mov		r8d, dword ptr [rsp + 0x14]
0x7fffeafd8cf9:	call		0x7fffeafd6a10
0x7fffeafd8cfe:	mov		eax, dword ptr [rsp + 0x1f1c]
0x7fffeafd8d05:	mov		ecx, dword ptr [rsp + 0x1fc]
0x7fffeafd8d0c:	add		ecx, dword ptr [rsp + 0x22c]
0x7fffeafd8d13:	cmp		eax, ecx
0x7fffeafd8d15:	jle		0x7fffeafd8d2b
0x7fffeafd8d1b:	mov		eax, dword ptr [rsp + 0x1f1c]
0x7fffeafd8d22:	mov		dword ptr [rsp + 0x10], eax
0x7fffeafd8d26:	jmp		0x7fffeafd8d3d
0x7fffeafd8d2b:	mov		eax, dword ptr [rsp + 0x1fc]
0x7fffeafd8d32:	add		eax, dword ptr [rsp + 0x22c]
0x7fffeafd8d39:	mov		dword ptr [rsp + 0x10], eax
0x7fffeafd8d3d:	mov		eax, dword ptr [rsp + 0x10]
0x7fffeafd8d41:	mov		dword ptr [rsp + 0x1f44], eax
0x7fffeafd8d48:	mov		eax, dword ptr [rsp + 0x1f44]
0x7fffeafd8d4f:	add		rsp, 0x1f48
0x7fffeafd8d56:	ret		
0x7fffeafd8d57:	nop		word ptr [rax + rax]
disassembling symbol '.LBB9_1':
textAddr: 0x7fffeafd6bd5, textSize: 45
0x7fffeafd6bd5:	fld		xword ptr [rsp + 0x1f20]
0x7fffeafd6bdc:	fstp		dword ptr [rsp + 0x13c]
0x7fffeafd6be3:	movss		xmm0, dword ptr [rsp + 0x13c]
0x7fffeafd6bec:	call		0x7fffeafd8d60
0x7fffeafd6bf1:	shr		eax, 0x1f
0x7fffeafd6bf4:	cmp		eax, 0
0x7fffeafd6bf7:	jne		0x7fffeafd6c59
0x7fffeafd6bfd:	jmp		0x7fffeafd6c6e
disassembling symbol '.LBB9_2':
textAddr: 0x7fffeafd6c02, textSize: 15
0x7fffeafd6c02:	xor		eax, eax
0x7fffeafd6c04:	test		al, 1
0x7fffeafd6c06:	jne		0x7fffeafd6c11
0x7fffeafd6c0c:	jmp		0x7fffeafd6c3f
disassembling symbol '.LBB9_3':
textAddr: 0x7fffeafd6c11, textSize: 46
0x7fffeafd6c11:	fld		xword ptr [rsp + 0x1f20]
0x7fffeafd6c18:	fstp		qword ptr [rsp + 0x140]
0x7fffeafd6c1f:	movsd		xmm0, qword ptr [rsp + 0x140]
0x7fffeafd6c28:	call		0x7fffeafd8d80
0x7fffeafd6c2d:	shr		rax, 0x3f
0x7fffeafd6c31:	cmp		eax, 0
0x7fffeafd6c34:	jne		0x7fffeafd6c59
0x7fffeafd6c3a:	jmp		0x7fffeafd6c6e
disassembling symbol '.LBB9_4':
textAddr: 0x7fffeafd6c3f, textSize: 26
0x7fffeafd6c3f:	fld		xword ptr [rsp + 0x1f20]
0x7fffeafd6c46:	mov		rax, rsp
0x7fffeafd6c49:	fstp		xword ptr [rax]
0x7fffeafd6c4b:	call		0x7fffeafc42b0
0x7fffeafd6c50:	cmp		eax, 0
0x7fffeafd6c53:	je		0x7fffeafd6c6e
disassembling symbol '.LBB9_5':
textAddr: 0x7fffeafd6c59, textSize: 21
0x7fffeafd6c59:	fld		xword ptr [rsp + 0x1f20]
0x7fffeafd6c60:	fchs		
0x7fffeafd6c62:	fstp		xword ptr [rsp + 0x1f20]
0x7fffeafd6c69:	jmp		0x7fffeafd6cf7
disassembling symbol '.LBB9_6':
textAddr: 0x7fffeafd6c6e, textSize: 48
0x7fffeafd6c6e:	mov		eax, dword ptr [rsp + 0x1f14]
0x7fffeafd6c75:	and		eax, 0x800
0x7fffeafd6c7a:	cmp		eax, 0
0x7fffeafd6c7d:	je		0x7fffeafd6c9e
0x7fffeafd6c83:	mov		rax, qword ptr [rsp + 0x200]
0x7fffeafd6c8b:	add		rax, 3
0x7fffeafd6c91:	mov		qword ptr [rsp + 0x200], rax
0x7fffeafd6c99:	jmp		0x7fffeafd6cf2
disassembling symbol '.LBB9_8':
textAddr: 0x7fffeafd6c9e, textSize: 46
0x7fffeafd6c9e:	mov		eax, dword ptr [rsp + 0x1f14]
0x7fffeafd6ca5:	and		eax, 1
0x7fffeafd6ca8:	cmp		eax, 0
0x7fffeafd6cab:	je		0x7fffeafd6ccc
0x7fffeafd6cb1:	mov		rax, qword ptr [rsp + 0x200]
0x7fffeafd6cb9:	add		rax, 6
0x7fffeafd6cbf:	mov		qword ptr [rsp + 0x200], rax
0x7fffeafd6cc7:	jmp		0x7fffeafd6ced
disassembling symbol '.LBB9_10':
textAddr: 0x7fffeafd6ccc, textSize: 33
0x7fffeafd6ccc:	mov		rax, qword ptr [rsp + 0x200]
0x7fffeafd6cd4:	add		rax, 1
0x7fffeafd6cda:	mov		qword ptr [rsp + 0x200], rax
0x7fffeafd6ce2:	mov		dword ptr [rsp + 0x1fc], 0
disassembling symbol '.LBB9_11':
textAddr: 0x7fffeafd6ced, textSize: 5
0x7fffeafd6ced:	jmp		0x7fffeafd6cf2
disassembling symbol '.LBB9_12':
textAddr: 0x7fffeafd6cf2, textSize: 5
0x7fffeafd6cf2:	jmp		0x7fffeafd6cf7
disassembling symbol '.LBB9_13':
textAddr: 0x7fffeafd6cf7, textSize: 15
0x7fffeafd6cf7:	xor		eax, eax
0x7fffeafd6cf9:	test		al, 1
0x7fffeafd6cfb:	jne		0x7fffeafd6d06
0x7fffeafd6d01:	jmp		0x7fffeafd6d37
disassembling symbol '.LBB9_14':
textAddr: 0x7fffeafd6d06, textSize: 49
0x7fffeafd6d06:	fld		xword ptr [rsp + 0x1f20]
0x7fffeafd6d0d:	fstp		dword ptr [rsp + 0x12c]
0x7fffeafd6d14:	movss		xmm0, dword ptr [rsp + 0x12c]
0x7fffeafd6d1d:	call		0x7fffeafd8d60
0x7fffeafd6d22:	and		eax, 0x7fffffff
0x7fffeafd6d27:	cmp		eax, 0x7f800000
0x7fffeafd6d2c:	jb		0x7fffeafd6f13
0x7fffeafd6d32:	jmp		0x7fffeafd6da1
disassembling symbol '.LBB9_15':
textAddr: 0x7fffeafd6d37, textSize: 15
0x7fffeafd6d37:	xor		eax, eax
0x7fffeafd6d39:	test		al, 1
0x7fffeafd6d3b:	jne		0x7fffeafd6d46
0x7fffeafd6d41:	jmp		0x7fffeafd6d87
disassembling symbol '.LBB9_16':
textAddr: 0x7fffeafd6d46, textSize: 65
0x7fffeafd6d46:	fld		xword ptr [rsp + 0x1f20]
0x7fffeafd6d4d:	fstp		qword ptr [rsp + 0x130]
0x7fffeafd6d54:	movsd		xmm0, qword ptr [rsp + 0x130]
0x7fffeafd6d5d:	call		0x7fffeafd8d80
0x7fffeafd6d62:	movabs		rcx, 0x7fffffffffffffff
0x7fffeafd6d6c:	and		rax, rcx
0x7fffeafd6d6f:	movabs		rcx, 0x7ff0000000000000
0x7fffeafd6d79:	cmp		rax, rcx
0x7fffeafd6d7c:	jb		0x7fffeafd6f13
0x7fffeafd6d82:	jmp		0x7fffeafd6da1
disassembling symbol '.LBB9_17':
textAddr: 0x7fffeafd6d87, textSize: 26
0x7fffeafd6d87:	fld		xword ptr [rsp + 0x1f20]
0x7fffeafd6d8e:	mov		rax, rsp
0x7fffeafd6d91:	fstp		xword ptr [rax]
0x7fffeafd6d93:	call		0x7fffeafc3d10
0x7fffeafd6d98:	cmp		eax, 1
0x7fffeafd6d9b:	jg		0x7fffeafd6f13
disassembling symbol '.LBB9_18':
textAddr: 0x7fffeafd6da1, textSize: 55
0x7fffeafd6da1:	mov		eax, dword ptr [rsp + 0x1f10]
0x7fffeafd6da8:	lea		rcx, [rip + 0x2c151ca]
0x7fffeafd6daf:	lea		rdx, [rip + 0x2c151c7]
0x7fffeafd6db6:	test		al, 0x20
0x7fffeafd6db8:	cmovne		rdx, rcx
0x7fffeafd6dbc:	mov		qword ptr [rsp + 0x1d8], rdx
0x7fffeafd6dc4:	fld		xword ptr [rsp + 0x1f20]
0x7fffeafd6dcb:	fucomip		st(0)
0x7fffeafd6dcd:	jnp		0x7fffeafd6e0a
0x7fffeafd6dd3:	jmp		0x7fffeafd6dd8
disassembling symbol '.LBB9_19':
textAddr: 0x7fffeafd6dd8, textSize: 50
0x7fffeafd6dd8:	mov		eax, dword ptr [rsp + 0x1f10]
0x7fffeafd6ddf:	and		eax, 0x20
0x7fffeafd6de2:	cmp		eax, 0
0x7fffeafd6de5:	lea		rcx, [rip + 0x2c15195]
0x7fffeafd6dec:	lea		rdx, [rip + 0x2c15192]
0x7fffeafd6df3:	cmovne		rdx, rcx
0x7fffeafd6df7:	mov		qword ptr [rsp + 0x1d8], rdx
0x7fffeafd6dff:	mov		dword ptr [rsp + 0x1fc], 0
disassembling symbol '.LBB9_20':
textAddr: 0x7fffeafd6e0a, textSize: 229
0x7fffeafd6e0a:	mov		rdi, qword ptr [rsp + 0x1f38]
0x7fffeafd6e12:	mov		edx, dword ptr [rsp + 0x1f1c]
0x7fffeafd6e19:	mov		eax, dword ptr [rsp + 0x1fc]
0x7fffeafd6e20:	add		eax, 3
0x7fffeafd6e23:	mov		ecx, dword ptr [rsp + 0x1f14]
0x7fffeafd6e2a:	and		ecx, 0xfffeffff
0x7fffeafd6e30:	mov		esi, 0x20
0x7fffeafd6e35:	mov		dword ptr [rsp + 0x104], ecx
0x7fffeafd6e3c:	mov		ecx, eax
0x7fffeafd6e3e:	mov		r8d, dword ptr [rsp + 0x104]
0x7fffeafd6e46:	call		0x7fffeafd6a10
0x7fffeafd6e4b:	mov		rdi, qword ptr [rsp + 0x1f38]
0x7fffeafd6e53:	mov		rsi, qword ptr [rsp + 0x200]
0x7fffeafd6e5b:	movsxd		rdx, dword ptr [rsp + 0x1fc]
0x7fffeafd6e63:	call		0x7fffeafd6240
0x7fffeafd6e68:	mov		rdi, qword ptr [rsp + 0x1f38]
0x7fffeafd6e70:	mov		rsi, qword ptr [rsp + 0x1d8]
0x7fffeafd6e78:	mov		edx, 3
0x7fffeafd6e7d:	call		0x7fffeafd6240
0x7fffeafd6e82:	mov		rdi, qword ptr [rsp + 0x1f38]
0x7fffeafd6e8a:	mov		edx, dword ptr [rsp + 0x1f1c]
0x7fffeafd6e91:	mov		eax, dword ptr [rsp + 0x1fc]
0x7fffeafd6e98:	add		eax, 3
0x7fffeafd6e9b:	mov		ecx, dword ptr [rsp + 0x1f14]
0x7fffeafd6ea2:	xor		ecx, 0x2000
0x7fffeafd6ea8:	mov		esi, 0x20
0x7fffeafd6ead:	mov		dword ptr [rsp + 0x100], ecx
0x7fffeafd6eb4:	mov		ecx, eax
0x7fffeafd6eb6:	mov		r8d, dword ptr [rsp + 0x100]
0x7fffeafd6ebe:	call		0x7fffeafd6a10
0x7fffeafd6ec3:	mov		eax, dword ptr [rsp + 0x1f1c]
0x7fffeafd6eca:	mov		ecx, dword ptr [rsp + 0x1fc]
0x7fffeafd6ed1:	add		ecx, 3
0x7fffeafd6ed4:	cmp		eax, ecx
0x7fffeafd6ed6:	jle		0x7fffeafd6eef
0x7fffeafd6edc:	mov		eax, dword ptr [rsp + 0x1f1c]
0x7fffeafd6ee3:	mov		dword ptr [rsp + 0xfc], eax
0x7fffeafd6eea:	jmp		0x7fffeafd6f00
disassembling symbol '.LBB9_22':
textAddr: 0x7fffeafd6eef, textSize: 17
0x7fffeafd6eef:	mov		eax, dword ptr [rsp + 0x1fc]
0x7fffeafd6ef6:	add		eax, 3
0x7fffeafd6ef9:	mov		dword ptr [rsp + 0xfc], eax
disassembling symbol '.LBB9_23':
textAddr: 0x7fffeafd6f00, textSize: 19
0x7fffeafd6f00:	mov		eax, dword ptr [rsp + 0xfc]
0x7fffeafd6f07:	mov		dword ptr [rsp + 0x1f44], eax
0x7fffeafd6f0e:	jmp		0x7fffeafd8d48
disassembling symbol '.LBB9_24':
textAddr: 0x7fffeafd6f13, textSize: 66
0x7fffeafd6f13:	fld		xword ptr [rsp + 0x1f20]
0x7fffeafd6f1a:	mov		rax, rsp
0x7fffeafd6f1d:	fstp		xword ptr [rax]
0x7fffeafd6f1f:	lea		rdi, [rsp + 0x23c]
0x7fffeafd6f27:	call		0x7fffeafc8350
0x7fffeafd6f2c:	fadd		st(0), st(0)
0x7fffeafd6f2e:	fstp		xword ptr [rsp + 0x1f20]
0x7fffeafd6f35:	fld		xword ptr [rsp + 0x1f20]
0x7fffeafd6f3c:	fldz		
0x7fffeafd6f3e:	fxch		st(1)
0x7fffeafd6f40:	fucomip		st(1)
0x7fffeafd6f42:	fstp		st(0)
0x7fffeafd6f44:	jne		0x7fffeafd6f55
0x7fffeafd6f4a:	jp		0x7fffeafd6f55
0x7fffeafd6f50:	jmp		0x7fffeafd6f66
disassembling symbol '.LBB9_25':
textAddr: 0x7fffeafd6f55, textSize: 17
0x7fffeafd6f55:	mov		eax, dword ptr [rsp + 0x23c]
0x7fffeafd6f5c:	add		eax, -1
0x7fffeafd6f5f:	mov		dword ptr [rsp + 0x23c], eax
disassembling symbol '.LBB9_26':
textAddr: 0x7fffeafd6f66, textSize: 73
0x7fffeafd6f66:	mov		eax, dword ptr [rsp + 0x1f10]
0x7fffeafd6f6d:	or		eax, 0x20
0x7fffeafd6f70:	cmp		eax, 0x61
0x7fffeafd6f73:	jne		0x7fffeafd75a9
0x7fffeafd6f79:	fld		dword ptr [rip + 0x2c14f0d]
0x7fffeafd6f7f:	fstp		xword ptr [rsp + 0x1c0]
0x7fffeafd6f86:	mov		eax, dword ptr [rsp + 0x1f10]
0x7fffeafd6f8d:	and		eax, 0x20
0x7fffeafd6f90:	cmp		eax, 0
0x7fffeafd6f93:	je		0x7fffeafd6faf
0x7fffeafd6f99:	mov		rax, qword ptr [rsp + 0x200]
0x7fffeafd6fa1:	add		rax, 9
0x7fffeafd6fa7:	mov		qword ptr [rsp + 0x200], rax
disassembling symbol '.LBB9_29':
textAddr: 0x7fffeafd6faf, textSize: 45
0x7fffeafd6faf:	mov		eax, dword ptr [rsp + 0x1fc]
0x7fffeafd6fb6:	add		eax, 2
0x7fffeafd6fb9:	mov		dword ptr [rsp + 0x1fc], eax
0x7fffeafd6fc0:	cmp		dword ptr [rsp + 0x1f18], 0
0x7fffeafd6fc8:	jl		0x7fffeafd6fdc
0x7fffeafd6fce:	cmp		dword ptr [rsp + 0x1f18], 0xf
0x7fffeafd6fd6:	jl		0x7fffeafd6fec
disassembling symbol '.LBB9_31':
textAddr: 0x7fffeafd6fdc, textSize: 16
0x7fffeafd6fdc:	mov		dword ptr [rsp + 0x1bc], 0
0x7fffeafd6fe7:	jmp		0x7fffeafd6fff
disassembling symbol '.LBB9_32':
textAddr: 0x7fffeafd6fec, textSize: 19
0x7fffeafd6fec:	mov		eax, 0xf
0x7fffeafd6ff1:	sub		eax, dword ptr [rsp + 0x1f18]
0x7fffeafd6ff8:	mov		dword ptr [rsp + 0x1bc], eax
disassembling symbol '.LBB9_33':
textAddr: 0x7fffeafd6fff, textSize: 19
0x7fffeafd6fff:	cmp		dword ptr [rsp + 0x1bc], 0
0x7fffeafd7007:	je		0x7fffeafd70e3
0x7fffeafd700d:	jmp		0x7fffeafd7012
disassembling symbol '.LBB9_35':
textAddr: 0x7fffeafd7012, textSize: 55
0x7fffeafd7012:	mov		eax, dword ptr [rsp + 0x1bc]
0x7fffeafd7019:	mov		ecx, eax
0x7fffeafd701b:	add		ecx, -1
0x7fffeafd701e:	mov		dword ptr [rsp + 0x1bc], ecx
0x7fffeafd7025:	cmp		eax, 0
0x7fffeafd7028:	je		0x7fffeafd7049
0x7fffeafd702e:	fld		xword ptr [rsp + 0x1c0]
0x7fffeafd7035:	fld		dword ptr [rip + 0x2c14e55]
0x7fffeafd703b:	fmulp		st(1)
0x7fffeafd703d:	fstp		xword ptr [rsp + 0x1c0]
0x7fffeafd7044:	jmp		0x7fffeafd7012
disassembling symbol '.LBB9_37':
textAddr: 0x7fffeafd7049, textSize: 103
0x7fffeafd7049:	mov		rax, qword ptr [rsp + 0x200]
0x7fffeafd7051:	movsx		ecx, byte ptr [rax]
0x7fffeafd7054:	cmp		ecx, 0x2d
0x7fffeafd7057:	jne		0x7fffeafd70b0
0x7fffeafd705d:	fld		xword ptr [rsp + 0x1f20]
0x7fffeafd7064:	fchs		
0x7fffeafd7066:	fstp		xword ptr [rsp + 0x1f20]
0x7fffeafd706d:	fld		xword ptr [rsp + 0x1c0]
0x7fffeafd7074:	fld		xword ptr [rsp + 0x1f20]
0x7fffeafd707b:	fsubrp		st(1)
0x7fffeafd707d:	fstp		xword ptr [rsp + 0x1f20]
0x7fffeafd7084:	fld		xword ptr [rsp + 0x1c0]
0x7fffeafd708b:	fld		xword ptr [rsp + 0x1f20]
0x7fffeafd7092:	faddp		st(1)
0x7fffeafd7094:	fstp		xword ptr [rsp + 0x1f20]
0x7fffeafd709b:	fld		xword ptr [rsp + 0x1f20]
0x7fffeafd70a2:	fchs		
0x7fffeafd70a4:	fstp		xword ptr [rsp + 0x1f20]
0x7fffeafd70ab:	jmp		0x7fffeafd70de
disassembling symbol '.LBB9_39':
textAddr: 0x7fffeafd70b0, textSize: 46
0x7fffeafd70b0:	fld		xword ptr [rsp + 0x1c0]
0x7fffeafd70b7:	fld		xword ptr [rsp + 0x1f20]
0x7fffeafd70be:	faddp		st(1)
0x7fffeafd70c0:	fstp		xword ptr [rsp + 0x1f20]
0x7fffeafd70c7:	fld		xword ptr [rsp + 0x1c0]
0x7fffeafd70ce:	fld		xword ptr [rsp + 0x1f20]
0x7fffeafd70d5:	fsubrp		st(1)
0x7fffeafd70d7:	fstp		xword ptr [rsp + 0x1f20]
disassembling symbol '.LBB9_40':
textAddr: 0x7fffeafd70de, textSize: 5
0x7fffeafd70de:	jmp		0x7fffeafd70e3
disassembling symbol '.LBB9_41':
textAddr: 0x7fffeafd70e3, textSize: 35
0x7fffeafd70e3:	cmp		dword ptr [rsp + 0x23c], 0
0x7fffeafd70eb:	jge		0x7fffeafd7106
0x7fffeafd70f1:	xor		eax, eax
0x7fffeafd70f3:	sub		eax, dword ptr [rsp + 0x23c]
0x7fffeafd70fa:	mov		dword ptr [rsp + 0xf8], eax
0x7fffeafd7101:	jmp		0x7fffeafd7114
disassembling symbol '.LBB9_43':
textAddr: 0x7fffeafd7106, textSize: 14
0x7fffeafd7106:	mov		eax, dword ptr [rsp + 0x23c]
0x7fffeafd710d:	mov		dword ptr [rsp + 0xf8], eax
disassembling symbol '.LBB9_44':
textAddr: 0x7fffeafd7114, textSize: 83
0x7fffeafd7114:	mov		eax, dword ptr [rsp + 0xf8]
0x7fffeafd711b:	movsxd		rdi, eax
0x7fffeafd711e:	mov		rsi, qword ptr [rsp + 0x1e8]
0x7fffeafd7126:	call		0x7fffeafd6940
0x7fffeafd712b:	mov		qword ptr [rsp + 0x1e0], rax
0x7fffeafd7133:	mov		rax, qword ptr [rsp + 0x1e0]
0x7fffeafd713b:	cmp		rax, qword ptr [rsp + 0x1e8]
0x7fffeafd7143:	jne		0x7fffeafd7167
0x7fffeafd7149:	mov		rax, qword ptr [rsp + 0x1e0]
0x7fffeafd7151:	mov		rcx, rax
0x7fffeafd7154:	add		rcx, -1
0x7fffeafd715b:	mov		qword ptr [rsp + 0x1e0], rcx
0x7fffeafd7163:	mov		byte ptr [rax - 1], 0x30
disassembling symbol '.LBB9_46':
textAddr: 0x7fffeafd7167, textSize: 107
0x7fffeafd7167:	lea		rax, [rsp + 0x210]
0x7fffeafd716f:	mov		ecx, dword ptr [rsp + 0x23c]
0x7fffeafd7176:	cmp		ecx, 0
0x7fffeafd7179:	mov		ecx, 0x2d
0x7fffeafd717e:	mov		edx, 0x2b
0x7fffeafd7183:	cmovl		edx, ecx
0x7fffeafd7186:	mov		rsi, qword ptr [rsp + 0x1e0]
0x7fffeafd718e:	mov		rdi, rsi
0x7fffeafd7191:	add		rdi, -1
0x7fffeafd7198:	mov		qword ptr [rsp + 0x1e0], rdi
0x7fffeafd71a0:	mov		byte ptr [rsi - 1], dl
0x7fffeafd71a3:	mov		ecx, dword ptr [rsp + 0x1f10]
0x7fffeafd71aa:	add		ecx, 0xf
0x7fffeafd71ad:	mov		rsi, qword ptr [rsp + 0x1e0]
0x7fffeafd71b5:	mov		rdi, rsi
0x7fffeafd71b8:	add		rdi, -1
0x7fffeafd71bf:	mov		qword ptr [rsp + 0x1e0], rdi
0x7fffeafd71c7:	mov		byte ptr [rsi - 1], cl
0x7fffeafd71ca:	mov		qword ptr [rsp + 0x208], rax
disassembling symbol '.LBB9_47':
textAddr: 0x7fffeafd71d2, textSize: 238
0x7fffeafd71d2:	lea		rax, [rsp + 0x210]
0x7fffeafd71da:	fld		xword ptr [rsp + 0x1f20]
0x7fffeafd71e1:	fnstcw		word ptr [rsp + 0x10e]
0x7fffeafd71e8:	movzx		ecx, word ptr [rsp + 0x10e]
0x7fffeafd71f0:	or		ecx, 0xc00
0x7fffeafd71f6:	mov		word ptr [rsp + 0x10c], cx
0x7fffeafd71fe:	fldcw		word ptr [rsp + 0x10c]
0x7fffeafd7205:	fistp		dword ptr [rsp + 0x110]
0x7fffeafd720c:	fldcw		word ptr [rsp + 0x10e]
0x7fffeafd7213:	mov		edx, dword ptr [rsp + 0x110]
0x7fffeafd721a:	mov		dword ptr [rsp + 0x1b8], edx
0x7fffeafd7221:	movsxd		rsi, dword ptr [rsp + 0x1b8]
0x7fffeafd7229:	lea		rdi, [rip + 0x2c14c30]
0x7fffeafd7230:	movzx		edx, byte ptr [rsi + rdi]
0x7fffeafd7234:	mov		r8d, dword ptr [rsp + 0x1f10]
0x7fffeafd723c:	and		r8d, 0x20
0x7fffeafd7240:	or		edx, r8d
0x7fffeafd7243:	mov		rsi, qword ptr [rsp + 0x208]
0x7fffeafd724b:	mov		rdi, rsi
0x7fffeafd724e:	add		rdi, 1
0x7fffeafd7252:	mov		qword ptr [rsp + 0x208], rdi
0x7fffeafd725a:	mov		byte ptr [rsi], dl
0x7fffeafd725c:	fld		xword ptr [rsp + 0x1f20]
0x7fffeafd7263:	mov		r8d, dword ptr [rsp + 0x1b8]
0x7fffeafd726b:	mov		dword ptr [rsp + 0x114], r8d
0x7fffeafd7273:	fild		dword ptr [rsp + 0x114]
0x7fffeafd727a:	fsubp		st(1)
0x7fffeafd727c:	fld		dword ptr [rip + 0x2c14c0e]
0x7fffeafd7282:	fmulp		st(1)
0x7fffeafd7284:	fstp		xword ptr [rsp + 0x1f20]
0x7fffeafd728b:	mov		rsi, qword ptr [rsp + 0x208]
0x7fffeafd7293:	sub		rsi, rax
0x7fffeafd7296:	cmp		rsi, 1
0x7fffeafd729a:	jne		0x7fffeafd72fe
0x7fffeafd72a0:	fld		xword ptr [rsp + 0x1f20]
0x7fffeafd72a7:	fldz		
0x7fffeafd72a9:	fxch		st(1)
0x7fffeafd72ab:	fucomip		st(1)
0x7fffeafd72ad:	fstp		st(0)
0x7fffeafd72af:	jne		0x7fffeafd72e1
0x7fffeafd72b5:	jp		0x7fffeafd72e1
0x7fffeafd72bb:	jmp		0x7fffeafd72c0
disassembling symbol '.LBB9_49':
textAddr: 0x7fffeafd72c0, textSize: 33
0x7fffeafd72c0:	cmp		dword ptr [rsp + 0x1f18], 0
0x7fffeafd72c8:	jg		0x7fffeafd72e1
0x7fffeafd72ce:	mov		eax, dword ptr [rsp + 0x1f14]
0x7fffeafd72d5:	and		eax, 8
0x7fffeafd72d8:	cmp		eax, 0
0x7fffeafd72db:	je		0x7fffeafd72fe
disassembling symbol '.LBB9_51':
textAddr: 0x7fffeafd72e1, textSize: 29
0x7fffeafd72e1:	mov		rax, qword ptr [rsp + 0x208]
0x7fffeafd72e9:	mov		rcx, rax
0x7fffeafd72ec:	add		rcx, 1
0x7fffeafd72f3:	mov		qword ptr [rsp + 0x208], rcx
0x7fffeafd72fb:	mov		byte ptr [rax], 0x2e
disassembling symbol '.LBB9_52':
textAddr: 0x7fffeafd72fe, textSize: 5
0x7fffeafd72fe:	jmp		0x7fffeafd7303
disassembling symbol '.LBB9_53':
textAddr: 0x7fffeafd7303, textSize: 32
0x7fffeafd7303:	fld		xword ptr [rsp + 0x1f20]
0x7fffeafd730a:	fldz		
0x7fffeafd730c:	fxch		st(1)
0x7fffeafd730e:	fucomip		st(1)
0x7fffeafd7310:	fstp		st(0)
0x7fffeafd7312:	jne		0x7fffeafd71d2
0x7fffeafd7318:	jp		0x7fffeafd71d2
0x7fffeafd731e:	jmp		0x7fffeafd7323
disassembling symbol '.LBB9_54':
textAddr: 0x7fffeafd7323, textSize: 104
0x7fffeafd7323:	cmp		dword ptr [rsp + 0x1f18], 0
0x7fffeafd732b:	je		0x7fffeafd738b
0x7fffeafd7331:	lea		rax, [rsp + 0x210]
0x7fffeafd7339:	mov		rcx, qword ptr [rsp + 0x208]
0x7fffeafd7341:	sub		rcx, rax
0x7fffeafd7344:	sub		rcx, 2
0x7fffeafd734b:	movsxd		rax, dword ptr [rsp + 0x1f18]
0x7fffeafd7353:	cmp		rcx, rax
0x7fffeafd7356:	jge		0x7fffeafd738b
0x7fffeafd735c:	mov		eax, dword ptr [rsp + 0x1f18]
0x7fffeafd7363:	add		eax, 2
0x7fffeafd7366:	movsxd		rcx, eax
0x7fffeafd7369:	mov		rdx, qword ptr [rsp + 0x1e8]
0x7fffeafd7371:	mov		rsi, qword ptr [rsp + 0x1e0]
0x7fffeafd7379:	sub		rdx, rsi
0x7fffeafd737c:	add		rcx, rdx
0x7fffeafd737f:	mov		dword ptr [rsp + 0x22c], ecx
0x7fffeafd7386:	jmp		0x7fffeafd73bb
disassembling symbol '.LBB9_57':
textAddr: 0x7fffeafd738b, textSize: 48
0x7fffeafd738b:	lea		rax, [rsp + 0x210]
0x7fffeafd7393:	mov		rcx, qword ptr [rsp + 0x208]
0x7fffeafd739b:	sub		rcx, rax
0x7fffeafd739e:	mov		rax, qword ptr [rsp + 0x1e8]
0x7fffeafd73a6:	mov		rdx, qword ptr [rsp + 0x1e0]
0x7fffeafd73ae:	sub		rax, rdx
0x7fffeafd73b1:	add		rcx, rax
0x7fffeafd73b4:	mov		dword ptr [rsp + 0x22c], ecx
disassembling symbol '.LBB9_58':
textAddr: 0x7fffeafd73bb, textSize: 454
0x7fffeafd73bb:	mov		rdi, qword ptr [rsp + 0x1f38]
0x7fffeafd73c3:	mov		edx, dword ptr [rsp + 0x1f1c]
0x7fffeafd73ca:	mov		eax, dword ptr [rsp + 0x1fc]
0x7fffeafd73d1:	add		eax, dword ptr [rsp + 0x22c]
0x7fffeafd73d8:	mov		r8d, dword ptr [rsp + 0x1f14]
0x7fffeafd73e0:	mov		esi, 0x20
0x7fffeafd73e5:	mov		ecx, eax
0x7fffeafd73e7:	call		0x7fffeafd6a10
0x7fffeafd73ec:	mov		rdi, qword ptr [rsp + 0x1f38]
0x7fffeafd73f4:	mov		rsi, qword ptr [rsp + 0x200]
0x7fffeafd73fc:	movsxd		rdx, dword ptr [rsp + 0x1fc]
0x7fffeafd7404:	call		0x7fffeafd6240
0x7fffeafd7409:	mov		rdi, qword ptr [rsp + 0x1f38]
0x7fffeafd7411:	mov		edx, dword ptr [rsp + 0x1f1c]
0x7fffeafd7418:	mov		eax, dword ptr [rsp + 0x1fc]
0x7fffeafd741f:	add		eax, dword ptr [rsp + 0x22c]
0x7fffeafd7426:	mov		ecx, dword ptr [rsp + 0x1f14]
0x7fffeafd742d:	xor		ecx, 0x10000
0x7fffeafd7433:	mov		esi, 0x30
0x7fffeafd7438:	mov		dword ptr [rsp + 0xf4], ecx
0x7fffeafd743f:	mov		ecx, eax
0x7fffeafd7441:	mov		r8d, dword ptr [rsp + 0xf4]
0x7fffeafd7449:	call		0x7fffeafd6a10
0x7fffeafd744e:	lea		rdi, [rsp + 0x210]
0x7fffeafd7456:	mov		r9, qword ptr [rsp + 0x1f38]
0x7fffeafd745e:	mov		r10, qword ptr [rsp + 0x208]
0x7fffeafd7466:	sub		r10, rdi
0x7fffeafd7469:	mov		qword ptr [rsp + 0xe8], rdi
0x7fffeafd7471:	mov		rdi, r9
0x7fffeafd7474:	mov		rsi, qword ptr [rsp + 0xe8]
0x7fffeafd747c:	mov		rdx, r10
0x7fffeafd747f:	call		0x7fffeafd6240
0x7fffeafd7484:	xor		eax, eax
0x7fffeafd7486:	lea		rdx, [rsp + 0x210]
0x7fffeafd748e:	mov		rdi, qword ptr [rsp + 0x1f38]
0x7fffeafd7496:	movsxd		rsi, dword ptr [rsp + 0x22c]
0x7fffeafd749e:	mov		r9, qword ptr [rsp + 0x1e8]
0x7fffeafd74a6:	mov		r10, qword ptr [rsp + 0x1e0]
0x7fffeafd74ae:	sub		r9, r10
0x7fffeafd74b1:	sub		rsi, r9
0x7fffeafd74b4:	mov		r9, qword ptr [rsp + 0x208]
0x7fffeafd74bc:	sub		r9, rdx
0x7fffeafd74bf:	sub		rsi, r9
0x7fffeafd74c2:	mov		ecx, 0x30
0x7fffeafd74c7:	mov		dword ptr [rsp + 0xe4], esi
0x7fffeafd74ce:	mov		esi, ecx
0x7fffeafd74d0:	mov		edx, dword ptr [rsp + 0xe4]
0x7fffeafd74d7:	mov		ecx, eax
0x7fffeafd74d9:	mov		r8d, eax
0x7fffeafd74dc:	call		0x7fffeafd6a10
0x7fffeafd74e1:	mov		rdi, qword ptr [rsp + 0x1f38]
0x7fffeafd74e9:	mov		rsi, qword ptr [rsp + 0x1e0]
0x7fffeafd74f1:	mov		r9, qword ptr [rsp + 0x1e8]
0x7fffeafd74f9:	mov		r10, qword ptr [rsp + 0x1e0]
0x7fffeafd7501:	sub		r9, r10
0x7fffeafd7504:	mov		rdx, r9
0x7fffeafd7507:	call		0x7fffeafd6240
0x7fffeafd750c:	mov		rdi, qword ptr [rsp + 0x1f38]
0x7fffeafd7514:	mov		edx, dword ptr [rsp + 0x1f1c]
0x7fffeafd751b:	mov		eax, dword ptr [rsp + 0x1fc]
0x7fffeafd7522:	add		eax, dword ptr [rsp + 0x22c]
0x7fffeafd7529:	mov		ecx, dword ptr [rsp + 0x1f14]
0x7fffeafd7530:	xor		ecx, 0x2000
0x7fffeafd7536:	mov		esi, 0x20
0x7fffeafd753b:	mov		dword ptr [rsp + 0xe0], ecx
0x7fffeafd7542:	mov		ecx, eax
0x7fffeafd7544:	mov		r8d, dword ptr [rsp + 0xe0]
0x7fffeafd754c:	call		0x7fffeafd6a10
0x7fffeafd7551:	mov		eax, dword ptr [rsp + 0x1f1c]
0x7fffeafd7558:	mov		ecx, dword ptr [rsp + 0x1fc]
0x7fffeafd755f:	add		ecx, dword ptr [rsp + 0x22c]
0x7fffeafd7566:	cmp		eax, ecx
0x7fffeafd7568:	jle		0x7fffeafd7581
0x7fffeafd756e:	mov		eax, dword ptr [rsp + 0x1f1c]
0x7fffeafd7575:	mov		dword ptr [rsp + 0xdc], eax
0x7fffeafd757c:	jmp		0x7fffeafd7596
disassembling symbol '.LBB9_60':
textAddr: 0x7fffeafd7581, textSize: 21
0x7fffeafd7581:	mov		eax, dword ptr [rsp + 0x1fc]
0x7fffeafd7588:	add		eax, dword ptr [rsp + 0x22c]
0x7fffeafd758f:	mov		dword ptr [rsp + 0xdc], eax
disassembling symbol '.LBB9_61':
textAddr: 0x7fffeafd7596, textSize: 19
0x7fffeafd7596:	mov		eax, dword ptr [rsp + 0xdc]
0x7fffeafd759d:	mov		dword ptr [rsp + 0x1f44], eax
0x7fffeafd75a4:	jmp		0x7fffeafd8d48
disassembling symbol '.LBB9_62':
textAddr: 0x7fffeafd75a9, textSize: 25
0x7fffeafd75a9:	cmp		dword ptr [rsp + 0x1f18], 0
0x7fffeafd75b1:	jge		0x7fffeafd75c2
0x7fffeafd75b7:	mov		dword ptr [rsp + 0x1f18], 6
disassembling symbol '.LBB9_64':
textAddr: 0x7fffeafd75c2, textSize: 32
0x7fffeafd75c2:	fld		xword ptr [rsp + 0x1f20]
0x7fffeafd75c9:	fldz		
0x7fffeafd75cb:	fxch		st(1)
0x7fffeafd75cd:	fucomip		st(1)
0x7fffeafd75cf:	fstp		st(0)
0x7fffeafd75d1:	jne		0x7fffeafd75e2
0x7fffeafd75d7:	jp		0x7fffeafd75e2
0x7fffeafd75dd:	jmp		0x7fffeafd7609
disassembling symbol '.LBB9_65':
textAddr: 0x7fffeafd75e2, textSize: 39
0x7fffeafd75e2:	fld		xword ptr [rsp + 0x1f20]
0x7fffeafd75e9:	fld		dword ptr [rip + 0x2c14885]
0x7fffeafd75ef:	fmulp		st(1)
0x7fffeafd75f1:	fstp		xword ptr [rsp + 0x1f20]
0x7fffeafd75f8:	mov		eax, dword ptr [rsp + 0x23c]
0x7fffeafd75ff:	sub		eax, 0x1c
0x7fffeafd7602:	mov		dword ptr [rsp + 0x23c], eax
disassembling symbol '.LBB9_66':
textAddr: 0x7fffeafd7609, textSize: 51
0x7fffeafd7609:	cmp		dword ptr [rsp + 0x23c], 0
0x7fffeafd7611:	jge		0x7fffeafd763c
0x7fffeafd7617:	lea		rax, [rsp + 0x260]
0x7fffeafd761f:	mov		qword ptr [rsp + 0x240], rax
0x7fffeafd7627:	mov		qword ptr [rsp + 0x248], rax
0x7fffeafd762f:	mov		qword ptr [rsp + 0x258], rax
0x7fffeafd7637:	jmp		0x7fffeafd766e
disassembling symbol '.LBB9_68':
textAddr: 0x7fffeafd763c, textSize: 50
0x7fffeafd763c:	lea		rax, [rsp + 0x260]
0x7fffeafd7644:	add		rax, 0x1cac
0x7fffeafd764a:	add		rax, -0x100
0x7fffeafd7650:	add		rax, -4
0x7fffeafd7656:	mov		qword ptr [rsp + 0x240], rax
0x7fffeafd765e:	mov		qword ptr [rsp + 0x248], rax
0x7fffeafd7666:	mov		qword ptr [rsp + 0x258], rax
disassembling symbol '.LBB9_69':
textAddr: 0x7fffeafd766e, textSize: 5
0x7fffeafd766e:	jmp		0x7fffeafd7673
disassembling symbol '.LBB9_70':
textAddr: 0x7fffeafd7673, textSize: 171
0x7fffeafd7673:	fld		xword ptr [rsp + 0x1f20]
0x7fffeafd767a:	fnstcw		word ptr [rsp + 0x10a]
0x7fffeafd7681:	movzx		eax, word ptr [rsp + 0x10a]
0x7fffeafd7689:	or		eax, 0xc00
0x7fffeafd768e:	mov		word ptr [rsp + 0x108], ax
0x7fffeafd7696:	fldcw		word ptr [rsp + 0x108]
0x7fffeafd769d:	fistp		qword ptr [rsp + 0x120]
0x7fffeafd76a4:	fldcw		word ptr [rsp + 0x10a]
0x7fffeafd76ab:	mov		ecx, dword ptr [rsp + 0x120]
0x7fffeafd76b2:	mov		rdx, qword ptr [rsp + 0x240]
0x7fffeafd76ba:	mov		dword ptr [rdx], ecx
0x7fffeafd76bc:	fld		xword ptr [rsp + 0x1f20]
0x7fffeafd76c3:	mov		rdx, qword ptr [rsp + 0x240]
0x7fffeafd76cb:	mov		rsi, rdx
0x7fffeafd76ce:	add		rsi, 4
0x7fffeafd76d2:	mov		qword ptr [rsp + 0x240], rsi
0x7fffeafd76da:	mov		ecx, dword ptr [rdx]
0x7fffeafd76dc:	mov		edx, ecx
0x7fffeafd76de:	mov		qword ptr [rsp + 0x118], rdx
0x7fffeafd76e6:	fild		qword ptr [rsp + 0x118]
0x7fffeafd76ed:	fsubp		st(1)
0x7fffeafd76ef:	fld		dword ptr [rip + 0x2c14783]
0x7fffeafd76f5:	fmulp		st(1)
0x7fffeafd76f7:	fstp		xword ptr [rsp + 0x1f20]
0x7fffeafd76fe:	fld		xword ptr [rsp + 0x1f20]
0x7fffeafd7705:	fldz		
0x7fffeafd7707:	fxch		st(1)
0x7fffeafd7709:	fucomip		st(1)
0x7fffeafd770b:	fstp		st(0)
0x7fffeafd770d:	jne		0x7fffeafd7673
0x7fffeafd7713:	jp		0x7fffeafd7673
0x7fffeafd7719:	jmp		0x7fffeafd771e
disassembling symbol '.LBB9_72':
textAddr: 0x7fffeafd771e, textSize: 5
0x7fffeafd771e:	jmp		0x7fffeafd7723
disassembling symbol '.LBB9_73':
textAddr: 0x7fffeafd7723, textSize: 60
0x7fffeafd7723:	cmp		dword ptr [rsp + 0x23c], 0
0x7fffeafd772b:	jle		0x7fffeafd78da
0x7fffeafd7731:	mov		dword ptr [rsp + 0x1b4], 0
0x7fffeafd773c:	mov		eax, 0x1d
0x7fffeafd7741:	cmp		eax, dword ptr [rsp + 0x23c]
0x7fffeafd7748:	jge		0x7fffeafd775f
0x7fffeafd774e:	mov		eax, 0x1d
0x7fffeafd7753:	mov		dword ptr [rsp + 0xd8], eax
0x7fffeafd775a:	jmp		0x7fffeafd776d
disassembling symbol '.LBB9_76':
textAddr: 0x7fffeafd775f, textSize: 14
0x7fffeafd775f:	mov		eax, dword ptr [rsp + 0x23c]
0x7fffeafd7766:	mov		dword ptr [rsp + 0xd8], eax
disassembling symbol '.LBB9_77':
textAddr: 0x7fffeafd776d, textSize: 37
0x7fffeafd776d:	mov		eax, dword ptr [rsp + 0xd8]
0x7fffeafd7774:	mov		dword ptr [rsp + 0x1b0], eax
0x7fffeafd777b:	mov		rcx, qword ptr [rsp + 0x240]
0x7fffeafd7783:	add		rcx, -4
0x7fffeafd778a:	mov		qword ptr [rsp + 0x250], rcx
disassembling symbol '.LBB9_78':
textAddr: 0x7fffeafd7792, textSize: 142
0x7fffeafd7792:	mov		rax, qword ptr [rsp + 0x250]
0x7fffeafd779a:	cmp		rax, qword ptr [rsp + 0x258]
0x7fffeafd77a2:	jb		0x7fffeafd7820
0x7fffeafd77a8:	mov		rax, qword ptr [rsp + 0x250]
0x7fffeafd77b0:	mov		ecx, dword ptr [rax]
0x7fffeafd77b2:	mov		eax, ecx
0x7fffeafd77b4:	mov		ecx, dword ptr [rsp + 0x1b0]
0x7fffeafd77bb:	shl		rax, cl
0x7fffeafd77be:	mov		edx, dword ptr [rsp + 0x1b4]
0x7fffeafd77c5:	mov		esi, edx
0x7fffeafd77c7:	add		rax, rsi
0x7fffeafd77ca:	mov		qword ptr [rsp + 0x1a8], rax
0x7fffeafd77d2:	mov		rax, qword ptr [rsp + 0x1a8]
0x7fffeafd77da:	xor		edx, edx
0x7fffeafd77dc:	mov		esi, 0x3b9aca00
0x7fffeafd77e1:	div		rsi
0x7fffeafd77e4:	mov		rdi, qword ptr [rsp + 0x250]
0x7fffeafd77ec:	mov		dword ptr [rdi], edx
0x7fffeafd77ee:	mov		rdi, qword ptr [rsp + 0x1a8]
0x7fffeafd77f6:	mov		rax, rdi
0x7fffeafd77f9:	xor		edx, edx
0x7fffeafd77fb:	div		rsi
0x7fffeafd77fe:	mov		dword ptr [rsp + 0x1b4], eax
0x7fffeafd7805:	mov		rax, qword ptr [rsp + 0x250]
0x7fffeafd780d:	add		rax, -4
0x7fffeafd7813:	mov		qword ptr [rsp + 0x250], rax
0x7fffeafd781b:	jmp		0x7fffeafd7792
disassembling symbol '.LBB9_81':
textAddr: 0x7fffeafd7820, textSize: 50
0x7fffeafd7820:	cmp		dword ptr [rsp + 0x1b4], 0
0x7fffeafd7828:	je		0x7fffeafd7852
0x7fffeafd782e:	mov		eax, dword ptr [rsp + 0x1b4]
0x7fffeafd7835:	mov		rcx, qword ptr [rsp + 0x258]
0x7fffeafd783d:	mov		rdx, rcx
0x7fffeafd7840:	add		rdx, -4
0x7fffeafd7847:	mov		qword ptr [rsp + 0x258], rdx
0x7fffeafd784f:	mov		dword ptr [rcx - 4], eax
disassembling symbol '.LBB9_83':
textAddr: 0x7fffeafd7852, textSize: 5
0x7fffeafd7852:	jmp		0x7fffeafd7857
disassembling symbol '.LBB9_84':
textAddr: 0x7fffeafd7857, textSize: 56
0x7fffeafd7857:	xor		eax, eax
0x7fffeafd7859:	mov		rcx, qword ptr [rsp + 0x240]
0x7fffeafd7861:	cmp		rcx, qword ptr [rsp + 0x258]
0x7fffeafd7869:	mov		byte ptr [rsp + 0xd7], al
0x7fffeafd7870:	jbe		0x7fffeafd788f
0x7fffeafd7876:	mov		rax, qword ptr [rsp + 0x240]
0x7fffeafd787e:	cmp		dword ptr [rax - 4], 0
0x7fffeafd7882:	setne		cl
0x7fffeafd7885:	xor		cl, 0xff
0x7fffeafd7888:	mov		byte ptr [rsp + 0xd7], cl
disassembling symbol '.LBB9_86':
textAddr: 0x7fffeafd788f, textSize: 20
0x7fffeafd788f:	mov		al, byte ptr [rsp + 0xd7]
0x7fffeafd7896:	test		al, 1
0x7fffeafd7898:	jne		0x7fffeafd78a3
0x7fffeafd789e:	jmp		0x7fffeafd78be
disassembling symbol '.LBB9_87':
textAddr: 0x7fffeafd78a3, textSize: 27
0x7fffeafd78a3:	mov		rax, qword ptr [rsp + 0x240]
0x7fffeafd78ab:	add		rax, -4
0x7fffeafd78b1:	mov		qword ptr [rsp + 0x240], rax
0x7fffeafd78b9:	jmp		0x7fffeafd7857
disassembling symbol '.LBB9_88':
textAddr: 0x7fffeafd78be, textSize: 28
0x7fffeafd78be:	mov		eax, dword ptr [rsp + 0x1b0]
0x7fffeafd78c5:	mov		ecx, dword ptr [rsp + 0x23c]
0x7fffeafd78cc:	sub		ecx, eax
0x7fffeafd78ce:	mov		dword ptr [rsp + 0x23c], ecx
0x7fffeafd78d5:	jmp		0x7fffeafd7723
disassembling symbol '.LBB9_89':
textAddr: 0x7fffeafd78da, textSize: 5
0x7fffeafd78da:	jmp		0x7fffeafd78df
disassembling symbol '.LBB9_90':
textAddr: 0x7fffeafd78df, textSize: 64
0x7fffeafd78df:	cmp		dword ptr [rsp + 0x23c], 0
0x7fffeafd78e7:	jge		0x7fffeafd7b13
0x7fffeafd78ed:	xor		eax, eax
0x7fffeafd78ef:	mov		dword ptr [rsp + 0x1a4], 0
0x7fffeafd78fa:	sub		eax, dword ptr [rsp + 0x23c]
0x7fffeafd7901:	mov		ecx, 9
0x7fffeafd7906:	cmp		ecx, eax
0x7fffeafd7908:	jge		0x7fffeafd791f
0x7fffeafd790e:	mov		eax, 9
0x7fffeafd7913:	mov		dword ptr [rsp + 0xd0], eax
0x7fffeafd791a:	jmp		0x7fffeafd792f
disassembling symbol '.LBB9_93':
textAddr: 0x7fffeafd791f, textSize: 16
0x7fffeafd791f:	xor		eax, eax
0x7fffeafd7921:	sub		eax, dword ptr [rsp + 0x23c]
0x7fffeafd7928:	mov		dword ptr [rsp + 0xd0], eax
disassembling symbol '.LBB9_94':
textAddr: 0x7fffeafd792f, textSize: 61
0x7fffeafd792f:	mov		eax, dword ptr [rsp + 0xd0]
0x7fffeafd7936:	mov		dword ptr [rsp + 0x194], eax
0x7fffeafd793d:	mov		eax, dword ptr [rsp + 0x1f18]
0x7fffeafd7944:	add		eax, 0x15
0x7fffeafd7947:	add		eax, 8
0x7fffeafd794a:	cdq		
0x7fffeafd794b:	mov		ecx, 9
0x7fffeafd7950:	idiv		ecx
0x7fffeafd7952:	add		eax, 1
0x7fffeafd7955:	mov		dword ptr [rsp + 0x190], eax
0x7fffeafd795c:	mov		rsi, qword ptr [rsp + 0x258]
0x7fffeafd7964:	mov		qword ptr [rsp + 0x250], rsi
disassembling symbol '.LBB9_95':
textAddr: 0x7fffeafd796c, textSize: 166
0x7fffeafd796c:	mov		rax, qword ptr [rsp + 0x250]
0x7fffeafd7974:	cmp		rax, qword ptr [rsp + 0x240]
0x7fffeafd797c:	jae		0x7fffeafd7a12
0x7fffeafd7982:	mov		rax, qword ptr [rsp + 0x250]
0x7fffeafd798a:	mov		ecx, dword ptr [rax]
0x7fffeafd798c:	mov		edx, dword ptr [rsp + 0x194]
0x7fffeafd7993:	mov		dword ptr [rsp + 0xcc], ecx
0x7fffeafd799a:	mov		ecx, edx
0x7fffeafd799c:	mov		edx, 1
0x7fffeafd79a1:	shl		edx, cl
0x7fffeafd79a3:	sub		edx, 1
0x7fffeafd79a6:	mov		esi, dword ptr [rsp + 0xcc]
0x7fffeafd79ad:	and		esi, edx
0x7fffeafd79af:	mov		dword ptr [rsp + 0x18c], esi
0x7fffeafd79b6:	mov		rax, qword ptr [rsp + 0x250]
0x7fffeafd79be:	mov		edx, dword ptr [rax]
0x7fffeafd79c0:	mov		ecx, dword ptr [rsp + 0x194]
0x7fffeafd79c7:	shr		edx, cl
0x7fffeafd79c9:	add		edx, dword ptr [rsp + 0x1a4]
0x7fffeafd79d0:	mov		rax, qword ptr [rsp + 0x250]
0x7fffeafd79d8:	mov		dword ptr [rax], edx
0x7fffeafd79da:	mov		ecx, dword ptr [rsp + 0x194]
0x7fffeafd79e1:	mov		edx, 0x3b9aca00
0x7fffeafd79e6:	sar		edx, cl
0x7fffeafd79e8:	imul		edx, dword ptr [rsp + 0x18c]
0x7fffeafd79f0:	mov		dword ptr [rsp + 0x1a4], edx
0x7fffeafd79f7:	mov		rax, qword ptr [rsp + 0x250]
0x7fffeafd79ff:	add		rax, 4
0x7fffeafd7a05:	mov		qword ptr [rsp + 0x250], rax
0x7fffeafd7a0d:	jmp		0x7fffeafd796c
disassembling symbol '.LBB9_98':
textAddr: 0x7fffeafd7a12, textSize: 39
0x7fffeafd7a12:	mov		rax, qword ptr [rsp + 0x258]
0x7fffeafd7a1a:	cmp		dword ptr [rax], 0
0x7fffeafd7a1d:	jne		0x7fffeafd7a39
0x7fffeafd7a23:	mov		rax, qword ptr [rsp + 0x258]
0x7fffeafd7a2b:	add		rax, 4
0x7fffeafd7a31:	mov		qword ptr [rsp + 0x258], rax
disassembling symbol '.LBB9_100':
textAddr: 0x7fffeafd7a39, textSize: 49
0x7fffeafd7a39:	cmp		dword ptr [rsp + 0x1a4], 0
0x7fffeafd7a41:	je		0x7fffeafd7a6a
0x7fffeafd7a47:	mov		eax, dword ptr [rsp + 0x1a4]
0x7fffeafd7a4e:	mov		rcx, qword ptr [rsp + 0x240]
0x7fffeafd7a56:	mov		rdx, rcx
0x7fffeafd7a59:	add		rdx, 4
0x7fffeafd7a60:	mov		qword ptr [rsp + 0x240], rdx
0x7fffeafd7a68:	mov		dword ptr [rcx], eax
disassembling symbol '.LBB9_102':
textAddr: 0x7fffeafd7a6a, textSize: 40
0x7fffeafd7a6a:	mov		eax, dword ptr [rsp + 0x1f10]
0x7fffeafd7a71:	or		eax, 0x20
0x7fffeafd7a74:	cmp		eax, 0x66
0x7fffeafd7a77:	jne		0x7fffeafd7a92
0x7fffeafd7a7d:	mov		rax, qword ptr [rsp + 0x248]
0x7fffeafd7a85:	mov		qword ptr [rsp + 0xc0], rax
0x7fffeafd7a8d:	jmp		0x7fffeafd7aa2
disassembling symbol '.LBB9_104':
textAddr: 0x7fffeafd7a92, textSize: 16
0x7fffeafd7a92:	mov		rax, qword ptr [rsp + 0x258]
0x7fffeafd7a9a:	mov		qword ptr [rsp + 0xc0], rax
disassembling symbol '.LBB9_105':
textAddr: 0x7fffeafd7aa2, textSize: 87
0x7fffeafd7aa2:	mov		rax, qword ptr [rsp + 0xc0]
0x7fffeafd7aaa:	mov		qword ptr [rsp + 0x198], rax
0x7fffeafd7ab2:	mov		rax, qword ptr [rsp + 0x240]
0x7fffeafd7aba:	mov		rcx, qword ptr [rsp + 0x198]
0x7fffeafd7ac2:	sub		rax, rcx
0x7fffeafd7ac5:	sar		rax, 2
0x7fffeafd7ac9:	movsxd		rcx, dword ptr [rsp + 0x190]
0x7fffeafd7ad1:	cmp		rax, rcx
0x7fffeafd7ad4:	jle		0x7fffeafd7af9
0x7fffeafd7ada:	mov		rax, qword ptr [rsp + 0x198]
0x7fffeafd7ae2:	movsxd		rcx, dword ptr [rsp + 0x190]
0x7fffeafd7aea:	shl		rcx, 2
0x7fffeafd7aee:	add		rax, rcx
0x7fffeafd7af1:	mov		qword ptr [rsp + 0x240], rax
disassembling symbol '.LBB9_107':
textAddr: 0x7fffeafd7af9, textSize: 26
0x7fffeafd7af9:	mov		eax, dword ptr [rsp + 0x194]
0x7fffeafd7b00:	add		eax, dword ptr [rsp + 0x23c]
0x7fffeafd7b07:	mov		dword ptr [rsp + 0x23c], eax
0x7fffeafd7b0e:	jmp		0x7fffeafd78df
disassembling symbol '.LBB9_108':
textAddr: 0x7fffeafd7b13, textSize: 70
0x7fffeafd7b13:	mov		rax, qword ptr [rsp + 0x258]
0x7fffeafd7b1b:	cmp		rax, qword ptr [rsp + 0x240]
0x7fffeafd7b23:	jae		0x7fffeafd7b9f
0x7fffeafd7b29:	mov		dword ptr [rsp + 0x234], 0xa
0x7fffeafd7b34:	mov		rax, qword ptr [rsp + 0x248]
0x7fffeafd7b3c:	mov		rcx, qword ptr [rsp + 0x258]
0x7fffeafd7b44:	sub		rax, rcx
0x7fffeafd7b47:	sar		rax, 2
0x7fffeafd7b4b:	imul		rax, rax, 9
0x7fffeafd7b52:	mov		dword ptr [rsp + 0x238], eax
disassembling symbol '.LBB9_110':
textAddr: 0x7fffeafd7b59, textSize: 28
0x7fffeafd7b59:	mov		rax, qword ptr [rsp + 0x258]
0x7fffeafd7b61:	mov		ecx, dword ptr [rax]
0x7fffeafd7b63:	cmp		ecx, dword ptr [rsp + 0x234]
0x7fffeafd7b6a:	jb		0x7fffeafd7b9a
0x7fffeafd7b70:	jmp		0x7fffeafd7b75
disassembling symbol '.LBB9_112':
textAddr: 0x7fffeafd7b75, textSize: 37
0x7fffeafd7b75:	imul		eax, dword ptr [rsp + 0x234], 0xa
0x7fffeafd7b7d:	mov		dword ptr [rsp + 0x234], eax
0x7fffeafd7b84:	mov		eax, dword ptr [rsp + 0x238]
0x7fffeafd7b8b:	add		eax, 1
0x7fffeafd7b8e:	mov		dword ptr [rsp + 0x238], eax
0x7fffeafd7b95:	jmp		0x7fffeafd7b59
disassembling symbol '.LBB9_113':
textAddr: 0x7fffeafd7b9a, textSize: 5
0x7fffeafd7b9a:	jmp		0x7fffeafd7baa
disassembling symbol '.LBB9_114':
textAddr: 0x7fffeafd7b9f, textSize: 11
0x7fffeafd7b9f:	mov		dword ptr [rsp + 0x238], 0
disassembling symbol '.LBB9_115':
textAddr: 0x7fffeafd7baa, textSize: 95
0x7fffeafd7baa:	xor		eax, eax
0x7fffeafd7bac:	mov		ecx, dword ptr [rsp + 0x1f18]
0x7fffeafd7bb3:	mov		edx, dword ptr [rsp + 0x1f10]
0x7fffeafd7bba:	or		edx, 0x20
0x7fffeafd7bbd:	cmp		edx, 0x66
0x7fffeafd7bc0:	setne		sil
0x7fffeafd7bc4:	and		sil, 1
0x7fffeafd7bc8:	movzx		edx, sil
0x7fffeafd7bcc:	imul		edx, dword ptr [rsp + 0x238]
0x7fffeafd7bd4:	sub		ecx, edx
0x7fffeafd7bd6:	mov		edx, dword ptr [rsp + 0x1f10]
0x7fffeafd7bdd:	or		edx, 0x20
0x7fffeafd7be0:	cmp		edx, 0x67
0x7fffeafd7be3:	mov		dword ptr [rsp + 0xbc], ecx
0x7fffeafd7bea:	mov		byte ptr [rsp + 0xbb], al
0x7fffeafd7bf1:	jne		0x7fffeafd7c09
0x7fffeafd7bf7:	cmp		dword ptr [rsp + 0x1f18], 0
0x7fffeafd7bff:	setne		al
0x7fffeafd7c02:	mov		byte ptr [rsp + 0xbb], al
disassembling symbol '.LBB9_117':
textAddr: 0x7fffeafd7c09, textSize: 222
0x7fffeafd7c09:	mov		al, byte ptr [rsp + 0xbb]
0x7fffeafd7c10:	and		al, 1
0x7fffeafd7c12:	movzx		ecx, al
0x7fffeafd7c15:	mov		edx, dword ptr [rsp + 0xbc]
0x7fffeafd7c1c:	sub		edx, ecx
0x7fffeafd7c1e:	mov		dword ptr [rsp + 0x230], edx
0x7fffeafd7c25:	movsxd		rsi, dword ptr [rsp + 0x230]
0x7fffeafd7c2d:	mov		rdi, qword ptr [rsp + 0x240]
0x7fffeafd7c35:	mov		r8, qword ptr [rsp + 0x248]
0x7fffeafd7c3d:	sub		rdi, r8
0x7fffeafd7c40:	sar		rdi, 2
0x7fffeafd7c44:	sub		rdi, 1
0x7fffeafd7c4b:	imul		rdi, rdi, 9
0x7fffeafd7c52:	cmp		rsi, rdi
0x7fffeafd7c55:	jge		0x7fffeafd801b
0x7fffeafd7c5b:	mov		rax, qword ptr [rsp + 0x248]
0x7fffeafd7c63:	add		rax, 4
0x7fffeafd7c69:	mov		ecx, dword ptr [rsp + 0x230]
0x7fffeafd7c70:	add		ecx, 0x24000
0x7fffeafd7c76:	mov		qword ptr [rsp + 0xb0], rax
0x7fffeafd7c7e:	mov		eax, ecx
0x7fffeafd7c80:	cdq		
0x7fffeafd7c81:	mov		ecx, 9
0x7fffeafd7c86:	idiv		ecx
0x7fffeafd7c88:	sub		eax, 0x4000
0x7fffeafd7c8d:	movsxd		rsi, eax
0x7fffeafd7c90:	shl		rsi, 2
0x7fffeafd7c94:	mov		rdi, qword ptr [rsp + 0xb0]
0x7fffeafd7c9c:	add		rdi, rsi
0x7fffeafd7c9f:	mov		qword ptr [rsp + 0x250], rdi
0x7fffeafd7ca7:	mov		eax, dword ptr [rsp + 0x230]
0x7fffeafd7cae:	add		eax, 0x24000
0x7fffeafd7cb3:	mov		dword ptr [rsp + 0x230], eax
0x7fffeafd7cba:	mov		eax, dword ptr [rsp + 0x230]
0x7fffeafd7cc1:	cdq		
0x7fffeafd7cc2:	idiv		ecx
0x7fffeafd7cc4:	mov		dword ptr [rsp + 0x230], edx
0x7fffeafd7ccb:	mov		dword ptr [rsp + 0x234], 0xa
0x7fffeafd7cd6:	mov		ecx, dword ptr [rsp + 0x230]
0x7fffeafd7cdd:	add		ecx, 1
0x7fffeafd7ce0:	mov		dword ptr [rsp + 0x230], ecx
disassembling symbol '.LBB9_119':
textAddr: 0x7fffeafd7ce7, textSize: 19
0x7fffeafd7ce7:	cmp		dword ptr [rsp + 0x230], 9
0x7fffeafd7cef:	jge		0x7fffeafd7d1f
0x7fffeafd7cf5:	jmp		0x7fffeafd7cfa
disassembling symbol '.LBB9_121':
textAddr: 0x7fffeafd7cfa, textSize: 37
0x7fffeafd7cfa:	imul		eax, dword ptr [rsp + 0x234], 0xa
0x7fffeafd7d02:	mov		dword ptr [rsp + 0x234], eax
0x7fffeafd7d09:	mov		eax, dword ptr [rsp + 0x230]
0x7fffeafd7d10:	add		eax, 1
0x7fffeafd7d13:	mov		dword ptr [rsp + 0x230], eax
0x7fffeafd7d1a:	jmp		0x7fffeafd7ce7
disassembling symbol '.LBB9_122':
textAddr: 0x7fffeafd7d1f, textSize: 68
0x7fffeafd7d1f:	mov		rax, qword ptr [rsp + 0x250]
0x7fffeafd7d27:	mov		eax, dword ptr [rax]
0x7fffeafd7d29:	xor		edx, edx
0x7fffeafd7d2b:	div		dword ptr [rsp + 0x234]
0x7fffeafd7d32:	mov		dword ptr [rsp + 0x188], edx
0x7fffeafd7d39:	cmp		dword ptr [rsp + 0x188], 0
0x7fffeafd7d41:	jne		0x7fffeafd7d63
0x7fffeafd7d47:	mov		rax, qword ptr [rsp + 0x250]
0x7fffeafd7d4f:	add		rax, 4
0x7fffeafd7d55:	cmp		rax, qword ptr [rsp + 0x240]
0x7fffeafd7d5d:	je		0x7fffeafd7fe0
disassembling symbol '.LBB9_124':
textAddr: 0x7fffeafd7d63, textSize: 66
0x7fffeafd7d63:	fld		dword ptr [rip + 0x2c14113]
0x7fffeafd7d69:	fstp		xword ptr [rsp + 0x170]
0x7fffeafd7d70:	mov		rax, qword ptr [rsp + 0x250]
0x7fffeafd7d78:	mov		eax, dword ptr [rax]
0x7fffeafd7d7a:	xor		edx, edx
0x7fffeafd7d7c:	div		dword ptr [rsp + 0x234]
0x7fffeafd7d83:	and		eax, 1
0x7fffeafd7d86:	cmp		eax, 0
0x7fffeafd7d89:	je		0x7fffeafd7da5
0x7fffeafd7d8f:	fld		xword ptr [rsp + 0x170]
0x7fffeafd7d96:	fld		dword ptr [rip + 0x2c140e4]
0x7fffeafd7d9c:	faddp		st(1)
0x7fffeafd7d9e:	fstp		xword ptr [rsp + 0x170]
disassembling symbol '.LBB9_126':
textAddr: 0x7fffeafd7da5, textSize: 64
0x7fffeafd7da5:	mov		eax, dword ptr [rsp + 0x188]
0x7fffeafd7dac:	mov		ecx, dword ptr [rsp + 0x234]
0x7fffeafd7db3:	mov		dword ptr [rsp + 0xac], eax
0x7fffeafd7dba:	mov		eax, ecx
0x7fffeafd7dbc:	cdq		
0x7fffeafd7dbd:	mov		ecx, 2
0x7fffeafd7dc2:	idiv		ecx
0x7fffeafd7dc4:	mov		ecx, dword ptr [rsp + 0xac]
0x7fffeafd7dcb:	cmp		ecx, eax
0x7fffeafd7dcd:	jae		0x7fffeafd7de5
0x7fffeafd7dd3:	fld		dword ptr [rip + 0x2c140af]
0x7fffeafd7dd9:	fstp		xword ptr [rsp + 0x160]
0x7fffeafd7de0:	jmp		0x7fffeafd7e4f
disassembling symbol '.LBB9_128':
textAddr: 0x7fffeafd7de5, textSize: 88
0x7fffeafd7de5:	mov		eax, dword ptr [rsp + 0x188]
0x7fffeafd7dec:	mov		ecx, dword ptr [rsp + 0x234]
0x7fffeafd7df3:	mov		dword ptr [rsp + 0xa8], eax
0x7fffeafd7dfa:	mov		eax, ecx
0x7fffeafd7dfc:	cdq		
0x7fffeafd7dfd:	mov		ecx, 2
0x7fffeafd7e02:	idiv		ecx
0x7fffeafd7e04:	mov		ecx, dword ptr [rsp + 0xa8]
0x7fffeafd7e0b:	cmp		ecx, eax
0x7fffeafd7e0d:	jne		0x7fffeafd7e3d
0x7fffeafd7e13:	mov		rax, qword ptr [rsp + 0x250]
0x7fffeafd7e1b:	add		rax, 4
0x7fffeafd7e21:	cmp		rax, qword ptr [rsp + 0x240]
0x7fffeafd7e29:	jne		0x7fffeafd7e3d
0x7fffeafd7e2f:	fld1		
0x7fffeafd7e31:	fstp		xword ptr [rsp + 0x160]
0x7fffeafd7e38:	jmp		0x7fffeafd7e4a
disassembling symbol '.LBB9_131':
textAddr: 0x7fffeafd7e3d, textSize: 13
0x7fffeafd7e3d:	fld		dword ptr [rip + 0x2c14041]
0x7fffeafd7e43:	fstp		xword ptr [rsp + 0x160]
disassembling symbol '.LBB9_132':
textAddr: 0x7fffeafd7e4a, textSize: 5
0x7fffeafd7e4a:	jmp		0x7fffeafd7e4f
disassembling symbol '.LBB9_133':
textAddr: 0x7fffeafd7e4f, textSize: 66
0x7fffeafd7e4f:	cmp		dword ptr [rsp + 0x1fc], 0
0x7fffeafd7e57:	je		0x7fffeafd7e91
0x7fffeafd7e5d:	mov		rax, qword ptr [rsp + 0x200]
0x7fffeafd7e65:	movsx		ecx, byte ptr [rax]
0x7fffeafd7e68:	cmp		ecx, 0x2d
0x7fffeafd7e6b:	jne		0x7fffeafd7e91
0x7fffeafd7e71:	fld		xword ptr [rsp + 0x170]
0x7fffeafd7e78:	fchs		
0x7fffeafd7e7a:	fstp		xword ptr [rsp + 0x170]
0x7fffeafd7e81:	fld		xword ptr [rsp + 0x160]
0x7fffeafd7e88:	fchs		
0x7fffeafd7e8a:	fstp		xword ptr [rsp + 0x160]
disassembling symbol '.LBB9_136':
textAddr: 0x7fffeafd7e91, textSize: 58
0x7fffeafd7e91:	mov		eax, dword ptr [rsp + 0x188]
0x7fffeafd7e98:	mov		rcx, qword ptr [rsp + 0x250]
0x7fffeafd7ea0:	mov		edx, dword ptr [rcx]
0x7fffeafd7ea2:	sub		edx, eax
0x7fffeafd7ea4:	mov		dword ptr [rcx], edx
0x7fffeafd7ea6:	fld		xword ptr [rsp + 0x170]
0x7fffeafd7ead:	fld		xword ptr [rsp + 0x160]
0x7fffeafd7eb4:	fadd		st(1)
0x7fffeafd7eb6:	fucomip		st(1)
0x7fffeafd7eb8:	fstp		st(0)
0x7fffeafd7eba:	jne		0x7fffeafd7ecb
0x7fffeafd7ec0:	jp		0x7fffeafd7ecb
0x7fffeafd7ec6:	jmp		0x7fffeafd7fdb
disassembling symbol '.LBB9_137':
textAddr: 0x7fffeafd7ecb, textSize: 27
0x7fffeafd7ecb:	mov		rax, qword ptr [rsp + 0x250]
0x7fffeafd7ed3:	mov		ecx, dword ptr [rax]
0x7fffeafd7ed5:	add		ecx, dword ptr [rsp + 0x234]
0x7fffeafd7edc:	mov		rax, qword ptr [rsp + 0x250]
0x7fffeafd7ee4:	mov		dword ptr [rax], ecx
disassembling symbol '.LBB9_138':
textAddr: 0x7fffeafd7ee6, textSize: 107
0x7fffeafd7ee6:	mov		rax, qword ptr [rsp + 0x250]
0x7fffeafd7eee:	cmp		dword ptr [rax], 0x3b9ac9ff
0x7fffeafd7ef4:	jbe		0x7fffeafd7f65
0x7fffeafd7efa:	mov		rax, qword ptr [rsp + 0x250]
0x7fffeafd7f02:	mov		rcx, rax
0x7fffeafd7f05:	add		rcx, -4
0x7fffeafd7f0c:	mov		qword ptr [rsp + 0x250], rcx
0x7fffeafd7f14:	mov		dword ptr [rax], 0
0x7fffeafd7f1a:	mov		rax, qword ptr [rsp + 0x250]
0x7fffeafd7f22:	cmp		rax, qword ptr [rsp + 0x258]
0x7fffeafd7f2a:	jae		0x7fffeafd7f51
0x7fffeafd7f30:	mov		rax, qword ptr [rsp + 0x258]
0x7fffeafd7f38:	mov		rcx, rax
0x7fffeafd7f3b:	add		rcx, -4
0x7fffeafd7f42:	mov		qword ptr [rsp + 0x258], rcx
0x7fffeafd7f4a:	mov		dword ptr [rax - 4], 0
disassembling symbol '.LBB9_141':
textAddr: 0x7fffeafd7f51, textSize: 20
0x7fffeafd7f51:	mov		rax, qword ptr [rsp + 0x250]
0x7fffeafd7f59:	mov		ecx, dword ptr [rax]
0x7fffeafd7f5b:	add		ecx, 1
0x7fffeafd7f5e:	mov		dword ptr [rax], ecx
0x7fffeafd7f60:	jmp		0x7fffeafd7ee6
disassembling symbol '.LBB9_142':
textAddr: 0x7fffeafd7f65, textSize: 48
0x7fffeafd7f65:	mov		dword ptr [rsp + 0x234], 0xa
0x7fffeafd7f70:	mov		rax, qword ptr [rsp + 0x248]
0x7fffeafd7f78:	mov		rcx, qword ptr [rsp + 0x258]
0x7fffeafd7f80:	sub		rax, rcx
0x7fffeafd7f83:	sar		rax, 2
0x7fffeafd7f87:	imul		rax, rax, 9
0x7fffeafd7f8e:	mov		dword ptr [rsp + 0x238], eax
disassembling symbol '.LBB9_143':
textAddr: 0x7fffeafd7f95, textSize: 28
0x7fffeafd7f95:	mov		rax, qword ptr [rsp + 0x258]
0x7fffeafd7f9d:	mov		ecx, dword ptr [rax]
0x7fffeafd7f9f:	cmp		ecx, dword ptr [rsp + 0x234]
0x7fffeafd7fa6:	jb		0x7fffeafd7fd6
0x7fffeafd7fac:	jmp		0x7fffeafd7fb1
disassembling symbol '.LBB9_145':
textAddr: 0x7fffeafd7fb1, textSize: 37
0x7fffeafd7fb1:	imul		eax, dword ptr [rsp + 0x234], 0xa
0x7fffeafd7fb9:	mov		dword ptr [rsp + 0x234], eax
0x7fffeafd7fc0:	mov		eax, dword ptr [rsp + 0x238]
0x7fffeafd7fc7:	add		eax, 1
0x7fffeafd7fca:	mov		dword ptr [rsp + 0x238], eax
0x7fffeafd7fd1:	jmp		0x7fffeafd7f95
disassembling symbol '.LBB9_146':
textAddr: 0x7fffeafd7fd6, textSize: 5
0x7fffeafd7fd6:	jmp		0x7fffeafd7fdb
disassembling symbol '.LBB9_147':
textAddr: 0x7fffeafd7fdb, textSize: 5
0x7fffeafd7fdb:	jmp		0x7fffeafd7fe0
disassembling symbol '.LBB9_148':
textAddr: 0x7fffeafd7fe0, textSize: 54
0x7fffeafd7fe0:	mov		rax, qword ptr [rsp + 0x240]
0x7fffeafd7fe8:	mov		rcx, qword ptr [rsp + 0x250]
0x7fffeafd7ff0:	add		rcx, 4
0x7fffeafd7ff7:	cmp		rax, rcx
0x7fffeafd7ffa:	jbe		0x7fffeafd8016
0x7fffeafd8000:	mov		rax, qword ptr [rsp + 0x250]
0x7fffeafd8008:	add		rax, 4
0x7fffeafd800e:	mov		qword ptr [rsp + 0x240], rax
disassembling symbol '.LBB9_150':
textAddr: 0x7fffeafd8016, textSize: 5
0x7fffeafd8016:	jmp		0x7fffeafd801b
disassembling symbol '.LBB9_151':
textAddr: 0x7fffeafd801b, textSize: 5
0x7fffeafd801b:	jmp		0x7fffeafd8020
disassembling symbol '.LBB9_152':
textAddr: 0x7fffeafd8020, textSize: 56
0x7fffeafd8020:	xor		eax, eax
0x7fffeafd8022:	mov		rcx, qword ptr [rsp + 0x240]
0x7fffeafd802a:	cmp		rcx, qword ptr [rsp + 0x258]
0x7fffeafd8032:	mov		byte ptr [rsp + 0xa7], al
0x7fffeafd8039:	jbe		0x7fffeafd8058
0x7fffeafd803f:	mov		rax, qword ptr [rsp + 0x240]
0x7fffeafd8047:	cmp		dword ptr [rax - 4], 0
0x7fffeafd804b:	setne		cl
0x7fffeafd804e:	xor		cl, 0xff
0x7fffeafd8051:	mov		byte ptr [rsp + 0xa7], cl
disassembling symbol '.LBB9_154':
textAddr: 0x7fffeafd8058, textSize: 20
0x7fffeafd8058:	mov		al, byte ptr [rsp + 0xa7]
0x7fffeafd805f:	test		al, 1
0x7fffeafd8061:	jne		0x7fffeafd806c
0x7fffeafd8067:	jmp		0x7fffeafd808c
disassembling symbol '.LBB9_155':
textAddr: 0x7fffeafd806c, textSize: 5
0x7fffeafd806c:	jmp		0x7fffeafd8071
disassembling symbol '.LBB9_156':
textAddr: 0x7fffeafd8071, textSize: 27
0x7fffeafd8071:	mov		rax, qword ptr [rsp + 0x240]
0x7fffeafd8079:	add		rax, -4
0x7fffeafd807f:	mov		qword ptr [rsp + 0x240], rax
0x7fffeafd8087:	jmp		0x7fffeafd8020
disassembling symbol '.LBB9_157':
textAddr: 0x7fffeafd808c, textSize: 50
0x7fffeafd808c:	mov		eax, dword ptr [rsp + 0x1f10]
0x7fffeafd8093:	or		eax, 0x20
0x7fffeafd8096:	cmp		eax, 0x67
0x7fffeafd8099:	jne		0x7fffeafd84d5
0x7fffeafd809f:	cmp		dword ptr [rsp + 0x1f18], 0
0x7fffeafd80a7:	jne		0x7fffeafd80be
0x7fffeafd80ad:	mov		eax, dword ptr [rsp + 0x1f18]
0x7fffeafd80b4:	add		eax, 1
0x7fffeafd80b7:	mov		dword ptr [rsp + 0x1f18], eax
disassembling symbol '.LBB9_160':
textAddr: 0x7fffeafd80be, textSize: 82
0x7fffeafd80be:	mov		eax, dword ptr [rsp + 0x1f18]
0x7fffeafd80c5:	cmp		eax, dword ptr [rsp + 0x238]
0x7fffeafd80cc:	jle		0x7fffeafd8110
0x7fffeafd80d2:	cmp		dword ptr [rsp + 0x238], -4
0x7fffeafd80da:	jl		0x7fffeafd8110
0x7fffeafd80e0:	mov		eax, dword ptr [rsp + 0x1f10]
0x7fffeafd80e7:	add		eax, -1
0x7fffeafd80ea:	mov		dword ptr [rsp + 0x1f10], eax
0x7fffeafd80f1:	mov		eax, dword ptr [rsp + 0x238]
0x7fffeafd80f8:	add		eax, 1
0x7fffeafd80fb:	mov		ecx, dword ptr [rsp + 0x1f18]
0x7fffeafd8102:	sub		ecx, eax
0x7fffeafd8104:	mov		dword ptr [rsp + 0x1f18], ecx
0x7fffeafd810b:	jmp		0x7fffeafd8132
disassembling symbol '.LBB9_163':
textAddr: 0x7fffeafd8110, textSize: 34
0x7fffeafd8110:	mov		eax, dword ptr [rsp + 0x1f10]
0x7fffeafd8117:	sub		eax, 2
0x7fffeafd811a:	mov		dword ptr [rsp + 0x1f10], eax
0x7fffeafd8121:	mov		eax, dword ptr [rsp + 0x1f18]
0x7fffeafd8128:	add		eax, -1
0x7fffeafd812b:	mov		dword ptr [rsp + 0x1f18], eax
disassembling symbol '.LBB9_164':
textAddr: 0x7fffeafd8132, textSize: 81
0x7fffeafd8132:	mov		eax, dword ptr [rsp + 0x1f14]
0x7fffeafd8139:	and		eax, 8
0x7fffeafd813c:	cmp		eax, 0
0x7fffeafd813f:	jne		0x7fffeafd84d0
0x7fffeafd8145:	mov		rax, qword ptr [rsp + 0x240]
0x7fffeafd814d:	cmp		rax, qword ptr [rsp + 0x258]
0x7fffeafd8155:	jbe		0x7fffeafd81cf
0x7fffeafd815b:	mov		rax, qword ptr [rsp + 0x240]
0x7fffeafd8163:	cmp		dword ptr [rax - 4], 0
0x7fffeafd8167:	je		0x7fffeafd81cf
0x7fffeafd816d:	mov		dword ptr [rsp + 0x234], 0xa
0x7fffeafd8178:	mov		dword ptr [rsp + 0x230], 0
disassembling symbol '.LBB9_168':
textAddr: 0x7fffeafd8183, textSize: 34
0x7fffeafd8183:	mov		rax, qword ptr [rsp + 0x240]
0x7fffeafd818b:	mov		eax, dword ptr [rax - 4]
0x7fffeafd818e:	xor		edx, edx
0x7fffeafd8190:	div		dword ptr [rsp + 0x234]
0x7fffeafd8197:	cmp		edx, 0
0x7fffeafd819a:	jne		0x7fffeafd81ca
0x7fffeafd81a0:	jmp		0x7fffeafd81a5
disassembling symbol '.LBB9_170':
textAddr: 0x7fffeafd81a5, textSize: 37
0x7fffeafd81a5:	imul		eax, dword ptr [rsp + 0x234], 0xa
0x7fffeafd81ad:	mov		dword ptr [rsp + 0x234], eax
0x7fffeafd81b4:	mov		eax, dword ptr [rsp + 0x230]
0x7fffeafd81bb:	add		eax, 1
0x7fffeafd81be:	mov		dword ptr [rsp + 0x230], eax
0x7fffeafd81c5:	jmp		0x7fffeafd8183
disassembling symbol '.LBB9_171':
textAddr: 0x7fffeafd81ca, textSize: 5
0x7fffeafd81ca:	jmp		0x7fffeafd81da
disassembling symbol '.LBB9_172':
textAddr: 0x7fffeafd81cf, textSize: 11
0x7fffeafd81cf:	mov		dword ptr [rsp + 0x230], 9
disassembling symbol '.LBB9_173':
textAddr: 0x7fffeafd81da, textSize: 113
0x7fffeafd81da:	mov		eax, dword ptr [rsp + 0x1f10]
0x7fffeafd81e1:	or		eax, 0x20
0x7fffeafd81e4:	cmp		eax, 0x66
0x7fffeafd81e7:	jne		0x7fffeafd8359
0x7fffeafd81ed:	xor		eax, eax
0x7fffeafd81ef:	mov		ecx, eax
0x7fffeafd81f1:	movsxd		rdx, dword ptr [rsp + 0x1f18]
0x7fffeafd81f9:	mov		rsi, qword ptr [rsp + 0x240]
0x7fffeafd8201:	mov		rdi, qword ptr [rsp + 0x248]
0x7fffeafd8209:	sub		rsi, rdi
0x7fffeafd820c:	sar		rsi, 2
0x7fffeafd8210:	sub		rsi, 1
0x7fffeafd8217:	imul		rsi, rsi, 9
0x7fffeafd821e:	movsxd		rdi, dword ptr [rsp + 0x230]
0x7fffeafd8226:	sub		rsi, rdi
0x7fffeafd8229:	cmp		rcx, rsi
0x7fffeafd822c:	mov		qword ptr [rsp + 0x98], rdx
0x7fffeafd8234:	jle		0x7fffeafd824b
0x7fffeafd823a:	xor		eax, eax
0x7fffeafd823c:	mov		ecx, eax
0x7fffeafd823e:	mov		qword ptr [rsp + 0x90], rcx
0x7fffeafd8246:	jmp		0x7fffeafd8282
disassembling symbol '.LBB9_176':
textAddr: 0x7fffeafd824b, textSize: 55
0x7fffeafd824b:	mov		rax, qword ptr [rsp + 0x240]
0x7fffeafd8253:	mov		rcx, qword ptr [rsp + 0x248]
0x7fffeafd825b:	sub		rax, rcx
0x7fffeafd825e:	sar		rax, 2
0x7fffeafd8262:	sub		rax, 1
0x7fffeafd8268:	imul		rax, rax, 9
0x7fffeafd826f:	movsxd		rcx, dword ptr [rsp + 0x230]
0x7fffeafd8277:	sub		rax, rcx
0x7fffeafd827a:	mov		qword ptr [rsp + 0x90], rax
disassembling symbol '.LBB9_177':
textAddr: 0x7fffeafd8282, textSize: 46
0x7fffeafd8282:	mov		rax, qword ptr [rsp + 0x90]
0x7fffeafd828a:	mov		rcx, qword ptr [rsp + 0x98]
0x7fffeafd8292:	cmp		rcx, rax
0x7fffeafd8295:	jge		0x7fffeafd82b0
0x7fffeafd829b:	movsxd		rax, dword ptr [rsp + 0x1f18]
0x7fffeafd82a3:	mov		qword ptr [rsp + 0x88], rax
0x7fffeafd82ab:	jmp		0x7fffeafd8345
disassembling symbol '.LBB9_179':
textAddr: 0x7fffeafd82b0, textSize: 78
0x7fffeafd82b0:	xor		eax, eax
0x7fffeafd82b2:	mov		ecx, eax
0x7fffeafd82b4:	mov		rdx, qword ptr [rsp + 0x240]
0x7fffeafd82bc:	mov		rsi, qword ptr [rsp + 0x248]
0x7fffeafd82c4:	sub		rdx, rsi
0x7fffeafd82c7:	sar		rdx, 2
0x7fffeafd82cb:	sub		rdx, 1
0x7fffeafd82d2:	imul		rdx, rdx, 9
0x7fffeafd82d9:	movsxd		rsi, dword ptr [rsp + 0x230]
0x7fffeafd82e1:	sub		rdx, rsi
0x7fffeafd82e4:	cmp		rcx, rdx
0x7fffeafd82e7:	jle		0x7fffeafd82fe
0x7fffeafd82ed:	xor		eax, eax
0x7fffeafd82ef:	mov		ecx, eax
0x7fffeafd82f1:	mov		qword ptr [rsp + 0x80], rcx
0x7fffeafd82f9:	jmp		0x7fffeafd8335
disassembling symbol '.LBB9_181':
textAddr: 0x7fffeafd82fe, textSize: 55
0x7fffeafd82fe:	mov		rax, qword ptr [rsp + 0x240]
0x7fffeafd8306:	mov		rcx, qword ptr [rsp + 0x248]
0x7fffeafd830e:	sub		rax, rcx
0x7fffeafd8311:	sar		rax, 2
0x7fffeafd8315:	sub		rax, 1
0x7fffeafd831b:	imul		rax, rax, 9
0x7fffeafd8322:	movsxd		rcx, dword ptr [rsp + 0x230]
0x7fffeafd832a:	sub		rax, rcx
0x7fffeafd832d:	mov		qword ptr [rsp + 0x80], rax
disassembling symbol '.LBB9_182':
textAddr: 0x7fffeafd8335, textSize: 16
0x7fffeafd8335:	mov		rax, qword ptr [rsp + 0x80]
0x7fffeafd833d:	mov		qword ptr [rsp + 0x88], rax
disassembling symbol '.LBB9_183':
textAddr: 0x7fffeafd8345, textSize: 20
0x7fffeafd8345:	mov		rax, qword ptr [rsp + 0x88]
0x7fffeafd834d:	mov		dword ptr [rsp + 0x1f18], eax
0x7fffeafd8354:	jmp		0x7fffeafd84cb
disassembling symbol '.LBB9_184':
textAddr: 0x7fffeafd8359, textSize: 99
0x7fffeafd8359:	xor		eax, eax
0x7fffeafd835b:	mov		ecx, eax
0x7fffeafd835d:	movsxd		rdx, dword ptr [rsp + 0x1f18]
0x7fffeafd8365:	mov		rsi, qword ptr [rsp + 0x240]
0x7fffeafd836d:	mov		rdi, qword ptr [rsp + 0x248]
0x7fffeafd8375:	sub		rsi, rdi
0x7fffeafd8378:	sar		rsi, 2
0x7fffeafd837c:	sub		rsi, 1
0x7fffeafd8383:	imul		rsi, rsi, 9
0x7fffeafd838a:	movsxd		rdi, dword ptr [rsp + 0x238]
0x7fffeafd8392:	add		rsi, rdi
0x7fffeafd8395:	movsxd		rdi, dword ptr [rsp + 0x230]
0x7fffeafd839d:	sub		rsi, rdi
0x7fffeafd83a0:	cmp		rcx, rsi
0x7fffeafd83a3:	mov		qword ptr [rsp + 0x78], rdx
0x7fffeafd83a8:	jle		0x7fffeafd83bc
0x7fffeafd83ae:	xor		eax, eax
0x7fffeafd83b0:	mov		ecx, eax
0x7fffeafd83b2:	mov		qword ptr [rsp + 0x70], rcx
0x7fffeafd83b7:	jmp		0x7fffeafd83fb
disassembling symbol '.LBB9_186':
textAddr: 0x7fffeafd83bc, textSize: 63
0x7fffeafd83bc:	mov		rax, qword ptr [rsp + 0x240]
0x7fffeafd83c4:	mov		rcx, qword ptr [rsp + 0x248]
0x7fffeafd83cc:	sub		rax, rcx
0x7fffeafd83cf:	sar		rax, 2
0x7fffeafd83d3:	sub		rax, 1
0x7fffeafd83d9:	imul		rax, rax, 9
0x7fffeafd83e0:	movsxd		rcx, dword ptr [rsp + 0x238]
0x7fffeafd83e8:	add		rax, rcx
0x7fffeafd83eb:	movsxd		rcx, dword ptr [rsp + 0x230]
0x7fffeafd83f3:	sub		rax, rcx
0x7fffeafd83f6:	mov		qword ptr [rsp + 0x70], rax
disassembling symbol '.LBB9_187':
textAddr: 0x7fffeafd83fb, textSize: 37
0x7fffeafd83fb:	mov		rax, qword ptr [rsp + 0x70]
0x7fffeafd8400:	mov		rcx, qword ptr [rsp + 0x78]
0x7fffeafd8405:	cmp		rcx, rax
0x7fffeafd8408:	jge		0x7fffeafd8420
0x7fffeafd840e:	movsxd		rax, dword ptr [rsp + 0x1f18]
0x7fffeafd8416:	mov		qword ptr [rsp + 0x68], rax
0x7fffeafd841b:	jmp		0x7fffeafd84bf
disassembling symbol '.LBB9_189':
textAddr: 0x7fffeafd8420, textSize: 86
0x7fffeafd8420:	xor		eax, eax
0x7fffeafd8422:	mov		ecx, eax
0x7fffeafd8424:	mov		rdx, qword ptr [rsp + 0x240]
0x7fffeafd842c:	mov		rsi, qword ptr [rsp + 0x248]
0x7fffeafd8434:	sub		rdx, rsi
0x7fffeafd8437:	sar		rdx, 2
0x7fffeafd843b:	sub		rdx, 1
0x7fffeafd8442:	imul		rdx, rdx, 9
0x7fffeafd8449:	movsxd		rsi, dword ptr [rsp + 0x238]
0x7fffeafd8451:	add		rdx, rsi
0x7fffeafd8454:	movsxd		rsi, dword ptr [rsp + 0x230]
0x7fffeafd845c:	sub		rdx, rsi
0x7fffeafd845f:	cmp		rcx, rdx
0x7fffeafd8462:	jle		0x7fffeafd8476
0x7fffeafd8468:	xor		eax, eax
0x7fffeafd846a:	mov		ecx, eax
0x7fffeafd846c:	mov		qword ptr [rsp + 0x60], rcx
0x7fffeafd8471:	jmp		0x7fffeafd84b5
disassembling symbol '.LBB9_191':
textAddr: 0x7fffeafd8476, textSize: 63
0x7fffeafd8476:	mov		rax, qword ptr [rsp + 0x240]
0x7fffeafd847e:	mov		rcx, qword ptr [rsp + 0x248]
0x7fffeafd8486:	sub		rax, rcx
0x7fffeafd8489:	sar		rax, 2
0x7fffeafd848d:	sub		rax, 1
0x7fffeafd8493:	imul		rax, rax, 9
0x7fffeafd849a:	movsxd		rcx, dword ptr [rsp + 0x238]
0x7fffeafd84a2:	add		rax, rcx
0x7fffeafd84a5:	movsxd		rcx, dword ptr [rsp + 0x230]
0x7fffeafd84ad:	sub		rax, rcx
0x7fffeafd84b0:	mov		qword ptr [rsp + 0x60], rax
disassembling symbol '.LBB9_192':
textAddr: 0x7fffeafd84b5, textSize: 10
0x7fffeafd84b5:	mov		rax, qword ptr [rsp + 0x60]
0x7fffeafd84ba:	mov		qword ptr [rsp + 0x68], rax
disassembling symbol '.LBB9_193':
textAddr: 0x7fffeafd84bf, textSize: 12
0x7fffeafd84bf:	mov		rax, qword ptr [rsp + 0x68]
0x7fffeafd84c4:	mov		dword ptr [rsp + 0x1f18], eax
disassembling symbol '.LBB9_194':
textAddr: 0x7fffeafd84cb, textSize: 5
0x7fffeafd84cb:	jmp		0x7fffeafd84d0
disassembling symbol '.LBB9_195':
textAddr: 0x7fffeafd84d0, textSize: 5
0x7fffeafd84d0:	jmp		0x7fffeafd84d5
disassembling symbol '.LBB9_196':
textAddr: 0x7fffeafd84d5, textSize: 54
0x7fffeafd84d5:	mov		eax, dword ptr [rsp + 0x1f18]
0x7fffeafd84dc:	add		eax, 1
0x7fffeafd84df:	cmp		dword ptr [rsp + 0x1f18], 0
0x7fffeafd84e7:	mov		cl, 1
0x7fffeafd84e9:	mov		dword ptr [rsp + 0x5c], eax
0x7fffeafd84ed:	mov		byte ptr [rsp + 0x5b], cl
0x7fffeafd84f1:	jne		0x7fffeafd850b
0x7fffeafd84f7:	mov		eax, dword ptr [rsp + 0x1f14]
0x7fffeafd84fe:	and		eax, 8
0x7fffeafd8501:	cmp		eax, 0
0x7fffeafd8504:	setne		cl
0x7fffeafd8507:	mov		byte ptr [rsp + 0x5b], cl
disassembling symbol '.LBB9_198':
textAddr: 0x7fffeafd850b, textSize: 76
0x7fffeafd850b:	mov		al, byte ptr [rsp + 0x5b]
0x7fffeafd850f:	and		al, 1
0x7fffeafd8511:	movzx		ecx, al
0x7fffeafd8514:	mov		edx, dword ptr [rsp + 0x5c]
0x7fffeafd8518:	add		edx, ecx
0x7fffeafd851a:	mov		dword ptr [rsp + 0x22c], edx
0x7fffeafd8521:	mov		ecx, dword ptr [rsp + 0x1f10]
0x7fffeafd8528:	or		ecx, 0x20
0x7fffeafd852b:	cmp		ecx, 0x66
0x7fffeafd852e:	jne		0x7fffeafd855c
0x7fffeafd8534:	cmp		dword ptr [rsp + 0x238], 0
0x7fffeafd853c:	jle		0x7fffeafd8557
0x7fffeafd8542:	mov		eax, dword ptr [rsp + 0x238]
0x7fffeafd8549:	add		eax, dword ptr [rsp + 0x22c]
0x7fffeafd8550:	mov		dword ptr [rsp + 0x22c], eax
disassembling symbol '.LBB9_201':
textAddr: 0x7fffeafd8557, textSize: 5
0x7fffeafd8557:	jmp		0x7fffeafd8660
disassembling symbol '.LBB9_202':
textAddr: 0x7fffeafd855c, textSize: 32
0x7fffeafd855c:	cmp		dword ptr [rsp + 0x238], 0
0x7fffeafd8564:	jge		0x7fffeafd857c
0x7fffeafd856a:	xor		eax, eax
0x7fffeafd856c:	sub		eax, dword ptr [rsp + 0x238]
0x7fffeafd8573:	mov		dword ptr [rsp + 0x54], eax
0x7fffeafd8577:	jmp		0x7fffeafd8587
disassembling symbol '.LBB9_204':
textAddr: 0x7fffeafd857c, textSize: 11
0x7fffeafd857c:	mov		eax, dword ptr [rsp + 0x238]
0x7fffeafd8583:	mov		dword ptr [rsp + 0x54], eax
disassembling symbol '.LBB9_205':
textAddr: 0x7fffeafd8587, textSize: 28
0x7fffeafd8587:	mov		eax, dword ptr [rsp + 0x54]
0x7fffeafd858b:	movsxd		rdi, eax
0x7fffeafd858e:	mov		rsi, qword ptr [rsp + 0x1e8]
0x7fffeafd8596:	call		0x7fffeafd6940
0x7fffeafd859b:	mov		qword ptr [rsp + 0x1e0], rax
disassembling symbol '.LBB9_206':
textAddr: 0x7fffeafd85a3, textSize: 64
0x7fffeafd85a3:	mov		rax, qword ptr [rsp + 0x1e8]
0x7fffeafd85ab:	mov		rcx, qword ptr [rsp + 0x1e0]
0x7fffeafd85b3:	sub		rax, rcx
0x7fffeafd85b6:	cmp		rax, 2
0x7fffeafd85ba:	jge		0x7fffeafd85e3
0x7fffeafd85c0:	mov		rax, qword ptr [rsp + 0x1e0]
0x7fffeafd85c8:	mov		rcx, rax
0x7fffeafd85cb:	add		rcx, -1
0x7fffeafd85d2:	mov		qword ptr [rsp + 0x1e0], rcx
0x7fffeafd85da:	mov		byte ptr [rax - 1], 0x30
0x7fffeafd85de:	jmp		0x7fffeafd85a3
disassembling symbol '.LBB9_208':
textAddr: 0x7fffeafd85e3, textSize: 125
0x7fffeafd85e3:	mov		eax, dword ptr [rsp + 0x238]
0x7fffeafd85ea:	cmp		eax, 0
0x7fffeafd85ed:	mov		eax, 0x2d
0x7fffeafd85f2:	mov		ecx, 0x2b
0x7fffeafd85f7:	cmovl		ecx, eax
0x7fffeafd85fa:	mov		rdx, qword ptr [rsp + 0x1e0]
0x7fffeafd8602:	mov		rsi, rdx
0x7fffeafd8605:	add		rsi, -1
0x7fffeafd860c:	mov		qword ptr [rsp + 0x1e0], rsi
0x7fffeafd8614:	mov		byte ptr [rdx - 1], cl
0x7fffeafd8617:	mov		eax, dword ptr [rsp + 0x1f10]
0x7fffeafd861e:	mov		rdx, qword ptr [rsp + 0x1e0]
0x7fffeafd8626:	mov		rsi, rdx
0x7fffeafd8629:	add		rsi, -1
0x7fffeafd8630:	mov		qword ptr [rsp + 0x1e0], rsi
0x7fffeafd8638:	mov		byte ptr [rdx - 1], al
0x7fffeafd863b:	mov		rdx, qword ptr [rsp + 0x1e8]
0x7fffeafd8643:	mov		rsi, qword ptr [rsp + 0x1e0]
0x7fffeafd864b:	sub		rdx, rsi
0x7fffeafd864e:	movsxd		rsi, dword ptr [rsp + 0x22c]
0x7fffeafd8656:	add		rsi, rdx
0x7fffeafd8659:	mov		dword ptr [rsp + 0x22c], esi
disassembling symbol '.LBB9_209':
textAddr: 0x7fffeafd8660, textSize: 198
0x7fffeafd8660:	mov		rdi, qword ptr [rsp + 0x1f38]
0x7fffeafd8668:	mov		edx, dword ptr [rsp + 0x1f1c]
0x7fffeafd866f:	mov		eax, dword ptr [rsp + 0x1fc]
0x7fffeafd8676:	add		eax, dword ptr [rsp + 0x22c]
0x7fffeafd867d:	mov		r8d, dword ptr [rsp + 0x1f14]
0x7fffeafd8685:	mov		esi, 0x20
0x7fffeafd868a:	mov		ecx, eax
0x7fffeafd868c:	call		0x7fffeafd6a10
0x7fffeafd8691:	mov		rdi, qword ptr [rsp + 0x1f38]
0x7fffeafd8699:	mov		rsi, qword ptr [rsp + 0x200]
0x7fffeafd86a1:	movsxd		rdx, dword ptr [rsp + 0x1fc]
0x7fffeafd86a9:	call		0x7fffeafd6240
0x7fffeafd86ae:	mov		rdi, qword ptr [rsp + 0x1f38]
0x7fffeafd86b6:	mov		edx, dword ptr [rsp + 0x1f1c]
0x7fffeafd86bd:	mov		eax, dword ptr [rsp + 0x1fc]
0x7fffeafd86c4:	add		eax, dword ptr [rsp + 0x22c]
0x7fffeafd86cb:	mov		ecx, dword ptr [rsp + 0x1f14]
0x7fffeafd86d2:	xor		ecx, 0x10000
0x7fffeafd86d8:	mov		esi, 0x30
0x7fffeafd86dd:	mov		dword ptr [rsp + 0x50], ecx
0x7fffeafd86e1:	mov		ecx, eax
0x7fffeafd86e3:	mov		r8d, dword ptr [rsp + 0x50]
0x7fffeafd86e8:	call		0x7fffeafd6a10
0x7fffeafd86ed:	mov		eax, dword ptr [rsp + 0x1f10]
0x7fffeafd86f4:	or		eax, 0x20
0x7fffeafd86f7:	cmp		eax, 0x66
0x7fffeafd86fa:	jne		0x7fffeafd89f3
0x7fffeafd8700:	mov		rax, qword ptr [rsp + 0x258]
0x7fffeafd8708:	cmp		rax, qword ptr [rsp + 0x248]
0x7fffeafd8710:	jbe		0x7fffeafd8726
0x7fffeafd8716:	mov		rax, qword ptr [rsp + 0x248]
0x7fffeafd871e:	mov		qword ptr [rsp + 0x258], rax
disassembling symbol '.LBB9_212':
textAddr: 0x7fffeafd8726, textSize: 16
0x7fffeafd8726:	mov		rax, qword ptr [rsp + 0x258]
0x7fffeafd872e:	mov		qword ptr [rsp + 0x250], rax
disassembling symbol '.LBB9_213':
textAddr: 0x7fffeafd8736, textSize: 91
0x7fffeafd8736:	mov		rax, qword ptr [rsp + 0x250]
0x7fffeafd873e:	cmp		rax, qword ptr [rsp + 0x248]
0x7fffeafd8746:	ja		0x7fffeafd8860
0x7fffeafd874c:	lea		rax, [rsp + 0x210]
0x7fffeafd8754:	mov		rcx, qword ptr [rsp + 0x250]
0x7fffeafd875c:	mov		edx, dword ptr [rcx]
0x7fffeafd875e:	mov		edi, edx
0x7fffeafd8760:	add		rax, 9
0x7fffeafd8766:	mov		rsi, rax
0x7fffeafd8769:	call		0x7fffeafd6940
0x7fffeafd876e:	mov		qword ptr [rsp + 0x158], rax
0x7fffeafd8776:	mov		rax, qword ptr [rsp + 0x250]
0x7fffeafd877e:	cmp		rax, qword ptr [rsp + 0x258]
0x7fffeafd8786:	je		0x7fffeafd87d2
0x7fffeafd878c:	jmp		0x7fffeafd8791
disassembling symbol '.LBB9_216':
textAddr: 0x7fffeafd8791, textSize: 60
0x7fffeafd8791:	lea		rax, [rsp + 0x210]
0x7fffeafd8799:	mov		rcx, qword ptr [rsp + 0x158]
0x7fffeafd87a1:	cmp		rcx, rax
0x7fffeafd87a4:	jbe		0x7fffeafd87cd
0x7fffeafd87aa:	mov		rax, qword ptr [rsp + 0x158]
0x7fffeafd87b2:	mov		rcx, rax
0x7fffeafd87b5:	add		rcx, -1
0x7fffeafd87bc:	mov		qword ptr [rsp + 0x158], rcx
0x7fffeafd87c4:	mov		byte ptr [rax - 1], 0x30
0x7fffeafd87c8:	jmp		0x7fffeafd8791
disassembling symbol '.LBB9_218':
textAddr: 0x7fffeafd87cd, textSize: 5
0x7fffeafd87cd:	jmp		0x7fffeafd8814
disassembling symbol '.LBB9_219':
textAddr: 0x7fffeafd87d2, textSize: 61
0x7fffeafd87d2:	lea		rax, [rsp + 0x210]
0x7fffeafd87da:	mov		rcx, qword ptr [rsp + 0x158]
0x7fffeafd87e2:	add		rax, 9
0x7fffeafd87e8:	cmp		rcx, rax
0x7fffeafd87eb:	jne		0x7fffeafd880f
0x7fffeafd87f1:	mov		rax, qword ptr [rsp + 0x158]
0x7fffeafd87f9:	mov		rcx, rax
0x7fffeafd87fc:	add		rcx, -1
0x7fffeafd8803:	mov		qword ptr [rsp + 0x158], rcx
0x7fffeafd880b:	mov		byte ptr [rax - 1], 0x30
disassembling symbol '.LBB9_221':
textAddr: 0x7fffeafd880f, textSize: 5
0x7fffeafd880f:	jmp		0x7fffeafd8814
disassembling symbol '.LBB9_222':
textAddr: 0x7fffeafd8814, textSize: 76
0x7fffeafd8814:	lea		rax, [rsp + 0x210]
0x7fffeafd881c:	mov		rdi, qword ptr [rsp + 0x1f38]
0x7fffeafd8824:	mov		rsi, qword ptr [rsp + 0x158]
0x7fffeafd882c:	add		rax, 9
0x7fffeafd8832:	mov		rcx, qword ptr [rsp + 0x158]
0x7fffeafd883a:	sub		rax, rcx
0x7fffeafd883d:	mov		rdx, rax
0x7fffeafd8840:	call		0x7fffeafd6240
0x7fffeafd8845:	mov		rax, qword ptr [rsp + 0x250]
0x7fffeafd884d:	add		rax, 4
0x7fffeafd8853:	mov		qword ptr [rsp + 0x250], rax
0x7fffeafd885b:	jmp		0x7fffeafd8736
disassembling symbol '.LBB9_224':
textAddr: 0x7fffeafd8860, textSize: 33
0x7fffeafd8860:	cmp		dword ptr [rsp + 0x1f18], 0
0x7fffeafd8868:	jne		0x7fffeafd8881
0x7fffeafd886e:	mov		eax, dword ptr [rsp + 0x1f14]
0x7fffeafd8875:	and		eax, 8
0x7fffeafd8878:	cmp		eax, 0
0x7fffeafd887b:	je		0x7fffeafd889a
disassembling symbol '.LBB9_226':
textAddr: 0x7fffeafd8881, textSize: 25
0x7fffeafd8881:	mov		rdi, qword ptr [rsp + 0x1f38]
0x7fffeafd8889:	lea		rsi, [rip + 0x2c136f9]
0x7fffeafd8890:	mov		edx, 1
0x7fffeafd8895:	call		0x7fffeafd6240
disassembling symbol '.LBB9_227':
textAddr: 0x7fffeafd889a, textSize: 5
0x7fffeafd889a:	jmp		0x7fffeafd889f
disassembling symbol '.LBB9_228':
textAddr: 0x7fffeafd889f, textSize: 43
0x7fffeafd889f:	xor		eax, eax
0x7fffeafd88a1:	mov		rcx, qword ptr [rsp + 0x250]
0x7fffeafd88a9:	cmp		rcx, qword ptr [rsp + 0x240]
0x7fffeafd88b1:	mov		byte ptr [rsp + 0x4f], al
0x7fffeafd88b5:	jae		0x7fffeafd88ca
0x7fffeafd88bb:	cmp		dword ptr [rsp + 0x1f18], 0
0x7fffeafd88c3:	setg		al
0x7fffeafd88c6:	mov		byte ptr [rsp + 0x4f], al
disassembling symbol '.LBB9_230':
textAddr: 0x7fffeafd88ca, textSize: 17
0x7fffeafd88ca:	mov		al, byte ptr [rsp + 0x4f]
0x7fffeafd88ce:	test		al, 1
0x7fffeafd88d0:	jne		0x7fffeafd88db
0x7fffeafd88d6:	jmp		0x7fffeafd89c8
disassembling symbol '.LBB9_231':
textAddr: 0x7fffeafd88db, textSize: 42
0x7fffeafd88db:	lea		rax, [rsp + 0x210]
0x7fffeafd88e3:	mov		rcx, qword ptr [rsp + 0x250]
0x7fffeafd88eb:	mov		edx, dword ptr [rcx]
0x7fffeafd88ed:	mov		edi, edx
0x7fffeafd88ef:	add		rax, 9
0x7fffeafd88f5:	mov		rsi, rax
0x7fffeafd88f8:	call		0x7fffeafd6940
0x7fffeafd88fd:	mov		qword ptr [rsp + 0x150], rax
disassembling symbol '.LBB9_232':
textAddr: 0x7fffeafd8905, textSize: 60
0x7fffeafd8905:	lea		rax, [rsp + 0x210]
0x7fffeafd890d:	mov		rcx, qword ptr [rsp + 0x150]
0x7fffeafd8915:	cmp		rcx, rax
0x7fffeafd8918:	jbe		0x7fffeafd8941
0x7fffeafd891e:	mov		rax, qword ptr [rsp + 0x150]
0x7fffeafd8926:	mov		rcx, rax
0x7fffeafd8929:	add		rcx, -1
0x7fffeafd8930:	mov		qword ptr [rsp + 0x150], rcx
0x7fffeafd8938:	mov		byte ptr [rax - 1], 0x30
0x7fffeafd893c:	jmp		0x7fffeafd8905
disassembling symbol '.LBB9_234':
textAddr: 0x7fffeafd8941, textSize: 58
0x7fffeafd8941:	mov		rdi, qword ptr [rsp + 0x1f38]
0x7fffeafd8949:	mov		rsi, qword ptr [rsp + 0x150]
0x7fffeafd8951:	mov		eax, 9
0x7fffeafd8956:	cmp		eax, dword ptr [rsp + 0x1f18]
0x7fffeafd895d:	mov		qword ptr [rsp + 0x40], rdi
0x7fffeafd8962:	mov		qword ptr [rsp + 0x38], rsi
0x7fffeafd8967:	jge		0x7fffeafd897b
0x7fffeafd896d:	mov		eax, 9
0x7fffeafd8972:	mov		dword ptr [rsp + 0x34], eax
0x7fffeafd8976:	jmp		0x7fffeafd8986
disassembling symbol '.LBB9_236':
textAddr: 0x7fffeafd897b, textSize: 11
0x7fffeafd897b:	mov		eax, dword ptr [rsp + 0x1f18]
0x7fffeafd8982:	mov		dword ptr [rsp + 0x34], eax
disassembling symbol '.LBB9_237':
textAddr: 0x7fffeafd8986, textSize: 66
0x7fffeafd8986:	mov		eax, dword ptr [rsp + 0x34]
0x7fffeafd898a:	movsxd		rdx, eax
0x7fffeafd898d:	mov		rdi, qword ptr [rsp + 0x40]
0x7fffeafd8992:	mov		rsi, qword ptr [rsp + 0x38]
0x7fffeafd8997:	call		0x7fffeafd6240
0x7fffeafd899c:	mov		rax, qword ptr [rsp + 0x250]
0x7fffeafd89a4:	add		rax, 4
0x7fffeafd89aa:	mov		qword ptr [rsp + 0x250], rax
0x7fffeafd89b2:	mov		ecx, dword ptr [rsp + 0x1f18]
0x7fffeafd89b9:	sub		ecx, 9
0x7fffeafd89bc:	mov		dword ptr [rsp + 0x1f18], ecx
0x7fffeafd89c3:	jmp		0x7fffeafd889f
disassembling symbol '.LBB9_239':
textAddr: 0x7fffeafd89c8, textSize: 43
0x7fffeafd89c8:	xor		r8d, r8d
0x7fffeafd89cb:	mov		rdi, qword ptr [rsp + 0x1f38]
0x7fffeafd89d3:	mov		eax, dword ptr [rsp + 0x1f18]
0x7fffeafd89da:	add		eax, 9
0x7fffeafd89dd:	mov		esi, 0x30
0x7fffeafd89e2:	mov		edx, eax
0x7fffeafd89e4:	mov		ecx, 9
0x7fffeafd89e9:	call		0x7fffeafd6a10
0x7fffeafd89ee:	jmp		0x7fffeafd8cbf
disassembling symbol '.LBB9_240':
textAddr: 0x7fffeafd89f3, textSize: 44
0x7fffeafd89f3:	mov		rax, qword ptr [rsp + 0x240]
0x7fffeafd89fb:	cmp		rax, qword ptr [rsp + 0x258]
0x7fffeafd8a03:	ja		0x7fffeafd8a1f
0x7fffeafd8a09:	mov		rax, qword ptr [rsp + 0x258]
0x7fffeafd8a11:	add		rax, 4
0x7fffeafd8a17:	mov		qword ptr [rsp + 0x240], rax
disassembling symbol '.LBB9_242':
textAddr: 0x7fffeafd8a1f, textSize: 16
0x7fffeafd8a1f:	mov		rax, qword ptr [rsp + 0x258]
0x7fffeafd8a27:	mov		qword ptr [rsp + 0x250], rax
disassembling symbol '.LBB9_243':
textAddr: 0x7fffeafd8a2f, textSize: 43
0x7fffeafd8a2f:	xor		eax, eax
0x7fffeafd8a31:	mov		rcx, qword ptr [rsp + 0x250]
0x7fffeafd8a39:	cmp		rcx, qword ptr [rsp + 0x240]
0x7fffeafd8a41:	mov		byte ptr [rsp + 0x33], al
0x7fffeafd8a45:	jae		0x7fffeafd8a5a
0x7fffeafd8a4b:	cmp		dword ptr [rsp + 0x1f18], 0
0x7fffeafd8a53:	setge		al
0x7fffeafd8a56:	mov		byte ptr [rsp + 0x33], al
disassembling symbol '.LBB9_245':
textAddr: 0x7fffeafd8a5a, textSize: 17
0x7fffeafd8a5a:	mov		al, byte ptr [rsp + 0x33]
0x7fffeafd8a5e:	test		al, 1
0x7fffeafd8a60:	jne		0x7fffeafd8a6b
0x7fffeafd8a66:	jmp		0x7fffeafd8c6e
disassembling symbol '.LBB9_246':
textAddr: 0x7fffeafd8a6b, textSize: 104
0x7fffeafd8a6b:	lea		rax, [rsp + 0x210]
0x7fffeafd8a73:	mov		rcx, qword ptr [rsp + 0x250]
0x7fffeafd8a7b:	mov		edx, dword ptr [rcx]
0x7fffeafd8a7d:	mov		edi, edx
0x7fffeafd8a7f:	add		rax, 9
0x7fffeafd8a85:	mov		rsi, rax
0x7fffeafd8a88:	call		0x7fffeafd6940
0x7fffeafd8a8d:	lea		rcx, [rsp + 0x210]
0x7fffeafd8a95:	mov		qword ptr [rsp + 0x148], rax
0x7fffeafd8a9d:	mov		rax, qword ptr [rsp + 0x148]
0x7fffeafd8aa5:	add		rcx, 9
0x7fffeafd8aac:	cmp		rax, rcx
0x7fffeafd8aaf:	jne		0x7fffeafd8ad3
0x7fffeafd8ab5:	mov		rax, qword ptr [rsp + 0x148]
0x7fffeafd8abd:	mov		rcx, rax
0x7fffeafd8ac0:	add		rcx, -1
0x7fffeafd8ac7:	mov		qword ptr [rsp + 0x148], rcx
0x7fffeafd8acf:	mov		byte ptr [rax - 1], 0x30
disassembling symbol '.LBB9_248':
textAddr: 0x7fffeafd8ad3, textSize: 27
0x7fffeafd8ad3:	mov		rax, qword ptr [rsp + 0x250]
0x7fffeafd8adb:	cmp		rax, qword ptr [rsp + 0x258]
0x7fffeafd8ae3:	je		0x7fffeafd8b2f
0x7fffeafd8ae9:	jmp		0x7fffeafd8aee
disassembling symbol '.LBB9_250':
textAddr: 0x7fffeafd8aee, textSize: 60
0x7fffeafd8aee:	lea		rax, [rsp + 0x210]
0x7fffeafd8af6:	mov		rcx, qword ptr [rsp + 0x148]
0x7fffeafd8afe:	cmp		rcx, rax
0x7fffeafd8b01:	jbe		0x7fffeafd8b2a
0x7fffeafd8b07:	mov		rax, qword ptr [rsp + 0x148]
0x7fffeafd8b0f:	mov		rcx, rax
0x7fffeafd8b12:	add		rcx, -1
0x7fffeafd8b19:	mov		qword ptr [rsp + 0x148], rcx
0x7fffeafd8b21:	mov		byte ptr [rax - 1], 0x30
0x7fffeafd8b25:	jmp		0x7fffeafd8aee
disassembling symbol '.LBB9_252':
textAddr: 0x7fffeafd8b2a, textSize: 5
0x7fffeafd8b2a:	jmp		0x7fffeafd8b9d
disassembling symbol '.LBB9_253':
textAddr: 0x7fffeafd8b2f, textSize: 80
0x7fffeafd8b2f:	mov		rdi, qword ptr [rsp + 0x1f38]
0x7fffeafd8b37:	mov		rax, qword ptr [rsp + 0x148]
0x7fffeafd8b3f:	mov		rcx, rax
0x7fffeafd8b42:	add		rcx, 1
0x7fffeafd8b49:	mov		qword ptr [rsp + 0x148], rcx
0x7fffeafd8b51:	mov		rsi, rax
0x7fffeafd8b54:	mov		edx, 1
0x7fffeafd8b59:	call		0x7fffeafd6240
0x7fffeafd8b5e:	cmp		dword ptr [rsp + 0x1f18], 0
0x7fffeafd8b66:	jg		0x7fffeafd8b7f
0x7fffeafd8b6c:	mov		eax, dword ptr [rsp + 0x1f14]
0x7fffeafd8b73:	and		eax, 8
0x7fffeafd8b76:	cmp		eax, 0
0x7fffeafd8b79:	je		0x7fffeafd8b98
disassembling symbol '.LBB9_255':
textAddr: 0x7fffeafd8b7f, textSize: 25
0x7fffeafd8b7f:	mov		rdi, qword ptr [rsp + 0x1f38]
0x7fffeafd8b87:	lea		rsi, [rip + 0x2c133fb]
0x7fffeafd8b8e:	mov		edx, 1
0x7fffeafd8b93:	call		0x7fffeafd6240
disassembling symbol '.LBB9_256':
textAddr: 0x7fffeafd8b98, textSize: 5
0x7fffeafd8b98:	jmp		0x7fffeafd8b9d
disassembling symbol '.LBB9_257':
textAddr: 0x7fffeafd8b9d, textSize: 103
0x7fffeafd8b9d:	lea		rax, [rsp + 0x210]
0x7fffeafd8ba5:	mov		rdi, qword ptr [rsp + 0x1f38]
0x7fffeafd8bad:	mov		rsi, qword ptr [rsp + 0x148]
0x7fffeafd8bb5:	add		rax, 9
0x7fffeafd8bbb:	mov		rcx, qword ptr [rsp + 0x148]
0x7fffeafd8bc3:	sub		rax, rcx
0x7fffeafd8bc6:	movsxd		rcx, dword ptr [rsp + 0x1f18]
0x7fffeafd8bce:	cmp		rax, rcx
0x7fffeafd8bd1:	mov		qword ptr [rsp + 0x28], rdi
0x7fffeafd8bd6:	mov		qword ptr [rsp + 0x20], rsi
0x7fffeafd8bdb:	jge		0x7fffeafd8c04
0x7fffeafd8be1:	lea		rax, [rsp + 0x210]
0x7fffeafd8be9:	add		rax, 9
0x7fffeafd8bef:	mov		rcx, qword ptr [rsp + 0x148]
0x7fffeafd8bf7:	sub		rax, rcx
0x7fffeafd8bfa:	mov		qword ptr [rsp + 0x18], rax
0x7fffeafd8bff:	jmp		0x7fffeafd8c11
disassembling symbol '.LBB9_259':
textAddr: 0x7fffeafd8c04, textSize: 13
0x7fffeafd8c04:	movsxd		rax, dword ptr [rsp + 0x1f18]
0x7fffeafd8c0c:	mov		qword ptr [rsp + 0x18], rax
disassembling symbol '.LBB9_260':
textAddr: 0x7fffeafd8c11, textSize: 93
0x7fffeafd8c11:	mov		rax, qword ptr [rsp + 0x18]
0x7fffeafd8c16:	mov		rdi, qword ptr [rsp + 0x28]
0x7fffeafd8c1b:	mov		rsi, qword ptr [rsp + 0x20]
0x7fffeafd8c20:	mov		rdx, rax
0x7fffeafd8c23:	call		0x7fffeafd6240
0x7fffeafd8c28:	lea		rax, [rsp + 0x210]
0x7fffeafd8c30:	add		rax, 9
0x7fffeafd8c36:	mov		rcx, qword ptr [rsp + 0x148]
0x7fffeafd8c3e:	sub		rax, rcx
0x7fffeafd8c41:	movsxd		rcx, dword ptr [rsp + 0x1f18]
0x7fffeafd8c49:	sub		rcx, rax
0x7fffeafd8c4c:	mov		dword ptr [rsp + 0x1f18], ecx
0x7fffeafd8c53:	mov		rax, qword ptr [rsp + 0x250]
0x7fffeafd8c5b:	add		rax, 4
0x7fffeafd8c61:	mov		qword ptr [rsp + 0x250], rax
0x7fffeafd8c69:	jmp		0x7fffeafd8a2f
disassembling symbol '.LBB9_262':
textAddr: 0x7fffeafd8c6e, textSize: 81
0x7fffeafd8c6e:	xor		r8d, r8d
0x7fffeafd8c71:	mov		rdi, qword ptr [rsp + 0x1f38]
0x7fffeafd8c79:	mov		eax, dword ptr [rsp + 0x1f18]
0x7fffeafd8c80:	add		eax, 0x12
0x7fffeafd8c83:	mov		esi, 0x30
0x7fffeafd8c88:	mov		edx, eax
0x7fffeafd8c8a:	mov		ecx, 0x12
0x7fffeafd8c8f:	call		0x7fffeafd6a10
0x7fffeafd8c94:	mov		rdi, qword ptr [rsp + 0x1f38]
0x7fffeafd8c9c:	mov		rsi, qword ptr [rsp + 0x1e0]
0x7fffeafd8ca4:	mov		r9, qword ptr [rsp + 0x1e8]
0x7fffeafd8cac:	mov		r10, qword ptr [rsp + 0x1e0]
0x7fffeafd8cb4:	sub		r9, r10
0x7fffeafd8cb7:	mov		rdx, r9
0x7fffeafd8cba:	call		0x7fffeafd6240
disassembling symbol '.LBB9_263':
textAddr: 0x7fffeafd8cbf, textSize: 108
0x7fffeafd8cbf:	mov		rdi, qword ptr [rsp + 0x1f38]
0x7fffeafd8cc7:	mov		edx, dword ptr [rsp + 0x1f1c]
0x7fffeafd8cce:	mov		eax, dword ptr [rsp + 0x1fc]
0x7fffeafd8cd5:	add		eax, dword ptr [rsp + 0x22c]
0x7fffeafd8cdc:	mov		ecx, dword ptr [rsp + 0x1f14]
0x7fffeafd8ce3:	xor		ecx, 0x2000
0x7fffeafd8ce9:	mov		esi, 0x20
0x7fffeafd8cee:	mov		dword ptr [rsp + 0x14], ecx
0x7fffeafd8cf2:	mov		ecx, eax
0x7fffeafd8cf4:	mov		r8d, dword ptr [rsp + 0x14]
0x7fffeafd8cf9:	call		0x7fffeafd6a10
0x7fffeafd8cfe:	mov		eax, dword ptr [rsp + 0x1f1c]
0x7fffeafd8d05:	mov		ecx, dword ptr [rsp + 0x1fc]
0x7fffeafd8d0c:	add		ecx, dword ptr [rsp + 0x22c]
0x7fffeafd8d13:	cmp		eax, ecx
0x7fffeafd8d15:	jle		0x7fffeafd8d2b
0x7fffeafd8d1b:	mov		eax, dword ptr [rsp + 0x1f1c]
0x7fffeafd8d22:	mov		dword ptr [rsp + 0x10], eax
0x7fffeafd8d26:	jmp		0x7fffeafd8d3d
disassembling symbol '.LBB9_265':
textAddr: 0x7fffeafd8d2b, textSize: 18
0x7fffeafd8d2b:	mov		eax, dword ptr [rsp + 0x1fc]
0x7fffeafd8d32:	add		eax, dword ptr [rsp + 0x22c]
0x7fffeafd8d39:	mov		dword ptr [rsp + 0x10], eax
disassembling symbol '.LBB9_266':
textAddr: 0x7fffeafd8d3d, textSize: 11
0x7fffeafd8d3d:	mov		eax, dword ptr [rsp + 0x10]
0x7fffeafd8d41:	mov		dword ptr [rsp + 0x1f44], eax
disassembling symbol '.LBB9_267':
textAddr: 0x7fffeafd8d48, textSize: 24
0x7fffeafd8d48:	mov		eax, dword ptr [rsp + 0x1f44]
0x7fffeafd8d4f:	add		rsp, 0x1f48
0x7fffeafd8d56:	ret		
0x7fffeafd8d57:	nop		word ptr [rax + rax]
disassembling symbol '__FLOAT_BITS':
textAddr: 0x7fffeafd8d60, textSize: 32
0x7fffeafd8d60:	movss		dword ptr [rsp - 4], xmm0
0x7fffeafd8d66:	movss		xmm0, dword ptr [rsp - 4]
0x7fffeafd8d6c:	movss		dword ptr [rsp - 8], xmm0
0x7fffeafd8d72:	mov		eax, dword ptr [rsp - 8]
0x7fffeafd8d76:	ret		
0x7fffeafd8d77:	nop		word ptr [rax + rax]
disassembling symbol '__DOUBLE_BITS':
textAddr: 0x7fffeafd8d80, textSize: 24
0x7fffeafd8d80:	movsd		qword ptr [rsp - 8], xmm0
0x7fffeafd8d86:	movsd		xmm0, qword ptr [rsp - 8]
0x7fffeafd8d8c:	movsd		qword ptr [rsp - 0x10], xmm0
0x7fffeafd8d92:	mov		rax, qword ptr [rsp - 0x10]
0x7fffeafd8d97:	ret		
disassembling symbol 'wcrtomb':
textAddr: 0x7fffeafd8da0, textSize: 523
0x7fffeafd8da0:	sub		rsp, 0x28
0x7fffeafd8da4:	mov		qword ptr [rsp + 0x18], rdi
0x7fffeafd8da9:	mov		dword ptr [rsp + 0x14], esi
0x7fffeafd8dad:	mov		qword ptr [rsp + 8], rdx
0x7fffeafd8db2:	cmp		qword ptr [rsp + 0x18], 0
0x7fffeafd8db8:	jne		0x7fffeafd8dcc
0x7fffeafd8dbe:	mov		qword ptr [rsp + 0x20], 1
0x7fffeafd8dc7:	jmp		0x7fffeafd8fa1
0x7fffeafd8dcc:	cmp		dword ptr [rsp + 0x14], 0x80
0x7fffeafd8dd4:	jae		0x7fffeafd8df3
0x7fffeafd8dda:	mov		eax, dword ptr [rsp + 0x14]
0x7fffeafd8dde:	mov		rcx, qword ptr [rsp + 0x18]
0x7fffeafd8de3:	mov		byte ptr [rcx], al
0x7fffeafd8de5:	mov		qword ptr [rsp + 0x20], 1
0x7fffeafd8dee:	jmp		0x7fffeafd8fa1
0x7fffeafd8df3:	cmp		dword ptr [rsp + 0x14], 0x800
0x7fffeafd8dfb:	jae		0x7fffeafd8e46
0x7fffeafd8e01:	mov		eax, dword ptr [rsp + 0x14]
0x7fffeafd8e05:	sar		eax, 6
0x7fffeafd8e08:	or		eax, 0xc0
0x7fffeafd8e0d:	mov		rcx, qword ptr [rsp + 0x18]
0x7fffeafd8e12:	mov		rdx, rcx
0x7fffeafd8e15:	add		rdx, 1
0x7fffeafd8e1c:	mov		qword ptr [rsp + 0x18], rdx
0x7fffeafd8e21:	mov		byte ptr [rcx], al
0x7fffeafd8e23:	mov		esi, dword ptr [rsp + 0x14]
0x7fffeafd8e27:	and		esi, 0x3f
0x7fffeafd8e2a:	or		esi, 0x80
0x7fffeafd8e30:	mov		rcx, qword ptr [rsp + 0x18]
0x7fffeafd8e35:	mov		byte ptr [rcx], sil
0x7fffeafd8e38:	mov		qword ptr [rsp + 0x20], 2
0x7fffeafd8e41:	jmp		0x7fffeafd8fa1
0x7fffeafd8e46:	cmp		dword ptr [rsp + 0x14], 0xd800
0x7fffeafd8e4e:	jb		0x7fffeafd8e68
0x7fffeafd8e54:	mov		eax, dword ptr [rsp + 0x14]
0x7fffeafd8e58:	sub		eax, 0xe000
0x7fffeafd8e5d:	cmp		eax, 0x2000
0x7fffeafd8e62:	jae		0x7fffeafd8ed4
0x7fffeafd8e68:	mov		eax, dword ptr [rsp + 0x14]
0x7fffeafd8e6c:	sar		eax, 0xc
0x7fffeafd8e6f:	or		eax, 0xe0
0x7fffeafd8e74:	mov		rcx, qword ptr [rsp + 0x18]
0x7fffeafd8e79:	mov		rdx, rcx
0x7fffeafd8e7c:	add		rdx, 1
0x7fffeafd8e83:	mov		qword ptr [rsp + 0x18], rdx
0x7fffeafd8e88:	mov		byte ptr [rcx], al
0x7fffeafd8e8a:	mov		esi, dword ptr [rsp + 0x14]
0x7fffeafd8e8e:	sar		esi, 6
0x7fffeafd8e91:	and		esi, 0x3f
0x7fffeafd8e94:	or		esi, 0x80
0x7fffeafd8e9a:	mov		rcx, qword ptr [rsp + 0x18]
0x7fffeafd8e9f:	mov		rdx, rcx
0x7fffeafd8ea2:	add		rdx, 1
0x7fffeafd8ea9:	mov		qword ptr [rsp + 0x18], rdx
0x7fffeafd8eae:	mov		byte ptr [rcx], sil
0x7fffeafd8eb1:	mov		edi, dword ptr [rsp + 0x14]
0x7fffeafd8eb5:	and		edi, 0x3f
0x7fffeafd8eb8:	or		edi, 0x80
0x7fffeafd8ebe:	mov		rcx, qword ptr [rsp + 0x18]
0x7fffeafd8ec3:	mov		byte ptr [rcx], dil
0x7fffeafd8ec6:	mov		qword ptr [rsp + 0x20], 3
0x7fffeafd8ecf:	jmp		0x7fffeafd8fa1
0x7fffeafd8ed4:	mov		eax, dword ptr [rsp + 0x14]
0x7fffeafd8ed8:	sub		eax, 0x10000
0x7fffeafd8edd:	cmp		eax, 0x100000
0x7fffeafd8ee2:	jae		0x7fffeafd8f7e
0x7fffeafd8ee8:	mov		eax, dword ptr [rsp + 0x14]
0x7fffeafd8eec:	sar		eax, 0x12
0x7fffeafd8eef:	or		eax, 0xf0
0x7fffeafd8ef4:	mov		rcx, qword ptr [rsp + 0x18]
0x7fffeafd8ef9:	mov		rdx, rcx
0x7fffeafd8efc:	add		rdx, 1
0x7fffeafd8f03:	mov		qword ptr [rsp + 0x18], rdx
0x7fffeafd8f08:	mov		byte ptr [rcx], al
0x7fffeafd8f0a:	mov		esi, dword ptr [rsp + 0x14]
0x7fffeafd8f0e:	sar		esi, 0xc
0x7fffeafd8f11:	and		esi, 0x3f
0x7fffeafd8f14:	or		esi, 0x80
0x7fffeafd8f1a:	mov		rcx, qword ptr [rsp + 0x18]
0x7fffeafd8f1f:	mov		rdx, rcx
0x7fffeafd8f22:	add		rdx, 1
0x7fffeafd8f29:	mov		qword ptr [rsp + 0x18], rdx
0x7fffeafd8f2e:	mov		byte ptr [rcx], sil
0x7fffeafd8f31:	mov		edi, dword ptr [rsp + 0x14]
0x7fffeafd8f35:	sar		edi, 6
0x7fffeafd8f38:	and		edi, 0x3f
0x7fffeafd8f3b:	or		edi, 0x80
0x7fffeafd8f41:	mov		rcx, qword ptr [rsp + 0x18]
0x7fffeafd8f46:	mov		rdx, rcx
0x7fffeafd8f49:	add		rdx, 1
0x7fffeafd8f50:	mov		qword ptr [rsp + 0x18], rdx
0x7fffeafd8f55:	mov		byte ptr [rcx], dil
0x7fffeafd8f58:	mov		r8d, dword ptr [rsp + 0x14]
0x7fffeafd8f5d:	and		r8d, 0x3f
0x7fffeafd8f61:	or		r8d, 0x80
0x7fffeafd8f68:	mov		rcx, qword ptr [rsp + 0x18]
0x7fffeafd8f6d:	mov		byte ptr [rcx], r8b
0x7fffeafd8f70:	mov		qword ptr [rsp + 0x20], 4
0x7fffeafd8f79:	jmp		0x7fffeafd8fa1
0x7fffeafd8f7e:	jmp		0x7fffeafd8f83
0x7fffeafd8f83:	jmp		0x7fffeafd8f88
0x7fffeafd8f88:	jmp		0x7fffeafd8f8d
0x7fffeafd8f8d:	call		0x7fffeafc3cb0
0x7fffeafd8f92:	mov		dword ptr [rax], 0x54
0x7fffeafd8f98:	mov		qword ptr [rsp + 0x20], -1
0x7fffeafd8fa1:	mov		rax, qword ptr [rsp + 0x20]
0x7fffeafd8fa6:	add		rsp, 0x28
0x7fffeafd8faa:	ret		
disassembling symbol '.LBB0_2':
textAddr: 0x7fffeafd8dcc, textSize: 39
0x7fffeafd8dcc:	cmp		dword ptr [rsp + 0x14], 0x80
0x7fffeafd8dd4:	jae		0x7fffeafd8df3
0x7fffeafd8dda:	mov		eax, dword ptr [rsp + 0x14]
0x7fffeafd8dde:	mov		rcx, qword ptr [rsp + 0x18]
0x7fffeafd8de3:	mov		byte ptr [rcx], al
0x7fffeafd8de5:	mov		qword ptr [rsp + 0x20], 1
0x7fffeafd8dee:	jmp		0x7fffeafd8fa1
disassembling symbol '.LBB0_4':
textAddr: 0x7fffeafd8df3, textSize: 83
0x7fffeafd8df3:	cmp		dword ptr [rsp + 0x14], 0x800
0x7fffeafd8dfb:	jae		0x7fffeafd8e46
0x7fffeafd8e01:	mov		eax, dword ptr [rsp + 0x14]
0x7fffeafd8e05:	sar		eax, 6
0x7fffeafd8e08:	or		eax, 0xc0
0x7fffeafd8e0d:	mov		rcx, qword ptr [rsp + 0x18]
0x7fffeafd8e12:	mov		rdx, rcx
0x7fffeafd8e15:	add		rdx, 1
0x7fffeafd8e1c:	mov		qword ptr [rsp + 0x18], rdx
0x7fffeafd8e21:	mov		byte ptr [rcx], al
0x7fffeafd8e23:	mov		esi, dword ptr [rsp + 0x14]
0x7fffeafd8e27:	and		esi, 0x3f
0x7fffeafd8e2a:	or		esi, 0x80
0x7fffeafd8e30:	mov		rcx, qword ptr [rsp + 0x18]
0x7fffeafd8e35:	mov		byte ptr [rcx], sil
0x7fffeafd8e38:	mov		qword ptr [rsp + 0x20], 2
0x7fffeafd8e41:	jmp		0x7fffeafd8fa1
disassembling symbol '.LBB0_6':
textAddr: 0x7fffeafd8e46, textSize: 34
0x7fffeafd8e46:	cmp		dword ptr [rsp + 0x14], 0xd800
0x7fffeafd8e4e:	jb		0x7fffeafd8e68
0x7fffeafd8e54:	mov		eax, dword ptr [rsp + 0x14]
0x7fffeafd8e58:	sub		eax, 0xe000
0x7fffeafd8e5d:	cmp		eax, 0x2000
0x7fffeafd8e62:	jae		0x7fffeafd8ed4
disassembling symbol '.LBB0_8':
textAddr: 0x7fffeafd8e68, textSize: 108
0x7fffeafd8e68:	mov		eax, dword ptr [rsp + 0x14]
0x7fffeafd8e6c:	sar		eax, 0xc
0x7fffeafd8e6f:	or		eax, 0xe0
0x7fffeafd8e74:	mov		rcx, qword ptr [rsp + 0x18]
0x7fffeafd8e79:	mov		rdx, rcx
0x7fffeafd8e7c:	add		rdx, 1
0x7fffeafd8e83:	mov		qword ptr [rsp + 0x18], rdx
0x7fffeafd8e88:	mov		byte ptr [rcx], al
0x7fffeafd8e8a:	mov		esi, dword ptr [rsp + 0x14]
0x7fffeafd8e8e:	sar		esi, 6
0x7fffeafd8e91:	and		esi, 0x3f
0x7fffeafd8e94:	or		esi, 0x80
0x7fffeafd8e9a:	mov		rcx, qword ptr [rsp + 0x18]
0x7fffeafd8e9f:	mov		rdx, rcx
0x7fffeafd8ea2:	add		rdx, 1
0x7fffeafd8ea9:	mov		qword ptr [rsp + 0x18], rdx
0x7fffeafd8eae:	mov		byte ptr [rcx], sil
0x7fffeafd8eb1:	mov		edi, dword ptr [rsp + 0x14]
0x7fffeafd8eb5:	and		edi, 0x3f
0x7fffeafd8eb8:	or		edi, 0x80
0x7fffeafd8ebe:	mov		rcx, qword ptr [rsp + 0x18]
0x7fffeafd8ec3:	mov		byte ptr [rcx], dil
0x7fffeafd8ec6:	mov		qword ptr [rsp + 0x20], 3
0x7fffeafd8ecf:	jmp		0x7fffeafd8fa1
disassembling symbol '.LBB0_9':
textAddr: 0x7fffeafd8ed4, textSize: 170
0x7fffeafd8ed4:	mov		eax, dword ptr [rsp + 0x14]
0x7fffeafd8ed8:	sub		eax, 0x10000
0x7fffeafd8edd:	cmp		eax, 0x100000
0x7fffeafd8ee2:	jae		0x7fffeafd8f7e
0x7fffeafd8ee8:	mov		eax, dword ptr [rsp + 0x14]
0x7fffeafd8eec:	sar		eax, 0x12
0x7fffeafd8eef:	or		eax, 0xf0
0x7fffeafd8ef4:	mov		rcx, qword ptr [rsp + 0x18]
0x7fffeafd8ef9:	mov		rdx, rcx
0x7fffeafd8efc:	add		rdx, 1
0x7fffeafd8f03:	mov		qword ptr [rsp + 0x18], rdx
0x7fffeafd8f08
Program received signal SIGSEGV, Segmentation fault.
0x00007fffeafc59c4 in __elf_start ()
(gdb) q
A debugging session is active.

	Inferior 1 [process 2741] will be killed.

Quit anyway? (y or n) y
