[parse_dyn /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:155] dynamic tag = 10, ptr = 0
[parse_dyn /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:155] dynamic tag = 19, ptr = 3a0d30
[parse_dyn /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:155] dynamic tag = 1b, ptr = 8
[parse_dyn /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:155] dynamic tag = 1a, ptr = 3a0d38
[parse_dyn /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:155] dynamic tag = 1c, ptr = 28
[parse_dyn /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:155] dynamic tag = 6ffffef5, ptr = 5d0
[parse_dyn /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:155] dynamic tag = 5, ptr = 6a8
[parse_dyn /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:155] dynamic tag = 6, ptr = 600
[parse_dyn /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:155] dynamic tag = a, ptr = 4d
[parse_dyn /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:155] dynamic tag = b, ptr = 18
[parse_dyn /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:155] dynamic tag = 15, ptr = 0
[parse_dyn /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:155] dynamic tag = 3, ptr = 3a8000
[parse_dyn /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:155] dynamic tag = 7, ptr = 740
[parse_dyn /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:155] dynamic tag = 8, ptr = bd90
[parse_dyn /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:155] dynamic tag = 9, ptr = 18
[parse_dyn /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:155] dynamic tag = 6ffffffc, ptr = 708
[parse_dyn /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:155] dynamic tag = 6ffffffd, ptr = 2
[parse_dyn /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:155] dynamic tag = 6ffffffb, ptr = 8000000
[parse_dyn /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:155] dynamic tag = 6ffffff0, ptr = 6f6
[parse_dyn /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:155] dynamic tag = 6ffffff9, ptr = 7e4
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [0] : sh_addr = 0, sh_size = 0, sh_offset = 0, sh_name = 0
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [1] .interp: sh_addr = 2a8, sh_size = 1c, sh_offset = 2a8, sh_name = 1b
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [2] .note.gnu.property: sh_addr = 2c8, sh_size = 2e0, sh_offset = 2c8, sh_name = 23
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [3] .note.gnu.build-id: sh_addr = 5a8, sh_size = 24, sh_offset = 5a8, sh_name = 36
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [4] .gnu.hash: sh_addr = 5d0, sh_size = 30, sh_offset = 5d0, sh_name = 49
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [5] .dynsym: sh_addr = 600, sh_size = a8, sh_offset = 600, sh_name = 53
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [0] : sh_addr = 0, sh_size = 0, sh_offset = 0, sh_name = 0
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [1] .interp: sh_addr = 2a8, sh_size = 1c, sh_offset = 2a8, sh_name = 1b
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [2] .note.gnu.property: sh_addr = 2c8, sh_size = 2e0, sh_offset = 2c8, sh_name = 23
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [3] .note.gnu.build-id: sh_addr = 5a8, sh_size = 24, sh_offset = 5a8, sh_name = 36
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [4] .gnu.hash: sh_addr = 5d0, sh_size = 30, sh_offset = 5d0, sh_name = 49
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [5] .dynsym: sh_addr = 600, sh_size = a8, sh_offset = 600, sh_name = 53
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [6] .dynstr: sh_addr = 6a8, sh_size = 4d, sh_offset = 6a8, sh_name = 5b
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [0] : sh_addr = 0, sh_size = 0, sh_offset = 0, sh_name = 0
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [1] .interp: sh_addr = 2a8, sh_size = 1c, sh_offset = 2a8, sh_name = 1b
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [2] .note.gnu.property: sh_addr = 2c8, sh_size = 2e0, sh_offset = 2c8, sh_name = 23
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [3] .note.gnu.build-id: sh_addr = 5a8, sh_size = 24, sh_offset = 5a8, sh_name = 36
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [4] .gnu.hash: sh_addr = 5d0, sh_size = 30, sh_offset = 5d0, sh_name = 49
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [5] .dynsym: sh_addr = 600, sh_size = a8, sh_offset = 600, sh_name = 53
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [6] .dynstr: sh_addr = 6a8, sh_size = 4d, sh_offset = 6a8, sh_name = 5b
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [7] .gnu.version: sh_addr = 6f6, sh_size = e, sh_offset = 6f6, sh_name = 63
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [8] .gnu.version_d: sh_addr = 708, sh_size = 38, sh_offset = 708, sh_name = 70
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [9] .rela.dyn: sh_addr = 740, sh_size = bd90, sh_offset = 740, sh_name = 7f
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [0] : sh_addr = 0, sh_size = 0, sh_offset = 0, sh_name = 0
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [0] : sh_addr = 0, sh_size = 0, sh_offset = 0, sh_name = 0
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [1] .interp: sh_addr = 2a8, sh_size = 1c, sh_offset = 2a8, sh_name = 1b
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [2] .note.gnu.property: sh_addr = 2c8, sh_size = 2e0, sh_offset = 2c8, sh_name = 23
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [3] .note.gnu.build-id: sh_addr = 5a8, sh_size = 24, sh_offset = 5a8, sh_name = 36
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [4] .gnu.hash: sh_addr = 5d0, sh_size = 30, sh_offset = 5d0, sh_name = 49
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [5] .dynsym: sh_addr = 600, sh_size = a8, sh_offset = 600, sh_name = 53
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [6] .dynstr: sh_addr = 6a8, sh_size = 4d, sh_offset = 6a8, sh_name = 5b
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [7] .gnu.version: sh_addr = 6f6, sh_size = e, sh_offset = 6f6, sh_name = 63
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [8] .gnu.version_d: sh_addr = 708, sh_size = 38, sh_offset = 708, sh_name = 70
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [9] .rela.dyn: sh_addr = 740, sh_size = bd90, sh_offset = 740, sh_name = 7f
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [10] .plt: sh_addr = c4d0, sh_size = 10, sh_offset = c4d0, sh_name = f8
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [11] .plt.got: sh_addr = c4e0, sh_size = 10, sh_offset = c4e0, sh_name = 89
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [12] .text: sh_addr = c500, sh_size = 55aab, sh_offset = c500, sh_name = 92
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [13] .nipx: sh_addr = 61fab, sh_size = a46, sh_offset = 61fab, sh_name = 98
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [14] .rodata: sh_addr = 62a00, sh_size = 136a4d, sh_offset = 62a00, sh_name = 9e
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [15] .niprod: sh_addr = 199480, sh_size = 8c0, sh_offset = 199480, sh_name = a6
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [16] .eh_frame_hdr: sh_addr = 199d40, sh_size = 14a4, sh_offset = 199d40, sh_name = ae
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [17] .eh_frame: sh_addr = 19b1e8, sh_size = 5750, sh_offset = 19b1e8, sh_name = bc
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [18] .init_array: sh_addr = 3a0d30, sh_size = 8, sh_offset = 1a0d30, sh_name = c6
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [19] .fini_array: sh_addr = 3a0d38, sh_size = 28, sh_offset = 1a0d38, sh_name = d2
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [20] .data.rel.ro: sh_addr = 3a0d60, sh_size = 7098, sh_offset = 1a0d60, sh_name = de
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [21] .dynamic: sh_addr = 3a7df8, sh_size = 190, sh_offset = 1a7df8, sh_name = eb
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [22] .got: sh_addr = 3a7f88, sh_size = 70, sh_offset = 1a7f88, sh_name = 8d
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [23] .got.plt: sh_addr = 3a8000, sh_size = 18, sh_offset = 1a8000, sh_name = f4
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [24] .data: sh_addr = 3a8020, sh_size = 2b88c, sh_offset = 1a8020, sh_name = fd
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [25] .nipd: sh_addr = 3d38ac, sh_size = 8, sh_offset = 1d38ac, sh_name = 103
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [26] .bss: sh_addr = 3d38c0, sh_size = 23c8, sh_offset = 1d38b4, sh_name = 109
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [27] .comment: sh_addr = 0, sh_size = 60, sh_offset = 41d5c88, sh_name = 10e
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [28] .note.sgxmeta: sh_addr = 0, sh_size = 501c, sh_offset = 41d5ce8, sh_name = 117
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [29] .debug_aranges: sh_addr = 0, sh_size = 1580, sh_offset = 41dad10, sh_name = 125
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [30] .debug_info: sh_addr = 0, sh_size = 18253, sh_offset = 41dc290, sh_name = 134
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [31] .debug_abbrev: sh_addr = 0, sh_size = 400c, sh_offset = 41f44e3, sh_name = 140
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [32] .debug_line: sh_addr = 0, sh_size = a185, sh_offset = 41f84ef, sh_name = 14e
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [33] .debug_str: sh_addr = 0, sh_size = 67d9, sh_offset = 4202674, sh_name = 15a
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [34] .debug_ranges: sh_addr = 0, sh_size = 1520, sh_offset = 4208e4d, sh_name = 165
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [35] .sgx.ssblob: sh_addr = 7d5c88, sh_size = 400000, sh_offset = 1d5c88, sh_name = 173
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [36] .sgx.calltg: sh_addr = bd5c88, sh_size = 400000, sh_offset = 5d5c88, sh_name = 17f
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [37] .sgx.code: sh_addr = fd5c88, sh_size = 3800000, sh_offset = 9d5c88, sh_name = 18b
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [38] .shstrtab: sh_addr = 0, sh_size = 195, sh_offset = 4215ff1, sh_name = 11
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [39] .symtab: sh_addr = 0, sh_size = 7338, sh_offset = 420a370, sh_name = 1
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [40] .strtab: sh_addr = 0, sh_size = 4949, sh_offset = 42116a8, sh_name = 9
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [0] : sh_addr = 0, sh_size = 0, sh_offset = 0, sh_name = 0
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [1] .interp: sh_addr = 2a8, sh_size = 1c, sh_offset = 2a8, sh_name = 1b
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [2] .note.gnu.property: sh_addr = 2c8, sh_size = 2e0, sh_offset = 2c8, sh_name = 23
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [3] .note.gnu.build-id: sh_addr = 5a8, sh_size = 24, sh_offset = 5a8, sh_name = 36
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [4] .gnu.hash: sh_addr = 5d0, sh_size = 30, sh_offset = 5d0, sh_name = 49
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [5] .dynsym: sh_addr = 600, sh_size = a8, sh_offset = 600, sh_name = 53
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [6] .dynstr: sh_addr = 6a8, sh_size = 4d, sh_offset = 6a8, sh_name = 5b
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [7] .gnu.version: sh_addr = 6f6, sh_size = e, sh_offset = 6f6, sh_name = 63
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [8] .gnu.version_d: sh_addr = 708, sh_size = 38, sh_offset = 708, sh_name = 70
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [9] .rela.dyn: sh_addr = 740, sh_size = bd90, sh_offset = 740, sh_name = 7f
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [10] .plt: sh_addr = c4d0, sh_size = 10, sh_offset = c4d0, sh_name = f8
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [11] .plt.got: sh_addr = c4e0, sh_size = 10, sh_offset = c4e0, sh_name = 89
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [12] .text: sh_addr = c500, sh_size = 55aab, sh_offset = c500, sh_name = 92
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [13] .nipx: sh_addr = 61fab, sh_size = a46, sh_offset = 61fab, sh_name = 98
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [14] .rodata: sh_addr = 62a00, sh_size = 136a4d, sh_offset = 62a00, sh_name = 9e
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [15] .niprod: sh_addr = 199480, sh_size = 8c0, sh_offset = 199480, sh_name = a6
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [16] .eh_frame_hdr: sh_addr = 199d40, sh_size = 14a4, sh_offset = 199d40, sh_name = ae
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [17] .eh_frame: sh_addr = 19b1e8, sh_size = 5750, sh_offset = 19b1e8, sh_name = bc
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [18] .init_array: sh_addr = 3a0d30, sh_size = 8, sh_offset = 1a0d30, sh_name = c6
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [19] .fini_array: sh_addr = 3a0d38, sh_size = 28, sh_offset = 1a0d38, sh_name = d2
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [20] .data.rel.ro: sh_addr = 3a0d60, sh_size = 7098, sh_offset = 1a0d60, sh_name = de
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [21] .dynamic: sh_addr = 3a7df8, sh_size = 190, sh_offset = 1a7df8, sh_name = eb
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [22] .got: sh_addr = 3a7f88, sh_size = 70, sh_offset = 1a7f88, sh_name = 8d
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [23] .got.plt: sh_addr = 3a8000, sh_size = 18, sh_offset = 1a8000, sh_name = f4
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [24] .data: sh_addr = 3a8020, sh_size = 2b88c, sh_offset = 1a8020, sh_name = fd
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [25] .nipd: sh_addr = 3d38ac, sh_size = 8, sh_offset = 1d38ac, sh_name = 103
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [26] .bss: sh_addr = 3d38c0, sh_size = 23c8, sh_offset = 1d38b4, sh_name = 109
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [27] .comment: sh_addr = 0, sh_size = 60, sh_offset = 41d5c88, sh_name = 10e
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [28] .note.sgxmeta: sh_addr = 0, sh_size = 501c, sh_offset = 41d5ce8, sh_name = 117
LOAD Section: 1
Flags = 0x0000000000000005
VAddr = 0x0000000000000000
Size  = 0x00000000001A0938

LOAD Section: 2
Flags = 0x0000000000000006
VAddr = 0x00000000003A0D30
Size  = 0x0000000000034F58

LOAD Section: 3
Flags = 0x0000000000000007
VAddr = 0x00000000007D5C88
Size  = 0x0000000004000000

[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [0] : sh_addr = 0, sh_size = 0, sh_offset = 0, sh_name = 0
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [1] .interp: sh_addr = 2a8, sh_size = 1c, sh_offset = 2a8, sh_name = 1b
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [2] .note.gnu.property: sh_addr = 2c8, sh_size = 2e0, sh_offset = 2c8, sh_name = 23
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [3] .note.gnu.build-id: sh_addr = 5a8, sh_size = 24, sh_offset = 5a8, sh_name = 36
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [4] .gnu.hash: sh_addr = 5d0, sh_size = 30, sh_offset = 5d0, sh_name = 49
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [5] .dynsym: sh_addr = 600, sh_size = a8, sh_offset = 600, sh_name = 53
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [6] .dynstr: sh_addr = 6a8, sh_size = 4d, sh_offset = 6a8, sh_name = 5b
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [7] .gnu.version: sh_addr = 6f6, sh_size = e, sh_offset = 6f6, sh_name = 63
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [8] .gnu.version_d: sh_addr = 708, sh_size = 38, sh_offset = 708, sh_name = 70
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [9] .rela.dyn: sh_addr = 740, sh_size = bd90, sh_offset = 740, sh_name = 7f
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [10] .plt: sh_addr = c4d0, sh_size = 10, sh_offset = c4d0, sh_name = f8
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [11] .plt.got: sh_addr = c4e0, sh_size = 10, sh_offset = c4e0, sh_name = 89
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [12] .text: sh_addr = c500, sh_size = 55aab, sh_offset = c500, sh_name = 92
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [13] .nipx: sh_addr = 61fab, sh_size = a46, sh_offset = 61fab, sh_name = 98
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [14] .rodata: sh_addr = 62a00, sh_size = 136a4d, sh_offset = 62a00, sh_name = 9e
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [15] .niprod: sh_addr = 199480, sh_size = 8c0, sh_offset = 199480, sh_name = a6
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [16] .eh_frame_hdr: sh_addr = 199d40, sh_size = 14a4, sh_offset = 199d40, sh_name = ae
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [17] .eh_frame: sh_addr = 19b1e8, sh_size = 5750, sh_offset = 19b1e8, sh_name = bc
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [18] .init_array: sh_addr = 3a0d30, sh_size = 8, sh_offset = 1a0d30, sh_name = c6
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [19] .fini_array: sh_addr = 3a0d38, sh_size = 28, sh_offset = 1a0d38, sh_name = d2
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [20] .data.rel.ro: sh_addr = 3a0d60, sh_size = 7098, sh_offset = 1a0d60, sh_name = de
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [21] .dynamic: sh_addr = 3a7df8, sh_size = 190, sh_offset = 1a7df8, sh_name = eb
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [22] .got: sh_addr = 3a7f88, sh_size = 70, sh_offset = 1a7f88, sh_name = 8d
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [23] .got.plt: sh_addr = 3a8000, sh_size = 18, sh_offset = 1a8000, sh_name = f4
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [24] .data: sh_addr = 3a8020, sh_size = 2b88c, sh_offset = 1a8020, sh_name = fd
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [25] .nipd: sh_addr = 3d38ac, sh_size = 8, sh_offset = 1d38ac, sh_name = 103
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [26] .bss: sh_addr = 3d38c0, sh_size = 23c8, sh_offset = 1d38b4, sh_name = 109
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [27] .comment: sh_addr = 0, sh_size = 60, sh_offset = 41d5c88, sh_name = 10e
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [28] .note.sgxmeta: sh_addr = 0, sh_size = 501c, sh_offset = 41d5ce8, sh_name = 117
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [29] .debug_aranges: sh_addr = 0, sh_size = 1580, sh_offset = 41dad10, sh_name = 125
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [30] .debug_info: sh_addr = 0, sh_size = 18253, sh_offset = 41dc290, sh_name = 134
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [31] .debug_abbrev: sh_addr = 0, sh_size = 400c, sh_offset = 41f44e3, sh_name = 140
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [32] .debug_line: sh_addr = 0, sh_size = a185, sh_offset = 41f84ef, sh_name = 14e
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [33] .debug_str: sh_addr = 0, sh_size = 67d9, sh_offset = 4202674, sh_name = 15a
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [34] .debug_ranges: sh_addr = 0, sh_size = 1520, sh_offset = 4208e4d, sh_name = 165
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [35] .sgx.ssblob: sh_addr = 7d5c88, sh_size = 400000, sh_offset = 1d5c88, sh_name = 173
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [36] .sgx.calltg: sh_addr = bd5c88, sh_size = 400000, sh_offset = 5d5c88, sh_name = 17f
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [37] .sgx.code: sh_addr = fd5c88, sh_size = 3800000, sh_offset = 9d5c88, sh_name = 18b
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [38] .shstrtab: sh_addr = 0, sh_size = 195, sh_offset = 4215ff1, sh_name = 11
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [39] .symtab: sh_addr = 0, sh_size = 7338, sh_offset = 420a370, sh_name = 1
[get_section /root/sgx/linux-sgx/psw/urts/parser/elfparser.cpp:83] section [40] .strtab: sh_addr = 0, sh_size = 4949, sh_offset = 42116a8, sh_name = 9
[enclave_create sgx_enclave_common.cpp:220] 
 secs->attibutes.flags = 6, secs->attributes.xfrm = 7 
[build_image /root/sgx/linux-sgx/psw/urts/loader.cpp:567] 
	Metadata Version = 0x0000000100000004
build_contexts, step = 0x0000000000000000
	Entry Id( 0) =    1, HEAP_MIN        , Page Count =     1, Attributes = 0x01, Flags = 0x0000000000000203, RVA = 0x00000000047D6000 + 0x0000000000000000
	build_context
	Entry Id     =    1, HEAP_MIN        , Page Count =     1, Attributes = 0x01, Flags = 0x0000000000000203, RVA = 0x00000000047D6000 -> RVA = 0x00000000047D6000
build_contexts, step = 0x0000000000000000
	Entry Id( 0) =    2, HEAP_INIT       , Page Count =  8191, Attributes = 0x11, Flags = 0x0000000000000203, RVA = 0x00000000047D7000 + 0x0000000000000000
	build_context
	Entry Id     =    2, HEAP_INIT       , Page Count =  8191, Attributes = 0x11, Flags = 0x0000000000000203, RVA = 0x00000000047D7000 -> RVA = 0x00000000047D7000
build_contexts, step = 0x0000000000000000
	Entry Id( 0) =   10, GUARD           , Page Count =    16, Attributes = 0x00, Flags = 0x0000000000000000, RVA = 0x00000000067D6000 + 0x0000000000000000
	build_context
	Entry Id     =   10, GUARD           , Page Count =    16, Attributes = 0x00, Flags = 0x0000000000000000, RVA = 0x00000000067D6000 -> RVA = 0x00000000067D6000
build_contexts, step = 0x0000000000000000
	Entry Id( 0) =    7, STACK_MAX       , Page Count =  6142, Attributes = 0x53, Flags = 0x0000000000000203, RVA = 0x00000000067E6000 + 0x0000000000000000
	build_context
	Entry Id     =    7, STACK_MAX       , Page Count =  6142, Attributes = 0x53, Flags = 0x0000000000000203, RVA = 0x00000000067E6000 -> RVA = 0x00000000067E6000
build_contexts, step = 0x0000000000000000
	Entry Id( 0) =    8, STACK_MIN       , Page Count =     2, Attributes = 0x03, Flags = 0x0000000000000203, RVA = 0x0000000007FE4000 + 0x0000000000000000
	build_context
	Entry Id     =    8, STACK_MIN       , Page Count =     2, Attributes = 0x03, Flags = 0x0000000000000203, RVA = 0x0000000007FE4000 -> RVA = 0x0000000007FE4000
build_contexts, step = 0x0000000000000000
	Entry Id( 0) =   10, GUARD           , Page Count =    16, Attributes = 0x00, Flags = 0x0000000000000000, RVA = 0x0000000007FE6000 + 0x0000000000000000
	build_context
	Entry Id     =   10, GUARD           , Page Count =    16, Attributes = 0x00, Flags = 0x0000000000000000, RVA = 0x0000000007FE6000 -> RVA = 0x0000000007FE6000
build_contexts, step = 0x0000000000000000
	Entry Id( 0) =    4, TCS             , Page Count =     1, Attributes = 0x03, Flags = 0x0000000000000100, RVA = 0x0000000007FF6000 + 0x0000000000000000
	build_context
	Entry Id     =    4, TCS             , Page Count =     1, Attributes = 0x03, Flags = 0x0000000000000100, RVA = 0x0000000007FF6000 -> RVA = 0x0000000007FF6000
build_contexts, step = 0x0000000000000000
	Entry Id( 0) =    6, SSA             , Page Count =     2, Attributes = 0x03, Flags = 0x0000000000000203, RVA = 0x0000000007FF7000 + 0x0000000000000000
	build_context
	Entry Id     =    6, SSA             , Page Count =     2, Attributes = 0x03, Flags = 0x0000000000000203, RVA = 0x0000000007FF7000 -> RVA = 0x0000000007FF7000
build_contexts, step = 0x0000000000000000
	Entry Id( 0) =   10, GUARD           , Page Count =    16, Attributes = 0x00, Flags = 0x0000000000000000, RVA = 0x0000000007FF9000 + 0x0000000000000000
	build_context
	Entry Id     =   10, GUARD           , Page Count =    16, Attributes = 0x00, Flags = 0x0000000000000000, RVA = 0x0000000007FF9000 -> RVA = 0x0000000007FF9000
build_contexts, step = 0x0000000000000000
	Entry Id( 0) =    5, TD              , Page Count =     1, Attributes = 0x03, Flags = 0x0000000000000203, RVA = 0x0000000008009000 + 0x0000000000000000
	build_context
	Entry Id     =    5, TD              , Page Count =     1, Attributes = 0x03, Flags = 0x0000000000000203, RVA = 0x0000000008009000 -> RVA = 0x0000000008009000
build_contexts, step = 0x0000000000000000
	Entry Id( 0) = 4105, THREAD_GROUP    , Entry Count =    8, Load Times = 0,    LStep = 0x0000000001834000
[reg_sig_handler sig_handler.cpp:189] signal handler is registered
[set_extra_debug_info /root/sgx/linux-sgx/psw/urts/enclave.cpp:557] Symbol 'g_peak_heap_used' is not found
[__create_enclave /root/sgx/linux-sgx/psw/urts/urts_com.h:332] add tcs 0x7f7287ff6000
[__create_enclave /root/sgx/linux-sgx/psw/urts/urts_com.h:342] Debug enclave. Checking if VTune is profiling or SGX_DBG_OPTIN is set
[__create_enclave /root/sgx/linux-sgx/psw/urts/urts_com.h:388] VTune is not profiling and SGX_DBG_OPTIN is not set. TCS Debug OPTIN bit not set and API to do module mapping not invoked
[CEnclavePool /root/sgx/linux-sgx/psw/urts/enclave.cpp:599] enter CEnclavePool constructor
app: initialize the enclave
[build_secs /root/sgx/linux-sgx/psw/urts/loader.cpp:524] Enclave start addr. = 0x7f7280000000, Size = 0x10000000, 262144 KB
app: call enclave main
entrylabel file size is 44
number of bytes read in entryLabel: 44

=== sec_loader: loading entrylabels ===
target_table at 0x7f7280bd5c88
receive entrylabel completed.
file size is 9140
number of bytes read is 9140
line 1144 start ecall_receive_binary
program at 0x7f7280fd5c88 (9140)
.sgx.ssblob = 0x7f72807d5c88
.sgx.calltg = 0x7f7280bd5c88
target_table at 0x7f7280bd5c88 (44)
.sgxcode = 0x7f7282fd5c88
.sgxdata = 0x7f7284ffcc88
elf start = 0x7f7280fd5c88
elf end = 0x7f72847d5c88
HEAP BASE = 7f72847d6000
line 1161 call validate_ehdr
line 1164 call update_reltab

=== sec_loader: loading ===
processing NOTYPE symbol[14] in .text...
symbol[14] real st size: 0x61
processing NOTYPE symbol[15] in .text...
symbol[15] real st size: 0x3a
processing NOTYPE symbol[16] in .text...
symbol[16] real st size: 0x52
processing NOTYPE symbol[17] in .text...
symbol[17] real st size: 0x37
processing NOTYPE symbol[18] in .text...
symbol[18] real st size: 0x5
processing NOTYPE symbol[19] in .text...
symbol[19] real st size: 0x5
processing NOTYPE symbol[20] in .text...
symbol[20] real st size: 0x5
processing NOTYPE symbol[21] in .text...
symbol[21] real st size: 0xa
processing NOTYPE symbol[22] in .text...
symbol[22] real st size: 0xc
processing NOTYPE symbol[23] in .text...
symbol[23] real st size: 0x15
processing NOTYPE symbol[25] in .text...
symbol[25] real st size: 0x11
processing NOTYPE symbol[27] in .text...
symbol[27] real st size: 0xff
processing NOTYPE symbol[28] in .text...
symbol[28] real st size: 0x72
processing NOTYPE symbol[29] in .text...
symbol[29] real st size: 0x5
processing NOTYPE symbol[30] in .text...
symbol[30] real st size: 0x78
processing NOTYPE symbol[31] in .text...
symbol[31] real st size: 0x14c
processing NOTYPE symbol[32] in .text...
symbol[32] real st size: 0xc
processing NOTYPE symbol[33] in .text...
symbol[33] real st size: 0xa
processing NOTYPE symbol[35] in .text...
symbol[35] real st size: 0x17
_stack: 7f7284ffccc0
sym 0001/47 7f7284ffccc0, final st_size: 4194304
dep.bdr
sym 0002/47 7f7284ffcc88, final st_size: 0
ocall.bdr
sym 0003/47 7f7282fd5c88, final st_size: 0
sym 0004/47 7f72853fccc0, final st_size: 8
sym 0005/47 7f72853fccc8, final st_size: 8
sym 0006/47 7f72853fccd0, final st_size: 8
sym 0007/47 7f72853fccd8, final st_size: 29
sym 0008/47 7f72853fccf5, final st_size: 22
sym 0009/47 7f72853fcd0b, final st_size: 22
sym 0010/47 7f72853fcd21, final st_size: 22
sym 0011/47 7f72853fcd37, final st_size: 22
sym 0012/47 7f72853fcd4d, final st_size: 9
sym 0013/47 7f7282fd5c90, final st_size: 656
sym 0014/47 7f7282fd5dc2, final st_size: 97
sym 0015/47 7f7282fd5e23, final st_size: 58
sym 0016/47 7f7282fd5e5d, final st_size: 82
sym 0017/47 7f7282fd5eaf, final st_size: 55
sym 0018/47 7f7282fd5ee6, final st_size: 5
sym 0019/47 7f7282fd5eeb, final st_size: 5
sym 0020/47 7f7282fd5ef0, final st_size: 5
sym 0021/47 7f7282fd5ef5, final st_size: 10
sym 0022/47 7f7282fd5eff, final st_size: 12
sym 0023/47 7f7282fd5f0b, final st_size: 21
sym 0024/47 7f7282fd5f20, final st_size: 112
sym 0025/47 7f7282fd5f7f, final st_size: 17
sym 0026/47 7f7282fd5f90, final st_size: 1136
sym 0027/47 7f7282fd60b0, final st_size: 255
sym 0028/47 7f7282fd61af, final st_size: 114
sym 0029/47 7f7282fd6221, final st_size: 5
sym 0030/47 7f7282fd6226, final st_size: 120
sym 0031/47 7f7282fd629e, final st_size: 332
sym 0032/47 7f7282fd63ea, final st_size: 12
sym 0033/47 7f7282fd63f6, final st_size: 10
sym 0034/47 7f7282fd6400, final st_size: 357
sym 0035/47 7f7282fd6559, final st_size: 23
sym 0036/47 7f7282fd6570, final st_size: 32
sym 0037/47 7f7282fd6590, final st_size: 32
sym 0038/47 7f7282fd65b0, final st_size: 32
sgx_ocall.loader: 7f7280011883
sym 0039/47 7f7280011883, final st_size: 1
sym 0040/47 7f7282fd65d0, final st_size: 12
sym 0041/47 7f7282fd65e0, final st_size: 32
sym 0042/47 7f7282fd6600, final st_size: 32
sym 0043/47 7f7282fd6620, final st_size: 32
sym 0044/47 7f7282fd6640, final st_size: 32
sym 0045/47 7f7282fd6660, final st_size: 46
sym 0046/47 7f7282fd6690, final st_size: 84

=== sec_loader: relocating ===
rel[0000] 0013 (7f7282fd5cc8) --> 0022
233
rel[0001] 0013 (7f7282fd5cdb) --> 0022
220
rel[0002] 0013 (7f7282fd5d04) --> 0022
1f7
rel[0003] 0013 (7f7282fd5d17) --> 0022
1e4
rel[0004] 0013 (7f7282fd5d36) --> 0022
1c5
rel[0005] 0013 (7f7282fd5d49) --> 0022
1b2
rel[0006] 0013 (7f7282fd5d6b) --> 0022
190
rel[0007] 0013 (7f7282fd5d7e) --> 0022
17d
rel[0008] 0013 (7f7282fd5da6) --> 0022
155
rel[0009] 0013 (7f7282fd5db9) --> 0022
142
rel[0010] 0014 (7f7282fd5dca) --> 0020
122
rel[0011] 0014 (7f7282fd5df6) --> 0022
105
rel[0012] 0014 (7f7282fd5e09) --> 0022
f2
rel[0013] 0014 (7f7282fd5e1a) --> 0015
5
rel[0014] 0014 (7f7282fd5e1f) --> 0021
d2
rel[0015] 0015 (7f7282fd5e35) --> 0016
24
rel[0016] 0015 (7f7282fd5e58) --> 0023
af
rel[0017] 0016 (7f7282fd5e6f) --> 0017
3c
rel[0018] 0016 (7f7282fd5e8e) --> 0022
6d
rel[0019] 0016 (7f7282fd5ea1) --> 0022
5a
rel[0020] 0016 (7f7282fd5eab) --> 0018
37
rel[0021] 0017 (7f7282fd5eca) --> 0022
31
rel[0022] 0017 (7f7282fd5edd) --> 0022
1e
rel[0023] 0018 (7f7282fd5ee7) --> 0019
0
rel[0024] 0019 (7f7282fd5eec) --> 0014
fffffed2
rel[0025] 0020 (7f7282fd5ef1) --> 0021
0
rel[0026] 0021 (7f7282fd5efb) --> 0045
761
rel[0027] 0022 (7f7282fd5f07) --> 0045
755
rel[0028] 0023 (7f7282fd5f11) --> 0045
74b
rel[0029] 0024 (7f7282fd5f41) --> 0007
7f72853fccd8
rel[0030] 0024 (7f7282fd5f4a) --> 0040
682
rel[0031] 0024 (7f7282fd5f6e) --> 0025
d
rel[0032] 0024 (7f7282fd5f7b) --> 0045
6e1
rel[0033] 0025 (7f7282fd5f85) --> 0045
6d7
rel[0034] 0026 (7f7282fd5fc4) --> 0032
422
rel[0035] 0026 (7f7282fd5fd7) --> 0032
40f
rel[0036] 0026 (7f7282fd5ff6) --> 0032
3f0
rel[0037] 0026 (7f7282fd6009) --> 0032
3dd
rel[0038] 0026 (7f7282fd6028) --> 0032
3be
rel[0039] 0026 (7f7282fd603b) --> 0032
3ab
rel[0040] 0026 (7f7282fd605d) --> 0032
389
rel[0041] 0026 (7f7282fd6070) --> 0032
376
rel[0042] 0026 (7f7282fd6093) --> 0032
353
rel[0043] 0026 (7f7282fd60a6) --> 0032
340
rel[0044] 0027 (7f7282fd60d1) --> 0032
315
rel[0045] 0027 (7f7282fd60e4) --> 0032
302
rel[0046] 0027 (7f7282fd610e) --> 0032
2d8
rel[0047] 0027 (7f7282fd6121) --> 0032
2c5
rel[0048] 0027 (7f7282fd6131) --> 0028
7a
rel[0049] 0027 (7f7282fd615e) --> 0032
288
rel[0050] 0027 (7f7282fd6171) --> 0032
275
rel[0051] 0027 (7f7282fd618f) --> 0032
257
rel[0052] 0027 (7f7282fd61a2) --> 0032
244
rel[0053] 0027 (7f7282fd61ab) --> 0029
72
rel[0054] 0028 (7f7282fd61d5) --> 0032
211
rel[0055] 0028 (7f7282fd61e8) --> 0032
1fe
rel[0056] 0028 (7f7282fd6206) --> 0032
1e0
rel[0057] 0028 (7f7282fd6219) --> 0032
1cd
rel[0058] 0029 (7f7282fd6222) --> 0030
0
rel[0059] 0030 (7f7282fd622d) --> 0027
fffffe7f
rel[0060] 0030 (7f7282fd6251) --> 0032
195
rel[0061] 0030 (7f7282fd6264) --> 0032
182
rel[0062] 0030 (7f7282fd6282) --> 0032
164
rel[0063] 0030 (7f7282fd6295) --> 0032
151
rel[0064] 0031 (7f7282fd62b9) --> 0032
12d
rel[0065] 0031 (7f7282fd62cc) --> 0032
11a
rel[0066] 0031 (7f7282fd62f3) --> 0032
f3
rel[0067] 0031 (7f7282fd6306) --> 0032
e0
rel[0068] 0031 (7f7282fd6329) --> 0032
bd
rel[0069] 0031 (7f7282fd633c) --> 0032
aa
rel[0070] 0031 (7f7282fd6361) --> 0032
85
rel[0071] 0031 (7f7282fd6374) --> 0032
72
rel[0072] 0031 (7f7282fd639b) --> 0032
4b
rel[0073] 0031 (7f7282fd63ae) --> 0032
38
rel[0074] 0031 (7f7282fd63c2) --> 0031
fffffed8
rel[0075] 0031 (7f7282fd63e5) --> 0033
d
rel[0076] 0032 (7f7282fd63f2) --> 0045
26a
rel[0077] 0033 (7f7282fd63fc) --> 0045
260
rel[0078] 0034 (7f7282fd640b) --> 0024
7f7282fd5f20
rel[0079] 0034 (7f7282fd6428) --> 0035
12d
rel[0080] 0034 (7f7282fd643b) --> 0035
11a
rel[0081] 0034 (7f7282fd6447) --> 0008
7f72853fccf5
rel[0082] 0034 (7f7282fd6450) --> 0040
17c
rel[0083] 0034 (7f7282fd645c) --> 0013
fffff830
rel[0084] 0034 (7f7282fd6477) --> 0035
de
rel[0085] 0034 (7f7282fd648a) --> 0035
cb
rel[0086] 0034 (7f7282fd6495) --> 0009
7f72853fcd0b
rel[0087] 0034 (7f7282fd649e) --> 0040
12e
rel[0088] 0034 (7f7282fd64bb) --> 0035
9a
rel[0089] 0034 (7f7282fd64ce) --> 0035
87
rel[0090] 0034 (7f7282fd64da) --> 0010
7f72853fcd21
rel[0091] 0034 (7f7282fd64e3) --> 0040
e9
rel[0092] 0034 (7f7282fd64f5) --> 0026
fffffa97
rel[0093] 0034 (7f7282fd650e) --> 0035
47
rel[0094] 0034 (7f7282fd6521) --> 0035
34
rel[0095] 0034 (7f7282fd652d) --> 0011
7f72853fcd37
rel[0096] 0034 (7f7282fd6536) --> 0040
96
rel[0097] 0034 (7f7282fd653f) --> 0040
8d
rel[0098] 0034 (7f7282fd6545) --> 0012
7f72853fcd4d
rel[0099] 0034 (7f7282fd654e) --> 0040
7e
rel[0100] 0034 (7f7282fd6555) --> 0045
107
rel[0101] 0035 (7f7282fd6561) --> 0045
fb
rel[0102] 0036 (7f7282fd6575) --> 0005
7f72853fccc8
rel[0103] 0036 (7f7282fd6586) --> 0039
fd03b2f9
rel[0104] 0036 (7f7282fd658b) --> 0037
1
rel[0105] 0037 (7f7282fd6595) --> 0005
7f72853fccc8
rel[0106] 0037 (7f7282fd65a6) --> 0038
6
rel[0107] 0038 (7f7282fd65b2) --> 0003
7f7282fd5c88
rel[0108] 0038 (7f7282fd65bc) --> 0002
7f7284ffcc88
rel[0109] 0040 (7f7282fd65d8) --> 0036
ffffff94
rel[0110] 0045 (7f7282fd6662) --> 0006
7f72853fccd0
rel[0111] 0045 (7f7282fd666f) --> 0005
7f72853fccc8
rel[0112] 0045 (7f7282fd6682) --> 0004
7f72853fccc0
rel[0113] 0046 (7f7282fd6694) --> 0004
7f72853fccc0
rel[0114] 0046 (7f7282fd66a1) --> 0005
7f72853fccc8
rel[0115] 0046 (7f7282fd66ae) --> 0006
7f72853fccd0
rel[0116] 0046 (7f7282fd66bb) --> 0001
7f7284ffccc0
rel[0117] 0046 (7f7282fd66cc) --> 0002
7f7284ffcc88
rel[0118] 0046 (7f7282fd66d6) --> 0003
7f7282fd5c88
rel[0119] 0046 (7f7282fd66e0) --> 0034
fffffd1c

=== sec_loader: relocating entrylabels ===
target table[0]: [C]
target table[1]: [F]
target table[2]: [I]
target table[3]: [C]
target table[4]: [h]
target table[5]: [e]
target table[6]: [c]
target table[7]: [k]
target table[8]: [
]
target table[9]: [e]
target table[10]: [x]
target table[11]: [i]
target table[12]: [t]
target table[13]: [
]
target table[14]: [f]
target table[15]: [u]
target table[16]: [n]
target table[17]: [
]
target table[18]: [p]
target table[19]: [u]
target table[20]: [t]
target table[21]: [s]
target table[22]: [
]
target table[23]: [m]
target table[24]: [y]
target table[25]: [_]
target table[26]: [i]
target table[27]: [t]
target table[28]: [o]
target table[29]: [a]
target table[30]: [
]
target table[31]: [e]
target table[32]: [n]
target table[33]: [c]
target table[34]: [l]
target table[35]: [a]
target table[36]: [v]
target table[37]: [e]
target table[38]: [_]
target table[39]: [m]
target table[40]: [a]
target table[41]: [i]
target table[42]: [n]
target table[43]: [
]
entry label: CFICheck
call target address: 0x7f7282fd5c90
entry label: exit
call target address: 0x7f7282fd6660
entry label: fun
call target address: 0x7f7282fd5f20
entry label: puts
call target address: 0x7f7282fd65d0
entry label: my_itoa
call target address: 0x7f7282fd5f90
entry label: enclave_main
call target address: 0x7f7282fd6400

=== sec_loader: disassembling and checking ===
disassembling CFICheck: textAddr: 0x7f7282fd5c90, textSize: 656
-----printing-----
0x7f7282fd5c90:	movabs		r11, 0x2fffffffffffffff
writting: 7f72807d5c88
0x7f7282fd5c9a:	add		qword ptr [r11], 8
0x7f7282fd5c9e:	mov		r10, qword ptr [r11]
0x7f7282fd5ca1:	add		r11, r10
0x7f7282fd5ca4:	mov		r10, qword ptr [rsp]
0x7f7282fd5ca8:	mov		qword ptr [r11], r10
0x7f7282fd5cab:	push		rbp
0x7f7282fd5cac:	mov		rbp, rsp
0x7f7282fd5caf:	sub		rsp, 0x20
0x7f7282fd5cb3:	push		rbx
0x7f7282fd5cb4:	push		rax
0x7f7282fd5cb5:	lea		rax, [rbp - 0x20]
0x7f7282fd5cb9:	movabs		rbx, 0x3fffffffffffffff
0x7f7282fd5cc3:	cmp		rax, rbx
0x7f7282fd5cc6:	ja		0x7f7282fd5eff
0x7f7282fd5ccc:	movabs		rbx, 0x4fffffffffffffff
0x7f7282fd5cd6:	cmp		rax, rbx
0x7f7282fd5cd9:	jb		0x7f7282fd5eff
0x7f7282fd5cdf:	pop		rax
0x7f7282fd5ce0:	pop		rbx
0x7f7282fd5ce1:	mov		qword ptr [rbp - 0x20], rdi
0x7f7282fd5ce5:	movabs		rax, 0x1fffffffffffffff
writting: 7f7280bd5c88
0x7f7282fd5cef:	push		rbx
0x7f7282fd5cf0:	push		rax
0x7f7282fd5cf1:	lea		rax, [rbp - 0x18]
0x7f7282fd5cf5:	movabs		rbx, 0x3fffffffffffffff
0x7f7282fd5cff:	cmp		rax, rbx
0x7f7282fd5d02:	ja		0x7f7282fd5eff
0x7f7282fd5d08:	movabs		rbx, 0x4fffffffffffffff
0x7f7282fd5d12:	cmp		rax, rbx
0x7f7282fd5d15:	jb		0x7f7282fd5eff
0x7f7282fd5d1b:	pop		rax
0x7f7282fd5d1c:	pop		rbx
0x7f7282fd5d1d:	mov		qword ptr [rbp - 0x18], rax
0x7f7282fd5d21:	push		rbx
0x7f7282fd5d22:	push		rax
0x7f7282fd5d23:	lea		rax, [rbp - 0x10]
0x7f7282fd5d27:	movabs		rbx, 0x3fffffffffffffff
0x7f7282fd5d31:	cmp		rax, rbx
0x7f7282fd5d34:	ja		0x7f7282fd5eff
0x7f7282fd5d3a:	movabs		rbx, 0x4fffffffffffffff
0x7f7282fd5d44:	cmp		rax, rbx
0x7f7282fd5d47:	jb		0x7f7282fd5eff
0x7f7282fd5d4d:	pop		rax
0x7f7282fd5d4e:	pop		rbx
0x7f7282fd5d4f:	mov		dword ptr [rbp - 0x10], 0x1fffffff
writting: 6
0x7f7282fd5d56:	push		rbx
0x7f7282fd5d57:	push		rax
0x7f7282fd5d58:	lea		rax, [rbp - 0xc]
0x7f7282fd5d5c:	movabs		rbx, 0x3fffffffffffffff
0x7f7282fd5d66:	cmp		rax, rbx
0x7f7282fd5d69:	ja		0x7f7282fd5eff
0x7f7282fd5d6f:	movabs		rbx, 0x4fffffffffffffff
0x7f7282fd5d79:	cmp		rax, rbx
0x7f7282fd5d7c:	jb		0x7f7282fd5eff
0x7f7282fd5d82:	pop		rax
0x7f7282fd5d83:	pop		rbx
0x7f7282fd5d84:	mov		dword ptr [rbp - 0xc], 0
0x7f7282fd5d8b:	mov		eax, dword ptr [rbp - 0x10]
0x7f7282fd5d8e:	sub		eax, 1
0x7f7282fd5d91:	push		rbx
0x7f7282fd5d92:	push		rax
0x7f7282fd5d93:	lea		rax, [rbp - 8]
0x7f7282fd5d97:	movabs		rbx, 0x3fffffffffffffff
0x7f7282fd5da1:	cmp		rax, rbx
0x7f7282fd5da4:	ja		0x7f7282fd5eff
0x7f7282fd5daa:	movabs		rbx, 0x4fffffffffffffff
0x7f7282fd5db4:	cmp		rax, rbx
0x7f7282fd5db7:	jb		0x7f7282fd5eff
0x7f7282fd5dbd:	pop		rax
0x7f7282fd5dbe:	pop		rbx
0x7f7282fd5dbf:	mov		dword ptr [rbp - 8], eax
0x7f7282fd5dc2:	mov		eax, dword ptr [rbp - 0xc]
0x7f7282fd5dc5:	cmp		eax, dword ptr [rbp - 8]
0x7f7282fd5dc8:	jg		0x7f7282fd5ef0
0x7f7282fd5dce:	mov		ecx, dword ptr [rbp - 0xc]
0x7f7282fd5dd1:	mov		eax, dword ptr [rbp - 8]
0x7f7282fd5dd4:	sub		eax, dword ptr [rbp - 0xc]
0x7f7282fd5dd7:	cdq		
0x7f7282fd5dd8:	mov		esi, 2
0x7f7282fd5ddd:	idiv		esi
0x7f7282fd5ddf:	add		ecx, eax
0x7f7282fd5de1:	push		rbx
0x7f7282fd5de2:	push		rax
0x7f7282fd5de3:	lea		rax, [rbp - 4]
0x7f7282fd5de7:	movabs		rbx, 0x3fffffffffffffff
0x7f7282fd5df1:	cmp		rax, rbx
0x7f7282fd5df4:	ja		0x7f7282fd5eff
0x7f7282fd5dfa:	movabs		rbx, 0x4fffffffffffffff
0x7f7282fd5e04:	cmp		rax, rbx
0x7f7282fd5e07:	jb		0x7f7282fd5eff
0x7f7282fd5e0d:	pop		rax
0x7f7282fd5e0e:	pop		rbx
0x7f7282fd5e0f:	mov		dword ptr [rbp - 4], ecx
0x7f7282fd5e12:	mov		eax, dword ptr [rbp - 4]
0x7f7282fd5e15:	cmp		eax, dword ptr [rbp - 8]
0x7f7282fd5e18:	jl		0x7f7282fd5e23
0x7f7282fd5e1e:	jmp		0x7f7282fd5ef5
0x7f7282fd5e23:	mov		rax, qword ptr [rbp - 0x18]
0x7f7282fd5e27:	movsxd		rcx, dword ptr [rbp - 4]
0x7f7282fd5e2b:	mov		rax, qword ptr [rax + rcx*8]
0x7f7282fd5e2f:	cmp		rax, qword ptr [rbp - 0x20]
0x7f7282fd5e33:	jne		0x7f7282fd5e5d
0x7f7282fd5e39:	add		rsp, 0x20
0x7f7282fd5e3d:	pop		rbp
0x7f7282fd5e3e:	movabs		r11, 0x2fffffffffffffff
writting: 7f72807d5c88
0x7f7282fd5e48:	mov		r10, qword ptr [r11]
0x7f7282fd5e4b:	add		r10, r11
0x7f7282fd5e4e:	sub		qword ptr [r11], 8
0x7f7282fd5e52:	cmp		qword ptr [rsp], r10
0x7f7282fd5e56:	jne		0x7f7282fd5f0b
0x7f7282fd5e5c:	ret		
0x7f7282fd5e5d:	mov		rax, qword ptr [rbp - 0x18]
0x7f7282fd5e61:	movsxd		rcx, dword ptr [rbp - 4]
0x7f7282fd5e65:	mov		rax, qword ptr [rax + rcx*8]
0x7f7282fd5e69:	cmp		rax, qword ptr [rbp - 0x20]
0x7f7282fd5e6d:	jle		0x7f7282fd5eaf
0x7f7282fd5e73:	mov		eax, dword ptr [rbp - 4]
0x7f7282fd5e76:	sub		eax, 1
0x7f7282fd5e79:	push		rbx
0x7f7282fd5e7a:	push		rax
0x7f7282fd5e7b:	lea		rax, [rbp - 8]
0x7f7282fd5e7f:	movabs		rbx, 0x3fffffffffffffff
0x7f7282fd5e89:	cmp		rax, rbx
0x7f7282fd5e8c:	ja		0x7f7282fd5eff
0x7f7282fd5e92:	movabs		rbx, 0x4fffffffffffffff
0x7f7282fd5e9c:	cmp		rax, rbx
0x7f7282fd5e9f:	jb		0x7f7282fd5eff
0x7f7282fd5ea5:	pop		rax
0x7f7282fd5ea6:	pop		rbx
0x7f7282fd5ea7:	mov		dword ptr [rbp - 8], eax
0x7f7282fd5eaa:	jmp		0x7f7282fd5ee6
0x7f7282fd5eaf:	mov		eax, dword ptr [rbp - 4]
0x7f7282fd5eb2:	add		eax, 1
0x7f7282fd5eb5:	push		rbx
0x7f7282fd5eb6:	push		rax
0x7f7282fd5eb7:	lea		rax, [rbp - 0xc]
0x7f7282fd5ebb:	movabs		rbx, 0x3fffffffffffffff
0x7f7282fd5ec5:	cmp		rax, rbx
0x7f7282fd5ec8:	ja		0x7f7282fd5eff
0x7f7282fd5ece:	movabs		rbx, 0x4fffffffffffffff
0x7f7282fd5ed8:	cmp		rax, rbx
0x7f7282fd5edb:	jb		0x7f7282fd5eff
0x7f7282fd5ee1:	pop		rax
0x7f7282fd5ee2:	pop		rbx
0x7f7282fd5ee3:	mov		dword ptr [rbp - 0xc], eax
0x7f7282fd5ee6:	jmp		0x7f7282fd5eeb
0x7f7282fd5eeb:	jmp		0x7f7282fd5dc2
0x7f7282fd5ef0:	jmp		0x7f7282fd5ef5
0x7f7282fd5ef5:	mov		edi, 0xffffffff
0x7f7282fd5efa:	call		0x7f7282fd6660
0x7f7282fd5eff:	pop		rax
0x7f7282fd5f00:	pop		rbx
0x7f7282fd5f01:	mov		edi, 0xffffffff
0x7f7282fd5f06:	call		0x7f7282fd6660
0x7f7282fd5f0b:	mov		edi, 0xffffffff
0x7f7282fd5f10:	call		0x7f7282fd6660
0x7f7282fd5f15:	nop		word ptr cs:[rax + rax]
disassembling symbol '.LBB0_1': textAddr: 0x7f7282fd5dc2, textSize: 97
Symbol insn count: 26
0x7f7282fd5dc2:	mov		eax, dword ptr [rbp - 0xc]
0x7f7282fd5dc5:	cmp		eax, dword ptr [rbp - 8]
0x7f7282fd5dc8:	jg		0x7f7282fd5ef0
0x7f7282fd5dce:	mov		ecx, dword ptr [rbp - 0xc]
0x7f7282fd5dd1:	mov		eax, dword ptr [rbp - 8]
0x7f7282fd5dd4:	sub		eax, dword ptr [rbp - 0xc]
0x7f7282fd5dd7:	cdq		
0x7f7282fd5dd8:	mov		esi, 2
0x7f7282fd5ddd:	idiv		esi
0x7f7282fd5ddf:	add		ecx, eax
0x7f7282fd5de1:	push		rbx
0x7f7282fd5de2:	push		rax
0x7f7282fd5de3:	lea		rax, [rbp - 4]
0x7f7282fd5de7:	movabs		rbx, 0x3fffffffffffffff
0x7f7282fd5df1:	cmp		rax, rbx
0x7f7282fd5df4:	ja		0x7f7282fd5eff
0x7f7282fd5dfa:	movabs		rbx, 0x4fffffffffffffff
0x7f7282fd5e04:	cmp		rax, rbx
0x7f7282fd5e07:	jb		0x7f7282fd5eff
0x7f7282fd5e0d:	pop		rax
0x7f7282fd5e0e:	pop		rbx
0x7f7282fd5e0f:	mov		dword ptr [rbp - 4], ecx
setting bounds...
imm1 address: 0x7f7282fd5de9, imm2 address: 0x7f7282fd5dfc
writting: ffffffffffffffff
writting: 1
memory write rewritting done.
memory write check done.
0x7f7282fd5e12:	mov		eax, dword ptr [rbp - 4]
0x7f7282fd5e15:	cmp		eax, dword ptr [rbp - 8]
0x7f7282fd5e18:	jl		0x7f7282fd5e23
0x7f7282fd5e1e:	jmp		0x7f7282fd5ef5
disassembling symbol '.LBB0_4': textAddr: 0x7f7282fd5e23, textSize: 58
Symbol insn count: 14
0x7f7282fd5e23:	mov		rax, qword ptr [rbp - 0x18]
0x7f7282fd5e27:	movsxd		rcx, dword ptr [rbp - 4]
0x7f7282fd5e2b:	mov		rax, qword ptr [rax + rcx*8]
0x7f7282fd5e2f:	cmp		rax, qword ptr [rbp - 0x20]
0x7f7282fd5e33:	jne		0x7f7282fd5e5d
0x7f7282fd5e39:	add		rsp, 0x20
0x7f7282fd5e3d:	pop		rbp
0x7f7282fd5e3e:	movabs		r11, 0x7f72807d5c88
0x7f7282fd5e48:	mov		r10, qword ptr [r11]
0x7f7282fd5e4b:	add		r10, r11
0x7f7282fd5e4e:	sub		qword ptr [r11], 8
memory write by shadow stack.
memory write check done.
0x7f7282fd5e52:	cmp		qword ptr [rsp], r10
0x7f7282fd5e56:	jne		0x7f7282fd5f0b
0x7f7282fd5e5c:	ret		
Check failed! Illegal long ret instrumentation!
disassembling symbol '.LBB0_6': textAddr: 0x7f7282fd5e5d, textSize: 82
Symbol insn count: 20
0x7f7282fd5e5d:	mov		rax, qword ptr [rbp - 0x18]
0x7f7282fd5e61:	movsxd		rcx, dword ptr [rbp - 4]
0x7f7282fd5e65:	mov		rax, qword ptr [rax + rcx*8]
0x7f7282fd5e69:	cmp		rax, qword ptr [rbp - 0x20]
0x7f7282fd5e6d:	jle		0x7f7282fd5eaf
0x7f7282fd5e73:	mov		eax, dword ptr [rbp - 4]
0x7f7282fd5e76:	sub		eax, 1
0x7f7282fd5e79:	push		rbx
0x7f7282fd5e7a:	push		rax
0x7f7282fd5e7b:	lea		rax, [rbp - 8]
0x7f7282fd5e7f:	movabs		rbx, 0x3fffffffffffffff
0x7f7282fd5e89:	cmp		rax, rbx
0x7f7282fd5e8c:	ja		0x7f7282fd5eff
0x7f7282fd5e92:	movabs		rbx, 0x4fffffffffffffff
0x7f7282fd5e9c:	cmp		rax, rbx
0x7f7282fd5e9f:	jb		0x7f7282fd5eff
0x7f7282fd5ea5:	pop		rax
0x7f7282fd5ea6:	pop		rbx
0x7f7282fd5ea7:	mov		dword ptr [rbp - 8], eax
setting bounds...
imm1 address: 0x7f7282fd5e81, imm2 address: 0x7f7282fd5e94
writting: ffffffffffffffff
writting: 1
memory write rewritting done.
memory write check done.
0x7f7282fd5eaa:	jmp		0x7f7282fd5ee6
disassembling symbol '.LBB0_8': textAddr: 0x7f7282fd5eaf, textSize: 55
Symbol insn count: 14
0x7f7282fd5eaf:	mov		eax, dword ptr [rbp - 4]
0x7f7282fd5eb2:	add		eax, 1
0x7f7282fd5eb5:	push		rbx
0x7f7282fd5eb6:	push		rax
0x7f7282fd5eb7:	lea		rax, [rbp - 0xc]
0x7f7282fd5ebb:	movabs		rbx, 0x3fffffffffffffff
0x7f7282fd5ec5:	cmp		rax, rbx
0x7f7282fd5ec8:	ja		0x7f7282fd5eff
0x7f7282fd5ece:	movabs		rbx, 0x4fffffffffffffff
0x7f7282fd5ed8:	cmp		rax, rbx
0x7f7282fd5edb:	jb		0x7f7282fd5eff
0x7f7282fd5ee1:	pop		rax
0x7f7282fd5ee2:	pop		rbx
0x7f7282fd5ee3:	mov		dword ptr [rbp - 0xc], eax
setting bounds...
imm1 address: 0x7f7282fd5ebd, imm2 address: 0x7f7282fd5ed0
writting: ffffffffffffffff
writting: 1
memory write rewritting done.
memory write check done.
disassembling symbol '.LBB0_9': textAddr: 0x7f7282fd5ee6, textSize: 5
Symbol insn count: 1
0x7f7282fd5ee6:	jmp		0x7f7282fd5eeb
disassembling symbol '.LBB0_10': textAddr: 0x7f7282fd5eeb, textSize: 5
Symbol insn count: 1
0x7f7282fd5eeb:	jmp		0x7f7282fd5dc2
disassembling symbol '.LBB0_11': textAddr: 0x7f7282fd5ef0, textSize: 5
Symbol insn count: 1
0x7f7282fd5ef0:	jmp		0x7f7282fd5ef5
disassembling symbol '.LBB0_12': textAddr: 0x7f7282fd5ef5, textSize: 10
Symbol insn count: 2
0x7f7282fd5ef5:	mov		edi, 0xffffffff
0x7f7282fd5efa:	call		0x7f7282fd6660
disassembling symbol '.LBB0_13': textAddr: 0x7f7282fd5eff, textSize: 12
Symbol insn count: 4
0x7f7282fd5eff:	pop		rax
0x7f7282fd5f00:	pop		rbx
0x7f7282fd5f01:	mov		edi, 0xffffffff
0x7f7282fd5f06:	call		0x7f7282fd6660
disassembling symbol '.LBB0_14': textAddr: 0x7f7282fd5f0b, textSize: 21
Symbol insn count: 3
0x7f7282fd5f0b:	mov		edi, 0xffffffff
0x7f7282fd5f10:	call		0x7f7282fd6660
0x7f7282fd5f15:	nop		word ptr cs:[rax + rax]
disassembling symbol 'fun': textAddr: 0x7f7282fd5f20, textSize: 112
Symbol insn count: 26
0x7f7282fd5f20:	movabs		r11, 0x2fffffffffffffff
0x7f7282fd5f2a:	add		qword ptr [r11], 8
0x7f7282fd5f2e:	mov		r10, qword ptr [r11]
0x7f7282fd5f31:	add		r11, r10
0x7f7282fd5f34:	mov		r10, qword ptr [rsp]
0x7f7282fd5f38:	mov		qword ptr [r11], r10
0x7f7282fd5f3b:	push		rbp
0x7f7282fd5f3c:	mov		rbp, rsp
writting: 7f72807d5c88
imm address: 0x7f7282fd5f22
long call rewritting done.
long call check done.
0x7f7282fd5f3f:	movabs		rdi, 0x7f72853fccd8
0x7f7282fd5f49:	call		0x7f7282fd65d0
0x7f7282fd5f4e:	mov		eax, 1
0x7f7282fd5f53:	pop		rbp
0x7f7282fd5f54:	movabs		r11, 0x2fffffffffffffff
0x7f7282fd5f5e:	mov		r10, qword ptr [r11]
0x7f7282fd5f61:	add		r10, r11
0x7f7282fd5f64:	sub		qword ptr [r11], 8
memory write by shadow stack.
memory write check done.
0x7f7282fd5f68:	cmp		qword ptr [rsp], r10
0x7f7282fd5f6c:	jne		0x7f7282fd5f7f
0x7f7282fd5f72:	ret		
writting: 7f72807d5c88
imm address: 0x7f7282fd5f56
long call rewritting done.
long ret check done.
0x7f7282fd5f73:	pop		rax
0x7f7282fd5f74:	pop		rbx
0x7f7282fd5f75:	mov		edi, 0xffffffff
0x7f7282fd5f7a:	call		0x7f7282fd6660
0x7f7282fd5f7f:	mov		edi, 0xffffffff
0x7f7282fd5f84:	call		0x7f7282fd6660
0x7f7282fd5f89:	nop		dword ptr [rax]
disassembling symbol '.LBB1_2': textAddr: 0x7f7282fd5f7f, textSize: 17
Symbol insn count: 3
0x7f7282fd5f7f:	mov		edi, 0xffffffff
0x7f7282fd5f84:	call		0x7f7282fd6660
0x7f7282fd5f89:	nop		dword ptr [rax]
disassembling symbol 'my_itoa': textAddr: 0x7f7282fd5f90, textSize: 1136
Symbol insn count: 283
0x7f7282fd5f90:	movabs		r11, 0x2fffffffffffffff
0x7f7282fd5f9a:	add		qword ptr [r11], 8
0x7f7282fd5f9e:	mov		r10, qword ptr [r11]
0x7f7282fd5fa1:	add		r11, r10
0x7f7282fd5fa4:	mov		r10, qword ptr [rsp]
0x7f7282fd5fa8:	mov		qword ptr [r11], r10
0x7f7282fd5fab:	push		rbp
0x7f7282fd5fac:	mov		rbp, rsp
writting: 7f72807d5c88
imm address: 0x7f7282fd5f92
long call rewritting done.
long call check done.
0x7f7282fd5faf:	push		rbx
0x7f7282fd5fb0:	push		rax
0x7f7282fd5fb1:	lea		rax, [rbp - 0x30]
0x7f7282fd5fb5:	movabs		rbx, 0x3fffffffffffffff
0x7f7282fd5fbf:	cmp		rax, rbx
0x7f7282fd5fc2:	ja		0x7f7282fd63ea
0x7f7282fd5fc8:	movabs		rbx, 0x4fffffffffffffff
0x7f7282fd5fd2:	cmp		rax, rbx
0x7f7282fd5fd5:	jb		0x7f7282fd63ea
0x7f7282fd5fdb:	pop		rax
0x7f7282fd5fdc:	pop		rbx
0x7f7282fd5fdd:	mov		qword ptr [rbp - 0x30], rdi
setting bounds...
imm1 address: 0x7f7282fd5fb7, imm2 address: 0x7f7282fd5fca
writting: ffffffffffffffff
writting: 1
memory write rewritting done.
memory write check done.
0x7f7282fd5fe1:	push		rbx
0x7f7282fd5fe2:	push		rax
0x7f7282fd5fe3:	lea		rax, [rbp - 0x38]
0x7f7282fd5fe7:	movabs		rbx, 0x3fffffffffffffff
0x7f7282fd5ff1:	cmp		rax, rbx
0x7f7282fd5ff4:	ja		0x7f7282fd63ea
0x7f7282fd5ffa:	movabs		rbx, 0x4fffffffffffffff
0x7f7282fd6004:	cmp		rax, rbx
0x7f7282fd6007:	jb		0x7f7282fd63ea
0x7f7282fd600d:	pop		rax
0x7f7282fd600e:	pop		rbx
0x7f7282fd600f:	mov		qword ptr [rbp - 0x38], rsi
setting bounds...
imm1 address: 0x7f7282fd5fe9, imm2 address: 0x7f7282fd5ffc
writting: ffffffffffffffff
writting: 1
memory write rewritting done.
memory write check done.
0x7f7282fd6013:	push		rbx
0x7f7282fd6014:	push		rax
0x7f7282fd6015:	lea		rax, [rbp - 0x24]
0x7f7282fd6019:	movabs		rbx, 0x3fffffffffffffff
0x7f7282fd6023:	cmp		rax, rbx
0x7f7282fd6026:	ja		0x7f7282fd63ea
0x7f7282fd602c:	movabs		rbx, 0x4fffffffffffffff
0x7f7282fd6036:	cmp		rax, rbx
0x7f7282fd6039:	jb		0x7f7282fd63ea
0x7f7282fd603f:	pop		rax
0x7f7282fd6040:	pop		rbx
0x7f7282fd6041:	mov		dword ptr [rbp - 0x24], edx
setting bounds...
imm1 address: 0x7f7282fd601b, imm2 address: 0x7f7282fd602e
writting: ffffffffffffffff
writting: 1
memory write rewritting done.
memory write check done.
0x7f7282fd6044:	mov		rax, qword ptr [rbp - 0x38]
0x7f7282fd6048:	push		rbx
0x7f7282fd6049:	push		rax
0x7f7282fd604a:	lea		rax, [rbp - 0x10]
0x7f7282fd604e:	movabs		rbx, 0x3fffffffffffffff
0x7f7282fd6058:	cmp		rax, rbx
0x7f7282fd605b:	ja		0x7f7282fd63ea
0x7f7282fd6061:	movabs		rbx, 0x4fffffffffffffff
0x7f7282fd606b:	cmp		rax, rbx
0x7f7282fd606e:	jb		0x7f7282fd63ea
0x7f7282fd6074:	pop		rax
0x7f7282fd6075:	pop		rbx
0x7f7282fd6076:	mov		qword ptr [rbp - 0x10], rax
setting bounds...
imm1 address: 0x7f7282fd6050, imm2 address: 0x7f7282fd6063
writting: ffffffffffffffff
writting: 1
memory write rewritting done.
memory write check done.
0x7f7282fd607a:	mov		rax, qword ptr [rbp - 0x10]
0x7f7282fd607e:	push		rbx
0x7f7282fd607f:	push		rax
0x7f7282fd6080:	lea		rax, [rbp - 0x20]
0x7f7282fd6084:	movabs		rbx, 0x3fffffffffffffff
0x7f7282fd608e:	cmp		rax, rbx
0x7f7282fd6091:	ja		0x7f7282fd63ea
0x7f7282fd6097:	movabs		rbx, 0x4fffffffffffffff
0x7f7282fd60a1:	cmp		rax, rbx
0x7f7282fd60a4:	jb		0x7f7282fd63ea
0x7f7282fd60aa:	pop		rax
0x7f7282fd60ab:	pop		rbx
0x7f7282fd60ac:	mov		qword ptr [rbp - 0x20], rax
setting bounds...
imm1 address: 0x7f7282fd6086, imm2 address: 0x7f7282fd6099
writting: ffffffffffffffff
writting: 1
memory write rewritting done.
memory write check done.
0x7f7282fd60b0:	mov		rax, qword ptr [rbp - 0x30]
0x7f7282fd60b4:	mov		ecx, dword ptr [rbp - 0x24]
0x7f7282fd60b7:	xor		edx, edx
0x7f7282fd60b9:	div		rcx
0x7f7282fd60bc:	push		rbx
0x7f7282fd60bd:	push		rax
0x7f7282fd60be:	lea		rax, [rbp - 0x14]
0x7f7282fd60c2:	movabs		rbx, 0x3fffffffffffffff
0x7f7282fd60cc:	cmp		rax, rbx
0x7f7282fd60cf:	ja		0x7f7282fd63ea
0x7f7282fd60d5:	movabs		rbx, 0x4fffffffffffffff
0x7f7282fd60df:	cmp		rax, rbx
0x7f7282fd60e2:	jb		0x7f7282fd63ea
0x7f7282fd60e8:	pop		rax
0x7f7282fd60e9:	pop		rbx
0x7f7282fd60ea:	mov		dword ptr [rbp - 0x14], edx
setting bounds...
imm1 address: 0x7f7282fd60c4, imm2 address: 0x7f7282fd60d7
writting: ffffffffffffffff
writting: 1
memory write rewritting done.
memory write check done.
0x7f7282fd60ed:	mov		ecx, dword ptr [rbp - 0x24]
0x7f7282fd60f0:	mov		rax, qword ptr [rbp - 0x30]
0x7f7282fd60f4:	xor		edx, edx
0x7f7282fd60f6:	div		rcx
0x7f7282fd60f9:	push		rbx
0x7f7282fd60fa:	push		rax
0x7f7282fd60fb:	lea		rax, [rbp - 0x30]
0x7f7282fd60ff:	movabs		rbx, 0x3fffffffffffffff
0x7f7282fd6109:	cmp		rax, rbx
0x7f7282fd610c:	ja		0x7f7282fd63ea
0x7f7282fd6112:	movabs		rbx, 0x4fffffffffffffff
0x7f7282fd611c:	cmp		rax, rbx
0x7f7282fd611f:	jb		0x7f7282fd63ea
0x7f7282fd6125:	pop		rax
0x7f7282fd6126:	pop		rbx
0x7f7282fd6127:	mov		qword ptr [rbp - 0x30], rax
setting bounds...
imm1 address: 0x7f7282fd6101, imm2 address: 0x7f7282fd6114
writting: ffffffffffffffff
writting: 1
memory write rewritting done.
memory write check done.
0x7f7282fd612b:	cmp		dword ptr [rbp - 0x14], 9
0x7f7282fd612f:	jbe		0x7f7282fd61af
0x7f7282fd6135:	mov		eax, dword ptr [rbp - 0x14]
0x7f7282fd6138:	sub		eax, 0xa
0x7f7282fd613b:	add		eax, 0x61
0x7f7282fd613e:	mov		rcx, qword ptr [rbp - 0x10]
0x7f7282fd6142:	mov		rdx, rcx
0x7f7282fd6145:	add		rdx, 1
0x7f7282fd6149:	push		rbx
0x7f7282fd614a:	push		rax
0x7f7282fd614b:	lea		rax, [rbp - 0x10]
0x7f7282fd614f:	movabs		rbx, 0x3fffffffffffffff
0x7f7282fd6159:	cmp		rax, rbx
0x7f7282fd615c:	ja		0x7f7282fd63ea
0x7f7282fd6162:	movabs		rbx, 0x4fffffffffffffff
0x7f7282fd616c:	cmp		rax, rbx
0x7f7282fd616f:	jb		0x7f7282fd63ea
0x7f7282fd6175:	pop		rax
0x7f7282fd6176:	pop		rbx
0x7f7282fd6177:	mov		qword ptr [rbp - 0x10], rdx
setting bounds...
imm1 address: 0x7f7282fd6151, imm2 address: 0x7f7282fd6164
writting: ffffffffffffffff
writting: 1
memory write rewritting done.
memory write check done.
0x7f7282fd617b:	push		rbx
0x7f7282fd617c:	push		rax
0x7f7282fd617d:	lea		rax, [rcx]
0x7f7282fd6180:	movabs		rbx, 0x3fffffffffffffff
0x7f7282fd618a:	cmp		rax, rbx
0x7f7282fd618d:	ja		0x7f7282fd63ea
0x7f7282fd6193:	movabs		rbx, 0x4fffffffffffffff
0x7f7282fd619d:	cmp		rax, rbx
0x7f7282fd61a0:	jb		0x7f7282fd63ea
0x7f7282fd61a6:	pop		rax
0x7f7282fd61a7:	pop		rbx
0x7f7282fd61a8:	mov		byte ptr [rcx], al
setting bounds...
imm1 address: 0x7f7282fd6182, imm2 address: 0x7f7282fd6195
writting: ffffffffffffffff
writting: 1
memory write rewritting done.
memory write check done.
0x7f7282fd61aa:	jmp		0x7f7282fd6221
0x7f7282fd61af:	mov		eax, dword ptr [rbp - 0x14]
0x7f7282fd61b2:	add		eax, 0x30
0x7f7282fd61b5:	mov		rcx, qword ptr [rbp - 0x10]
0x7f7282fd61b9:	mov		rdx, rcx
0x7f7282fd61bc:	add		rdx, 1
0x7f7282fd61c0:	push		rbx
0x7f7282fd61c1:	push		rax
0x7f7282fd61c2:	lea		rax, [rbp - 0x10]
0x7f7282fd61c6:	movabs		rbx, 0x3fffffffffffffff
0x7f7282fd61d0:	cmp		rax, rbx
0x7f7282fd61d3:	ja		0x7f7282fd63ea
0x7f7282fd61d9:	movabs		rbx, 0x4fffffffffffffff
0x7f7282fd61e3:	cmp		rax, rbx
0x7f7282fd61e6:	jb		0x7f7282fd63ea
0x7f7282fd61ec:	pop		rax
0x7f7282fd61ed:	pop		rbx
0x7f7282fd61ee:	mov		qword ptr [rbp - 0x10], rdx
setting bounds...
imm1 address: 0x7f7282fd61c8, imm2 address: 0x7f7282fd61db
writting: ffffffffffffffff
writting: 1
memory write rewritting done.
memory write check done.
0x7f7282fd61f2:	push		rbx
0x7f7282fd61f3:	push		rax
0x7f7282fd61f4:	lea		rax, [rcx]
0x7f7282fd61f7:	movabs		rbx, 0x3fffffffffffffff
0x7f7282fd6201:	cmp		rax, rbx
0x7f7282fd6204:	ja		0x7f7282fd63ea
0x7f7282fd620a:	movabs		rbx, 0x4fffffffffffffff
0x7f7282fd6214:	cmp		rax, rbx
0x7f7282fd6217:	jb		0x7f7282fd63ea
0x7f7282fd621d:	pop		rax
0x7f7282fd621e:	pop		rbx
0x7f7282fd621f:	mov		byte ptr [rcx], al
setting bounds...
imm1 address: 0x7f7282fd61f9, imm2 address: 0x7f7282fd620c
writting: ffffffffffffffff
writting: 1
memory write rewritting done.
memory write check done.
0x7f7282fd6221:	jmp		0x7f7282fd6226
0x7f7282fd6226:	cmp		qword ptr [rbp - 0x30], 0
0x7f7282fd622b:	ja		0x7f7282fd60b0
0x7f7282fd6231:	mov		rax, qword ptr [rbp - 0x10]
0x7f7282fd6235:	mov		rcx, rax
0x7f7282fd6238:	add		rcx, -1
0x7f7282fd623c:	push		rbx
0x7f7282fd623d:	push		rax
0x7f7282fd623e:	lea		rax, [rbp - 0x10]
0x7f7282fd6242:	movabs		rbx, 0x3fffffffffffffff
0x7f7282fd624c:	cmp		rax, rbx
0x7f7282fd624f:	ja		0x7f7282fd63ea
0x7f7282fd6255:	movabs		rbx, 0x4fffffffffffffff
0x7f7282fd625f:	cmp		rax, rbx
0x7f7282fd6262:	jb		0x7f7282fd63ea
0x7f7282fd6268:	pop		rax
0x7f7282fd6269:	pop		rbx
0x7f7282fd626a:	mov		qword ptr [rbp - 0x10], rcx
setting bounds...
imm1 address: 0x7f7282fd6244, imm2 address: 0x7f7282fd6257
writting: ffffffffffffffff
writting: 1
memory write rewritting done.
memory write check done.
0x7f7282fd626e:	push		rbx
0x7f7282fd626f:	push		rax
0x7f7282fd6270:	lea		rax, [rax]
0x7f7282fd6273:	movabs		rbx, 0x3fffffffffffffff
0x7f7282fd627d:	cmp		rax, rbx
0x7f7282fd6280:	ja		0x7f7282fd63ea
0x7f7282fd6286:	movabs		rbx, 0x4fffffffffffffff
0x7f7282fd6290:	cmp		rax, rbx
0x7f7282fd6293:	jb		0x7f7282fd63ea
0x7f7282fd6299:	pop		rax
0x7f7282fd629a:	pop		rbx
0x7f7282fd629b:	mov		byte ptr [rax], 0x20
setting bounds...
imm1 address: 0x7f7282fd6275, imm2 address: 0x7f7282fd6288
writting: ffffffffffffffff
writting: 1
memory write rewritting done.
memory write check done.
0x7f7282fd629e:	mov		rax, qword ptr [rbp - 0x10]
0x7f7282fd62a2:	mov		al, byte ptr [rax]
0x7f7282fd62a4:	push		rbx
0x7f7282fd62a5:	push		rax
0x7f7282fd62a6:	lea		rax, [rbp - 1]
0x7f7282fd62aa:	movabs		rbx, 0x3fffffffffffffff
0x7f7282fd62b4:	cmp		rax, rbx
0x7f7282fd62b7:	ja		0x7f7282fd63ea
0x7f7282fd62bd:	movabs		rbx, 0x4fffffffffffffff
0x7f7282fd62c7:	cmp		rax, rbx
0x7f7282fd62ca:	jb		0x7f7282fd63ea
0x7f7282fd62d0:	pop		rax
0x7f7282fd62d1:	pop		rbx
0x7f7282fd62d2:	mov		byte ptr [rbp - 1], al
setting bounds...
imm1 address: 0x7f7282fd62ac, imm2 address: 0x7f7282fd62bf
writting: ffffffffffffffff
writting: 1
memory write rewritting done.
memory write check done.
0x7f7282fd62d5:	mov		rax, qword ptr [rbp - 0x20]
0x7f7282fd62d9:	mov		al, byte ptr [rax]
0x7f7282fd62db:	mov		rcx, qword ptr [rbp - 0x10]
0x7f7282fd62df:	push		rbx
0x7f7282fd62e0:	push		rax
0x7f7282fd62e1:	lea		rax, [rcx]
0x7f7282fd62e4:	movabs		rbx, 0x3fffffffffffffff
0x7f7282fd62ee:	cmp		rax, rbx
0x7f7282fd62f1:	ja		0x7f7282fd63ea
0x7f7282fd62f7:	movabs		rbx, 0x4fffffffffffffff
0x7f7282fd6301:	cmp		rax, rbx
0x7f7282fd6304:	jb		0x7f7282fd63ea
0x7f7282fd630a:	pop		rax
0x7f7282fd630b:	pop		rbx
0x7f7282fd630c:	mov		byte ptr [rcx], al
setting bounds...
imm1 address: 0x7f7282fd62e6, imm2 address: 0x7f7282fd62f9
writting: ffffffffffffffff
writting: 1
memory write rewritting done.
memory write check done.
0x7f7282fd630e:	mov		al, byte ptr [rbp - 1]
0x7f7282fd6311:	mov		rcx, qword ptr [rbp - 0x20]
0x7f7282fd6315:	push		rbx
0x7f7282fd6316:	push		rax
0x7f7282fd6317:	lea		rax, [rcx]
0x7f7282fd631a:	movabs		rbx, 0x3fffffffffffffff
0x7f7282fd6324:	cmp		rax, rbx
0x7f7282fd6327:	ja		0x7f7282fd63ea
0x7f7282fd632d:	movabs		rbx, 0x4fffffffffffffff
0x7f7282fd6337:	cmp		rax, rbx
0x7f7282fd633a:	jb		0x7f7282fd63ea
0x7f7282fd6340:	pop		rax
0x7f7282fd6341:	pop		rbx
0x7f7282fd6342:	mov		byte ptr [rcx], al
setting bounds...
imm1 address: 0x7f7282fd631c, imm2 address: 0x7f7282fd632f
writting: ffffffffffffffff
writting: 1
memory write rewritting done.
memory write check done.
0x7f7282fd6344:	mov		rax, qword ptr [rbp - 0x10]
0x7f7282fd6348:	add		rax, -1
0x7f7282fd634c:	push		rbx
0x7f7282fd634d:	push		rax
0x7f7282fd634e:	lea		rax, [rbp - 0x10]
0x7f7282fd6352:	movabs		rbx, 0x3fffffffffffffff
0x7f7282fd635c:	cmp		rax, rbx
0x7f7282fd635f:	ja		0x7f7282fd63ea
0x7f7282fd6365:	movabs		rbx, 0x4fffffffffffffff
0x7f7282fd636f:	cmp		rax, rbx
0x7f7282fd6372:	jb		0x7f7282fd63ea
0x7f7282fd6378:	pop		rax
0x7f7282fd6379:	pop		rbx
0x7f7282fd637a:	mov		qword ptr [rbp - 0x10], rax
setting bounds...
imm1 address: 0x7f7282fd6354, imm2 address: 0x7f7282fd6367
writting: ffffffffffffffff
writting: 1
memory write rewritting done.
memory write check done.
0x7f7282fd637e:	mov		rax, qword ptr [rbp - 0x20]
0x7f7282fd6382:	add		rax, 1
0x7f7282fd6386:	push		rbx
0x7f7282fd6387:	push		rax
0x7f7282fd6388:	lea		rax, [rbp - 0x20]
0x7f7282fd638c:	movabs		rbx, 0x3fffffffffffffff
0x7f7282fd6396:	cmp		rax, rbx
0x7f7282fd6399:	ja		0x7f7282fd63ea
0x7f7282fd639f:	movabs		rbx, 0x4fffffffffffffff
0x7f7282fd63a9:	cmp		rax, rbx
0x7f7282fd63ac:	jb		0x7f7282fd63ea
0x7f7282fd63b2:	pop		rax
0x7f7282fd63b3:	pop		rbx
0x7f7282fd63b4:	mov		qword ptr [rbp - 0x20], rax
setting bounds...
imm1 address: 0x7f7282fd638e, imm2 address: 0x7f7282fd63a1
writting: ffffffffffffffff
writting: 1
memory write rewritting done.
memory write check done.
0x7f7282fd63b8:	mov		rax, qword ptr [rbp - 0x20]
0x7f7282fd63bc:	cmp		rax, qword ptr [rbp - 0x10]
0x7f7282fd63c0:	jb		0x7f7282fd629e
0x7f7282fd63c6:	mov		rax, qword ptr [rbp - 0x38]
0x7f7282fd63ca:	pop		rbp
0x7f7282fd63cb:	movabs		r11, 0x2fffffffffffffff
0x7f7282fd63d5:	mov		r10, qword ptr [r11]
0x7f7282fd63d8:	add		r10, r11
0x7f7282fd63db:	sub		qword ptr [r11], 8
memory write by shadow stack.
memory write check done.
0x7f7282fd63df:	cmp		qword ptr [rsp], r10
0x7f7282fd63e3:	jne		0x7f7282fd63f6
0x7f7282fd63e9:	ret		
writting: 7f72807d5c88
imm address: 0x7f7282fd63cd
long call rewritting done.
long ret check done.
0x7f7282fd63ea:	pop		rax
0x7f7282fd63eb:	pop		rbx
0x7f7282fd63ec:	mov		edi, 0xffffffff
0x7f7282fd63f1:	call		0x7f7282fd6660
0x7f7282fd63f6:	mov		edi, 0xffffffff
0x7f7282fd63fb:	call		0x7f7282fd6660
disassembling symbol '.LBB2_1': textAddr: 0x7f7282fd60b0, textSize: 255
Symbol insn count: 65
0x7f7282fd60b0:	mov		rax, qword ptr [rbp - 0x30]
0x7f7282fd60b4:	mov		ecx, dword ptr [rbp - 0x24]
0x7f7282fd60b7:	xor		edx, edx
0x7f7282fd60b9:	div		rcx
0x7f7282fd60bc:	push		rbx
0x7f7282fd60bd:	push		rax
0x7f7282fd60be:	lea		rax, [rbp - 0x14]
0x7f7282fd60c2:	movabs		rbx, 0xffffffffffffffff
0x7f7282fd60cc:	cmp		rax, rbx
0x7f7282fd60cf:	ja		0x7f7282fd63ea
0x7f7282fd60d5:	movabs		rbx, 1
0x7f7282fd60df:	cmp		rax, rbx
0x7f7282fd60e2:	jb		0x7f7282fd63ea
0x7f7282fd60e8:	pop		rax
0x7f7282fd60e9:	pop		rbx
0x7f7282fd60ea:	mov		dword ptr [rbp - 0x14], edx
setting bounds...
imm1 address: 0x7f7282fd60c4, imm2 address: 0x7f7282fd60d7
writting: ffffffffffffffff
writting: 1
memory write rewritting done.
memory write check done.
0x7f7282fd60ed:	mov		ecx, dword ptr [rbp - 0x24]
0x7f7282fd60f0:	mov		rax, qword ptr [rbp - 0x30]
0x7f7282fd60f4:	xor		edx, edx
0x7f7282fd60f6:	div		rcx
0x7f7282fd60f9:	push		rbx
0x7f7282fd60fa:	push		rax
0x7f7282fd60fb:	lea		rax, [rbp - 0x30]
0x7f7282fd60ff:	movabs		rbx, 0xffffffffffffffff
0x7f7282fd6109:	cmp		rax, rbx
0x7f7282fd610c:	ja		0x7f7282fd63ea
0x7f7282fd6112:	movabs		rbx, 1
0x7f7282fd611c:	cmp		rax, rbx
0x7f7282fd611f:	jb		0x7f7282fd63ea
0x7f7282fd6125:	pop		rax
0x7f7282fd6126:	pop		rbx
0x7f7282fd6127:	mov		qword ptr [rbp - 0x30], rax
setting bounds...
imm1 address: 0x7f7282fd6101, imm2 address: 0x7f7282fd6114
writting: ffffffffffffffff
writting: 1
memory write rewritting done.
memory write check done.
0x7f7282fd612b:	cmp		dword ptr [rbp - 0x14], 9
0x7f7282fd612f:	jbe		0x7f7282fd61af
0x7f7282fd6135:	mov		eax, dword ptr [rbp - 0x14]
0x7f7282fd6138:	sub		eax, 0xa
0x7f7282fd613b:	add		eax, 0x61
0x7f7282fd613e:	mov		rcx, qword ptr [rbp - 0x10]
0x7f7282fd6142:	mov		rdx, rcx
0x7f7282fd6145:	add		rdx, 1
0x7f7282fd6149:	push		rbx
0x7f7282fd614a:	push		rax
0x7f7282fd614b:	lea		rax, [rbp - 0x10]
0x7f7282fd614f:	movabs		rbx, 0xffffffffffffffff
0x7f7282fd6159:	cmp		rax, rbx
0x7f7282fd615c:	ja		0x7f7282fd63ea
0x7f7282fd6162:	movabs		rbx, 1
0x7f7282fd616c:	cmp		rax, rbx
0x7f7282fd616f:	jb		0x7f7282fd63ea
0x7f7282fd6175:	pop		rax
0x7f7282fd6176:	pop		rbx
0x7f7282fd6177:	mov		qword ptr [rbp - 0x10], rdx
setting bounds...
imm1 address: 0x7f7282fd6151, imm2 address: 0x7f7282fd6164
writting: ffffffffffffffff
writting: 1
memory write rewritting done.
memory write check done.
0x7f7282fd617b:	push		rbx
0x7f7282fd617c:	push		rax
0x7f7282fd617d:	lea		rax, [rcx]
0x7f7282fd6180:	movabs		rbx, 0xffffffffffffffff
0x7f7282fd618a:	cmp		rax, rbx
0x7f7282fd618d:	ja		0x7f7282fd63ea
0x7f7282fd6193:	movabs		rbx, 1
0x7f7282fd619d:	cmp		rax, rbx
0x7f7282fd61a0:	jb		0x7f7282fd63ea
0x7f7282fd61a6:	pop		rax
0x7f7282fd61a7:	pop		rbx
0x7f7282fd61a8:	mov		byte ptr [rcx], al
setting bounds...
imm1 address: 0x7f7282fd6182, imm2 address: 0x7f7282fd6195
writting: ffffffffffffffff
writting: 1
memory write rewritting done.
memory write check done.
0x7f7282fd61aa:	jmp		0x7f7282fd6221
disassembling symbol '.LBB2_3': textAddr: 0x7f7282fd61af, textSize: 114
Symbol insn count: 29
0x7f7282fd61af:	mov		eax, dword ptr [rbp - 0x14]
0x7f7282fd61b2:	add		eax, 0x30
0x7f7282fd61b5:	mov		rcx, qword ptr [rbp - 0x10]
0x7f7282fd61b9:	mov		rdx, rcx
0x7f7282fd61bc:	add		rdx, 1
0x7f7282fd61c0:	push		rbx
0x7f7282fd61c1:	push		rax
0x7f7282fd61c2:	lea		rax, [rbp - 0x10]
0x7f7282fd61c6:	movabs		rbx, 0xffffffffffffffff
0x7f7282fd61d0:	cmp		rax, rbx
0x7f7282fd61d3:	ja		0x7f7282fd63ea
0x7f7282fd61d9:	movabs		rbx, 1
0x7f7282fd61e3:	cmp		rax, rbx
0x7f7282fd61e6:	jb		0x7f7282fd63ea
0x7f7282fd61ec:	pop		rax
0x7f7282fd61ed:	pop		rbx
0x7f7282fd61ee:	mov		qword ptr [rbp - 0x10], rdx
setting bounds...
imm1 address: 0x7f7282fd61c8, imm2 address: 0x7f7282fd61db
writting: ffffffffffffffff
writting: 1
memory write rewritting done.
memory write check done.
0x7f7282fd61f2:	push		rbx
0x7f7282fd61f3:	push		rax
0x7f7282fd61f4:	lea		rax, [rcx]
0x7f7282fd61f7:	movabs		rbx, 0xffffffffffffffff
0x7f7282fd6201:	cmp		rax, rbx
0x7f7282fd6204:	ja		0x7f7282fd63ea
0x7f7282fd620a:	movabs		rbx, 1
0x7f7282fd6214:	cmp		rax, rbx
0x7f7282fd6217:	jb		0x7f7282fd63ea
0x7f7282fd621d:	pop		rax
0x7f7282fd621e:	pop		rbx
0x7f7282fd621f:	mov		byte ptr [rcx], al
setting bounds...
imm1 address: 0x7f7282fd61f9, imm2 address: 0x7f7282fd620c
writting: ffffffffffffffff
writting: 1
memory write rewritting done.
memory write check done.
disassembling symbol '.LBB2_4': textAddr: 0x7f7282fd6221, textSize: 5
Symbol insn count: 1
0x7f7282fd6221:	jmp		0x7f7282fd6226
disassembling symbol '.LBB2_5': textAddr: 0x7f7282fd6226, textSize: 120
Symbol insn count: 29
0x7f7282fd6226:	cmp		qword ptr [rbp - 0x30], 0
0x7f7282fd622b:	ja		0x7f7282fd60b0
0x7f7282fd6231:	mov		rax, qword ptr [rbp - 0x10]
0x7f7282fd6235:	mov		rcx, rax
0x7f7282fd6238:	add		rcx, -1
0x7f7282fd623c:	push		rbx
0x7f7282fd623d:	push		rax
0x7f7282fd623e:	lea		rax, [rbp - 0x10]
0x7f7282fd6242:	movabs		rbx, 0xffffffffffffffff
0x7f7282fd624c:	cmp		rax, rbx
0x7f7282fd624f:	ja		0x7f7282fd63ea
0x7f7282fd6255:	movabs		rbx, 1
0x7f7282fd625f:	cmp		rax, rbx
0x7f7282fd6262:	jb		0x7f7282fd63ea
0x7f7282fd6268:	pop		rax
0x7f7282fd6269:	pop		rbx
0x7f7282fd626a:	mov		qword ptr [rbp - 0x10], rcx
setting bounds...
imm1 address: 0x7f7282fd6244, imm2 address: 0x7f7282fd6257
writting: ffffffffffffffff
writting: 1
memory write rewritting done.
memory write check done.
0x7f7282fd626e:	push		rbx
0x7f7282fd626f:	push		rax
0x7f7282fd6270:	lea		rax, [rax]
0x7f7282fd6273:	movabs		rbx, 0xffffffffffffffff
0x7f7282fd627d:	cmp		rax, rbx
0x7f7282fd6280:	ja		0x7f7282fd63ea
0x7f7282fd6286:	movabs		rbx, 1
0x7f7282fd6290:	cmp		rax, rbx
0x7f7282fd6293:	jb		0x7f7282fd63ea
0x7f7282fd6299:	pop		rax
0x7f7282fd629a:	pop		rbx
0x7f7282fd629b:	mov		byte ptr [rax], 0x20
setting bounds...
imm1 address: 0x7f7282fd6275, imm2 address: 0x7f7282fd6288
writting: ffffffffffffffff
writting: 1
memory write rewritting done.
memory write check done.
disassembling symbol '.LBB2_7': textAddr: 0x7f7282fd629e, textSize: 332
Symbol insn count: 83
0x7f7282fd629e:	mov		rax, qword ptr [rbp - 0x10]
0x7f7282fd62a2:	mov		al, byte ptr [rax]
0x7f7282fd62a4:	push		rbx
0x7f7282fd62a5:	push		rax
0x7f7282fd62a6:	lea		rax, [rbp - 1]
0x7f7282fd62aa:	movabs		rbx, 0xffffffffffffffff
0x7f7282fd62b4:	cmp		rax, rbx
0x7f7282fd62b7:	ja		0x7f7282fd63ea
0x7f7282fd62bd:	movabs		rbx, 1
0x7f7282fd62c7:	cmp		rax, rbx
0x7f7282fd62ca:	jb		0x7f7282fd63ea
0x7f7282fd62d0:	pop		rax
0x7f7282fd62d1:	pop		rbx
0x7f7282fd62d2:	mov		byte ptr [rbp - 1], al
setting bounds...
imm1 address: 0x7f7282fd62ac, imm2 address: 0x7f7282fd62bf
writting: ffffffffffffffff
writting: 1
memory write rewritting done.
memory write check done.
0x7f7282fd62d5:	mov		rax, qword ptr [rbp - 0x20]
0x7f7282fd62d9:	mov		al, byte ptr [rax]
0x7f7282fd62db:	mov		rcx, qword ptr [rbp - 0x10]
0x7f7282fd62df:	push		rbx
0x7f7282fd62e0:	push		rax
0x7f7282fd62e1:	lea		rax, [rcx]
0x7f7282fd62e4:	movabs		rbx, 0xffffffffffffffff
0x7f7282fd62ee:	cmp		rax, rbx
0x7f7282fd62f1:	ja		0x7f7282fd63ea
0x7f7282fd62f7:	movabs		rbx, 1
0x7f7282fd6301:	cmp		rax, rbx
0x7f7282fd6304:	jb		0x7f7282fd63ea
0x7f7282fd630a:	pop		rax
0x7f7282fd630b:	pop		rbx
0x7f7282fd630c:	mov		byte ptr [rcx], al
setting bounds...
imm1 address: 0x7f7282fd62e6, imm2 address: 0x7f7282fd62f9
writting: ffffffffffffffff
writting: 1
memory write rewritting done.
memory write check done.
0x7f7282fd630e:	mov		al, byte ptr [rbp - 1]
0x7f7282fd6311:	mov		rcx, qword ptr [rbp - 0x20]
0x7f7282fd6315:	push		rbx
0x7f7282fd6316:	push		rax
0x7f7282fd6317:	lea		rax, [rcx]
0x7f7282fd631a:	movabs		rbx, 0xffffffffffffffff
0x7f7282fd6324:	cmp		rax, rbx
0x7f7282fd6327:	ja		0x7f7282fd63ea
0x7f7282fd632d:	movabs		rbx, 1
0x7f7282fd6337:	cmp		rax, rbx
0x7f7282fd633a:	jb		0x7f7282fd63ea
0x7f7282fd6340:	pop		rax
0x7f7282fd6341:	pop		rbx
0x7f7282fd6342:	mov		byte ptr [rcx], al
setting bounds...
imm1 address: 0x7f7282fd631c, imm2 address: 0x7f7282fd632f
writting: ffffffffffffffff
writting: 1
memory write rewritting done.
memory write check done.
0x7f7282fd6344:	mov		rax, qword ptr [rbp - 0x10]
0x7f7282fd6348:	add		rax, -1
0x7f7282fd634c:	push		rbx
0x7f7282fd634d:	push		rax
0x7f7282fd634e:	lea		rax, [rbp - 0x10]
0x7f7282fd6352:	movabs		rbx, 0xffffffffffffffff
0x7f7282fd635c:	cmp		rax, rbx
0x7f7282fd635f:	ja		0x7f7282fd63ea
0x7f7282fd6365:	movabs		rbx, 1
0x7f7282fd636f:	cmp		rax, rbx
0x7f7282fd6372:	jb		0x7f7282fd63ea
0x7f7282fd6378:	pop		rax
0x7f7282fd6379:	pop		rbx
0x7f7282fd637a:	mov		qword ptr [rbp - 0x10], rax
setting bounds...
imm1 address: 0x7f7282fd6354, imm2 address: 0x7f7282fd6367
writting: ffffffffffffffff
writting: 1
memory write rewritting done.
memory write check done.
0x7f7282fd637e:	mov		rax, qword ptr [rbp - 0x20]
0x7f7282fd6382:	add		rax, 1
0x7f7282fd6386:	push		rbx
0x7f7282fd6387:	push		rax
0x7f7282fd6388:	lea		rax, [rbp - 0x20]
0x7f7282fd638c:	movabs		rbx, 0xffffffffffffffff
0x7f7282fd6396:	cmp		rax, rbx
0x7f7282fd6399:	ja		0x7f7282fd63ea
0x7f7282fd639f:	movabs		rbx, 1
0x7f7282fd63a9:	cmp		rax, rbx
0x7f7282fd63ac:	jb		0x7f7282fd63ea
0x7f7282fd63b2:	pop		rax
0x7f7282fd63b3:	pop		rbx
0x7f7282fd63b4:	mov		qword ptr [rbp - 0x20], rax
setting bounds...
imm1 address: 0x7f7282fd638e, imm2 address: 0x7f7282fd63a1
writting: ffffffffffffffff
writting: 1
memory write rewritting done.
memory write check done.
0x7f7282fd63b8:	mov		rax, qword ptr [rbp - 0x20]
0x7f7282fd63bc:	cmp		rax, qword ptr [rbp - 0x10]
0x7f7282fd63c0:	jb		0x7f7282fd629e
0x7f7282fd63c6:	mov		rax, qword ptr [rbp - 0x38]
0x7f7282fd63ca:	pop		rbp
0x7f7282fd63cb:	movabs		r11, 0x7f72807d5c88
0x7f7282fd63d5:	mov		r10, qword ptr [r11]
0x7f7282fd63d8:	add		r10, r11
0x7f7282fd63db:	sub		qword ptr [r11], 8
memory write by shadow stack.
memory write check done.
0x7f7282fd63df:	cmp		qword ptr [rsp], r10
0x7f7282fd63e3:	jne		0x7f7282fd63f6
0x7f7282fd63e9:	ret		
Check failed! Illegal long ret instrumentation!
disassembling symbol '.LBB2_10': textAddr: 0x7f7282fd63ea, textSize: 12
Symbol insn count: 4
0x7f7282fd63ea:	pop		rax
0x7f7282fd63eb:	pop		rbx
0x7f7282fd63ec:	mov		edi, 0xffffffff
0x7f7282fd63f1:	call		0x7f7282fd6660
disassembling symbol '.LBB2_11': textAddr: 0x7f7282fd63f6, textSize: 10
Symbol insn count: 2
0x7f7282fd63f6:	mov		edi, 0xffffffff
0x7f7282fd63fb:	call		0x7f7282fd6660
disassembling symbol 'enclave_main': textAddr: 0x7f7282fd6400, textSize: 357
Symbol insn count: 80
0x7f7282fd6400:	push		rbp
0x7f7282fd6401:	mov		rbp, rsp
0x7f7282fd6404:	push		rbx
0x7f7282fd6405:	sub		rsp, 0x28
0x7f7282fd6409:	movabs		rax, 0x7f7282fd5f20
0x7f7282fd6413:	push		rbx
0x7f7282fd6414:	push		rax
0x7f7282fd6415:	lea		rax, [rbp - 0x20]
0x7f7282fd6419:	movabs		rbx, 0x3fffffffffffffff
0x7f7282fd6423:	cmp		rax, rbx
0x7f7282fd6426:	ja		0x7f7282fd6559
0x7f7282fd642c:	movabs		rbx, 0x4fffffffffffffff
0x7f7282fd6436:	cmp		rax, rbx
0x7f7282fd6439:	jb		0x7f7282fd6559
0x7f7282fd643f:	pop		rax
0x7f7282fd6440:	pop		rbx
0x7f7282fd6441:	mov		qword ptr [rbp - 0x20], rax
setting bounds...
imm1 address: 0x7f7282fd641b, imm2 address: 0x7f7282fd642e
writting: ffffffffffffffff
writting: 1
memory write rewritting done.
memory write check done.
0x7f7282fd6445:	movabs		rdi, 0x7f72853fccf5
0x7f7282fd644f:	call		0x7f7282fd65d0
0x7f7282fd6454:	mov		rbx, qword ptr [rbp - 0x20]
0x7f7282fd6458:	mov		rdi, rbx
0x7f7282fd645b:	call		0x7f7282fd5c90
0x7f7282fd6460:	call		rbx
checking indirect call
indirect call check done.
0x7f7282fd6462:	push		rbx
0x7f7282fd6463:	push		rax
0x7f7282fd6464:	lea		rax, [rbp - 0x14]
0x7f7282fd6468:	movabs		rbx, 0x3fffffffffffffff
0x7f7282fd6472:	cmp		rax, rbx
0x7f7282fd6475:	ja		0x7f7282fd6559
0x7f7282fd647b:	movabs		rbx, 0x4fffffffffffffff
0x7f7282fd6485:	cmp		rax, rbx
0x7f7282fd6488:	jb		0x7f7282fd6559
0x7f7282fd648e:	pop		rax
0x7f7282fd648f:	pop		rbx
0x7f7282fd6490:	mov		dword ptr [rbp - 0x14], eax
setting bounds...
imm1 address: 0x7f7282fd646a, imm2 address: 0x7f7282fd647d
writting: ffffffffffffffff
writting: 1
memory write rewritting done.
memory write check done.
0x7f7282fd6493:	movabs		rdi, 0x7f72853fcd0b
0x7f7282fd649d:	call		0x7f7282fd65d0
0x7f7282fd64a2:	lea		rax, [rbp - 0x28]
0x7f7282fd64a6:	push		rbx
0x7f7282fd64a7:	push		rax
0x7f7282fd64a8:	lea		rax, [rbp - 0x10]
0x7f7282fd64ac:	movabs		rbx, 0x3fffffffffffffff
0x7f7282fd64b6:	cmp		rax, rbx
0x7f7282fd64b9:	ja		0x7f7282fd6559
0x7f7282fd64bf:	movabs		rbx, 0x4fffffffffffffff
0x7f7282fd64c9:	cmp		rax, rbx
0x7f7282fd64cc:	jb		0x7f7282fd6559
0x7f7282fd64d2:	pop		rax
0x7f7282fd64d3:	pop		rbx
0x7f7282fd64d4:	mov		qword ptr [rbp - 0x10], rax
setting bounds...
imm1 address: 0x7f7282fd64ae, imm2 address: 0x7f7282fd64c1
writting: ffffffffffffffff
writting: 1
memory write rewritting done.
memory write check done.
0x7f7282fd64d8:	movabs		rdi, 0x7f72853fcd21
0x7f7282fd64e2:	call		0x7f7282fd65d0
0x7f7282fd64e7:	movsxd		rdi, dword ptr [rbp - 0x14]
0x7f7282fd64eb:	mov		rsi, qword ptr [rbp - 0x10]
0x7f7282fd64ef:	mov		edx, 0xa
0x7f7282fd64f4:	call		0x7f7282fd5f90
0x7f7282fd64f9:	push		rbx
0x7f7282fd64fa:	push		rax
0x7f7282fd64fb:	lea		rax, [rbp - 0x10]
0x7f7282fd64ff:	movabs		rbx, 0x3fffffffffffffff
0x7f7282fd6509:	cmp		rax, rbx
0x7f7282fd650c:	ja		0x7f7282fd6559
0x7f7282fd6512:	movabs		rbx, 0x4fffffffffffffff
0x7f7282fd651c:	cmp		rax, rbx
0x7f7282fd651f:	jb		0x7f7282fd6559
0x7f7282fd6525:	pop		rax
0x7f7282fd6526:	pop		rbx
0x7f7282fd6527:	mov		qword ptr [rbp - 0x10], rax
setting bounds...
imm1 address: 0x7f7282fd6501, imm2 address: 0x7f7282fd6514
writting: ffffffffffffffff
writting: 1
memory write rewritting done.
memory write check done.
0x7f7282fd652b:	movabs		rdi, 0x7f72853fcd37
0x7f7282fd6535:	call		0x7f7282fd65d0
0x7f7282fd653a:	mov		rdi, qword ptr [rbp - 0x10]
0x7f7282fd653e:	call		0x7f7282fd65d0
0x7f7282fd6543:	movabs		rdi, 0x7f72853fcd4d
0x7f7282fd654d:	call		0x7f7282fd65d0
0x7f7282fd6552:	xor		edi, edi
0x7f7282fd6554:	call		0x7f7282fd6660
0x7f7282fd6559:	pop		rax
0x7f7282fd655a:	pop		rbx
0x7f7282fd655b:	mov		edi, 0xffffffff
0x7f7282fd6560:	call		0x7f7282fd6660
disassembling symbol '.LBB3_1': textAddr: 0x7f7282fd6559, textSize: 23
Symbol insn count: 9
0x7f7282fd6559:	pop		rax
0x7f7282fd655a:	pop		rbx
0x7f7282fd655b:	mov		edi, 0xffffffff
0x7f7282fd6560:	call		0x7f7282fd6660
0x7f7282fd6565:	add		byte ptr [rax], al
0x7f7282fd6567:	add		byte ptr [rax], al
0x7f7282fd6569:	add		byte ptr [rax], al
0x7f7282fd656b:	add		byte ptr [rax], al
0x7f7282fd656d:	add		byte ptr [rax], al
memory write check failed.
Abort! Illegal memory writes instrumentation!
disassembling symbol 'sgx_ocall': textAddr: 0x7f7282fd6570, textSize: 32
Symbol insn count: 7
0x7f7282fd6570:	mov		r14, rsp
0x7f7282fd6573:	movabs		r13, 0x7f72853fccc8
0x7f7282fd657d:	mov		rsp, qword ptr [r13]
0x7f7282fd6581:	mov		qword ptr [r13], r14
0x7f7282fd6585:	call		0x7f7280011883
0x7f7282fd658a:	jmp		0x7f7282fd6590
0x7f7282fd658f:	nop		
disassembling symbol 'sgx_ocall.0': textAddr: 0x7f7282fd6590, textSize: 32
Symbol insn count: 6
0x7f7282fd6590:	mov		r14, rsp
0x7f7282fd6593:	movabs		r13, 0x7f72853fccc8
0x7f7282fd659d:	mov		rsp, qword ptr [r13]
0x7f7282fd65a1:	mov		qword ptr [r13], r14
0x7f7282fd65a5:	jmp		0x7f7282fd65b0
0x7f7282fd65aa:	nop		word ptr [rax + rax]
disassembling symbol 'sgx_ocall.1': textAddr: 0x7f7282fd65b0, textSize: 32
Symbol insn count: 4
0x7f7282fd65b0:	movabs		r14, 0x7f7282fd5c88
0x7f7282fd65ba:	movabs		r15, 0x7f7284ffcc88
0x7f7282fd65c4:	ret		
0x7f7282fd65c5:	nop		word ptr cs:[rax + rax]
disassembling symbol 'sgx_ocall.loader': textAddr: 0x7f7280011883, textSize: 1
Symbol insn count: 1
0x7f7280011883:	push		rbp
disassembling symbol 'puts': textAddr: 0x7f7282fd65d0, textSize: 12
Symbol insn count: 2
0x7f7282fd65d0:	mov		r15, 6
0x7f7282fd65d7:	jmp		0x7f7282fd6570
disassembling symbol 'gadget1': textAddr: 0x7f7282fd65e0, textSize: 32
Symbol insn count: 5
0x7f7282fd65e0:	pop		rax
0x7f7282fd65e1:	add		rax, 5
0x7f7282fd65e5:	ret		
0x7f7282fd65e6:	nop		word ptr cs:[rax + rax]
0x7f7282fd65f5:	nop		word ptr cs:[rax + rax]
disassembling symbol 'gadget2': textAddr: 0x7f7282fd6600, textSize: 32
Symbol insn count: 5
0x7f7282fd6600:	pop		rdi
0x7f7282fd6601:	pop		rbx
0x7f7282fd6602:	ret		
0x7f7282fd6603:	nop		word ptr cs:[rax + rax]
0x7f7282fd6612:	nop		word ptr cs:[rax + rax]
disassembling symbol 'gadget3': textAddr: 0x7f7282fd6620, textSize: 32
Symbol insn count: 3
0x7f7282fd6620:	enclu		
0x7f7282fd6623:	nop		word ptr cs:[rax + rax]
0x7f7282fd6632:	nop		word ptr cs:[rax + rax]
disassembling symbol 'gadget4': textAddr: 0x7f7282fd6640, textSize: 32
Symbol insn count: 4
0x7f7282fd6640:	pop		rdi
0x7f7282fd6641:	ret		
0x7f7282fd6642:	nop		word ptr cs:[rax + rax]
0x7f7282fd6651:	nop		word ptr cs:[rax + rax]
disassembling symbol 'exit': textAddr: 0x7f7282fd6660, textSize: 46
Symbol insn count: 8
0x7f7282fd6660:	movabs		r14, 0x7f72853fccd0
0x7f7282fd666a:	mov		rbp, qword ptr [r14]
0x7f7282fd666d:	movabs		r14, 0x7f72853fccc8
0x7f7282fd6677:	mov		rsp, qword ptr [r14]
0x7f7282fd667a:	nop		word ptr [rax + rax]
0x7f7282fd6680:	movabs		r14, 0x7f72853fccc0
0x7f7282fd668a:	pop		rax
0x7f7282fd668b:	jmp		qword ptr [r14]
disassembling symbol '_start': textAddr: 0x7f7282fd6690, textSize: 84
Symbol insn count: 13
0x7f7282fd6690:	pop		r13
0x7f7282fd6692:	movabs		r14, 0x7f72853fccc0
0x7f7282fd669c:	mov		qword ptr [r14], r13
0x7f7282fd669f:	movabs		r14, 0x7f72853fccc8
0x7f7282fd66a9:	mov		qword ptr [r14], rsp
0x7f7282fd66ac:	movabs		r14, 0x7f72853fccd0
0x7f7282fd66b6:	mov		qword ptr [r14], rbp
0x7f7282fd66b9:	movabs		rsp, 0x7f7284ffccc0
0x7f7282fd66c3:	add		rsp, 0x400000
0x7f7282fd66ca:	movabs		r15, 0x7f7284ffcc88
0x7f7282fd66d4:	movabs		r14, 0x7f7282fd5c88
0x7f7282fd66de:	push		rax
0x7f7282fd66df:	jmp		0x7f7282fd6400

=== sec_loader: debugging: validate if rewrites fine ===

=== sec_loader: executing input binary ===
main: 0x7f7282fd6690

=== sec_loader: entering ===
----------1----------

=== sec_loader: returning ===
receive binary completed.
app: destroy the enclave
